// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/mdb/postgresql/v1/user.proto

package yandex.cloud.api.mdb.postgresql.v1;

public final class UserOuterClass {
  private UserOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption}
   */
  public enum UserPasswordEncryption
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER_PASSWORD_ENCRYPTION_UNSPECIFIED = 0;</code>
     */
    USER_PASSWORD_ENCRYPTION_UNSPECIFIED(0),
    /**
     * <code>USER_PASSWORD_ENCRYPTION_MD5 = 1;</code>
     */
    USER_PASSWORD_ENCRYPTION_MD5(1),
    /**
     * <code>USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 = 2;</code>
     */
    USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>USER_PASSWORD_ENCRYPTION_UNSPECIFIED = 0;</code>
     */
    public static final int USER_PASSWORD_ENCRYPTION_UNSPECIFIED_VALUE = 0;
    /**
     * <code>USER_PASSWORD_ENCRYPTION_MD5 = 1;</code>
     */
    public static final int USER_PASSWORD_ENCRYPTION_MD5_VALUE = 1;
    /**
     * <code>USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 = 2;</code>
     */
    public static final int USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UserPasswordEncryption valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UserPasswordEncryption forNumber(int value) {
      switch (value) {
        case 0: return USER_PASSWORD_ENCRYPTION_UNSPECIFIED;
        case 1: return USER_PASSWORD_ENCRYPTION_MD5;
        case 2: return USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserPasswordEncryption>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UserPasswordEncryption> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserPasswordEncryption>() {
            public UserPasswordEncryption findValueByNumber(int number) {
              return UserPasswordEncryption.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final UserPasswordEncryption[] VALUES = values();

    public static UserPasswordEncryption valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UserPasswordEncryption(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption)
  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.postgresql.v1.User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * ID of the PostgreSQL cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     * @return The clusterId.
     */
    java.lang.String getClusterId();
    /**
     * <pre>
     * ID of the PostgreSQL cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     * @return The bytes for clusterId.
     */
    com.google.protobuf.ByteString
        getClusterIdBytes();

    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> 
        getPermissionsList();
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getPermissions(int index);
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    int getPermissionsCount();
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList();
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index);

    /**
     * <pre>
     * Maximum number of database connections available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>int64 conn_limit = 4;</code>
     * @return The connLimit.
     */
    long getConnLimit();

    /**
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return Whether the settings field is set.
     */
    boolean hasSettings();
    /**
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return The settings.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getSettings();
    /**
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder();

    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return Whether the login field is set.
     */
    boolean hasLogin();
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return The login.
     */
    com.google.protobuf.BoolValue getLogin();
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getLoginOrBuilder();

    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return A list containing the grants.
     */
    java.util.List<java.lang.String>
        getGrantsList();
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The count of grants.
     */
    int getGrantsCount();
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the element to return.
     * @return The grants at the given index.
     */
    java.lang.String getGrants(int index);
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the grants at the given index.
     */
    com.google.protobuf.ByteString
        getGrantsBytes(int index);

    /**
     * <pre>
     * Determines whether the user deletion protection is enabled.
     * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return Whether the deletionProtection field is set.
     */
    boolean hasDeletionProtection();
    /**
     * <pre>
     * Determines whether the user deletion protection is enabled.
     * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return The deletionProtection.
     */
    com.google.protobuf.BoolValue getDeletionProtection();
    /**
     * <pre>
     * Determines whether the user deletion protection is enabled.
     * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getDeletionProtectionOrBuilder();

    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The enum numeric value on the wire for userPasswordEncryption.
     */
    int getUserPasswordEncryptionValue();
    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The userPasswordEncryption.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption getUserPasswordEncryption();

    /**
     * <pre>
     * Connection Manager Connection and settings associated with user. Read only field.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
     * @return Whether the connectionManager field is set.
     */
    boolean hasConnectionManager();
    /**
     * <pre>
     * Connection Manager Connection and settings associated with user. Read only field.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
     * @return The connectionManager.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager getConnectionManager();
    /**
     * <pre>
     * Connection Manager Connection and settings associated with user. Read only field.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder getConnectionManagerOrBuilder();
  }
  /**
   * <pre>
   * A PostgreSQL User resource. For more information, see
   * the [Developer's Guide](/docs/managed-postgresql/concepts).
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.User}
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.postgresql.v1.User)
      UserOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      name_ = "";
      clusterId_ = "";
      permissions_ = java.util.Collections.emptyList();
      grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      userPasswordEncryption_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new User();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              clusterId_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission>();
                mutable_bitField0_ |= 0x00000001;
              }
              permissions_.add(
                  input.readMessage(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.parser(), extensionRegistry));
              break;
            }
            case 32: {

              connLimit_ = input.readInt64();
              break;
            }
            case 42: {
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder subBuilder = null;
              if (settings_ != null) {
                subBuilder = settings_.toBuilder();
              }
              settings_ = input.readMessage(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settings_);
                settings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (login_ != null) {
                subBuilder = login_.toBuilder();
              }
              login_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(login_);
                login_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                grants_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              grants_.add(s);
              break;
            }
            case 66: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (deletionProtection_ != null) {
                subBuilder = deletionProtection_.toBuilder();
              }
              deletionProtection_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deletionProtection_);
                deletionProtection_ = subBuilder.buildPartial();
              }

              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              userPasswordEncryption_ = rawValue;
              break;
            }
            case 82: {
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder subBuilder = null;
              if (connectionManager_ != null) {
                subBuilder = connectionManager_.toBuilder();
              }
              connectionManager_ = input.readMessage(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connectionManager_);
                connectionManager_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          permissions_ = java.util.Collections.unmodifiableList(permissions_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          grants_ = grants_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_User_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLUSTER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object clusterId_;
    /**
     * <pre>
     * ID of the PostgreSQL cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     * @return The clusterId.
     */
    @java.lang.Override
    public java.lang.String getClusterId() {
      java.lang.Object ref = clusterId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID of the PostgreSQL cluster the user belongs to.
     * </pre>
     *
     * <code>string cluster_id = 2;</code>
     * @return The bytes for clusterId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterIdBytes() {
      java.lang.Object ref = clusterId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 3;
    private java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> permissions_;
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> getPermissionsList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public int getPermissionsCount() {
      return permissions_.size();
    }
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getPermissions(int index) {
      return permissions_.get(index);
    }
    /**
     * <pre>
     * Set of permissions granted to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index) {
      return permissions_.get(index);
    }

    public static final int CONN_LIMIT_FIELD_NUMBER = 4;
    private long connLimit_;
    /**
     * <pre>
     * Maximum number of database connections available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>int64 conn_limit = 4;</code>
     * @return The connLimit.
     */
    @java.lang.Override
    public long getConnLimit() {
      return connLimit_;
    }

    public static final int SETTINGS_FIELD_NUMBER = 5;
    private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings settings_;
    /**
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return Whether the settings field is set.
     */
    @java.lang.Override
    public boolean hasSettings() {
      return settings_ != null;
    }
    /**
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return The settings.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getSettings() {
      return settings_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
    }
    /**
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
      return getSettings();
    }

    public static final int LOGIN_FIELD_NUMBER = 6;
    private com.google.protobuf.BoolValue login_;
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return Whether the login field is set.
     */
    @java.lang.Override
    public boolean hasLogin() {
      return login_ != null;
    }
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return The login.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getLogin() {
      return login_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : login_;
    }
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getLoginOrBuilder() {
      return getLogin();
    }

    public static final int GRANTS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList grants_;
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return A list containing the grants.
     */
    public com.google.protobuf.ProtocolStringList
        getGrantsList() {
      return grants_;
    }
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The count of grants.
     */
    public int getGrantsCount() {
      return grants_.size();
    }
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the element to return.
     * @return The grants at the given index.
     */
    public java.lang.String getGrants(int index) {
      return grants_.get(index);
    }
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the grants at the given index.
     */
    public com.google.protobuf.ByteString
        getGrantsBytes(int index) {
      return grants_.getByteString(index);
    }

    public static final int DELETION_PROTECTION_FIELD_NUMBER = 8;
    private com.google.protobuf.BoolValue deletionProtection_;
    /**
     * <pre>
     * Determines whether the user deletion protection is enabled.
     * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return Whether the deletionProtection field is set.
     */
    @java.lang.Override
    public boolean hasDeletionProtection() {
      return deletionProtection_ != null;
    }
    /**
     * <pre>
     * Determines whether the user deletion protection is enabled.
     * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return The deletionProtection.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getDeletionProtection() {
      return deletionProtection_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : deletionProtection_;
    }
    /**
     * <pre>
     * Determines whether the user deletion protection is enabled.
     * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getDeletionProtectionOrBuilder() {
      return getDeletionProtection();
    }

    public static final int USER_PASSWORD_ENCRYPTION_FIELD_NUMBER = 9;
    private int userPasswordEncryption_;
    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The enum numeric value on the wire for userPasswordEncryption.
     */
    @java.lang.Override public int getUserPasswordEncryptionValue() {
      return userPasswordEncryption_;
    }
    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The userPasswordEncryption.
     */
    @java.lang.Override public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption getUserPasswordEncryption() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.valueOf(userPasswordEncryption_);
      return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.UNRECOGNIZED : result;
    }

    public static final int CONNECTION_MANAGER_FIELD_NUMBER = 10;
    private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager connectionManager_;
    /**
     * <pre>
     * Connection Manager Connection and settings associated with user. Read only field.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
     * @return Whether the connectionManager field is set.
     */
    @java.lang.Override
    public boolean hasConnectionManager() {
      return connectionManager_ != null;
    }
    /**
     * <pre>
     * Connection Manager Connection and settings associated with user. Read only field.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
     * @return The connectionManager.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager getConnectionManager() {
      return connectionManager_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.getDefaultInstance() : connectionManager_;
    }
    /**
     * <pre>
     * Connection Manager Connection and settings associated with user. Read only field.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder getConnectionManagerOrBuilder() {
      return getConnectionManager();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, clusterId_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        output.writeMessage(3, permissions_.get(i));
      }
      if (connLimit_ != 0L) {
        output.writeInt64(4, connLimit_);
      }
      if (settings_ != null) {
        output.writeMessage(5, getSettings());
      }
      if (login_ != null) {
        output.writeMessage(6, getLogin());
      }
      for (int i = 0; i < grants_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, grants_.getRaw(i));
      }
      if (deletionProtection_ != null) {
        output.writeMessage(8, getDeletionProtection());
      }
      if (userPasswordEncryption_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.USER_PASSWORD_ENCRYPTION_UNSPECIFIED.getNumber()) {
        output.writeEnum(9, userPasswordEncryption_);
      }
      if (connectionManager_ != null) {
        output.writeMessage(10, getConnectionManager());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, clusterId_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, permissions_.get(i));
      }
      if (connLimit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, connLimit_);
      }
      if (settings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSettings());
      }
      if (login_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLogin());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < grants_.size(); i++) {
          dataSize += computeStringSizeNoTag(grants_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getGrantsList().size();
      }
      if (deletionProtection_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDeletionProtection());
      }
      if (userPasswordEncryption_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.USER_PASSWORD_ENCRYPTION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, userPasswordEncryption_);
      }
      if (connectionManager_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getConnectionManager());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User other = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getClusterId()
          .equals(other.getClusterId())) return false;
      if (!getPermissionsList()
          .equals(other.getPermissionsList())) return false;
      if (getConnLimit()
          != other.getConnLimit()) return false;
      if (hasSettings() != other.hasSettings()) return false;
      if (hasSettings()) {
        if (!getSettings()
            .equals(other.getSettings())) return false;
      }
      if (hasLogin() != other.hasLogin()) return false;
      if (hasLogin()) {
        if (!getLogin()
            .equals(other.getLogin())) return false;
      }
      if (!getGrantsList()
          .equals(other.getGrantsList())) return false;
      if (hasDeletionProtection() != other.hasDeletionProtection()) return false;
      if (hasDeletionProtection()) {
        if (!getDeletionProtection()
            .equals(other.getDeletionProtection())) return false;
      }
      if (userPasswordEncryption_ != other.userPasswordEncryption_) return false;
      if (hasConnectionManager() != other.hasConnectionManager()) return false;
      if (hasConnectionManager()) {
        if (!getConnectionManager()
            .equals(other.getConnectionManager())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CLUSTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getClusterId().hashCode();
      if (getPermissionsCount() > 0) {
        hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionsList().hashCode();
      }
      hash = (37 * hash) + CONN_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getConnLimit());
      if (hasSettings()) {
        hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getSettings().hashCode();
      }
      if (hasLogin()) {
        hash = (37 * hash) + LOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getLogin().hashCode();
      }
      if (getGrantsCount() > 0) {
        hash = (37 * hash) + GRANTS_FIELD_NUMBER;
        hash = (53 * hash) + getGrantsList().hashCode();
      }
      if (hasDeletionProtection()) {
        hash = (37 * hash) + DELETION_PROTECTION_FIELD_NUMBER;
        hash = (53 * hash) + getDeletionProtection().hashCode();
      }
      hash = (37 * hash) + USER_PASSWORD_ENCRYPTION_FIELD_NUMBER;
      hash = (53 * hash) + userPasswordEncryption_;
      if (hasConnectionManager()) {
        hash = (37 * hash) + CONNECTION_MANAGER_FIELD_NUMBER;
        hash = (53 * hash) + getConnectionManager().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A PostgreSQL User resource. For more information, see
     * the [Developer's Guide](/docs/managed-postgresql/concepts).
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.postgresql.v1.User)
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_User_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPermissionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        clusterId_ = "";

        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          permissionsBuilder_.clear();
        }
        connLimit_ = 0L;

        if (settingsBuilder_ == null) {
          settings_ = null;
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }
        if (loginBuilder_ == null) {
          login_ = null;
        } else {
          login_ = null;
          loginBuilder_ = null;
        }
        grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (deletionProtectionBuilder_ == null) {
          deletionProtection_ = null;
        } else {
          deletionProtection_ = null;
          deletionProtectionBuilder_ = null;
        }
        userPasswordEncryption_ = 0;

        if (connectionManagerBuilder_ == null) {
          connectionManager_ = null;
        } else {
          connectionManager_ = null;
          connectionManagerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_User_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User build() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User buildPartial() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User result = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.clusterId_ = clusterId_;
        if (permissionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            permissions_ = java.util.Collections.unmodifiableList(permissions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.permissions_ = permissions_;
        } else {
          result.permissions_ = permissionsBuilder_.build();
        }
        result.connLimit_ = connLimit_;
        if (settingsBuilder_ == null) {
          result.settings_ = settings_;
        } else {
          result.settings_ = settingsBuilder_.build();
        }
        if (loginBuilder_ == null) {
          result.login_ = login_;
        } else {
          result.login_ = loginBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          grants_ = grants_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.grants_ = grants_;
        if (deletionProtectionBuilder_ == null) {
          result.deletionProtection_ = deletionProtection_;
        } else {
          result.deletionProtection_ = deletionProtectionBuilder_.build();
        }
        result.userPasswordEncryption_ = userPasswordEncryption_;
        if (connectionManagerBuilder_ == null) {
          result.connectionManager_ = connectionManager_;
        } else {
          result.connectionManager_ = connectionManagerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User) {
          return mergeFrom((yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User other) {
        if (other == yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getClusterId().isEmpty()) {
          clusterId_ = other.clusterId_;
          onChanged();
        }
        if (permissionsBuilder_ == null) {
          if (!other.permissions_.isEmpty()) {
            if (permissions_.isEmpty()) {
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePermissionsIsMutable();
              permissions_.addAll(other.permissions_);
            }
            onChanged();
          }
        } else {
          if (!other.permissions_.isEmpty()) {
            if (permissionsBuilder_.isEmpty()) {
              permissionsBuilder_.dispose();
              permissionsBuilder_ = null;
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              permissionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPermissionsFieldBuilder() : null;
            } else {
              permissionsBuilder_.addAllMessages(other.permissions_);
            }
          }
        }
        if (other.getConnLimit() != 0L) {
          setConnLimit(other.getConnLimit());
        }
        if (other.hasSettings()) {
          mergeSettings(other.getSettings());
        }
        if (other.hasLogin()) {
          mergeLogin(other.getLogin());
        }
        if (!other.grants_.isEmpty()) {
          if (grants_.isEmpty()) {
            grants_ = other.grants_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGrantsIsMutable();
            grants_.addAll(other.grants_);
          }
          onChanged();
        }
        if (other.hasDeletionProtection()) {
          mergeDeletionProtection(other.getDeletionProtection());
        }
        if (other.userPasswordEncryption_ != 0) {
          setUserPasswordEncryptionValue(other.getUserPasswordEncryptionValue());
        }
        if (other.hasConnectionManager()) {
          mergeConnectionManager(other.getConnectionManager());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object clusterId_ = "";
      /**
       * <pre>
       * ID of the PostgreSQL cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       * @return The clusterId.
       */
      public java.lang.String getClusterId() {
        java.lang.Object ref = clusterId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clusterId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the PostgreSQL cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       * @return The bytes for clusterId.
       */
      public com.google.protobuf.ByteString
          getClusterIdBytes() {
        java.lang.Object ref = clusterId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the PostgreSQL cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       * @param value The clusterId to set.
       * @return This builder for chaining.
       */
      public Builder setClusterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clusterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the PostgreSQL cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearClusterId() {
        
        clusterId_ = getDefaultInstance().getClusterId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the PostgreSQL cluster the user belongs to.
       * </pre>
       *
       * <code>string cluster_id = 2;</code>
       * @param value The bytes for clusterId to set.
       * @return This builder for chaining.
       */
      public Builder setClusterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clusterId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> permissions_ =
        java.util.Collections.emptyList();
      private void ensurePermissionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission>(permissions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> permissionsBuilder_;

      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> getPermissionsList() {
        if (permissionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(permissions_);
        } else {
          return permissionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public int getPermissionsCount() {
        if (permissionsBuilder_ == null) {
          return permissions_.size();
        } else {
          return permissionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getPermissions(int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);
        } else {
          return permissionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.set(index, value);
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.set(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(index, value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addAllPermissions(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> values) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, permissions_);
          onChanged();
        } else {
          permissionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder clearPermissions() {
        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          permissionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder removePermissions(int index) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.remove(index);
          onChanged();
        } else {
          permissionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder getPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
          int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);  } else {
          return permissionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
           getPermissionsOrBuilderList() {
        if (permissionsBuilder_ != null) {
          return permissionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(permissions_);
        }
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder addPermissionsBuilder() {
        return getPermissionsFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder addPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions granted to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder> 
           getPermissionsBuilderList() {
        return getPermissionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
          getPermissionsFieldBuilder() {
        if (permissionsBuilder_ == null) {
          permissionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder>(
                  permissions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          permissions_ = null;
        }
        return permissionsBuilder_;
      }

      private long connLimit_ ;
      /**
       * <pre>
       * Maximum number of database connections available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>int64 conn_limit = 4;</code>
       * @return The connLimit.
       */
      @java.lang.Override
      public long getConnLimit() {
        return connLimit_;
      }
      /**
       * <pre>
       * Maximum number of database connections available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>int64 conn_limit = 4;</code>
       * @param value The connLimit to set.
       * @return This builder for chaining.
       */
      public Builder setConnLimit(long value) {
        
        connLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of database connections available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>int64 conn_limit = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnLimit() {
        
        connLimit_ = 0L;
        onChanged();
        return this;
      }

      private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings settings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder> settingsBuilder_;
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       * @return Whether the settings field is set.
       */
      public boolean hasSettings() {
        return settingsBuilder_ != null || settings_ != null;
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       * @return The settings.
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getSettings() {
        if (settingsBuilder_ == null) {
          return settings_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        } else {
          return settingsBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder setSettings(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settings_ = value;
          onChanged();
        } else {
          settingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder setSettings(
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder builderForValue) {
        if (settingsBuilder_ == null) {
          settings_ = builderForValue.build();
          onChanged();
        } else {
          settingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder mergeSettings(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (settings_ != null) {
            settings_ =
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
          } else {
            settings_ = value;
          }
          onChanged();
        } else {
          settingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder clearSettings() {
        if (settingsBuilder_ == null) {
          settings_ = null;
          onChanged();
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder getSettingsBuilder() {
        
        onChanged();
        return getSettingsFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
        if (settingsBuilder_ != null) {
          return settingsBuilder_.getMessageOrBuilder();
        } else {
          return settings_ == null ?
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        }
      }
      /**
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder> 
          getSettingsFieldBuilder() {
        if (settingsBuilder_ == null) {
          settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder>(
                  getSettings(),
                  getParentForChildren(),
                  isClean());
          settings_ = null;
        }
        return settingsBuilder_;
      }

      private com.google.protobuf.BoolValue login_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> loginBuilder_;
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       * @return Whether the login field is set.
       */
      public boolean hasLogin() {
        return loginBuilder_ != null || login_ != null;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       * @return The login.
       */
      public com.google.protobuf.BoolValue getLogin() {
        if (loginBuilder_ == null) {
          return login_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : login_;
        } else {
          return loginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder setLogin(com.google.protobuf.BoolValue value) {
        if (loginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          login_ = value;
          onChanged();
        } else {
          loginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder setLogin(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (loginBuilder_ == null) {
          login_ = builderForValue.build();
          onChanged();
        } else {
          loginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder mergeLogin(com.google.protobuf.BoolValue value) {
        if (loginBuilder_ == null) {
          if (login_ != null) {
            login_ =
              com.google.protobuf.BoolValue.newBuilder(login_).mergeFrom(value).buildPartial();
          } else {
            login_ = value;
          }
          onChanged();
        } else {
          loginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder clearLogin() {
        if (loginBuilder_ == null) {
          login_ = null;
          onChanged();
        } else {
          login_ = null;
          loginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public com.google.protobuf.BoolValue.Builder getLoginBuilder() {
        
        onChanged();
        return getLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getLoginOrBuilder() {
        if (loginBuilder_ != null) {
          return loginBuilder_.getMessageOrBuilder();
        } else {
          return login_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : login_;
        }
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getLoginFieldBuilder() {
        if (loginBuilder_ == null) {
          loginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getLogin(),
                  getParentForChildren(),
                  isClean());
          login_ = null;
        }
        return loginBuilder_;
      }

      private com.google.protobuf.LazyStringList grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGrantsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          grants_ = new com.google.protobuf.LazyStringArrayList(grants_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return A list containing the grants.
       */
      public com.google.protobuf.ProtocolStringList
          getGrantsList() {
        return grants_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return The count of grants.
       */
      public int getGrantsCount() {
        return grants_.size();
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param index The index of the element to return.
       * @return The grants at the given index.
       */
      public java.lang.String getGrants(int index) {
        return grants_.get(index);
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the grants at the given index.
       */
      public com.google.protobuf.ByteString
          getGrantsBytes(int index) {
        return grants_.getByteString(index);
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param index The index to set the value at.
       * @param value The grants to set.
       * @return This builder for chaining.
       */
      public Builder setGrants(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGrantsIsMutable();
        grants_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param value The grants to add.
       * @return This builder for chaining.
       */
      public Builder addGrants(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGrantsIsMutable();
        grants_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param values The grants to add.
       * @return This builder for chaining.
       */
      public Builder addAllGrants(
          java.lang.Iterable<java.lang.String> values) {
        ensureGrantsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, grants_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGrants() {
        grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param value The bytes of the grants to add.
       * @return This builder for chaining.
       */
      public Builder addGrantsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureGrantsIsMutable();
        grants_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue deletionProtection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> deletionProtectionBuilder_;
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       * @return Whether the deletionProtection field is set.
       */
      public boolean hasDeletionProtection() {
        return deletionProtectionBuilder_ != null || deletionProtection_ != null;
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       * @return The deletionProtection.
       */
      public com.google.protobuf.BoolValue getDeletionProtection() {
        if (deletionProtectionBuilder_ == null) {
          return deletionProtection_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : deletionProtection_;
        } else {
          return deletionProtectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder setDeletionProtection(com.google.protobuf.BoolValue value) {
        if (deletionProtectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deletionProtection_ = value;
          onChanged();
        } else {
          deletionProtectionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder setDeletionProtection(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (deletionProtectionBuilder_ == null) {
          deletionProtection_ = builderForValue.build();
          onChanged();
        } else {
          deletionProtectionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder mergeDeletionProtection(com.google.protobuf.BoolValue value) {
        if (deletionProtectionBuilder_ == null) {
          if (deletionProtection_ != null) {
            deletionProtection_ =
              com.google.protobuf.BoolValue.newBuilder(deletionProtection_).mergeFrom(value).buildPartial();
          } else {
            deletionProtection_ = value;
          }
          onChanged();
        } else {
          deletionProtectionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder clearDeletionProtection() {
        if (deletionProtectionBuilder_ == null) {
          deletionProtection_ = null;
          onChanged();
        } else {
          deletionProtection_ = null;
          deletionProtectionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public com.google.protobuf.BoolValue.Builder getDeletionProtectionBuilder() {
        
        onChanged();
        return getDeletionProtectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getDeletionProtectionOrBuilder() {
        if (deletionProtectionBuilder_ != null) {
          return deletionProtectionBuilder_.getMessageOrBuilder();
        } else {
          return deletionProtection_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : deletionProtection_;
        }
      }
      /**
       * <pre>
       * Determines whether the user deletion protection is enabled.
       * The default value is `unspecified`. In this case, the user configuration inherits the cluster's deletion protection settings.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getDeletionProtectionFieldBuilder() {
        if (deletionProtectionBuilder_ == null) {
          deletionProtectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getDeletionProtection(),
                  getParentForChildren(),
                  isClean());
          deletionProtection_ = null;
        }
        return deletionProtectionBuilder_;
      }

      private int userPasswordEncryption_ = 0;
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @return The enum numeric value on the wire for userPasswordEncryption.
       */
      @java.lang.Override public int getUserPasswordEncryptionValue() {
        return userPasswordEncryption_;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @param value The enum numeric value on the wire for userPasswordEncryption to set.
       * @return This builder for chaining.
       */
      public Builder setUserPasswordEncryptionValue(int value) {
        
        userPasswordEncryption_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @return The userPasswordEncryption.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption getUserPasswordEncryption() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.valueOf(userPasswordEncryption_);
        return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @param value The userPasswordEncryption to set.
       * @return This builder for chaining.
       */
      public Builder setUserPasswordEncryption(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        userPasswordEncryption_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserPasswordEncryption() {
        
        userPasswordEncryption_ = 0;
        onChanged();
        return this;
      }

      private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager connectionManager_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder> connectionManagerBuilder_;
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       * @return Whether the connectionManager field is set.
       */
      public boolean hasConnectionManager() {
        return connectionManagerBuilder_ != null || connectionManager_ != null;
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       * @return The connectionManager.
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager getConnectionManager() {
        if (connectionManagerBuilder_ == null) {
          return connectionManager_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.getDefaultInstance() : connectionManager_;
        } else {
          return connectionManagerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      public Builder setConnectionManager(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager value) {
        if (connectionManagerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectionManager_ = value;
          onChanged();
        } else {
          connectionManagerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      public Builder setConnectionManager(
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder builderForValue) {
        if (connectionManagerBuilder_ == null) {
          connectionManager_ = builderForValue.build();
          onChanged();
        } else {
          connectionManagerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      public Builder mergeConnectionManager(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager value) {
        if (connectionManagerBuilder_ == null) {
          if (connectionManager_ != null) {
            connectionManager_ =
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.newBuilder(connectionManager_).mergeFrom(value).buildPartial();
          } else {
            connectionManager_ = value;
          }
          onChanged();
        } else {
          connectionManagerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      public Builder clearConnectionManager() {
        if (connectionManagerBuilder_ == null) {
          connectionManager_ = null;
          onChanged();
        } else {
          connectionManager_ = null;
          connectionManagerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder getConnectionManagerBuilder() {
        
        onChanged();
        return getConnectionManagerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder getConnectionManagerOrBuilder() {
        if (connectionManagerBuilder_ != null) {
          return connectionManagerBuilder_.getMessageOrBuilder();
        } else {
          return connectionManager_ == null ?
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.getDefaultInstance() : connectionManager_;
        }
      }
      /**
       * <pre>
       * Connection Manager Connection and settings associated with user. Read only field.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.ConnectionManager connection_manager = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder> 
          getConnectionManagerFieldBuilder() {
        if (connectionManagerBuilder_ == null) {
          connectionManagerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder>(
                  getConnectionManager(),
                  getParentForChildren(),
                  isClean());
          connectionManager_ = null;
        }
        return connectionManagerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.postgresql.v1.User)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.postgresql.v1.User)
    private static final yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User();
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      @java.lang.Override
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PermissionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.postgresql.v1.Permission)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     * @return The databaseName.
     */
    java.lang.String getDatabaseName();
    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     * @return The bytes for databaseName.
     */
    com.google.protobuf.ByteString
        getDatabaseNameBytes();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.Permission}
   */
  public static final class Permission extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.postgresql.v1.Permission)
      PermissionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Permission.newBuilder() to construct.
    private Permission(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Permission() {
      databaseName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Permission();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Permission(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              databaseName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_Permission_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_Permission_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder.class);
    }

    public static final int DATABASE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object databaseName_;
    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     * @return The databaseName.
     */
    @java.lang.Override
    public java.lang.String getDatabaseName() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        databaseName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the database that the permission grants access to.
     * </pre>
     *
     * <code>string database_name = 1;</code>
     * @return The bytes for databaseName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseNameBytes() {
      java.lang.Object ref = databaseName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        databaseName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(databaseName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, databaseName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(databaseName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, databaseName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission other = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission) obj;

      if (!getDatabaseName()
          .equals(other.getDatabaseName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATABASE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getDatabaseName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.Permission}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.postgresql.v1.Permission)
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_Permission_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_Permission_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        databaseName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_Permission_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission build() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission buildPartial() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission result = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission(this);
        result.databaseName_ = databaseName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission) {
          return mergeFrom((yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission other) {
        if (other == yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.getDefaultInstance()) return this;
        if (!other.getDatabaseName().isEmpty()) {
          databaseName_ = other.databaseName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object databaseName_ = "";
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       * @return The databaseName.
       */
      public java.lang.String getDatabaseName() {
        java.lang.Object ref = databaseName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          databaseName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       * @return The bytes for databaseName.
       */
      public com.google.protobuf.ByteString
          getDatabaseNameBytes() {
        java.lang.Object ref = databaseName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          databaseName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       * @param value The databaseName to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        databaseName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabaseName() {
        
        databaseName_ = getDefaultInstance().getDatabaseName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the database that the permission grants access to.
       * </pre>
       *
       * <code>string database_name = 1;</code>
       * @param value The bytes for databaseName to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        databaseName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.postgresql.v1.Permission)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.postgresql.v1.Permission)
    private static final yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission();
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Permission>
        PARSER = new com.google.protobuf.AbstractParser<Permission>() {
      @java.lang.Override
      public Permission parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Permission(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Permission> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Permission> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConnectionManagerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.postgresql.v1.ConnectionManager)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ID of Connection Manager Connection
     * </pre>
     *
     * <code>string connection_id = 1;</code>
     * @return The connectionId.
     */
    java.lang.String getConnectionId();
    /**
     * <pre>
     * ID of Connection Manager Connection
     * </pre>
     *
     * <code>string connection_id = 1;</code>
     * @return The bytes for connectionId.
     */
    com.google.protobuf.ByteString
        getConnectionIdBytes();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.ConnectionManager}
   */
  public static final class ConnectionManager extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.postgresql.v1.ConnectionManager)
      ConnectionManagerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConnectionManager.newBuilder() to construct.
    private ConnectionManager(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConnectionManager() {
      connectionId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConnectionManager();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConnectionManager(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              connectionId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder.class);
    }

    public static final int CONNECTION_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object connectionId_;
    /**
     * <pre>
     * ID of Connection Manager Connection
     * </pre>
     *
     * <code>string connection_id = 1;</code>
     * @return The connectionId.
     */
    @java.lang.Override
    public java.lang.String getConnectionId() {
      java.lang.Object ref = connectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        connectionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID of Connection Manager Connection
     * </pre>
     *
     * <code>string connection_id = 1;</code>
     * @return The bytes for connectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConnectionIdBytes() {
      java.lang.Object ref = connectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, connectionId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(connectionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, connectionId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager other = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager) obj;

      if (!getConnectionId()
          .equals(other.getConnectionId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONNECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConnectionId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.ConnectionManager}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.postgresql.v1.ConnectionManager)
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManagerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        connectionId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager build() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager buildPartial() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager result = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager(this);
        result.connectionId_ = connectionId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager) {
          return mergeFrom((yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager other) {
        if (other == yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager.getDefaultInstance()) return this;
        if (!other.getConnectionId().isEmpty()) {
          connectionId_ = other.connectionId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object connectionId_ = "";
      /**
       * <pre>
       * ID of Connection Manager Connection
       * </pre>
       *
       * <code>string connection_id = 1;</code>
       * @return The connectionId.
       */
      public java.lang.String getConnectionId() {
        java.lang.Object ref = connectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          connectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of Connection Manager Connection
       * </pre>
       *
       * <code>string connection_id = 1;</code>
       * @return The bytes for connectionId.
       */
      public com.google.protobuf.ByteString
          getConnectionIdBytes() {
        java.lang.Object ref = connectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          connectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of Connection Manager Connection
       * </pre>
       *
       * <code>string connection_id = 1;</code>
       * @param value The connectionId to set.
       * @return This builder for chaining.
       */
      public Builder setConnectionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        connectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of Connection Manager Connection
       * </pre>
       *
       * <code>string connection_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectionId() {
        
        connectionId_ = getDefaultInstance().getConnectionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of Connection Manager Connection
       * </pre>
       *
       * <code>string connection_id = 1;</code>
       * @param value The bytes for connectionId to set.
       * @return This builder for chaining.
       */
      public Builder setConnectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        connectionId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.postgresql.v1.ConnectionManager)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.postgresql.v1.ConnectionManager)
    private static final yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager();
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConnectionManager>
        PARSER = new com.google.protobuf.AbstractParser<ConnectionManager>() {
      @java.lang.Override
      public ConnectionManager parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConnectionManager(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConnectionManager> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConnectionManager> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.ConnectionManager getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.postgresql.v1.UserSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Password of the PostgreSQL user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     * @return The password.
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * Password of the PostgreSQL user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     * @return The bytes for password.
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> 
        getPermissionsList();
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getPermissions(int index);
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    int getPermissionsCount();
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList();
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index);

    /**
     * <pre>
     * Maximum number of database connections that should be available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return Whether the connLimit field is set.
     */
    boolean hasConnLimit();
    /**
     * <pre>
     * Maximum number of database connections that should be available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return The connLimit.
     */
    com.google.protobuf.Int64Value getConnLimit();
    /**
     * <pre>
     * Maximum number of database connections that should be available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getConnLimitOrBuilder();

    /**
     * <pre>
     * PostgreSQL settings for the user.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return Whether the settings field is set.
     */
    boolean hasSettings();
    /**
     * <pre>
     * PostgreSQL settings for the user.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return The settings.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getSettings();
    /**
     * <pre>
     * PostgreSQL settings for the user.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder();

    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return Whether the login field is set.
     */
    boolean hasLogin();
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return The login.
     */
    com.google.protobuf.BoolValue getLogin();
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getLoginOrBuilder();

    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return A list containing the grants.
     */
    java.util.List<java.lang.String>
        getGrantsList();
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The count of grants.
     */
    int getGrantsCount();
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the element to return.
     * @return The grants at the given index.
     */
    java.lang.String getGrants(int index);
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the grants at the given index.
     */
    com.google.protobuf.ByteString
        getGrantsBytes(int index);

    /**
     * <pre>
     * Deletion Protection inhibits deletion of the user
     * Default value: `unspecified` (inherits cluster's deletion_protection)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return Whether the deletionProtection field is set.
     */
    boolean hasDeletionProtection();
    /**
     * <pre>
     * Deletion Protection inhibits deletion of the user
     * Default value: `unspecified` (inherits cluster's deletion_protection)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return The deletionProtection.
     */
    com.google.protobuf.BoolValue getDeletionProtection();
    /**
     * <pre>
     * Deletion Protection inhibits deletion of the user
     * Default value: `unspecified` (inherits cluster's deletion_protection)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getDeletionProtectionOrBuilder();

    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The enum numeric value on the wire for userPasswordEncryption.
     */
    int getUserPasswordEncryptionValue();
    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The userPasswordEncryption.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption getUserPasswordEncryption();

    /**
     * <pre>
     * Generate password using Connection Manager.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue generate_password = 10;</code>
     * @return Whether the generatePassword field is set.
     */
    boolean hasGeneratePassword();
    /**
     * <pre>
     * Generate password using Connection Manager.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue generate_password = 10;</code>
     * @return The generatePassword.
     */
    com.google.protobuf.BoolValue getGeneratePassword();
    /**
     * <pre>
     * Generate password using Connection Manager.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue generate_password = 10;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getGeneratePasswordOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.UserSpec}
   */
  public static final class UserSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.postgresql.v1.UserSpec)
      UserSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserSpec.newBuilder() to construct.
    private UserSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserSpec() {
      name_ = "";
      password_ = "";
      permissions_ = java.util.Collections.emptyList();
      grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      userPasswordEncryption_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission>();
                mutable_bitField0_ |= 0x00000001;
              }
              permissions_.add(
                  input.readMessage(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.parser(), extensionRegistry));
              break;
            }
            case 34: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (connLimit_ != null) {
                subBuilder = connLimit_.toBuilder();
              }
              connLimit_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connLimit_);
                connLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder subBuilder = null;
              if (settings_ != null) {
                subBuilder = settings_.toBuilder();
              }
              settings_ = input.readMessage(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settings_);
                settings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (login_ != null) {
                subBuilder = login_.toBuilder();
              }
              login_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(login_);
                login_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                grants_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              grants_.add(s);
              break;
            }
            case 66: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (deletionProtection_ != null) {
                subBuilder = deletionProtection_.toBuilder();
              }
              deletionProtection_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deletionProtection_);
                deletionProtection_ = subBuilder.buildPartial();
              }

              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              userPasswordEncryption_ = rawValue;
              break;
            }
            case 82: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (generatePassword_ != null) {
                subBuilder = generatePassword_.toBuilder();
              }
              generatePassword_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(generatePassword_);
                generatePassword_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          permissions_ = java.util.Collections.unmodifiableList(permissions_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          grants_ = grants_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the PostgreSQL user.
     * </pre>
     *
     * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * Password of the PostgreSQL user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     * @return The password.
     */
    @java.lang.Override
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Password of the PostgreSQL user.
     * </pre>
     *
     * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
     * @return The bytes for password.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 3;
    private java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> permissions_;
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> getPermissionsList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
        getPermissionsOrBuilderList() {
      return permissions_;
    }
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public int getPermissionsCount() {
      return permissions_.size();
    }
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getPermissions(int index) {
      return permissions_.get(index);
    }
    /**
     * <pre>
     * Set of permissions to grant to the user to access specific databases.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
        int index) {
      return permissions_.get(index);
    }

    public static final int CONN_LIMIT_FIELD_NUMBER = 4;
    private com.google.protobuf.Int64Value connLimit_;
    /**
     * <pre>
     * Maximum number of database connections that should be available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return Whether the connLimit field is set.
     */
    @java.lang.Override
    public boolean hasConnLimit() {
      return connLimit_ != null;
    }
    /**
     * <pre>
     * Maximum number of database connections that should be available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return The connLimit.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getConnLimit() {
      return connLimit_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : connLimit_;
    }
    /**
     * <pre>
     * Maximum number of database connections that should be available to the user.
     * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
     * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
     * Minimum value: `10` (default: `50`), when used in session pooling.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getConnLimitOrBuilder() {
      return getConnLimit();
    }

    public static final int SETTINGS_FIELD_NUMBER = 5;
    private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings settings_;
    /**
     * <pre>
     * PostgreSQL settings for the user.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return Whether the settings field is set.
     */
    @java.lang.Override
    public boolean hasSettings() {
      return settings_ != null;
    }
    /**
     * <pre>
     * PostgreSQL settings for the user.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     * @return The settings.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getSettings() {
      return settings_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
    }
    /**
     * <pre>
     * PostgreSQL settings for the user.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
      return getSettings();
    }

    public static final int LOGIN_FIELD_NUMBER = 6;
    private com.google.protobuf.BoolValue login_;
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return Whether the login field is set.
     */
    @java.lang.Override
    public boolean hasLogin() {
      return login_ != null;
    }
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     * @return The login.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getLogin() {
      return login_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : login_;
    }
    /**
     * <pre>
     * This flag defines whether the user can login to a PostgreSQL database.
     * Default value: `true` (login is allowed).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue login = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getLoginOrBuilder() {
      return getLogin();
    }

    public static final int GRANTS_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList grants_;
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return A list containing the grants.
     */
    public com.google.protobuf.ProtocolStringList
        getGrantsList() {
      return grants_;
    }
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @return The count of grants.
     */
    public int getGrantsCount() {
      return grants_.size();
    }
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the element to return.
     * @return The grants at the given index.
     */
    public java.lang.String getGrants(int index) {
      return grants_.get(index);
    }
    /**
     * <pre>
     * A set of roles and privileges that are granted to the user.
     * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
     * </pre>
     *
     * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the grants at the given index.
     */
    public com.google.protobuf.ByteString
        getGrantsBytes(int index) {
      return grants_.getByteString(index);
    }

    public static final int DELETION_PROTECTION_FIELD_NUMBER = 8;
    private com.google.protobuf.BoolValue deletionProtection_;
    /**
     * <pre>
     * Deletion Protection inhibits deletion of the user
     * Default value: `unspecified` (inherits cluster's deletion_protection)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return Whether the deletionProtection field is set.
     */
    @java.lang.Override
    public boolean hasDeletionProtection() {
      return deletionProtection_ != null;
    }
    /**
     * <pre>
     * Deletion Protection inhibits deletion of the user
     * Default value: `unspecified` (inherits cluster's deletion_protection)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     * @return The deletionProtection.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getDeletionProtection() {
      return deletionProtection_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : deletionProtection_;
    }
    /**
     * <pre>
     * Deletion Protection inhibits deletion of the user
     * Default value: `unspecified` (inherits cluster's deletion_protection)
     * </pre>
     *
     * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getDeletionProtectionOrBuilder() {
      return getDeletionProtection();
    }

    public static final int USER_PASSWORD_ENCRYPTION_FIELD_NUMBER = 9;
    private int userPasswordEncryption_;
    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The enum numeric value on the wire for userPasswordEncryption.
     */
    @java.lang.Override public int getUserPasswordEncryptionValue() {
      return userPasswordEncryption_;
    }
    /**
     * <pre>
     * Password-based authentication method for user.
     * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
     * The default is `` password_encryption `` setting for cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
     * @return The userPasswordEncryption.
     */
    @java.lang.Override public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption getUserPasswordEncryption() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.valueOf(userPasswordEncryption_);
      return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.UNRECOGNIZED : result;
    }

    public static final int GENERATE_PASSWORD_FIELD_NUMBER = 10;
    private com.google.protobuf.BoolValue generatePassword_;
    /**
     * <pre>
     * Generate password using Connection Manager.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue generate_password = 10;</code>
     * @return Whether the generatePassword field is set.
     */
    @java.lang.Override
    public boolean hasGeneratePassword() {
      return generatePassword_ != null;
    }
    /**
     * <pre>
     * Generate password using Connection Manager.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue generate_password = 10;</code>
     * @return The generatePassword.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getGeneratePassword() {
      return generatePassword_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : generatePassword_;
    }
    /**
     * <pre>
     * Generate password using Connection Manager.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue generate_password = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getGeneratePasswordOrBuilder() {
      return getGeneratePassword();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        output.writeMessage(3, permissions_.get(i));
      }
      if (connLimit_ != null) {
        output.writeMessage(4, getConnLimit());
      }
      if (settings_ != null) {
        output.writeMessage(5, getSettings());
      }
      if (login_ != null) {
        output.writeMessage(6, getLogin());
      }
      for (int i = 0; i < grants_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, grants_.getRaw(i));
      }
      if (deletionProtection_ != null) {
        output.writeMessage(8, getDeletionProtection());
      }
      if (userPasswordEncryption_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.USER_PASSWORD_ENCRYPTION_UNSPECIFIED.getNumber()) {
        output.writeEnum(9, userPasswordEncryption_);
      }
      if (generatePassword_ != null) {
        output.writeMessage(10, getGeneratePassword());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      for (int i = 0; i < permissions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, permissions_.get(i));
      }
      if (connLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getConnLimit());
      }
      if (settings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSettings());
      }
      if (login_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLogin());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < grants_.size(); i++) {
          dataSize += computeStringSizeNoTag(grants_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getGrantsList().size();
      }
      if (deletionProtection_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDeletionProtection());
      }
      if (userPasswordEncryption_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.USER_PASSWORD_ENCRYPTION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, userPasswordEncryption_);
      }
      if (generatePassword_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getGeneratePassword());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec other = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getPassword()
          .equals(other.getPassword())) return false;
      if (!getPermissionsList()
          .equals(other.getPermissionsList())) return false;
      if (hasConnLimit() != other.hasConnLimit()) return false;
      if (hasConnLimit()) {
        if (!getConnLimit()
            .equals(other.getConnLimit())) return false;
      }
      if (hasSettings() != other.hasSettings()) return false;
      if (hasSettings()) {
        if (!getSettings()
            .equals(other.getSettings())) return false;
      }
      if (hasLogin() != other.hasLogin()) return false;
      if (hasLogin()) {
        if (!getLogin()
            .equals(other.getLogin())) return false;
      }
      if (!getGrantsList()
          .equals(other.getGrantsList())) return false;
      if (hasDeletionProtection() != other.hasDeletionProtection()) return false;
      if (hasDeletionProtection()) {
        if (!getDeletionProtection()
            .equals(other.getDeletionProtection())) return false;
      }
      if (userPasswordEncryption_ != other.userPasswordEncryption_) return false;
      if (hasGeneratePassword() != other.hasGeneratePassword()) return false;
      if (hasGeneratePassword()) {
        if (!getGeneratePassword()
            .equals(other.getGeneratePassword())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      if (getPermissionsCount() > 0) {
        hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionsList().hashCode();
      }
      if (hasConnLimit()) {
        hash = (37 * hash) + CONN_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getConnLimit().hashCode();
      }
      if (hasSettings()) {
        hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getSettings().hashCode();
      }
      if (hasLogin()) {
        hash = (37 * hash) + LOGIN_FIELD_NUMBER;
        hash = (53 * hash) + getLogin().hashCode();
      }
      if (getGrantsCount() > 0) {
        hash = (37 * hash) + GRANTS_FIELD_NUMBER;
        hash = (53 * hash) + getGrantsList().hashCode();
      }
      if (hasDeletionProtection()) {
        hash = (37 * hash) + DELETION_PROTECTION_FIELD_NUMBER;
        hash = (53 * hash) + getDeletionProtection().hashCode();
      }
      hash = (37 * hash) + USER_PASSWORD_ENCRYPTION_FIELD_NUMBER;
      hash = (53 * hash) + userPasswordEncryption_;
      if (hasGeneratePassword()) {
        hash = (37 * hash) + GENERATE_PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getGeneratePassword().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.UserSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.postgresql.v1.UserSpec)
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPermissionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        password_ = "";

        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          permissionsBuilder_.clear();
        }
        if (connLimitBuilder_ == null) {
          connLimit_ = null;
        } else {
          connLimit_ = null;
          connLimitBuilder_ = null;
        }
        if (settingsBuilder_ == null) {
          settings_ = null;
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }
        if (loginBuilder_ == null) {
          login_ = null;
        } else {
          login_ = null;
          loginBuilder_ = null;
        }
        grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (deletionProtectionBuilder_ == null) {
          deletionProtection_ = null;
        } else {
          deletionProtection_ = null;
          deletionProtectionBuilder_ = null;
        }
        userPasswordEncryption_ = 0;

        if (generatePasswordBuilder_ == null) {
          generatePassword_ = null;
        } else {
          generatePassword_ = null;
          generatePasswordBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec build() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec buildPartial() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec result = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.password_ = password_;
        if (permissionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            permissions_ = java.util.Collections.unmodifiableList(permissions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.permissions_ = permissions_;
        } else {
          result.permissions_ = permissionsBuilder_.build();
        }
        if (connLimitBuilder_ == null) {
          result.connLimit_ = connLimit_;
        } else {
          result.connLimit_ = connLimitBuilder_.build();
        }
        if (settingsBuilder_ == null) {
          result.settings_ = settings_;
        } else {
          result.settings_ = settingsBuilder_.build();
        }
        if (loginBuilder_ == null) {
          result.login_ = login_;
        } else {
          result.login_ = loginBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          grants_ = grants_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.grants_ = grants_;
        if (deletionProtectionBuilder_ == null) {
          result.deletionProtection_ = deletionProtection_;
        } else {
          result.deletionProtection_ = deletionProtectionBuilder_.build();
        }
        result.userPasswordEncryption_ = userPasswordEncryption_;
        if (generatePasswordBuilder_ == null) {
          result.generatePassword_ = generatePassword_;
        } else {
          result.generatePassword_ = generatePasswordBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec) {
          return mergeFrom((yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec other) {
        if (other == yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        if (permissionsBuilder_ == null) {
          if (!other.permissions_.isEmpty()) {
            if (permissions_.isEmpty()) {
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePermissionsIsMutable();
              permissions_.addAll(other.permissions_);
            }
            onChanged();
          }
        } else {
          if (!other.permissions_.isEmpty()) {
            if (permissionsBuilder_.isEmpty()) {
              permissionsBuilder_.dispose();
              permissionsBuilder_ = null;
              permissions_ = other.permissions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              permissionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPermissionsFieldBuilder() : null;
            } else {
              permissionsBuilder_.addAllMessages(other.permissions_);
            }
          }
        }
        if (other.hasConnLimit()) {
          mergeConnLimit(other.getConnLimit());
        }
        if (other.hasSettings()) {
          mergeSettings(other.getSettings());
        }
        if (other.hasLogin()) {
          mergeLogin(other.getLogin());
        }
        if (!other.grants_.isEmpty()) {
          if (grants_.isEmpty()) {
            grants_ = other.grants_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureGrantsIsMutable();
            grants_.addAll(other.grants_);
          }
          onChanged();
        }
        if (other.hasDeletionProtection()) {
          mergeDeletionProtection(other.getDeletionProtection());
        }
        if (other.userPasswordEncryption_ != 0) {
          setUserPasswordEncryptionValue(other.getUserPasswordEncryptionValue());
        }
        if (other.hasGeneratePassword()) {
          mergeGeneratePassword(other.getGeneratePassword());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the PostgreSQL user.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.pattern) = "[a-zA-Z0-9_-]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * Password of the PostgreSQL user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       * @return The password.
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Password of the PostgreSQL user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       * @return The bytes for password.
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Password of the PostgreSQL user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       * @param value The password to set.
       * @return This builder for chaining.
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password of the PostgreSQL user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password of the PostgreSQL user.
       * </pre>
       *
       * <code>string password = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "8-128"];</code>
       * @param value The bytes for password to set.
       * @return This builder for chaining.
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }

      private java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> permissions_ =
        java.util.Collections.emptyList();
      private void ensurePermissionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          permissions_ = new java.util.ArrayList<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission>(permissions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> permissionsBuilder_;

      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> getPermissionsList() {
        if (permissionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(permissions_);
        } else {
          return permissionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public int getPermissionsCount() {
        if (permissionsBuilder_ == null) {
          return permissions_.size();
        } else {
          return permissionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission getPermissions(int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);
        } else {
          return permissionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.set(index, value);
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder setPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.set(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionsIsMutable();
          permissions_.add(index, value);
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addPermissions(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.add(index, builderForValue.build());
          onChanged();
        } else {
          permissionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder addAllPermissions(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission> values) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, permissions_);
          onChanged();
        } else {
          permissionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder clearPermissions() {
        if (permissionsBuilder_ == null) {
          permissions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          permissionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public Builder removePermissions(int index) {
        if (permissionsBuilder_ == null) {
          ensurePermissionsIsMutable();
          permissions_.remove(index);
          onChanged();
        } else {
          permissionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder getPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder getPermissionsOrBuilder(
          int index) {
        if (permissionsBuilder_ == null) {
          return permissions_.get(index);  } else {
          return permissionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
           getPermissionsOrBuilderList() {
        if (permissionsBuilder_ != null) {
          return permissionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(permissions_);
        }
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder addPermissionsBuilder() {
        return getPermissionsFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder addPermissionsBuilder(
          int index) {
        return getPermissionsFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.getDefaultInstance());
      }
      /**
       * <pre>
       * Set of permissions to grant to the user to access specific databases.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.Permission permissions = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder> 
           getPermissionsBuilderList() {
        return getPermissionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder> 
          getPermissionsFieldBuilder() {
        if (permissionsBuilder_ == null) {
          permissionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.Permission.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PermissionOrBuilder>(
                  permissions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          permissions_ = null;
        }
        return permissionsBuilder_;
      }

      private com.google.protobuf.Int64Value connLimit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> connLimitBuilder_;
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       * @return Whether the connLimit field is set.
       */
      public boolean hasConnLimit() {
        return connLimitBuilder_ != null || connLimit_ != null;
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       * @return The connLimit.
       */
      public com.google.protobuf.Int64Value getConnLimit() {
        if (connLimitBuilder_ == null) {
          return connLimit_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : connLimit_;
        } else {
          return connLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder setConnLimit(com.google.protobuf.Int64Value value) {
        if (connLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connLimit_ = value;
          onChanged();
        } else {
          connLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder setConnLimit(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (connLimitBuilder_ == null) {
          connLimit_ = builderForValue.build();
          onChanged();
        } else {
          connLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder mergeConnLimit(com.google.protobuf.Int64Value value) {
        if (connLimitBuilder_ == null) {
          if (connLimit_ != null) {
            connLimit_ =
              com.google.protobuf.Int64Value.newBuilder(connLimit_).mergeFrom(value).buildPartial();
          } else {
            connLimit_ = value;
          }
          onChanged();
        } else {
          connLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder clearConnLimit() {
        if (connLimitBuilder_ == null) {
          connLimit_ = null;
          onChanged();
        } else {
          connLimit_ = null;
          connLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getConnLimitBuilder() {
        
        onChanged();
        return getConnLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getConnLimitOrBuilder() {
        if (connLimitBuilder_ != null) {
          return connLimitBuilder_.getMessageOrBuilder();
        } else {
          return connLimit_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : connLimit_;
        }
      }
      /**
       * <pre>
       * Maximum number of database connections that should be available to the user.
       * When used in session pooling, this setting limits the number of connections to every single host in PostgreSQL cluster. In this case, the setting's value must be greater than the total number of connections that backend services can open to access the PostgreSQL cluster. The setting's value should not exceed the value of the [Cluster.config.postgresql_config_12.effective_config.max_connections] setting.
       * When used in transaction pooling, this setting limits the number of user's active transactions; therefore, in this mode user can open thousands of connections, but only `N` concurrent connections will be opened, where `N` is the value of the setting.
       * Minimum value: `10` (default: `50`), when used in session pooling.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value conn_limit = 4 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getConnLimitFieldBuilder() {
        if (connLimitBuilder_ == null) {
          connLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getConnLimit(),
                  getParentForChildren(),
                  isClean());
          connLimit_ = null;
        }
        return connLimitBuilder_;
      }

      private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings settings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder> settingsBuilder_;
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       * @return Whether the settings field is set.
       */
      public boolean hasSettings() {
        return settingsBuilder_ != null || settings_ != null;
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       * @return The settings.
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getSettings() {
        if (settingsBuilder_ == null) {
          return settings_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        } else {
          return settingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder setSettings(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settings_ = value;
          onChanged();
        } else {
          settingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder setSettings(
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder builderForValue) {
        if (settingsBuilder_ == null) {
          settings_ = builderForValue.build();
          onChanged();
        } else {
          settingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder mergeSettings(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings value) {
        if (settingsBuilder_ == null) {
          if (settings_ != null) {
            settings_ =
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
          } else {
            settings_ = value;
          }
          onChanged();
        } else {
          settingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public Builder clearSettings() {
        if (settingsBuilder_ == null) {
          settings_ = null;
          onChanged();
        } else {
          settings_ = null;
          settingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder getSettingsBuilder() {
        
        onChanged();
        return getSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder getSettingsOrBuilder() {
        if (settingsBuilder_ != null) {
          return settingsBuilder_.getMessageOrBuilder();
        } else {
          return settings_ == null ?
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance() : settings_;
        }
      }
      /**
       * <pre>
       * PostgreSQL settings for the user.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings settings = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder> 
          getSettingsFieldBuilder() {
        if (settingsBuilder_ == null) {
          settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder>(
                  getSettings(),
                  getParentForChildren(),
                  isClean());
          settings_ = null;
        }
        return settingsBuilder_;
      }

      private com.google.protobuf.BoolValue login_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> loginBuilder_;
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       * @return Whether the login field is set.
       */
      public boolean hasLogin() {
        return loginBuilder_ != null || login_ != null;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       * @return The login.
       */
      public com.google.protobuf.BoolValue getLogin() {
        if (loginBuilder_ == null) {
          return login_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : login_;
        } else {
          return loginBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder setLogin(com.google.protobuf.BoolValue value) {
        if (loginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          login_ = value;
          onChanged();
        } else {
          loginBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder setLogin(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (loginBuilder_ == null) {
          login_ = builderForValue.build();
          onChanged();
        } else {
          loginBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder mergeLogin(com.google.protobuf.BoolValue value) {
        if (loginBuilder_ == null) {
          if (login_ != null) {
            login_ =
              com.google.protobuf.BoolValue.newBuilder(login_).mergeFrom(value).buildPartial();
          } else {
            login_ = value;
          }
          onChanged();
        } else {
          loginBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public Builder clearLogin() {
        if (loginBuilder_ == null) {
          login_ = null;
          onChanged();
        } else {
          login_ = null;
          loginBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public com.google.protobuf.BoolValue.Builder getLoginBuilder() {
        
        onChanged();
        return getLoginFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getLoginOrBuilder() {
        if (loginBuilder_ != null) {
          return loginBuilder_.getMessageOrBuilder();
        } else {
          return login_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : login_;
        }
      }
      /**
       * <pre>
       * This flag defines whether the user can login to a PostgreSQL database.
       * Default value: `true` (login is allowed).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue login = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getLoginFieldBuilder() {
        if (loginBuilder_ == null) {
          loginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getLogin(),
                  getParentForChildren(),
                  isClean());
          login_ = null;
        }
        return loginBuilder_;
      }

      private com.google.protobuf.LazyStringList grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGrantsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          grants_ = new com.google.protobuf.LazyStringArrayList(grants_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return A list containing the grants.
       */
      public com.google.protobuf.ProtocolStringList
          getGrantsList() {
        return grants_.getUnmodifiableView();
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return The count of grants.
       */
      public int getGrantsCount() {
        return grants_.size();
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param index The index of the element to return.
       * @return The grants at the given index.
       */
      public java.lang.String getGrants(int index) {
        return grants_.get(index);
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the grants at the given index.
       */
      public com.google.protobuf.ByteString
          getGrantsBytes(int index) {
        return grants_.getByteString(index);
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param index The index to set the value at.
       * @param value The grants to set.
       * @return This builder for chaining.
       */
      public Builder setGrants(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGrantsIsMutable();
        grants_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param value The grants to add.
       * @return This builder for chaining.
       */
      public Builder addGrants(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGrantsIsMutable();
        grants_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param values The grants to add.
       * @return This builder for chaining.
       */
      public Builder addAllGrants(
          java.lang.Iterable<java.lang.String> values) {
        ensureGrantsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, grants_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGrants() {
        grants_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A set of roles and privileges that are granted to the user.
       * For more information, see [the documentation](/docs/managed-postgresql/operations/grant).
       * </pre>
       *
       * <code>repeated string grants = 7 [(.yandex.cloud.pattern) = "[a-zA-Z0-9_]*", (.yandex.cloud.length) = "&lt;=63"];</code>
       * @param value The bytes of the grants to add.
       * @return This builder for chaining.
       */
      public Builder addGrantsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureGrantsIsMutable();
        grants_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue deletionProtection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> deletionProtectionBuilder_;
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       * @return Whether the deletionProtection field is set.
       */
      public boolean hasDeletionProtection() {
        return deletionProtectionBuilder_ != null || deletionProtection_ != null;
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       * @return The deletionProtection.
       */
      public com.google.protobuf.BoolValue getDeletionProtection() {
        if (deletionProtectionBuilder_ == null) {
          return deletionProtection_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : deletionProtection_;
        } else {
          return deletionProtectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder setDeletionProtection(com.google.protobuf.BoolValue value) {
        if (deletionProtectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deletionProtection_ = value;
          onChanged();
        } else {
          deletionProtectionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder setDeletionProtection(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (deletionProtectionBuilder_ == null) {
          deletionProtection_ = builderForValue.build();
          onChanged();
        } else {
          deletionProtectionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder mergeDeletionProtection(com.google.protobuf.BoolValue value) {
        if (deletionProtectionBuilder_ == null) {
          if (deletionProtection_ != null) {
            deletionProtection_ =
              com.google.protobuf.BoolValue.newBuilder(deletionProtection_).mergeFrom(value).buildPartial();
          } else {
            deletionProtection_ = value;
          }
          onChanged();
        } else {
          deletionProtectionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public Builder clearDeletionProtection() {
        if (deletionProtectionBuilder_ == null) {
          deletionProtection_ = null;
          onChanged();
        } else {
          deletionProtection_ = null;
          deletionProtectionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public com.google.protobuf.BoolValue.Builder getDeletionProtectionBuilder() {
        
        onChanged();
        return getDeletionProtectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getDeletionProtectionOrBuilder() {
        if (deletionProtectionBuilder_ != null) {
          return deletionProtectionBuilder_.getMessageOrBuilder();
        } else {
          return deletionProtection_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : deletionProtection_;
        }
      }
      /**
       * <pre>
       * Deletion Protection inhibits deletion of the user
       * Default value: `unspecified` (inherits cluster's deletion_protection)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue deletion_protection = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getDeletionProtectionFieldBuilder() {
        if (deletionProtectionBuilder_ == null) {
          deletionProtectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getDeletionProtection(),
                  getParentForChildren(),
                  isClean());
          deletionProtection_ = null;
        }
        return deletionProtectionBuilder_;
      }

      private int userPasswordEncryption_ = 0;
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @return The enum numeric value on the wire for userPasswordEncryption.
       */
      @java.lang.Override public int getUserPasswordEncryptionValue() {
        return userPasswordEncryption_;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @param value The enum numeric value on the wire for userPasswordEncryption to set.
       * @return This builder for chaining.
       */
      public Builder setUserPasswordEncryptionValue(int value) {
        
        userPasswordEncryption_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @return The userPasswordEncryption.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption getUserPasswordEncryption() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.valueOf(userPasswordEncryption_);
        return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @param value The userPasswordEncryption to set.
       * @return This builder for chaining.
       */
      public Builder setUserPasswordEncryption(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserPasswordEncryption value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        userPasswordEncryption_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password-based authentication method for user.
       * Possible values are `` USER_PASSWORD_ENCRYPTION_MD5 `` or `` USER_PASSWORD_ENCRYPTION_SCRAM_SHA_256 ``.
       * The default is `` password_encryption `` setting for cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserPasswordEncryption user_password_encryption = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserPasswordEncryption() {
        
        userPasswordEncryption_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue generatePassword_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> generatePasswordBuilder_;
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       * @return Whether the generatePassword field is set.
       */
      public boolean hasGeneratePassword() {
        return generatePasswordBuilder_ != null || generatePassword_ != null;
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       * @return The generatePassword.
       */
      public com.google.protobuf.BoolValue getGeneratePassword() {
        if (generatePasswordBuilder_ == null) {
          return generatePassword_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : generatePassword_;
        } else {
          return generatePasswordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      public Builder setGeneratePassword(com.google.protobuf.BoolValue value) {
        if (generatePasswordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          generatePassword_ = value;
          onChanged();
        } else {
          generatePasswordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      public Builder setGeneratePassword(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (generatePasswordBuilder_ == null) {
          generatePassword_ = builderForValue.build();
          onChanged();
        } else {
          generatePasswordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      public Builder mergeGeneratePassword(com.google.protobuf.BoolValue value) {
        if (generatePasswordBuilder_ == null) {
          if (generatePassword_ != null) {
            generatePassword_ =
              com.google.protobuf.BoolValue.newBuilder(generatePassword_).mergeFrom(value).buildPartial();
          } else {
            generatePassword_ = value;
          }
          onChanged();
        } else {
          generatePasswordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      public Builder clearGeneratePassword() {
        if (generatePasswordBuilder_ == null) {
          generatePassword_ = null;
          onChanged();
        } else {
          generatePassword_ = null;
          generatePasswordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      public com.google.protobuf.BoolValue.Builder getGeneratePasswordBuilder() {
        
        onChanged();
        return getGeneratePasswordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getGeneratePasswordOrBuilder() {
        if (generatePasswordBuilder_ != null) {
          return generatePasswordBuilder_.getMessageOrBuilder();
        } else {
          return generatePassword_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : generatePassword_;
        }
      }
      /**
       * <pre>
       * Generate password using Connection Manager.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue generate_password = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getGeneratePasswordFieldBuilder() {
        if (generatePasswordBuilder_ == null) {
          generatePasswordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getGeneratePassword(),
                  getParentForChildren(),
                  isClean());
          generatePassword_ = null;
        }
        return generatePasswordBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.postgresql.v1.UserSpec)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.postgresql.v1.UserSpec)
    private static final yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec();
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserSpec>
        PARSER = new com.google.protobuf.AbstractParser<UserSpec>() {
      @java.lang.Override
      public UserSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PGAuditSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.postgresql.v1.PGAuditSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @return A list containing the log.
     */
    java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog> getLogList();
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @return The count of log.
     */
    int getLogCount();
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @param index The index of the element to return.
     * @return The log at the given index.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog getLog(int index);
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @return A list containing the enum numeric values on the wire for log.
     */
    java.util.List<java.lang.Integer>
    getLogValueList();
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of log at the given index.
     */
    int getLogValue(int index);
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.PGAuditSettings}
   */
  public static final class PGAuditSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.postgresql.v1.PGAuditSettings)
      PGAuditSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PGAuditSettings.newBuilder() to construct.
    private PGAuditSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PGAuditSettings() {
      log_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PGAuditSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PGAuditSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                log_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              log_.add(rawValue);
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  log_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000001;
                }
                log_.add(rawValue);
              }
              input.popLimit(oldLimit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          log_ = java.util.Collections.unmodifiableList(log_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog}
     */
    public enum PGAuditSettingsLog
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_UNSPECIFIED = 0;</code>
       */
      PG_AUDIT_SETTINGS_LOG_UNSPECIFIED(0),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_READ = 1;</code>
       */
      PG_AUDIT_SETTINGS_LOG_READ(1),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_WRITE = 2;</code>
       */
      PG_AUDIT_SETTINGS_LOG_WRITE(2),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_FUNCTION = 3;</code>
       */
      PG_AUDIT_SETTINGS_LOG_FUNCTION(3),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_ROLE = 4;</code>
       */
      PG_AUDIT_SETTINGS_LOG_ROLE(4),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_DDL = 5;</code>
       */
      PG_AUDIT_SETTINGS_LOG_DDL(5),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_MISC = 6;</code>
       */
      PG_AUDIT_SETTINGS_LOG_MISC(6),
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_MISC_SET = 7;</code>
       */
      PG_AUDIT_SETTINGS_LOG_MISC_SET(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PG_AUDIT_SETTINGS_LOG_UNSPECIFIED = 0;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_UNSPECIFIED_VALUE = 0;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_READ = 1;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_READ_VALUE = 1;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_WRITE = 2;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_WRITE_VALUE = 2;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_FUNCTION = 3;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_FUNCTION_VALUE = 3;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_ROLE = 4;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_ROLE_VALUE = 4;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_DDL = 5;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_DDL_VALUE = 5;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_MISC = 6;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_MISC_VALUE = 6;
      /**
       * <code>PG_AUDIT_SETTINGS_LOG_MISC_SET = 7;</code>
       */
      public static final int PG_AUDIT_SETTINGS_LOG_MISC_SET_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PGAuditSettingsLog valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PGAuditSettingsLog forNumber(int value) {
        switch (value) {
          case 0: return PG_AUDIT_SETTINGS_LOG_UNSPECIFIED;
          case 1: return PG_AUDIT_SETTINGS_LOG_READ;
          case 2: return PG_AUDIT_SETTINGS_LOG_WRITE;
          case 3: return PG_AUDIT_SETTINGS_LOG_FUNCTION;
          case 4: return PG_AUDIT_SETTINGS_LOG_ROLE;
          case 5: return PG_AUDIT_SETTINGS_LOG_DDL;
          case 6: return PG_AUDIT_SETTINGS_LOG_MISC;
          case 7: return PG_AUDIT_SETTINGS_LOG_MISC_SET;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PGAuditSettingsLog>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PGAuditSettingsLog> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PGAuditSettingsLog>() {
              public PGAuditSettingsLog findValueByNumber(int number) {
                return PGAuditSettingsLog.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final PGAuditSettingsLog[] VALUES = values();

      public static PGAuditSettingsLog valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PGAuditSettingsLog(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog)
    }

    public static final int LOG_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> log_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog> log_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog>() {
              public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog convert(java.lang.Integer from) {
                @SuppressWarnings("deprecation")
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog.valueOf(from);
                return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @return A list containing the log.
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog> getLogList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog>(log_, log_converter_);
    }
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @return The count of log.
     */
    @java.lang.Override
    public int getLogCount() {
      return log_.size();
    }
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @param index The index of the element to return.
     * @return The log at the given index.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog getLog(int index) {
      return log_converter_.convert(log_.get(index));
    }
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @return A list containing the enum numeric values on the wire for log.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getLogValueList() {
      return log_;
    }
    /**
     * <pre>
     * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
     * The possible values are the following:
     * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
     * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
     * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
     * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
     * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
     * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of log at the given index.
     */
    @java.lang.Override
    public int getLogValue(int index) {
      return log_.get(index);
    }
    private int logMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getLogList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(logMemoizedSerializedSize);
      }
      for (int i = 0; i < log_.size(); i++) {
        output.writeEnumNoTag(log_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < log_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(log_.get(i));
        }
        size += dataSize;
        if (!getLogList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }logMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings other = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings) obj;

      if (!log_.equals(other.log_)) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLogCount() > 0) {
        hash = (37 * hash) + LOG_FIELD_NUMBER;
        hash = (53 * hash) + log_.hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.PGAuditSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.postgresql.v1.PGAuditSettings)
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        log_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings build() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings buildPartial() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings result = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          log_ = java.util.Collections.unmodifiableList(log_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.log_ = log_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings) {
          return mergeFrom((yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings other) {
        if (other == yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.getDefaultInstance()) return this;
        if (!other.log_.isEmpty()) {
          if (log_.isEmpty()) {
            log_ = other.log_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLogIsMutable();
            log_.addAll(other.log_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> log_ =
        java.util.Collections.emptyList();
      private void ensureLogIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          log_ = new java.util.ArrayList<java.lang.Integer>(log_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @return A list containing the log.
       */
      public java.util.List<yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog> getLogList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog>(log_, log_converter_);
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @return The count of log.
       */
      public int getLogCount() {
        return log_.size();
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param index The index of the element to return.
       * @return The log at the given index.
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog getLog(int index) {
        return log_converter_.convert(log_.get(index));
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param index The index to set the value at.
       * @param value The log to set.
       * @return This builder for chaining.
       */
      public Builder setLog(
          int index, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogIsMutable();
        log_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param value The log to add.
       * @return This builder for chaining.
       */
      public Builder addLog(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLogIsMutable();
        log_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param values The log to add.
       * @return This builder for chaining.
       */
      public Builder addAllLog(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog> values) {
        ensureLogIsMutable();
        for (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.PGAuditSettingsLog value : values) {
          log_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLog() {
        log_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @return A list containing the enum numeric values on the wire for log.
       */
      public java.util.List<java.lang.Integer>
      getLogValueList() {
        return java.util.Collections.unmodifiableList(log_);
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of log at the given index.
       */
      public int getLogValue(int index) {
        return log_.get(index);
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of log at the given index.
       * @return This builder for chaining.
       */
      public Builder setLogValue(
          int index, int value) {
        ensureLogIsMutable();
        log_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param value The enum numeric value on the wire for log to add.
       * @return This builder for chaining.
       */
      public Builder addLogValue(int value) {
        ensureLogIsMutable();
        log_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Defines which user queries will be written to the audit log. Corresponds to the [Pg audit log](https://yandex.cloud/en/docs/managed-postgresql/concepts/settings-list#setting-pg-audit-log) user setting.
       * The possible values are the following:
       * * PG_AUDIT_SETTINGS_LOG_READ: `SELECT` and `COPY` queries are logged if the data source is a relation or query.
       * * PG_AUDIT_SETTINGS_LOG_WRITE: `INSERT`, `UPDATE`, `DELETE`, `TRUNCATE`, and `COPY` queries are logged if the data target is a relation.
       * * PG_AUDIT_SETTINGS_LOG_FUNCTION: Function invocations and `DO` sections are logged.
       * * PG_AUDIT_SETTINGS_LOG_ROLE: Statements related to role and privilege management, such as `GRANT`, `REVOKE`, or `CREATE/ALTER/DROP ROLE`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_DDL: Any `DDL` statements that do not belong to the `ROLE` class are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC: Miscellaneous commands, such as `DISCARD`, `FETCH`, `CHECKPOINT`, `VACUUM`, and `SET`, are logged.
       * * PG_AUDIT_SETTINGS_LOG_MISC_SET: Miscellaneous `SET` commands, e.g., `SET ROLE`, are logged.
       * The default value is PG_AUDIT_SETTINGS_LOG_UNSPECIFIED. In this case, the parameter is not configured.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.postgresql.v1.PGAuditSettings.PGAuditSettingsLog log = 1;</code>
       * @param values The enum numeric values on the wire for log to add.
       * @return This builder for chaining.
       */
      public Builder addAllLogValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureLogIsMutable();
        for (int value : values) {
          log_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.postgresql.v1.PGAuditSettings)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.postgresql.v1.PGAuditSettings)
    private static final yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings();
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PGAuditSettings>
        PARSER = new com.google.protobuf.AbstractParser<PGAuditSettings>() {
      @java.lang.Override
      public PGAuditSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PGAuditSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PGAuditSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PGAuditSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.postgresql.v1.UserSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * SQL sets an isolation level for each transaction.
     * This setting defines the default isolation level to be set for all new SQL transactions.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
     * @return The enum numeric value on the wire for defaultTransactionIsolation.
     */
    int getDefaultTransactionIsolationValue();
    /**
     * <pre>
     * SQL sets an isolation level for each transaction.
     * This setting defines the default isolation level to be set for all new SQL transactions.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
     * @return The defaultTransactionIsolation.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation getDefaultTransactionIsolation();

    /**
     * <pre>
     * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
     * If the wait time is longer than the specified amount, then this statement is aborted.
     * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
     * @return Whether the lockTimeout field is set.
     */
    boolean hasLockTimeout();
    /**
     * <pre>
     * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
     * If the wait time is longer than the specified amount, then this statement is aborted.
     * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
     * @return The lockTimeout.
     */
    com.google.protobuf.Int64Value getLockTimeout();
    /**
     * <pre>
     * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
     * If the wait time is longer than the specified amount, then this statement is aborted.
     * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getLockTimeoutOrBuilder();

    /**
     * <pre>
     * This setting controls logging of the duration of statements.
     * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
     * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
     * Value of `0` forces PostgreSQL to log the duration of all statements.
     * Value of `-1` (default) disables logging of the duration of statements.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
     * @return Whether the logMinDurationStatement field is set.
     */
    boolean hasLogMinDurationStatement();
    /**
     * <pre>
     * This setting controls logging of the duration of statements.
     * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
     * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
     * Value of `0` forces PostgreSQL to log the duration of all statements.
     * Value of `-1` (default) disables logging of the duration of statements.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
     * @return The logMinDurationStatement.
     */
    com.google.protobuf.Int64Value getLogMinDurationStatement();
    /**
     * <pre>
     * This setting controls logging of the duration of statements.
     * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
     * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
     * Value of `0` forces PostgreSQL to log the duration of all statements.
     * Value of `-1` (default) disables logging of the duration of statements.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getLogMinDurationStatementOrBuilder();

    /**
     * <pre>
     * This setting defines whether DBMS will commit transaction in a synchronous way.
     * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
     * These operations guarantee different levels of the data safety and visibility in the cluster.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
     * @return The enum numeric value on the wire for synchronousCommit.
     */
    int getSynchronousCommitValue();
    /**
     * <pre>
     * This setting defines whether DBMS will commit transaction in a synchronous way.
     * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
     * These operations guarantee different levels of the data safety and visibility in the cluster.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
     * @return The synchronousCommit.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit getSynchronousCommit();

    /**
     * <pre>
     * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     * If a transaction exceeds this limit during execution, it will be aborted.
     * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
     * @return Whether the tempFileLimit field is set.
     */
    boolean hasTempFileLimit();
    /**
     * <pre>
     * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     * If a transaction exceeds this limit during execution, it will be aborted.
     * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
     * @return The tempFileLimit.
     */
    com.google.protobuf.Int64Value getTempFileLimit();
    /**
     * <pre>
     * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     * If a transaction exceeds this limit during execution, it will be aborted.
     * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTempFileLimitOrBuilder();

    /**
     * <pre>
     * This setting specifies which SQL statements should be logged (on the user level).
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
     * @return The enum numeric value on the wire for logStatement.
     */
    int getLogStatementValue();
    /**
     * <pre>
     * This setting specifies which SQL statements should be logged (on the user level).
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
     * @return The logStatement.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement getLogStatement();

    /**
     * <pre>
     * Mode that the connection pooler is working in with specified user.
     * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
     * @return The enum numeric value on the wire for poolMode.
     */
    int getPoolModeValue();
    /**
     * <pre>
     * Mode that the connection pooler is working in with specified user.
     * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
     * @return The poolMode.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode getPoolMode();

    /**
     * <pre>
     * User can use prepared statements with transaction pooling.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
     * @return Whether the preparedStatementsPooling field is set.
     */
    boolean hasPreparedStatementsPooling();
    /**
     * <pre>
     * User can use prepared statements with transaction pooling.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
     * @return The preparedStatementsPooling.
     */
    com.google.protobuf.BoolValue getPreparedStatementsPooling();
    /**
     * <pre>
     * User can use prepared statements with transaction pooling.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getPreparedStatementsPoolingOrBuilder();

    /**
     * <pre>
     * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
     * Pooler will reject connections to the replica with a lag above this threshold.
     * It can be useful to prevent application from reading stale data.
     * Default value: 0
     * Value of `0` disables this mechanism
     * </pre>
     *
     * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
     * @return Whether the catchupTimeout field is set.
     */
    boolean hasCatchupTimeout();
    /**
     * <pre>
     * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
     * Pooler will reject connections to the replica with a lag above this threshold.
     * It can be useful to prevent application from reading stale data.
     * Default value: 0
     * Value of `0` disables this mechanism
     * </pre>
     *
     * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
     * @return The catchupTimeout.
     */
    com.google.protobuf.Int64Value getCatchupTimeout();
    /**
     * <pre>
     * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
     * Pooler will reject connections to the replica with a lag above this threshold.
     * It can be useful to prevent application from reading stale data.
     * Default value: 0
     * Value of `0` disables this mechanism
     * </pre>
     *
     * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getCatchupTimeoutOrBuilder();

    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
     * Terminate replication connections that are inactive for longer than this amount of time. 
     * Default value: `60000` (60 seconds).
     * Value of `0` disables the timeout mechanism.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
     * @return Whether the walSenderTimeout field is set.
     */
    boolean hasWalSenderTimeout();
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
     * Terminate replication connections that are inactive for longer than this amount of time. 
     * Default value: `60000` (60 seconds).
     * Value of `0` disables the timeout mechanism.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
     * @return The walSenderTimeout.
     */
    com.google.protobuf.Int64Value getWalSenderTimeout();
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
     * Terminate replication connections that are inactive for longer than this amount of time. 
     * Default value: `60000` (60 seconds).
     * Value of `0` disables the timeout mechanism.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getWalSenderTimeoutOrBuilder();

    /**
     * <pre>
     * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
     * The default value is `0`, which disables the timeout.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
     * @return Whether the idleInTransactionSessionTimeout field is set.
     */
    boolean hasIdleInTransactionSessionTimeout();
    /**
     * <pre>
     * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
     * The default value is `0`, which disables the timeout.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
     * @return The idleInTransactionSessionTimeout.
     */
    com.google.protobuf.Int64Value getIdleInTransactionSessionTimeout();
    /**
     * <pre>
     * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
     * The default value is `0`, which disables the timeout.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getIdleInTransactionSessionTimeoutOrBuilder();

    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for statement.
     * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
     * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
     * Value of `0` (default) disables the timeout
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
     * @return Whether the statementTimeout field is set.
     */
    boolean hasStatementTimeout();
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for statement.
     * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
     * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
     * Value of `0` (default) disables the timeout
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
     * @return The statementTimeout.
     */
    com.google.protobuf.Int64Value getStatementTimeout();
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for statement.
     * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
     * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
     * Value of `0` (default) disables the timeout
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getStatementTimeoutOrBuilder();

    /**
     * <pre>
     * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
     * @return Whether the pgaudit field is set.
     */
    boolean hasPgaudit();
    /**
     * <pre>
     * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
     * @return The pgaudit.
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings getPgaudit();
    /**
     * <pre>
     * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
     */
    yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder getPgauditOrBuilder();
  }
  /**
   * <pre>
   * PostgreSQL user settings.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.UserSettings}
   */
  public static final class UserSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.postgresql.v1.UserSettings)
      UserSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserSettings.newBuilder() to construct.
    private UserSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserSettings() {
      defaultTransactionIsolation_ = 0;
      synchronousCommit_ = 0;
      logStatement_ = 0;
      poolMode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              defaultTransactionIsolation_ = rawValue;
              break;
            }
            case 18: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (lockTimeout_ != null) {
                subBuilder = lockTimeout_.toBuilder();
              }
              lockTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lockTimeout_);
                lockTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (logMinDurationStatement_ != null) {
                subBuilder = logMinDurationStatement_.toBuilder();
              }
              logMinDurationStatement_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(logMinDurationStatement_);
                logMinDurationStatement_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              synchronousCommit_ = rawValue;
              break;
            }
            case 42: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (tempFileLimit_ != null) {
                subBuilder = tempFileLimit_.toBuilder();
              }
              tempFileLimit_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tempFileLimit_);
                tempFileLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              logStatement_ = rawValue;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              poolMode_ = rawValue;
              break;
            }
            case 66: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (preparedStatementsPooling_ != null) {
                subBuilder = preparedStatementsPooling_.toBuilder();
              }
              preparedStatementsPooling_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preparedStatementsPooling_);
                preparedStatementsPooling_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (catchupTimeout_ != null) {
                subBuilder = catchupTimeout_.toBuilder();
              }
              catchupTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(catchupTimeout_);
                catchupTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (walSenderTimeout_ != null) {
                subBuilder = walSenderTimeout_.toBuilder();
              }
              walSenderTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(walSenderTimeout_);
                walSenderTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (idleInTransactionSessionTimeout_ != null) {
                subBuilder = idleInTransactionSessionTimeout_.toBuilder();
              }
              idleInTransactionSessionTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(idleInTransactionSessionTimeout_);
                idleInTransactionSessionTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (statementTimeout_ != null) {
                subBuilder = statementTimeout_.toBuilder();
              }
              statementTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(statementTimeout_);
                statementTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder subBuilder = null;
              if (pgaudit_ != null) {
                subBuilder = pgaudit_.toBuilder();
              }
              pgaudit_ = input.readMessage(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pgaudit_);
                pgaudit_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit}
     */
    public enum SynchronousCommit
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SYNCHRONOUS_COMMIT_UNSPECIFIED = 0;</code>
       */
      SYNCHRONOUS_COMMIT_UNSPECIFIED(0),
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL (Write-Ahead Log), and WAL is written to the storage of both the master and its synchronous standby server. Default value.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_ON = 1;</code>
       */
      SYNCHRONOUS_COMMIT_ON(1),
      /**
       * <pre>
       * Success is reported to the client even if the data is not in WAL.
       * There is no synchronous write operation, data may be loss in case of storage subsystem failure.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_OFF = 2;</code>
       */
      SYNCHRONOUS_COMMIT_OFF(2),
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL, and WAL is written to the storage of the master server.
       * The transaction may be lost due to storage subsystem failure on the master server.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_LOCAL = 3;</code>
       */
      SYNCHRONOUS_COMMIT_LOCAL(3),
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL, WAL is written to the storage of the master server, and the server's synchronous standby indicates that it has received WAL and written it out to its operating system.
       * The transaction may be lost due to simultaneous storage subsystem failure on the master and operating system's failure on the synchronous standby.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_REMOTE_WRITE = 4;</code>
       */
      SYNCHRONOUS_COMMIT_REMOTE_WRITE(4),
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL (Write-Ahead Log), WAL is written to the storage of the master server, and its synchronous standby indicates that it has received WAL and applied it.
       * The transaction may be lost due to irrecoverably failure of both the master and its synchronous standby.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_REMOTE_APPLY = 5;</code>
       */
      SYNCHRONOUS_COMMIT_REMOTE_APPLY(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>SYNCHRONOUS_COMMIT_UNSPECIFIED = 0;</code>
       */
      public static final int SYNCHRONOUS_COMMIT_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL (Write-Ahead Log), and WAL is written to the storage of both the master and its synchronous standby server. Default value.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_ON = 1;</code>
       */
      public static final int SYNCHRONOUS_COMMIT_ON_VALUE = 1;
      /**
       * <pre>
       * Success is reported to the client even if the data is not in WAL.
       * There is no synchronous write operation, data may be loss in case of storage subsystem failure.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_OFF = 2;</code>
       */
      public static final int SYNCHRONOUS_COMMIT_OFF_VALUE = 2;
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL, and WAL is written to the storage of the master server.
       * The transaction may be lost due to storage subsystem failure on the master server.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_LOCAL = 3;</code>
       */
      public static final int SYNCHRONOUS_COMMIT_LOCAL_VALUE = 3;
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL, WAL is written to the storage of the master server, and the server's synchronous standby indicates that it has received WAL and written it out to its operating system.
       * The transaction may be lost due to simultaneous storage subsystem failure on the master and operating system's failure on the synchronous standby.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_REMOTE_WRITE = 4;</code>
       */
      public static final int SYNCHRONOUS_COMMIT_REMOTE_WRITE_VALUE = 4;
      /**
       * <pre>
       * Success is reported to the client if the data is in WAL (Write-Ahead Log), WAL is written to the storage of the master server, and its synchronous standby indicates that it has received WAL and applied it.
       * The transaction may be lost due to irrecoverably failure of both the master and its synchronous standby.
       * </pre>
       *
       * <code>SYNCHRONOUS_COMMIT_REMOTE_APPLY = 5;</code>
       */
      public static final int SYNCHRONOUS_COMMIT_REMOTE_APPLY_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SynchronousCommit valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SynchronousCommit forNumber(int value) {
        switch (value) {
          case 0: return SYNCHRONOUS_COMMIT_UNSPECIFIED;
          case 1: return SYNCHRONOUS_COMMIT_ON;
          case 2: return SYNCHRONOUS_COMMIT_OFF;
          case 3: return SYNCHRONOUS_COMMIT_LOCAL;
          case 4: return SYNCHRONOUS_COMMIT_REMOTE_WRITE;
          case 5: return SYNCHRONOUS_COMMIT_REMOTE_APPLY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SynchronousCommit>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SynchronousCommit> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SynchronousCommit>() {
              public SynchronousCommit findValueByNumber(int number) {
                return SynchronousCommit.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(0);
      }

      private static final SynchronousCommit[] VALUES = values();

      public static SynchronousCommit valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SynchronousCommit(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement}
     */
    public enum LogStatement
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOG_STATEMENT_UNSPECIFIED = 0;</code>
       */
      LOG_STATEMENT_UNSPECIFIED(0),
      /**
       * <pre>
       * Logs none of SQL statements. Default value.
       * </pre>
       *
       * <code>LOG_STATEMENT_NONE = 1;</code>
       */
      LOG_STATEMENT_NONE(1),
      /**
       * <pre>
       * Logs all data definition statements (such as `CREATE`, `ALTER`, `DROP` and others).
       * </pre>
       *
       * <code>LOG_STATEMENT_DDL = 2;</code>
       */
      LOG_STATEMENT_DDL(2),
      /**
       * <pre>
       * Logs all statements that fall in the `LOG_STATEMENT_DDL` category plus data-modifying statements (such as `INSERT`, `UPDATE` and others).
       * </pre>
       *
       * <code>LOG_STATEMENT_MOD = 3;</code>
       */
      LOG_STATEMENT_MOD(3),
      /**
       * <pre>
       * Logs all SQL statements.
       * </pre>
       *
       * <code>LOG_STATEMENT_ALL = 4;</code>
       */
      LOG_STATEMENT_ALL(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOG_STATEMENT_UNSPECIFIED = 0;</code>
       */
      public static final int LOG_STATEMENT_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Logs none of SQL statements. Default value.
       * </pre>
       *
       * <code>LOG_STATEMENT_NONE = 1;</code>
       */
      public static final int LOG_STATEMENT_NONE_VALUE = 1;
      /**
       * <pre>
       * Logs all data definition statements (such as `CREATE`, `ALTER`, `DROP` and others).
       * </pre>
       *
       * <code>LOG_STATEMENT_DDL = 2;</code>
       */
      public static final int LOG_STATEMENT_DDL_VALUE = 2;
      /**
       * <pre>
       * Logs all statements that fall in the `LOG_STATEMENT_DDL` category plus data-modifying statements (such as `INSERT`, `UPDATE` and others).
       * </pre>
       *
       * <code>LOG_STATEMENT_MOD = 3;</code>
       */
      public static final int LOG_STATEMENT_MOD_VALUE = 3;
      /**
       * <pre>
       * Logs all SQL statements.
       * </pre>
       *
       * <code>LOG_STATEMENT_ALL = 4;</code>
       */
      public static final int LOG_STATEMENT_ALL_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogStatement valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LogStatement forNumber(int value) {
        switch (value) {
          case 0: return LOG_STATEMENT_UNSPECIFIED;
          case 1: return LOG_STATEMENT_NONE;
          case 2: return LOG_STATEMENT_DDL;
          case 3: return LOG_STATEMENT_MOD;
          case 4: return LOG_STATEMENT_ALL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogStatement>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogStatement> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogStatement>() {
              public LogStatement findValueByNumber(int number) {
                return LogStatement.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(1);
      }

      private static final LogStatement[] VALUES = values();

      public static LogStatement valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogStatement(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation}
     */
    public enum TransactionIsolation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TRANSACTION_ISOLATION_UNSPECIFIED = 0;</code>
       */
      TRANSACTION_ISOLATION_UNSPECIFIED(0),
      /**
       * <pre>
       * This level behaves like `TRANSACTION_ISOLATION_READ_COMMITTED` in PostgreSQL.
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_READ_UNCOMMITTED = 1;</code>
       */
      TRANSACTION_ISOLATION_READ_UNCOMMITTED(1),
      /**
       * <pre>
       * On this level query sees only data committed before the query began. Default value.
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_READ_COMMITTED = 2;</code>
       */
      TRANSACTION_ISOLATION_READ_COMMITTED(2),
      /**
       * <pre>
       * On this level all subsequent queries in a transaction will see the same rows, that were read by the first `SELECT` or `INSERT` query in this transaction, unchanged (these rows are locked during the first query).
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_REPEATABLE_READ = 3;</code>
       */
      TRANSACTION_ISOLATION_REPEATABLE_READ(3),
      /**
       * <pre>
       * This level provides the strictest transaction isolation.
       * All queries in the current transaction see only the rows that were fixed prior to execution of the first `SELECT` or `INSERT` query in this transaction.
       * If read and write operations in a concurrent set of serializable transactions overlap and this may cause an inconsistency that is not possible during the serial transaction execution, then one of the transaction will be rolled back, triggering a serialization failure.
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_SERIALIZABLE = 4;</code>
       */
      TRANSACTION_ISOLATION_SERIALIZABLE(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TRANSACTION_ISOLATION_UNSPECIFIED = 0;</code>
       */
      public static final int TRANSACTION_ISOLATION_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * This level behaves like `TRANSACTION_ISOLATION_READ_COMMITTED` in PostgreSQL.
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_READ_UNCOMMITTED = 1;</code>
       */
      public static final int TRANSACTION_ISOLATION_READ_UNCOMMITTED_VALUE = 1;
      /**
       * <pre>
       * On this level query sees only data committed before the query began. Default value.
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_READ_COMMITTED = 2;</code>
       */
      public static final int TRANSACTION_ISOLATION_READ_COMMITTED_VALUE = 2;
      /**
       * <pre>
       * On this level all subsequent queries in a transaction will see the same rows, that were read by the first `SELECT` or `INSERT` query in this transaction, unchanged (these rows are locked during the first query).
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_REPEATABLE_READ = 3;</code>
       */
      public static final int TRANSACTION_ISOLATION_REPEATABLE_READ_VALUE = 3;
      /**
       * <pre>
       * This level provides the strictest transaction isolation.
       * All queries in the current transaction see only the rows that were fixed prior to execution of the first `SELECT` or `INSERT` query in this transaction.
       * If read and write operations in a concurrent set of serializable transactions overlap and this may cause an inconsistency that is not possible during the serial transaction execution, then one of the transaction will be rolled back, triggering a serialization failure.
       * </pre>
       *
       * <code>TRANSACTION_ISOLATION_SERIALIZABLE = 4;</code>
       */
      public static final int TRANSACTION_ISOLATION_SERIALIZABLE_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TransactionIsolation valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TransactionIsolation forNumber(int value) {
        switch (value) {
          case 0: return TRANSACTION_ISOLATION_UNSPECIFIED;
          case 1: return TRANSACTION_ISOLATION_READ_UNCOMMITTED;
          case 2: return TRANSACTION_ISOLATION_READ_COMMITTED;
          case 3: return TRANSACTION_ISOLATION_REPEATABLE_READ;
          case 4: return TRANSACTION_ISOLATION_SERIALIZABLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TransactionIsolation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TransactionIsolation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TransactionIsolation>() {
              public TransactionIsolation findValueByNumber(int number) {
                return TransactionIsolation.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(2);
      }

      private static final TransactionIsolation[] VALUES = values();

      public static TransactionIsolation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TransactionIsolation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation)
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode}
     */
    public enum PoolingMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>POOLING_MODE_UNSPECIFIED = 0;</code>
       */
      POOLING_MODE_UNSPECIFIED(0),
      /**
       * <pre>
       * Server connection will be assigned to it for the whole duration the client stays connected. Default value.
       * </pre>
       *
       * <code>SESSION = 1;</code>
       */
      SESSION(1),
      /**
       * <pre>
       * Server connection is assigned to a client only during a transaction.
       * </pre>
       *
       * <code>TRANSACTION = 2;</code>
       */
      TRANSACTION(2),
      /**
       * <pre>
       * Server connection will be put back into the pool immediately after a query completes.
       * </pre>
       *
       * <code>STATEMENT = 3;</code>
       */
      STATEMENT(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>POOLING_MODE_UNSPECIFIED = 0;</code>
       */
      public static final int POOLING_MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Server connection will be assigned to it for the whole duration the client stays connected. Default value.
       * </pre>
       *
       * <code>SESSION = 1;</code>
       */
      public static final int SESSION_VALUE = 1;
      /**
       * <pre>
       * Server connection is assigned to a client only during a transaction.
       * </pre>
       *
       * <code>TRANSACTION = 2;</code>
       */
      public static final int TRANSACTION_VALUE = 2;
      /**
       * <pre>
       * Server connection will be put back into the pool immediately after a query completes.
       * </pre>
       *
       * <code>STATEMENT = 3;</code>
       */
      public static final int STATEMENT_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PoolingMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PoolingMode forNumber(int value) {
        switch (value) {
          case 0: return POOLING_MODE_UNSPECIFIED;
          case 1: return SESSION;
          case 2: return TRANSACTION;
          case 3: return STATEMENT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PoolingMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PoolingMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PoolingMode>() {
              public PoolingMode findValueByNumber(int number) {
                return PoolingMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDescriptor().getEnumTypes().get(3);
      }

      private static final PoolingMode[] VALUES = values();

      public static PoolingMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PoolingMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode)
    }

    public static final int DEFAULT_TRANSACTION_ISOLATION_FIELD_NUMBER = 1;
    private int defaultTransactionIsolation_;
    /**
     * <pre>
     * SQL sets an isolation level for each transaction.
     * This setting defines the default isolation level to be set for all new SQL transactions.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
     * @return The enum numeric value on the wire for defaultTransactionIsolation.
     */
    @java.lang.Override public int getDefaultTransactionIsolationValue() {
      return defaultTransactionIsolation_;
    }
    /**
     * <pre>
     * SQL sets an isolation level for each transaction.
     * This setting defines the default isolation level to be set for all new SQL transactions.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
     * @return The defaultTransactionIsolation.
     */
    @java.lang.Override public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation getDefaultTransactionIsolation() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation.valueOf(defaultTransactionIsolation_);
      return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation.UNRECOGNIZED : result;
    }

    public static final int LOCK_TIMEOUT_FIELD_NUMBER = 2;
    private com.google.protobuf.Int64Value lockTimeout_;
    /**
     * <pre>
     * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
     * If the wait time is longer than the specified amount, then this statement is aborted.
     * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
     * @return Whether the lockTimeout field is set.
     */
    @java.lang.Override
    public boolean hasLockTimeout() {
      return lockTimeout_ != null;
    }
    /**
     * <pre>
     * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
     * If the wait time is longer than the specified amount, then this statement is aborted.
     * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
     * @return The lockTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getLockTimeout() {
      return lockTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : lockTimeout_;
    }
    /**
     * <pre>
     * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
     * If the wait time is longer than the specified amount, then this statement is aborted.
     * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getLockTimeoutOrBuilder() {
      return getLockTimeout();
    }

    public static final int LOG_MIN_DURATION_STATEMENT_FIELD_NUMBER = 3;
    private com.google.protobuf.Int64Value logMinDurationStatement_;
    /**
     * <pre>
     * This setting controls logging of the duration of statements.
     * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
     * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
     * Value of `0` forces PostgreSQL to log the duration of all statements.
     * Value of `-1` (default) disables logging of the duration of statements.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
     * @return Whether the logMinDurationStatement field is set.
     */
    @java.lang.Override
    public boolean hasLogMinDurationStatement() {
      return logMinDurationStatement_ != null;
    }
    /**
     * <pre>
     * This setting controls logging of the duration of statements.
     * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
     * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
     * Value of `0` forces PostgreSQL to log the duration of all statements.
     * Value of `-1` (default) disables logging of the duration of statements.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
     * @return The logMinDurationStatement.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getLogMinDurationStatement() {
      return logMinDurationStatement_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : logMinDurationStatement_;
    }
    /**
     * <pre>
     * This setting controls logging of the duration of statements.
     * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
     * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
     * Value of `0` forces PostgreSQL to log the duration of all statements.
     * Value of `-1` (default) disables logging of the duration of statements.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getLogMinDurationStatementOrBuilder() {
      return getLogMinDurationStatement();
    }

    public static final int SYNCHRONOUS_COMMIT_FIELD_NUMBER = 4;
    private int synchronousCommit_;
    /**
     * <pre>
     * This setting defines whether DBMS will commit transaction in a synchronous way.
     * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
     * These operations guarantee different levels of the data safety and visibility in the cluster.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
     * @return The enum numeric value on the wire for synchronousCommit.
     */
    @java.lang.Override public int getSynchronousCommitValue() {
      return synchronousCommit_;
    }
    /**
     * <pre>
     * This setting defines whether DBMS will commit transaction in a synchronous way.
     * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
     * These operations guarantee different levels of the data safety and visibility in the cluster.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
     * @return The synchronousCommit.
     */
    @java.lang.Override public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit getSynchronousCommit() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit.valueOf(synchronousCommit_);
      return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit.UNRECOGNIZED : result;
    }

    public static final int TEMP_FILE_LIMIT_FIELD_NUMBER = 5;
    private com.google.protobuf.Int64Value tempFileLimit_;
    /**
     * <pre>
     * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     * If a transaction exceeds this limit during execution, it will be aborted.
     * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
     * @return Whether the tempFileLimit field is set.
     */
    @java.lang.Override
    public boolean hasTempFileLimit() {
      return tempFileLimit_ != null;
    }
    /**
     * <pre>
     * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     * If a transaction exceeds this limit during execution, it will be aborted.
     * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
     * @return The tempFileLimit.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getTempFileLimit() {
      return tempFileLimit_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : tempFileLimit_;
    }
    /**
     * <pre>
     * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
     * If a transaction exceeds this limit during execution, it will be aborted.
     * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getTempFileLimitOrBuilder() {
      return getTempFileLimit();
    }

    public static final int LOG_STATEMENT_FIELD_NUMBER = 6;
    private int logStatement_;
    /**
     * <pre>
     * This setting specifies which SQL statements should be logged (on the user level).
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
     * @return The enum numeric value on the wire for logStatement.
     */
    @java.lang.Override public int getLogStatementValue() {
      return logStatement_;
    }
    /**
     * <pre>
     * This setting specifies which SQL statements should be logged (on the user level).
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
     * @return The logStatement.
     */
    @java.lang.Override public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement getLogStatement() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement.valueOf(logStatement_);
      return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement.UNRECOGNIZED : result;
    }

    public static final int POOL_MODE_FIELD_NUMBER = 7;
    private int poolMode_;
    /**
     * <pre>
     * Mode that the connection pooler is working in with specified user.
     * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
     * @return The enum numeric value on the wire for poolMode.
     */
    @java.lang.Override public int getPoolModeValue() {
      return poolMode_;
    }
    /**
     * <pre>
     * Mode that the connection pooler is working in with specified user.
     * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
     * @return The poolMode.
     */
    @java.lang.Override public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode getPoolMode() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode.valueOf(poolMode_);
      return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode.UNRECOGNIZED : result;
    }

    public static final int PREPARED_STATEMENTS_POOLING_FIELD_NUMBER = 8;
    private com.google.protobuf.BoolValue preparedStatementsPooling_;
    /**
     * <pre>
     * User can use prepared statements with transaction pooling.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
     * @return Whether the preparedStatementsPooling field is set.
     */
    @java.lang.Override
    public boolean hasPreparedStatementsPooling() {
      return preparedStatementsPooling_ != null;
    }
    /**
     * <pre>
     * User can use prepared statements with transaction pooling.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
     * @return The preparedStatementsPooling.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getPreparedStatementsPooling() {
      return preparedStatementsPooling_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : preparedStatementsPooling_;
    }
    /**
     * <pre>
     * User can use prepared statements with transaction pooling.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
     * </pre>
     *
     * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getPreparedStatementsPoolingOrBuilder() {
      return getPreparedStatementsPooling();
    }

    public static final int CATCHUP_TIMEOUT_FIELD_NUMBER = 9;
    private com.google.protobuf.Int64Value catchupTimeout_;
    /**
     * <pre>
     * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
     * Pooler will reject connections to the replica with a lag above this threshold.
     * It can be useful to prevent application from reading stale data.
     * Default value: 0
     * Value of `0` disables this mechanism
     * </pre>
     *
     * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
     * @return Whether the catchupTimeout field is set.
     */
    @java.lang.Override
    public boolean hasCatchupTimeout() {
      return catchupTimeout_ != null;
    }
    /**
     * <pre>
     * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
     * Pooler will reject connections to the replica with a lag above this threshold.
     * It can be useful to prevent application from reading stale data.
     * Default value: 0
     * Value of `0` disables this mechanism
     * </pre>
     *
     * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
     * @return The catchupTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getCatchupTimeout() {
      return catchupTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : catchupTimeout_;
    }
    /**
     * <pre>
     * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
     * Pooler will reject connections to the replica with a lag above this threshold.
     * It can be useful to prevent application from reading stale data.
     * Default value: 0
     * Value of `0` disables this mechanism
     * </pre>
     *
     * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getCatchupTimeoutOrBuilder() {
      return getCatchupTimeout();
    }

    public static final int WAL_SENDER_TIMEOUT_FIELD_NUMBER = 10;
    private com.google.protobuf.Int64Value walSenderTimeout_;
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
     * Terminate replication connections that are inactive for longer than this amount of time. 
     * Default value: `60000` (60 seconds).
     * Value of `0` disables the timeout mechanism.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
     * @return Whether the walSenderTimeout field is set.
     */
    @java.lang.Override
    public boolean hasWalSenderTimeout() {
      return walSenderTimeout_ != null;
    }
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
     * Terminate replication connections that are inactive for longer than this amount of time. 
     * Default value: `60000` (60 seconds).
     * Value of `0` disables the timeout mechanism.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
     * @return The walSenderTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getWalSenderTimeout() {
      return walSenderTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : walSenderTimeout_;
    }
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
     * Terminate replication connections that are inactive for longer than this amount of time. 
     * Default value: `60000` (60 seconds).
     * Value of `0` disables the timeout mechanism.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getWalSenderTimeoutOrBuilder() {
      return getWalSenderTimeout();
    }

    public static final int IDLE_IN_TRANSACTION_SESSION_TIMEOUT_FIELD_NUMBER = 11;
    private com.google.protobuf.Int64Value idleInTransactionSessionTimeout_;
    /**
     * <pre>
     * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
     * The default value is `0`, which disables the timeout.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
     * @return Whether the idleInTransactionSessionTimeout field is set.
     */
    @java.lang.Override
    public boolean hasIdleInTransactionSessionTimeout() {
      return idleInTransactionSessionTimeout_ != null;
    }
    /**
     * <pre>
     * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
     * The default value is `0`, which disables the timeout.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
     * @return The idleInTransactionSessionTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getIdleInTransactionSessionTimeout() {
      return idleInTransactionSessionTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : idleInTransactionSessionTimeout_;
    }
    /**
     * <pre>
     * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
     * The default value is `0`, which disables the timeout.
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getIdleInTransactionSessionTimeoutOrBuilder() {
      return getIdleInTransactionSessionTimeout();
    }

    public static final int STATEMENT_TIMEOUT_FIELD_NUMBER = 12;
    private com.google.protobuf.Int64Value statementTimeout_;
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for statement.
     * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
     * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
     * Value of `0` (default) disables the timeout
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
     * @return Whether the statementTimeout field is set.
     */
    @java.lang.Override
    public boolean hasStatementTimeout() {
      return statementTimeout_ != null;
    }
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for statement.
     * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
     * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
     * Value of `0` (default) disables the timeout
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
     * @return The statementTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getStatementTimeout() {
      return statementTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : statementTimeout_;
    }
    /**
     * <pre>
     * The maximum time (in milliseconds) to wait for statement.
     * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
     * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
     * Value of `0` (default) disables the timeout
     * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getStatementTimeoutOrBuilder() {
      return getStatementTimeout();
    }

    public static final int PGAUDIT_FIELD_NUMBER = 13;
    private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings pgaudit_;
    /**
     * <pre>
     * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
     * @return Whether the pgaudit field is set.
     */
    @java.lang.Override
    public boolean hasPgaudit() {
      return pgaudit_ != null;
    }
    /**
     * <pre>
     * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
     * @return The pgaudit.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings getPgaudit() {
      return pgaudit_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.getDefaultInstance() : pgaudit_;
    }
    /**
     * <pre>
     * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder getPgauditOrBuilder() {
      return getPgaudit();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (defaultTransactionIsolation_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation.TRANSACTION_ISOLATION_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, defaultTransactionIsolation_);
      }
      if (lockTimeout_ != null) {
        output.writeMessage(2, getLockTimeout());
      }
      if (logMinDurationStatement_ != null) {
        output.writeMessage(3, getLogMinDurationStatement());
      }
      if (synchronousCommit_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit.SYNCHRONOUS_COMMIT_UNSPECIFIED.getNumber()) {
        output.writeEnum(4, synchronousCommit_);
      }
      if (tempFileLimit_ != null) {
        output.writeMessage(5, getTempFileLimit());
      }
      if (logStatement_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement.LOG_STATEMENT_UNSPECIFIED.getNumber()) {
        output.writeEnum(6, logStatement_);
      }
      if (poolMode_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode.POOLING_MODE_UNSPECIFIED.getNumber()) {
        output.writeEnum(7, poolMode_);
      }
      if (preparedStatementsPooling_ != null) {
        output.writeMessage(8, getPreparedStatementsPooling());
      }
      if (catchupTimeout_ != null) {
        output.writeMessage(9, getCatchupTimeout());
      }
      if (walSenderTimeout_ != null) {
        output.writeMessage(10, getWalSenderTimeout());
      }
      if (idleInTransactionSessionTimeout_ != null) {
        output.writeMessage(11, getIdleInTransactionSessionTimeout());
      }
      if (statementTimeout_ != null) {
        output.writeMessage(12, getStatementTimeout());
      }
      if (pgaudit_ != null) {
        output.writeMessage(13, getPgaudit());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (defaultTransactionIsolation_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation.TRANSACTION_ISOLATION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, defaultTransactionIsolation_);
      }
      if (lockTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLockTimeout());
      }
      if (logMinDurationStatement_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLogMinDurationStatement());
      }
      if (synchronousCommit_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit.SYNCHRONOUS_COMMIT_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, synchronousCommit_);
      }
      if (tempFileLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTempFileLimit());
      }
      if (logStatement_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement.LOG_STATEMENT_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, logStatement_);
      }
      if (poolMode_ != yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode.POOLING_MODE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, poolMode_);
      }
      if (preparedStatementsPooling_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getPreparedStatementsPooling());
      }
      if (catchupTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getCatchupTimeout());
      }
      if (walSenderTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getWalSenderTimeout());
      }
      if (idleInTransactionSessionTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getIdleInTransactionSessionTimeout());
      }
      if (statementTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getStatementTimeout());
      }
      if (pgaudit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getPgaudit());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings other = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings) obj;

      if (defaultTransactionIsolation_ != other.defaultTransactionIsolation_) return false;
      if (hasLockTimeout() != other.hasLockTimeout()) return false;
      if (hasLockTimeout()) {
        if (!getLockTimeout()
            .equals(other.getLockTimeout())) return false;
      }
      if (hasLogMinDurationStatement() != other.hasLogMinDurationStatement()) return false;
      if (hasLogMinDurationStatement()) {
        if (!getLogMinDurationStatement()
            .equals(other.getLogMinDurationStatement())) return false;
      }
      if (synchronousCommit_ != other.synchronousCommit_) return false;
      if (hasTempFileLimit() != other.hasTempFileLimit()) return false;
      if (hasTempFileLimit()) {
        if (!getTempFileLimit()
            .equals(other.getTempFileLimit())) return false;
      }
      if (logStatement_ != other.logStatement_) return false;
      if (poolMode_ != other.poolMode_) return false;
      if (hasPreparedStatementsPooling() != other.hasPreparedStatementsPooling()) return false;
      if (hasPreparedStatementsPooling()) {
        if (!getPreparedStatementsPooling()
            .equals(other.getPreparedStatementsPooling())) return false;
      }
      if (hasCatchupTimeout() != other.hasCatchupTimeout()) return false;
      if (hasCatchupTimeout()) {
        if (!getCatchupTimeout()
            .equals(other.getCatchupTimeout())) return false;
      }
      if (hasWalSenderTimeout() != other.hasWalSenderTimeout()) return false;
      if (hasWalSenderTimeout()) {
        if (!getWalSenderTimeout()
            .equals(other.getWalSenderTimeout())) return false;
      }
      if (hasIdleInTransactionSessionTimeout() != other.hasIdleInTransactionSessionTimeout()) return false;
      if (hasIdleInTransactionSessionTimeout()) {
        if (!getIdleInTransactionSessionTimeout()
            .equals(other.getIdleInTransactionSessionTimeout())) return false;
      }
      if (hasStatementTimeout() != other.hasStatementTimeout()) return false;
      if (hasStatementTimeout()) {
        if (!getStatementTimeout()
            .equals(other.getStatementTimeout())) return false;
      }
      if (hasPgaudit() != other.hasPgaudit()) return false;
      if (hasPgaudit()) {
        if (!getPgaudit()
            .equals(other.getPgaudit())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEFAULT_TRANSACTION_ISOLATION_FIELD_NUMBER;
      hash = (53 * hash) + defaultTransactionIsolation_;
      if (hasLockTimeout()) {
        hash = (37 * hash) + LOCK_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getLockTimeout().hashCode();
      }
      if (hasLogMinDurationStatement()) {
        hash = (37 * hash) + LOG_MIN_DURATION_STATEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getLogMinDurationStatement().hashCode();
      }
      hash = (37 * hash) + SYNCHRONOUS_COMMIT_FIELD_NUMBER;
      hash = (53 * hash) + synchronousCommit_;
      if (hasTempFileLimit()) {
        hash = (37 * hash) + TEMP_FILE_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getTempFileLimit().hashCode();
      }
      hash = (37 * hash) + LOG_STATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + logStatement_;
      hash = (37 * hash) + POOL_MODE_FIELD_NUMBER;
      hash = (53 * hash) + poolMode_;
      if (hasPreparedStatementsPooling()) {
        hash = (37 * hash) + PREPARED_STATEMENTS_POOLING_FIELD_NUMBER;
        hash = (53 * hash) + getPreparedStatementsPooling().hashCode();
      }
      if (hasCatchupTimeout()) {
        hash = (37 * hash) + CATCHUP_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getCatchupTimeout().hashCode();
      }
      if (hasWalSenderTimeout()) {
        hash = (37 * hash) + WAL_SENDER_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getWalSenderTimeout().hashCode();
      }
      if (hasIdleInTransactionSessionTimeout()) {
        hash = (37 * hash) + IDLE_IN_TRANSACTION_SESSION_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getIdleInTransactionSessionTimeout().hashCode();
      }
      if (hasStatementTimeout()) {
        hash = (37 * hash) + STATEMENT_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getStatementTimeout().hashCode();
      }
      if (hasPgaudit()) {
        hash = (37 * hash) + PGAUDIT_FIELD_NUMBER;
        hash = (53 * hash) + getPgaudit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PostgreSQL user settings.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.postgresql.v1.UserSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.postgresql.v1.UserSettings)
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.class, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        defaultTransactionIsolation_ = 0;

        if (lockTimeoutBuilder_ == null) {
          lockTimeout_ = null;
        } else {
          lockTimeout_ = null;
          lockTimeoutBuilder_ = null;
        }
        if (logMinDurationStatementBuilder_ == null) {
          logMinDurationStatement_ = null;
        } else {
          logMinDurationStatement_ = null;
          logMinDurationStatementBuilder_ = null;
        }
        synchronousCommit_ = 0;

        if (tempFileLimitBuilder_ == null) {
          tempFileLimit_ = null;
        } else {
          tempFileLimit_ = null;
          tempFileLimitBuilder_ = null;
        }
        logStatement_ = 0;

        poolMode_ = 0;

        if (preparedStatementsPoolingBuilder_ == null) {
          preparedStatementsPooling_ = null;
        } else {
          preparedStatementsPooling_ = null;
          preparedStatementsPoolingBuilder_ = null;
        }
        if (catchupTimeoutBuilder_ == null) {
          catchupTimeout_ = null;
        } else {
          catchupTimeout_ = null;
          catchupTimeoutBuilder_ = null;
        }
        if (walSenderTimeoutBuilder_ == null) {
          walSenderTimeout_ = null;
        } else {
          walSenderTimeout_ = null;
          walSenderTimeoutBuilder_ = null;
        }
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          idleInTransactionSessionTimeout_ = null;
        } else {
          idleInTransactionSessionTimeout_ = null;
          idleInTransactionSessionTimeoutBuilder_ = null;
        }
        if (statementTimeoutBuilder_ == null) {
          statementTimeout_ = null;
        } else {
          statementTimeout_ = null;
          statementTimeoutBuilder_ = null;
        }
        if (pgauditBuilder_ == null) {
          pgaudit_ = null;
        } else {
          pgaudit_ = null;
          pgauditBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings build() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings buildPartial() {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings result = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings(this);
        result.defaultTransactionIsolation_ = defaultTransactionIsolation_;
        if (lockTimeoutBuilder_ == null) {
          result.lockTimeout_ = lockTimeout_;
        } else {
          result.lockTimeout_ = lockTimeoutBuilder_.build();
        }
        if (logMinDurationStatementBuilder_ == null) {
          result.logMinDurationStatement_ = logMinDurationStatement_;
        } else {
          result.logMinDurationStatement_ = logMinDurationStatementBuilder_.build();
        }
        result.synchronousCommit_ = synchronousCommit_;
        if (tempFileLimitBuilder_ == null) {
          result.tempFileLimit_ = tempFileLimit_;
        } else {
          result.tempFileLimit_ = tempFileLimitBuilder_.build();
        }
        result.logStatement_ = logStatement_;
        result.poolMode_ = poolMode_;
        if (preparedStatementsPoolingBuilder_ == null) {
          result.preparedStatementsPooling_ = preparedStatementsPooling_;
        } else {
          result.preparedStatementsPooling_ = preparedStatementsPoolingBuilder_.build();
        }
        if (catchupTimeoutBuilder_ == null) {
          result.catchupTimeout_ = catchupTimeout_;
        } else {
          result.catchupTimeout_ = catchupTimeoutBuilder_.build();
        }
        if (walSenderTimeoutBuilder_ == null) {
          result.walSenderTimeout_ = walSenderTimeout_;
        } else {
          result.walSenderTimeout_ = walSenderTimeoutBuilder_.build();
        }
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          result.idleInTransactionSessionTimeout_ = idleInTransactionSessionTimeout_;
        } else {
          result.idleInTransactionSessionTimeout_ = idleInTransactionSessionTimeoutBuilder_.build();
        }
        if (statementTimeoutBuilder_ == null) {
          result.statementTimeout_ = statementTimeout_;
        } else {
          result.statementTimeout_ = statementTimeoutBuilder_.build();
        }
        if (pgauditBuilder_ == null) {
          result.pgaudit_ = pgaudit_;
        } else {
          result.pgaudit_ = pgauditBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings) {
          return mergeFrom((yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings other) {
        if (other == yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.getDefaultInstance()) return this;
        if (other.defaultTransactionIsolation_ != 0) {
          setDefaultTransactionIsolationValue(other.getDefaultTransactionIsolationValue());
        }
        if (other.hasLockTimeout()) {
          mergeLockTimeout(other.getLockTimeout());
        }
        if (other.hasLogMinDurationStatement()) {
          mergeLogMinDurationStatement(other.getLogMinDurationStatement());
        }
        if (other.synchronousCommit_ != 0) {
          setSynchronousCommitValue(other.getSynchronousCommitValue());
        }
        if (other.hasTempFileLimit()) {
          mergeTempFileLimit(other.getTempFileLimit());
        }
        if (other.logStatement_ != 0) {
          setLogStatementValue(other.getLogStatementValue());
        }
        if (other.poolMode_ != 0) {
          setPoolModeValue(other.getPoolModeValue());
        }
        if (other.hasPreparedStatementsPooling()) {
          mergePreparedStatementsPooling(other.getPreparedStatementsPooling());
        }
        if (other.hasCatchupTimeout()) {
          mergeCatchupTimeout(other.getCatchupTimeout());
        }
        if (other.hasWalSenderTimeout()) {
          mergeWalSenderTimeout(other.getWalSenderTimeout());
        }
        if (other.hasIdleInTransactionSessionTimeout()) {
          mergeIdleInTransactionSessionTimeout(other.getIdleInTransactionSessionTimeout());
        }
        if (other.hasStatementTimeout()) {
          mergeStatementTimeout(other.getStatementTimeout());
        }
        if (other.hasPgaudit()) {
          mergePgaudit(other.getPgaudit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int defaultTransactionIsolation_ = 0;
      /**
       * <pre>
       * SQL sets an isolation level for each transaction.
       * This setting defines the default isolation level to be set for all new SQL transactions.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
       * @return The enum numeric value on the wire for defaultTransactionIsolation.
       */
      @java.lang.Override public int getDefaultTransactionIsolationValue() {
        return defaultTransactionIsolation_;
      }
      /**
       * <pre>
       * SQL sets an isolation level for each transaction.
       * This setting defines the default isolation level to be set for all new SQL transactions.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
       * @param value The enum numeric value on the wire for defaultTransactionIsolation to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultTransactionIsolationValue(int value) {
        
        defaultTransactionIsolation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SQL sets an isolation level for each transaction.
       * This setting defines the default isolation level to be set for all new SQL transactions.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
       * @return The defaultTransactionIsolation.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation getDefaultTransactionIsolation() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation.valueOf(defaultTransactionIsolation_);
        return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * SQL sets an isolation level for each transaction.
       * This setting defines the default isolation level to be set for all new SQL transactions.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
       * @param value The defaultTransactionIsolation to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultTransactionIsolation(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.TransactionIsolation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        defaultTransactionIsolation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SQL sets an isolation level for each transaction.
       * This setting defines the default isolation level to be set for all new SQL transactions.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/transaction-iso.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.TransactionIsolation default_transaction_isolation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultTransactionIsolation() {
        
        defaultTransactionIsolation_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value lockTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> lockTimeoutBuilder_;
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       * @return Whether the lockTimeout field is set.
       */
      public boolean hasLockTimeout() {
        return lockTimeoutBuilder_ != null || lockTimeout_ != null;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       * @return The lockTimeout.
       */
      public com.google.protobuf.Int64Value getLockTimeout() {
        if (lockTimeoutBuilder_ == null) {
          return lockTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : lockTimeout_;
        } else {
          return lockTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      public Builder setLockTimeout(com.google.protobuf.Int64Value value) {
        if (lockTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lockTimeout_ = value;
          onChanged();
        } else {
          lockTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      public Builder setLockTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (lockTimeoutBuilder_ == null) {
          lockTimeout_ = builderForValue.build();
          onChanged();
        } else {
          lockTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      public Builder mergeLockTimeout(com.google.protobuf.Int64Value value) {
        if (lockTimeoutBuilder_ == null) {
          if (lockTimeout_ != null) {
            lockTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(lockTimeout_).mergeFrom(value).buildPartial();
          } else {
            lockTimeout_ = value;
          }
          onChanged();
        } else {
          lockTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      public Builder clearLockTimeout() {
        if (lockTimeoutBuilder_ == null) {
          lockTimeout_ = null;
          onChanged();
        } else {
          lockTimeout_ = null;
          lockTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      public com.google.protobuf.Int64Value.Builder getLockTimeoutBuilder() {
        
        onChanged();
        return getLockTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getLockTimeoutOrBuilder() {
        if (lockTimeoutBuilder_ != null) {
          return lockTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return lockTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : lockTimeout_;
        }
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) for any statement to wait for acquiring a lock on an table, index, row or other database object.
       * If the wait time is longer than the specified amount, then this statement is aborted.
       * Default value: `0` (no control is enforced, a statement waiting time is unlimited).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value lock_timeout = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getLockTimeoutFieldBuilder() {
        if (lockTimeoutBuilder_ == null) {
          lockTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getLockTimeout(),
                  getParentForChildren(),
                  isClean());
          lockTimeout_ = null;
        }
        return lockTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value logMinDurationStatement_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> logMinDurationStatementBuilder_;
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       * @return Whether the logMinDurationStatement field is set.
       */
      public boolean hasLogMinDurationStatement() {
        return logMinDurationStatementBuilder_ != null || logMinDurationStatement_ != null;
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       * @return The logMinDurationStatement.
       */
      public com.google.protobuf.Int64Value getLogMinDurationStatement() {
        if (logMinDurationStatementBuilder_ == null) {
          return logMinDurationStatement_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : logMinDurationStatement_;
        } else {
          return logMinDurationStatementBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      public Builder setLogMinDurationStatement(com.google.protobuf.Int64Value value) {
        if (logMinDurationStatementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          logMinDurationStatement_ = value;
          onChanged();
        } else {
          logMinDurationStatementBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      public Builder setLogMinDurationStatement(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (logMinDurationStatementBuilder_ == null) {
          logMinDurationStatement_ = builderForValue.build();
          onChanged();
        } else {
          logMinDurationStatementBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      public Builder mergeLogMinDurationStatement(com.google.protobuf.Int64Value value) {
        if (logMinDurationStatementBuilder_ == null) {
          if (logMinDurationStatement_ != null) {
            logMinDurationStatement_ =
              com.google.protobuf.Int64Value.newBuilder(logMinDurationStatement_).mergeFrom(value).buildPartial();
          } else {
            logMinDurationStatement_ = value;
          }
          onChanged();
        } else {
          logMinDurationStatementBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      public Builder clearLogMinDurationStatement() {
        if (logMinDurationStatementBuilder_ == null) {
          logMinDurationStatement_ = null;
          onChanged();
        } else {
          logMinDurationStatement_ = null;
          logMinDurationStatementBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      public com.google.protobuf.Int64Value.Builder getLogMinDurationStatementBuilder() {
        
        onChanged();
        return getLogMinDurationStatementFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getLogMinDurationStatementOrBuilder() {
        if (logMinDurationStatementBuilder_ != null) {
          return logMinDurationStatementBuilder_.getMessageOrBuilder();
        } else {
          return logMinDurationStatement_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : logMinDurationStatement_;
        }
      }
      /**
       * <pre>
       * This setting controls logging of the duration of statements.
       * The duration of each completed statement will be logged if the statement ran for at least the specified amount of time (in milliseconds).
       * E.g., if this setting's value is set to `500`, a statement that took 300 milliseconds to complete will not be logged; on the other hand, the one that took 2000 milliseconds to complete, will be logged.
       * Value of `0` forces PostgreSQL to log the duration of all statements.
       * Value of `-1` (default) disables logging of the duration of statements.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value log_min_duration_statement = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getLogMinDurationStatementFieldBuilder() {
        if (logMinDurationStatementBuilder_ == null) {
          logMinDurationStatementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getLogMinDurationStatement(),
                  getParentForChildren(),
                  isClean());
          logMinDurationStatement_ = null;
        }
        return logMinDurationStatementBuilder_;
      }

      private int synchronousCommit_ = 0;
      /**
       * <pre>
       * This setting defines whether DBMS will commit transaction in a synchronous way.
       * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
       * These operations guarantee different levels of the data safety and visibility in the cluster.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
       * @return The enum numeric value on the wire for synchronousCommit.
       */
      @java.lang.Override public int getSynchronousCommitValue() {
        return synchronousCommit_;
      }
      /**
       * <pre>
       * This setting defines whether DBMS will commit transaction in a synchronous way.
       * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
       * These operations guarantee different levels of the data safety and visibility in the cluster.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
       * @param value The enum numeric value on the wire for synchronousCommit to set.
       * @return This builder for chaining.
       */
      public Builder setSynchronousCommitValue(int value) {
        
        synchronousCommit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This setting defines whether DBMS will commit transaction in a synchronous way.
       * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
       * These operations guarantee different levels of the data safety and visibility in the cluster.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
       * @return The synchronousCommit.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit getSynchronousCommit() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit.valueOf(synchronousCommit_);
        return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * This setting defines whether DBMS will commit transaction in a synchronous way.
       * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
       * These operations guarantee different levels of the data safety and visibility in the cluster.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
       * @param value The synchronousCommit to set.
       * @return This builder for chaining.
       */
      public Builder setSynchronousCommit(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.SynchronousCommit value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        synchronousCommit_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This setting defines whether DBMS will commit transaction in a synchronous way.
       * When synchronization is enabled, cluster waits for the synchronous operations to be completed prior to reporting `success` to the client.
       * These operations guarantee different levels of the data safety and visibility in the cluster.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.SynchronousCommit synchronous_commit = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSynchronousCommit() {
        
        synchronousCommit_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value tempFileLimit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> tempFileLimitBuilder_;
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       * @return Whether the tempFileLimit field is set.
       */
      public boolean hasTempFileLimit() {
        return tempFileLimitBuilder_ != null || tempFileLimit_ != null;
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       * @return The tempFileLimit.
       */
      public com.google.protobuf.Int64Value getTempFileLimit() {
        if (tempFileLimitBuilder_ == null) {
          return tempFileLimit_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : tempFileLimit_;
        } else {
          return tempFileLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      public Builder setTempFileLimit(com.google.protobuf.Int64Value value) {
        if (tempFileLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tempFileLimit_ = value;
          onChanged();
        } else {
          tempFileLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      public Builder setTempFileLimit(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (tempFileLimitBuilder_ == null) {
          tempFileLimit_ = builderForValue.build();
          onChanged();
        } else {
          tempFileLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      public Builder mergeTempFileLimit(com.google.protobuf.Int64Value value) {
        if (tempFileLimitBuilder_ == null) {
          if (tempFileLimit_ != null) {
            tempFileLimit_ =
              com.google.protobuf.Int64Value.newBuilder(tempFileLimit_).mergeFrom(value).buildPartial();
          } else {
            tempFileLimit_ = value;
          }
          onChanged();
        } else {
          tempFileLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      public Builder clearTempFileLimit() {
        if (tempFileLimitBuilder_ == null) {
          tempFileLimit_ = null;
          onChanged();
        } else {
          tempFileLimit_ = null;
          tempFileLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTempFileLimitBuilder() {
        
        onChanged();
        return getTempFileLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTempFileLimitOrBuilder() {
        if (tempFileLimitBuilder_ != null) {
          return tempFileLimitBuilder_.getMessageOrBuilder();
        } else {
          return tempFileLimit_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : tempFileLimit_;
        }
      }
      /**
       * <pre>
       * The maximum storage space size (in kilobytes) that a single process can use to create temporary files.
       * If a transaction exceeds this limit during execution, it will be aborted.
       * A huge query may not fit into a server's RAM, therefore PostgreSQL will use some storage to store and execute such a query. Too big queries can make excessive use of the storage system, effectively making other quieries to run slow. This setting prevents execution of a big queries that can influence other queries by limiting size of temporary files.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value temp_file_limit = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTempFileLimitFieldBuilder() {
        if (tempFileLimitBuilder_ == null) {
          tempFileLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTempFileLimit(),
                  getParentForChildren(),
                  isClean());
          tempFileLimit_ = null;
        }
        return tempFileLimitBuilder_;
      }

      private int logStatement_ = 0;
      /**
       * <pre>
       * This setting specifies which SQL statements should be logged (on the user level).
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
       * @return The enum numeric value on the wire for logStatement.
       */
      @java.lang.Override public int getLogStatementValue() {
        return logStatement_;
      }
      /**
       * <pre>
       * This setting specifies which SQL statements should be logged (on the user level).
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
       * @param value The enum numeric value on the wire for logStatement to set.
       * @return This builder for chaining.
       */
      public Builder setLogStatementValue(int value) {
        
        logStatement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This setting specifies which SQL statements should be logged (on the user level).
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
       * @return The logStatement.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement getLogStatement() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement.valueOf(logStatement_);
        return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * This setting specifies which SQL statements should be logged (on the user level).
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
       * @param value The logStatement to set.
       * @return This builder for chaining.
       */
      public Builder setLogStatement(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.LogStatement value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logStatement_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This setting specifies which SQL statements should be logged (on the user level).
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-logging.html).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.LogStatement log_statement = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogStatement() {
        
        logStatement_ = 0;
        onChanged();
        return this;
      }

      private int poolMode_ = 0;
      /**
       * <pre>
       * Mode that the connection pooler is working in with specified user.
       * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
       * @return The enum numeric value on the wire for poolMode.
       */
      @java.lang.Override public int getPoolModeValue() {
        return poolMode_;
      }
      /**
       * <pre>
       * Mode that the connection pooler is working in with specified user.
       * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
       * @param value The enum numeric value on the wire for poolMode to set.
       * @return This builder for chaining.
       */
      public Builder setPoolModeValue(int value) {
        
        poolMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode that the connection pooler is working in with specified user.
       * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
       * @return The poolMode.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode getPoolMode() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode result = yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode.valueOf(poolMode_);
        return result == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Mode that the connection pooler is working in with specified user.
       * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
       * @param value The poolMode to set.
       * @return This builder for chaining.
       */
      public Builder setPoolMode(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings.PoolingMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        poolMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode that the connection pooler is working in with specified user.
       * For more information, see the [Odyssey documentation](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.UserSettings.PoolingMode pool_mode = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPoolMode() {
        
        poolMode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue preparedStatementsPooling_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> preparedStatementsPoolingBuilder_;
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       * @return Whether the preparedStatementsPooling field is set.
       */
      public boolean hasPreparedStatementsPooling() {
        return preparedStatementsPoolingBuilder_ != null || preparedStatementsPooling_ != null;
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       * @return The preparedStatementsPooling.
       */
      public com.google.protobuf.BoolValue getPreparedStatementsPooling() {
        if (preparedStatementsPoolingBuilder_ == null) {
          return preparedStatementsPooling_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : preparedStatementsPooling_;
        } else {
          return preparedStatementsPoolingBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      public Builder setPreparedStatementsPooling(com.google.protobuf.BoolValue value) {
        if (preparedStatementsPoolingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preparedStatementsPooling_ = value;
          onChanged();
        } else {
          preparedStatementsPoolingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      public Builder setPreparedStatementsPooling(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (preparedStatementsPoolingBuilder_ == null) {
          preparedStatementsPooling_ = builderForValue.build();
          onChanged();
        } else {
          preparedStatementsPoolingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      public Builder mergePreparedStatementsPooling(com.google.protobuf.BoolValue value) {
        if (preparedStatementsPoolingBuilder_ == null) {
          if (preparedStatementsPooling_ != null) {
            preparedStatementsPooling_ =
              com.google.protobuf.BoolValue.newBuilder(preparedStatementsPooling_).mergeFrom(value).buildPartial();
          } else {
            preparedStatementsPooling_ = value;
          }
          onChanged();
        } else {
          preparedStatementsPoolingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      public Builder clearPreparedStatementsPooling() {
        if (preparedStatementsPoolingBuilder_ == null) {
          preparedStatementsPooling_ = null;
          onChanged();
        } else {
          preparedStatementsPooling_ = null;
          preparedStatementsPoolingBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      public com.google.protobuf.BoolValue.Builder getPreparedStatementsPoolingBuilder() {
        
        onChanged();
        return getPreparedStatementsPoolingFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getPreparedStatementsPoolingOrBuilder() {
        if (preparedStatementsPoolingBuilder_ != null) {
          return preparedStatementsPoolingBuilder_.getMessageOrBuilder();
        } else {
          return preparedStatementsPooling_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : preparedStatementsPooling_;
        }
      }
      /**
       * <pre>
       * User can use prepared statements with transaction pooling.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/sql-prepare.html).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue prepared_statements_pooling = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getPreparedStatementsPoolingFieldBuilder() {
        if (preparedStatementsPoolingBuilder_ == null) {
          preparedStatementsPoolingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getPreparedStatementsPooling(),
                  getParentForChildren(),
                  isClean());
          preparedStatementsPooling_ = null;
        }
        return preparedStatementsPoolingBuilder_;
      }

      private com.google.protobuf.Int64Value catchupTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> catchupTimeoutBuilder_;
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       * @return Whether the catchupTimeout field is set.
       */
      public boolean hasCatchupTimeout() {
        return catchupTimeoutBuilder_ != null || catchupTimeout_ != null;
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       * @return The catchupTimeout.
       */
      public com.google.protobuf.Int64Value getCatchupTimeout() {
        if (catchupTimeoutBuilder_ == null) {
          return catchupTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : catchupTimeout_;
        } else {
          return catchupTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      public Builder setCatchupTimeout(com.google.protobuf.Int64Value value) {
        if (catchupTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          catchupTimeout_ = value;
          onChanged();
        } else {
          catchupTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      public Builder setCatchupTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (catchupTimeoutBuilder_ == null) {
          catchupTimeout_ = builderForValue.build();
          onChanged();
        } else {
          catchupTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      public Builder mergeCatchupTimeout(com.google.protobuf.Int64Value value) {
        if (catchupTimeoutBuilder_ == null) {
          if (catchupTimeout_ != null) {
            catchupTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(catchupTimeout_).mergeFrom(value).buildPartial();
          } else {
            catchupTimeout_ = value;
          }
          onChanged();
        } else {
          catchupTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      public Builder clearCatchupTimeout() {
        if (catchupTimeoutBuilder_ == null) {
          catchupTimeout_ = null;
          onChanged();
        } else {
          catchupTimeout_ = null;
          catchupTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      public com.google.protobuf.Int64Value.Builder getCatchupTimeoutBuilder() {
        
        onChanged();
        return getCatchupTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getCatchupTimeoutOrBuilder() {
        if (catchupTimeoutBuilder_ != null) {
          return catchupTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return catchupTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : catchupTimeout_;
        }
      }
      /**
       * <pre>
       * The connection pooler setting. It determines the maximum allowed replication lag (in seconds).
       * Pooler will reject connections to the replica with a lag above this threshold.
       * It can be useful to prevent application from reading stale data.
       * Default value: 0
       * Value of `0` disables this mechanism
       * </pre>
       *
       * <code>.google.protobuf.Int64Value catchup_timeout = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getCatchupTimeoutFieldBuilder() {
        if (catchupTimeoutBuilder_ == null) {
          catchupTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getCatchupTimeout(),
                  getParentForChildren(),
                  isClean());
          catchupTimeout_ = null;
        }
        return catchupTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value walSenderTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> walSenderTimeoutBuilder_;
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       * @return Whether the walSenderTimeout field is set.
       */
      public boolean hasWalSenderTimeout() {
        return walSenderTimeoutBuilder_ != null || walSenderTimeout_ != null;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       * @return The walSenderTimeout.
       */
      public com.google.protobuf.Int64Value getWalSenderTimeout() {
        if (walSenderTimeoutBuilder_ == null) {
          return walSenderTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : walSenderTimeout_;
        } else {
          return walSenderTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      public Builder setWalSenderTimeout(com.google.protobuf.Int64Value value) {
        if (walSenderTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          walSenderTimeout_ = value;
          onChanged();
        } else {
          walSenderTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      public Builder setWalSenderTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (walSenderTimeoutBuilder_ == null) {
          walSenderTimeout_ = builderForValue.build();
          onChanged();
        } else {
          walSenderTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      public Builder mergeWalSenderTimeout(com.google.protobuf.Int64Value value) {
        if (walSenderTimeoutBuilder_ == null) {
          if (walSenderTimeout_ != null) {
            walSenderTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(walSenderTimeout_).mergeFrom(value).buildPartial();
          } else {
            walSenderTimeout_ = value;
          }
          onChanged();
        } else {
          walSenderTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      public Builder clearWalSenderTimeout() {
        if (walSenderTimeoutBuilder_ == null) {
          walSenderTimeout_ = null;
          onChanged();
        } else {
          walSenderTimeout_ = null;
          walSenderTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      public com.google.protobuf.Int64Value.Builder getWalSenderTimeoutBuilder() {
        
        onChanged();
        return getWalSenderTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getWalSenderTimeoutOrBuilder() {
        if (walSenderTimeoutBuilder_ != null) {
          return walSenderTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return walSenderTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : walSenderTimeout_;
        }
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for WAL replication (can be set only for PostgreSQL 12+)
       * Terminate replication connections that are inactive for longer than this amount of time. 
       * Default value: `60000` (60 seconds).
       * Value of `0` disables the timeout mechanism.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-replication.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value wal_sender_timeout = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getWalSenderTimeoutFieldBuilder() {
        if (walSenderTimeoutBuilder_ == null) {
          walSenderTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getWalSenderTimeout(),
                  getParentForChildren(),
                  isClean());
          walSenderTimeout_ = null;
        }
        return walSenderTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value idleInTransactionSessionTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> idleInTransactionSessionTimeoutBuilder_;
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       * @return Whether the idleInTransactionSessionTimeout field is set.
       */
      public boolean hasIdleInTransactionSessionTimeout() {
        return idleInTransactionSessionTimeoutBuilder_ != null || idleInTransactionSessionTimeout_ != null;
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       * @return The idleInTransactionSessionTimeout.
       */
      public com.google.protobuf.Int64Value getIdleInTransactionSessionTimeout() {
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          return idleInTransactionSessionTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : idleInTransactionSessionTimeout_;
        } else {
          return idleInTransactionSessionTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      public Builder setIdleInTransactionSessionTimeout(com.google.protobuf.Int64Value value) {
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          idleInTransactionSessionTimeout_ = value;
          onChanged();
        } else {
          idleInTransactionSessionTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      public Builder setIdleInTransactionSessionTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          idleInTransactionSessionTimeout_ = builderForValue.build();
          onChanged();
        } else {
          idleInTransactionSessionTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      public Builder mergeIdleInTransactionSessionTimeout(com.google.protobuf.Int64Value value) {
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          if (idleInTransactionSessionTimeout_ != null) {
            idleInTransactionSessionTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(idleInTransactionSessionTimeout_).mergeFrom(value).buildPartial();
          } else {
            idleInTransactionSessionTimeout_ = value;
          }
          onChanged();
        } else {
          idleInTransactionSessionTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      public Builder clearIdleInTransactionSessionTimeout() {
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          idleInTransactionSessionTimeout_ = null;
          onChanged();
        } else {
          idleInTransactionSessionTimeout_ = null;
          idleInTransactionSessionTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getIdleInTransactionSessionTimeoutBuilder() {
        
        onChanged();
        return getIdleInTransactionSessionTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getIdleInTransactionSessionTimeoutOrBuilder() {
        if (idleInTransactionSessionTimeoutBuilder_ != null) {
          return idleInTransactionSessionTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return idleInTransactionSessionTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : idleInTransactionSessionTimeout_;
        }
      }
      /**
       * <pre>
       * Sets the maximum allowed idle time, in milliseconds, between queries while in a transaction.
       * The default value is `0`, which disables the timeout.
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value idle_in_transaction_session_timeout = 11 [(.yandex.cloud.value) = "0-2147483647"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getIdleInTransactionSessionTimeoutFieldBuilder() {
        if (idleInTransactionSessionTimeoutBuilder_ == null) {
          idleInTransactionSessionTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getIdleInTransactionSessionTimeout(),
                  getParentForChildren(),
                  isClean());
          idleInTransactionSessionTimeout_ = null;
        }
        return idleInTransactionSessionTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value statementTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> statementTimeoutBuilder_;
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       * @return Whether the statementTimeout field is set.
       */
      public boolean hasStatementTimeout() {
        return statementTimeoutBuilder_ != null || statementTimeout_ != null;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       * @return The statementTimeout.
       */
      public com.google.protobuf.Int64Value getStatementTimeout() {
        if (statementTimeoutBuilder_ == null) {
          return statementTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : statementTimeout_;
        } else {
          return statementTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      public Builder setStatementTimeout(com.google.protobuf.Int64Value value) {
        if (statementTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statementTimeout_ = value;
          onChanged();
        } else {
          statementTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      public Builder setStatementTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (statementTimeoutBuilder_ == null) {
          statementTimeout_ = builderForValue.build();
          onChanged();
        } else {
          statementTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      public Builder mergeStatementTimeout(com.google.protobuf.Int64Value value) {
        if (statementTimeoutBuilder_ == null) {
          if (statementTimeout_ != null) {
            statementTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(statementTimeout_).mergeFrom(value).buildPartial();
          } else {
            statementTimeout_ = value;
          }
          onChanged();
        } else {
          statementTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      public Builder clearStatementTimeout() {
        if (statementTimeoutBuilder_ == null) {
          statementTimeout_ = null;
          onChanged();
        } else {
          statementTimeout_ = null;
          statementTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      public com.google.protobuf.Int64Value.Builder getStatementTimeoutBuilder() {
        
        onChanged();
        return getStatementTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getStatementTimeoutOrBuilder() {
        if (statementTimeoutBuilder_ != null) {
          return statementTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return statementTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : statementTimeout_;
        }
      }
      /**
       * <pre>
       * The maximum time (in milliseconds) to wait for statement.
       * The timeout is measured from the time a command arrives at the server until it is completed by the server. 
       * If `log_min_error_statement` is set to ERROR or lower, the statement that timed out will also be logged.
       * Value of `0` (default) disables the timeout
       * For more information, see the [PostgreSQL documentation](https://www.postgresql.org/docs/current/runtime-config-client.html).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value statement_timeout = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getStatementTimeoutFieldBuilder() {
        if (statementTimeoutBuilder_ == null) {
          statementTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getStatementTimeout(),
                  getParentForChildren(),
                  isClean());
          statementTimeout_ = null;
        }
        return statementTimeoutBuilder_;
      }

      private yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings pgaudit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder> pgauditBuilder_;
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       * @return Whether the pgaudit field is set.
       */
      public boolean hasPgaudit() {
        return pgauditBuilder_ != null || pgaudit_ != null;
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       * @return The pgaudit.
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings getPgaudit() {
        if (pgauditBuilder_ == null) {
          return pgaudit_ == null ? yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.getDefaultInstance() : pgaudit_;
        } else {
          return pgauditBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      public Builder setPgaudit(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings value) {
        if (pgauditBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pgaudit_ = value;
          onChanged();
        } else {
          pgauditBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      public Builder setPgaudit(
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder builderForValue) {
        if (pgauditBuilder_ == null) {
          pgaudit_ = builderForValue.build();
          onChanged();
        } else {
          pgauditBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      public Builder mergePgaudit(yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings value) {
        if (pgauditBuilder_ == null) {
          if (pgaudit_ != null) {
            pgaudit_ =
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.newBuilder(pgaudit_).mergeFrom(value).buildPartial();
          } else {
            pgaudit_ = value;
          }
          onChanged();
        } else {
          pgauditBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      public Builder clearPgaudit() {
        if (pgauditBuilder_ == null) {
          pgaudit_ = null;
          onChanged();
        } else {
          pgaudit_ = null;
          pgauditBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder getPgauditBuilder() {
        
        onChanged();
        return getPgauditFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder getPgauditOrBuilder() {
        if (pgauditBuilder_ != null) {
          return pgauditBuilder_.getMessageOrBuilder();
        } else {
          return pgaudit_ == null ?
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.getDefaultInstance() : pgaudit_;
        }
      }
      /**
       * <pre>
       * Settings of the [PostgreSQL Audit Extension](https://www.pgaudit.org/) (pgaudit).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.postgresql.v1.PGAuditSettings pgaudit = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder> 
          getPgauditFieldBuilder() {
        if (pgauditBuilder_ == null) {
          pgauditBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettings.Builder, yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.PGAuditSettingsOrBuilder>(
                  getPgaudit(),
                  getParentForChildren(),
                  isClean());
          pgaudit_ = null;
        }
        return pgauditBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.postgresql.v1.UserSettings)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.postgresql.v1.UserSettings)
    private static final yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings();
    }

    public static yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserSettings>
        PARSER = new com.google.protobuf.AbstractParser<UserSettings>() {
      @java.lang.Override
      public UserSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.postgresql.v1.UserOuterClass.UserSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_postgresql_v1_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_postgresql_v1_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_postgresql_v1_Permission_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_postgresql_v1_Permission_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)yandex/cloud/mdb/postgresql/v1/user.pr" +
      "oto\022\036yandex.cloud.mdb.postgresql.v1\032\036goo" +
      "gle/protobuf/wrappers.proto\032\035yandex/clou" +
      "d/validation.proto\"\365\003\n\004User\022\014\n\004name\030\001 \001(" +
      "\t\022\022\n\ncluster_id\030\002 \001(\t\022?\n\013permissions\030\003 \003" +
      "(\0132*.yandex.cloud.mdb.postgresql.v1.Perm" +
      "ission\022\022\n\nconn_limit\030\004 \001(\003\022>\n\010settings\030\005" +
      " \001(\0132,.yandex.cloud.mdb.postgresql.v1.Us" +
      "erSettings\022)\n\005login\030\006 \001(\0132\032.google.proto" +
      "buf.BoolValue\022)\n\006grants\030\007 \003(\tB\031\212\3101\004<=63\362" +
      "\3071\r[a-zA-Z0-9_]*\0227\n\023deletion_protection\030" +
      "\010 \001(\0132\032.google.protobuf.BoolValue\022X\n\030use" +
      "r_password_encryption\030\t \001(\01626.yandex.clo" +
      "ud.mdb.postgresql.v1.UserPasswordEncrypt" +
      "ion\022M\n\022connection_manager\030\n \001(\01321.yandex" +
      ".cloud.mdb.postgresql.v1.ConnectionManag" +
      "er\"#\n\nPermission\022\025\n\rdatabase_name\030\001 \001(\t\"" +
      "*\n\021ConnectionManager\022\025\n\rconnection_id\030\001 " +
      "\001(\t\"\265\004\n\010UserSpec\022,\n\004name\030\001 \001(\tB\036\350\3071\001\212\3101\004" +
      "<=63\362\3071\016[a-zA-Z0-9_-]*\022\037\n\010password\030\002 \001(\t" +
      "B\r\350\3071\001\212\3101\0058-128\022?\n\013permissions\030\003 \003(\0132*.y" +
      "andex.cloud.mdb.postgresql.v1.Permission" +
      "\0229\n\nconn_limit\030\004 \001(\0132\033.google.protobuf.I" +
      "nt64ValueB\010\372\3071\004>=10\022>\n\010settings\030\005 \001(\0132,." +
      "yandex.cloud.mdb.postgresql.v1.UserSetti" +
      "ngs\022)\n\005login\030\006 \001(\0132\032.google.protobuf.Boo" +
      "lValue\022)\n\006grants\030\007 \003(\tB\031\212\3101\004<=63\362\3071\r[a-z" +
      "A-Z0-9_]*\0227\n\023deletion_protection\030\010 \001(\0132\032" +
      ".google.protobuf.BoolValue\022X\n\030user_passw" +
      "ord_encryption\030\t \001(\01626.yandex.cloud.mdb." +
      "postgresql.v1.UserPasswordEncryption\0225\n\021" +
      "generate_password\030\n \001(\0132\032.google.protobu" +
      "f.BoolValue\"\210\003\n\017PGAuditSettings\022O\n\003log\030\001" +
      " \003(\0162B.yandex.cloud.mdb.postgresql.v1.PG" +
      "AuditSettings.PGAuditSettingsLog\"\243\002\n\022PGA" +
      "uditSettingsLog\022%\n!PG_AUDIT_SETTINGS_LOG" +
      "_UNSPECIFIED\020\000\022\036\n\032PG_AUDIT_SETTINGS_LOG_" +
      "READ\020\001\022\037\n\033PG_AUDIT_SETTINGS_LOG_WRITE\020\002\022" +
      "\"\n\036PG_AUDIT_SETTINGS_LOG_FUNCTION\020\003\022\036\n\032P" +
      "G_AUDIT_SETTINGS_LOG_ROLE\020\004\022\035\n\031PG_AUDIT_" +
      "SETTINGS_LOG_DDL\020\005\022\036\n\032PG_AUDIT_SETTINGS_" +
      "LOG_MISC\020\006\022\"\n\036PG_AUDIT_SETTINGS_LOG_MISC" +
      "_SET\020\007\"\314\014\n\014UserSettings\022h\n\035default_trans" +
      "action_isolation\030\001 \001(\0162A.yandex.cloud.md" +
      "b.postgresql.v1.UserSettings.Transaction" +
      "Isolation\0221\n\014lock_timeout\030\002 \001(\0132\033.google" +
      ".protobuf.Int64Value\022?\n\032log_min_duration" +
      "_statement\030\003 \001(\0132\033.google.protobuf.Int64" +
      "Value\022Z\n\022synchronous_commit\030\004 \001(\0162>.yand" +
      "ex.cloud.mdb.postgresql.v1.UserSettings." +
      "SynchronousCommit\0224\n\017temp_file_limit\030\005 \001" +
      "(\0132\033.google.protobuf.Int64Value\022P\n\rlog_s" +
      "tatement\030\006 \001(\01629.yandex.cloud.mdb.postgr" +
      "esql.v1.UserSettings.LogStatement\022K\n\tpoo" +
      "l_mode\030\007 \001(\01628.yandex.cloud.mdb.postgres" +
      "ql.v1.UserSettings.PoolingMode\022?\n\033prepar" +
      "ed_statements_pooling\030\010 \001(\0132\032.google.pro" +
      "tobuf.BoolValue\0224\n\017catchup_timeout\030\t \001(\013" +
      "2\033.google.protobuf.Int64Value\0227\n\022wal_sen" +
      "der_timeout\030\n \001(\0132\033.google.protobuf.Int6" +
      "4Value\022Z\n#idle_in_transaction_session_ti" +
      "meout\030\013 \001(\0132\033.google.protobuf.Int64Value" +
      "B\020\372\3071\0140-2147483647\0226\n\021statement_timeout\030" +
      "\014 \001(\0132\033.google.protobuf.Int64Value\022@\n\007pg" +
      "audit\030\r \001(\0132/.yandex.cloud.mdb.postgresq" +
      "l.v1.PGAuditSettings\"\326\001\n\021SynchronousComm" +
      "it\022\"\n\036SYNCHRONOUS_COMMIT_UNSPECIFIED\020\000\022\031" +
      "\n\025SYNCHRONOUS_COMMIT_ON\020\001\022\032\n\026SYNCHRONOUS" +
      "_COMMIT_OFF\020\002\022\034\n\030SYNCHRONOUS_COMMIT_LOCA" +
      "L\020\003\022#\n\037SYNCHRONOUS_COMMIT_REMOTE_WRITE\020\004" +
      "\022#\n\037SYNCHRONOUS_COMMIT_REMOTE_APPLY\020\005\"\212\001" +
      "\n\014LogStatement\022\035\n\031LOG_STATEMENT_UNSPECIF" +
      "IED\020\000\022\026\n\022LOG_STATEMENT_NONE\020\001\022\025\n\021LOG_STA" +
      "TEMENT_DDL\020\002\022\025\n\021LOG_STATEMENT_MOD\020\003\022\025\n\021L" +
      "OG_STATEMENT_ALL\020\004\"\346\001\n\024TransactionIsolat" +
      "ion\022%\n!TRANSACTION_ISOLATION_UNSPECIFIED" +
      "\020\000\022*\n&TRANSACTION_ISOLATION_READ_UNCOMMI" +
      "TTED\020\001\022(\n$TRANSACTION_ISOLATION_READ_COM" +
      "MITTED\020\002\022)\n%TRANSACTION_ISOLATION_REPEAT" +
      "ABLE_READ\020\003\022&\n\"TRANSACTION_ISOLATION_SER" +
      "IALIZABLE\020\004\"X\n\013PoolingMode\022\034\n\030POOLING_MO" +
      "DE_UNSPECIFIED\020\000\022\013\n\007SESSION\020\001\022\017\n\013TRANSAC" +
      "TION\020\002\022\r\n\tSTATEMENT\020\003*\220\001\n\026UserPasswordEn" +
      "cryption\022(\n$USER_PASSWORD_ENCRYPTION_UNS" +
      "PECIFIED\020\000\022 \n\034USER_PASSWORD_ENCRYPTION_M" +
      "D5\020\001\022*\n&USER_PASSWORD_ENCRYPTION_SCRAM_S" +
      "HA_256\020\002Bs\n\"yandex.cloud.api.mdb.postgre" +
      "sql.v1ZMgithub.com/yandex-cloud/go-genpr" +
      "oto/yandex/cloud/mdb/postgresql/v1;postg" +
      "resqlb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.Validation.getDescriptor(),
        });
    internal_static_yandex_cloud_mdb_postgresql_v1_User_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_mdb_postgresql_v1_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_postgresql_v1_User_descriptor,
        new java.lang.String[] { "Name", "ClusterId", "Permissions", "ConnLimit", "Settings", "Login", "Grants", "DeletionProtection", "UserPasswordEncryption", "ConnectionManager", });
    internal_static_yandex_cloud_mdb_postgresql_v1_Permission_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_mdb_postgresql_v1_Permission_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_postgresql_v1_Permission_descriptor,
        new java.lang.String[] { "DatabaseName", });
    internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_postgresql_v1_ConnectionManager_descriptor,
        new java.lang.String[] { "ConnectionId", });
    internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_postgresql_v1_UserSpec_descriptor,
        new java.lang.String[] { "Name", "Password", "Permissions", "ConnLimit", "Settings", "Login", "Grants", "DeletionProtection", "UserPasswordEncryption", "GeneratePassword", });
    internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_postgresql_v1_PGAuditSettings_descriptor,
        new java.lang.String[] { "Log", });
    internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_postgresql_v1_UserSettings_descriptor,
        new java.lang.String[] { "DefaultTransactionIsolation", "LockTimeout", "LogMinDurationStatement", "SynchronousCommit", "TempFileLimit", "LogStatement", "PoolMode", "PreparedStatementsPooling", "CatchupTimeout", "WalSenderTimeout", "IdleInTransactionSessionTimeout", "StatementTimeout", "Pgaudit", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.length);
    registry.add(yandex.cloud.api.Validation.pattern);
    registry.add(yandex.cloud.api.Validation.required);
    registry.add(yandex.cloud.api.Validation.value);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
