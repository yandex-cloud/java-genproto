// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/mdb/clickhouse/v1/config/clickhouse.proto

package yandex.cloud.api.mdb.clickhouse.v1.config;

public final class Clickhouse {
  private Clickhouse() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClickhouseConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
     * @return The enum numeric value on the wire for logLevel.
     */
    int getLogLevelValue();
    /**
     * <pre>
     * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
     * @return The logLevel.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel getLogLevel();

    /**
     * <pre>
     * Settings for the MergeTree engine.
     * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
     * @return Whether the mergeTree field is set.
     */
    boolean hasMergeTree();
    /**
     * <pre>
     * Settings for the MergeTree engine.
     * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
     * @return The mergeTree.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree getMergeTree();
    /**
     * <pre>
     * Settings for the MergeTree engine.
     * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder getMergeTreeOrBuilder();

    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression> 
        getCompressionList();
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression getCompression(int index);
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    int getCompressionCount();
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder> 
        getCompressionOrBuilderList();
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder getCompressionOrBuilder(
        int index);

    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary> 
        getDictionariesList();
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary getDictionaries(int index);
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    int getDictionariesCount();
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder> 
        getDictionariesOrBuilderList();
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder getDictionariesOrBuilder(
        int index);

    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup> 
        getGraphiteRollupList();
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup getGraphiteRollup(int index);
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    int getGraphiteRollupCount();
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder> 
        getGraphiteRollupOrBuilderList();
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder getGraphiteRollupOrBuilder(
        int index);

    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
     * @return Whether the kafka field is set.
     */
    boolean hasKafka();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
     * @return The kafka.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getKafka();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder getKafkaOrBuilder();

    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic> 
        getKafkaTopicsList();
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic getKafkaTopics(int index);
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    int getKafkaTopicsCount();
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder> 
        getKafkaTopicsOrBuilderList();
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder getKafkaTopicsOrBuilder(
        int index);

    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
     * @return Whether the rabbitmq field is set.
     */
    boolean hasRabbitmq();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
     * @return The rabbitmq.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq getRabbitmq();
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder getRabbitmqOrBuilder();

    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return Whether the maxConnections field is set.
     */
    boolean hasMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return The maxConnections.
     */
    com.google.protobuf.Int64Value getMaxConnections();
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder();

    /**
     * <pre>
     * Maximum number of simultaneously processed requests.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return Whether the maxConcurrentQueries field is set.
     */
    boolean hasMaxConcurrentQueries();
    /**
     * <pre>
     * Maximum number of simultaneously processed requests.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return The maxConcurrentQueries.
     */
    com.google.protobuf.Int64Value getMaxConcurrentQueries();
    /**
     * <pre>
     * Maximum number of simultaneously processed requests.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxConcurrentQueriesOrBuilder();

    /**
     * <pre>
     * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
     * @return Whether the keepAliveTimeout field is set.
     */
    boolean hasKeepAliveTimeout();
    /**
     * <pre>
     * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
     * @return The keepAliveTimeout.
     */
    com.google.protobuf.Int64Value getKeepAliveTimeout();
    /**
     * <pre>
     * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getKeepAliveTimeoutOrBuilder();

    /**
     * <pre>
     * Cache size (in bytes) for uncompressed data used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
     * @return Whether the uncompressedCacheSize field is set.
     */
    boolean hasUncompressedCacheSize();
    /**
     * <pre>
     * Cache size (in bytes) for uncompressed data used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
     * @return The uncompressedCacheSize.
     */
    com.google.protobuf.Int64Value getUncompressedCacheSize();
    /**
     * <pre>
     * Cache size (in bytes) for uncompressed data used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getUncompressedCacheSizeOrBuilder();

    /**
     * <pre>
     * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the markCacheSize field is set.
     */
    boolean hasMarkCacheSize();
    /**
     * <pre>
     * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The markCacheSize.
     */
    com.google.protobuf.Int64Value getMarkCacheSize();
    /**
     * <pre>
     * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMarkCacheSizeOrBuilder();

    /**
     * <pre>
     * Maximum size of the table that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
     * @return Whether the maxTableSizeToDrop field is set.
     */
    boolean hasMaxTableSizeToDrop();
    /**
     * <pre>
     * Maximum size of the table that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
     * @return The maxTableSizeToDrop.
     */
    com.google.protobuf.Int64Value getMaxTableSizeToDrop();
    /**
     * <pre>
     * Maximum size of the table that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxTableSizeToDropOrBuilder();

    /**
     * <pre>
     * Maximum size of the partition that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
     * @return Whether the maxPartitionSizeToDrop field is set.
     */
    boolean hasMaxPartitionSizeToDrop();
    /**
     * <pre>
     * Maximum size of the partition that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
     * @return The maxPartitionSizeToDrop.
     */
    com.google.protobuf.Int64Value getMaxPartitionSizeToDrop();
    /**
     * <pre>
     * Maximum size of the partition that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMaxPartitionSizeToDropOrBuilder();

    /**
     * <pre>
     * The setting is deprecated and has no effect.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
     * @deprecated
     * @return Whether the builtinDictionariesReloadInterval field is set.
     */
    @java.lang.Deprecated boolean hasBuiltinDictionariesReloadInterval();
    /**
     * <pre>
     * The setting is deprecated and has no effect.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
     * @deprecated
     * @return The builtinDictionariesReloadInterval.
     */
    @java.lang.Deprecated com.google.protobuf.Int64Value getBuiltinDictionariesReloadInterval();
    /**
     * <pre>
     * The setting is deprecated and has no effect.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
     */
    @java.lang.Deprecated com.google.protobuf.Int64ValueOrBuilder getBuiltinDictionariesReloadIntervalOrBuilder();

    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>string timezone = 14;</code>
     * @return The timezone.
     */
    java.lang.String getTimezone();
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>string timezone = 14;</code>
     * @return The bytes for timezone.
     */
    com.google.protobuf.ByteString
        getTimezoneBytes();

    /**
     * <pre>
     * Enable or disable geobase.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
     * @return Whether the geobaseEnabled field is set.
     */
    boolean hasGeobaseEnabled();
    /**
     * <pre>
     * Enable or disable geobase.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
     * @return The geobaseEnabled.
     */
    com.google.protobuf.BoolValue getGeobaseEnabled();
    /**
     * <pre>
     * Enable or disable geobase.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getGeobaseEnabledOrBuilder();

    /**
     * <pre>
     * Address of the archive with the user geobase in Object Storage.
     * </pre>
     *
     * <code>string geobase_uri = 15;</code>
     * @return The geobaseUri.
     */
    java.lang.String getGeobaseUri();
    /**
     * <pre>
     * Address of the archive with the user geobase in Object Storage.
     * </pre>
     *
     * <code>string geobase_uri = 15;</code>
     * @return The bytes for geobaseUri.
     */
    com.google.protobuf.ByteString
        getGeobaseUriBytes();

    /**
     * <pre>
     * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
     * @return Whether the queryLogRetentionSize field is set.
     */
    boolean hasQueryLogRetentionSize();
    /**
     * <pre>
     * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
     * @return The queryLogRetentionSize.
     */
    com.google.protobuf.Int64Value getQueryLogRetentionSize();
    /**
     * <pre>
     * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueryLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
     * query_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
     * @return Whether the queryLogRetentionTime field is set.
     */
    boolean hasQueryLogRetentionTime();
    /**
     * <pre>
     * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
     * query_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
     * @return The queryLogRetentionTime.
     */
    com.google.protobuf.Int64Value getQueryLogRetentionTime();
    /**
     * <pre>
     * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
     * query_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueryLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Whether query_thread_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
     * @return Whether the queryThreadLogEnabled field is set.
     */
    boolean hasQueryThreadLogEnabled();
    /**
     * <pre>
     * Whether query_thread_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
     * @return The queryThreadLogEnabled.
     */
    com.google.protobuf.BoolValue getQueryThreadLogEnabled();
    /**
     * <pre>
     * Whether query_thread_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getQueryThreadLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_thread_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
     * @return Whether the queryThreadLogRetentionSize field is set.
     */
    boolean hasQueryThreadLogRetentionSize();
    /**
     * <pre>
     * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_thread_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
     * @return The queryThreadLogRetentionSize.
     */
    com.google.protobuf.Int64Value getQueryThreadLogRetentionSize();
    /**
     * <pre>
     * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_thread_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueryThreadLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
     * query_thread_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
     * @return Whether the queryThreadLogRetentionTime field is set.
     */
    boolean hasQueryThreadLogRetentionTime();
    /**
     * <pre>
     * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
     * query_thread_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
     * @return The queryThreadLogRetentionTime.
     */
    com.google.protobuf.Int64Value getQueryThreadLogRetentionTime();
    /**
     * <pre>
     * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
     * query_thread_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueryThreadLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
     * part_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
     * @return Whether the partLogRetentionSize field is set.
     */
    boolean hasPartLogRetentionSize();
    /**
     * <pre>
     * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
     * part_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
     * @return The partLogRetentionSize.
     */
    com.google.protobuf.Int64Value getPartLogRetentionSize();
    /**
     * <pre>
     * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
     * part_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getPartLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
     * part_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
     * @return Whether the partLogRetentionTime field is set.
     */
    boolean hasPartLogRetentionTime();
    /**
     * <pre>
     * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
     * part_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
     * @return The partLogRetentionTime.
     */
    com.google.protobuf.Int64Value getPartLogRetentionTime();
    /**
     * <pre>
     * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
     * part_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getPartLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Whether metric_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
     * @return Whether the metricLogEnabled field is set.
     */
    boolean hasMetricLogEnabled();
    /**
     * <pre>
     * Whether metric_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
     * @return The metricLogEnabled.
     */
    com.google.protobuf.BoolValue getMetricLogEnabled();
    /**
     * <pre>
     * Whether metric_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getMetricLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
     * metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
     * @return Whether the metricLogRetentionSize field is set.
     */
    boolean hasMetricLogRetentionSize();
    /**
     * <pre>
     * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
     * metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
     * @return The metricLogRetentionSize.
     */
    com.google.protobuf.Int64Value getMetricLogRetentionSize();
    /**
     * <pre>
     * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
     * metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMetricLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
     * metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
     * @return Whether the metricLogRetentionTime field is set.
     */
    boolean hasMetricLogRetentionTime();
    /**
     * <pre>
     * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
     * metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
     * @return The metricLogRetentionTime.
     */
    com.google.protobuf.Int64Value getMetricLogRetentionTime();
    /**
     * <pre>
     * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
     * metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getMetricLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Whether trace_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
     * @return Whether the traceLogEnabled field is set.
     */
    boolean hasTraceLogEnabled();
    /**
     * <pre>
     * Whether trace_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
     * @return The traceLogEnabled.
     */
    com.google.protobuf.BoolValue getTraceLogEnabled();
    /**
     * <pre>
     * Whether trace_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getTraceLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
     * trace_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
     * @return Whether the traceLogRetentionSize field is set.
     */
    boolean hasTraceLogRetentionSize();
    /**
     * <pre>
     * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
     * trace_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
     * @return The traceLogRetentionSize.
     */
    com.google.protobuf.Int64Value getTraceLogRetentionSize();
    /**
     * <pre>
     * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
     * trace_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTraceLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
     * trace_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
     * @return Whether the traceLogRetentionTime field is set.
     */
    boolean hasTraceLogRetentionTime();
    /**
     * <pre>
     * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
     * trace_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
     * @return The traceLogRetentionTime.
     */
    com.google.protobuf.Int64Value getTraceLogRetentionTime();
    /**
     * <pre>
     * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
     * trace_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTraceLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Whether text_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
     * @return Whether the textLogEnabled field is set.
     */
    boolean hasTextLogEnabled();
    /**
     * <pre>
     * Whether text_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
     * @return The textLogEnabled.
     */
    com.google.protobuf.BoolValue getTextLogEnabled();
    /**
     * <pre>
     * Whether text_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getTextLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
     * text_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
     * @return Whether the textLogRetentionSize field is set.
     */
    boolean hasTextLogRetentionSize();
    /**
     * <pre>
     * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
     * text_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
     * @return The textLogRetentionSize.
     */
    com.google.protobuf.Int64Value getTextLogRetentionSize();
    /**
     * <pre>
     * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
     * text_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTextLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
     * text_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
     * @return Whether the textLogRetentionTime field is set.
     */
    boolean hasTextLogRetentionTime();
    /**
     * <pre>
     * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
     * text_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
     * @return The textLogRetentionTime.
     */
    com.google.protobuf.Int64Value getTextLogRetentionTime();
    /**
     * <pre>
     * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
     * text_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTextLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
     * @return The enum numeric value on the wire for textLogLevel.
     */
    int getTextLogLevelValue();
    /**
     * <pre>
     * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
     * @return The textLogLevel.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel getTextLogLevel();

    /**
     * <pre>
     * Enable or disable opentelemetry_span_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
     * @return Whether the opentelemetrySpanLogEnabled field is set.
     */
    boolean hasOpentelemetrySpanLogEnabled();
    /**
     * <pre>
     * Enable or disable opentelemetry_span_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
     * @return The opentelemetrySpanLogEnabled.
     */
    com.google.protobuf.BoolValue getOpentelemetrySpanLogEnabled();
    /**
     * <pre>
     * Enable or disable opentelemetry_span_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getOpentelemetrySpanLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of opentelemetry_span_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the opentelemetrySpanLogRetentionSize field is set.
     */
    boolean hasOpentelemetrySpanLogRetentionSize();
    /**
     * <pre>
     * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of opentelemetry_span_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The opentelemetrySpanLogRetentionSize.
     */
    com.google.protobuf.Int64Value getOpentelemetrySpanLogRetentionSize();
    /**
     * <pre>
     * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of opentelemetry_span_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getOpentelemetrySpanLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
     * automatic removal of opentelemetry_span_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the opentelemetrySpanLogRetentionTime field is set.
     */
    boolean hasOpentelemetrySpanLogRetentionTime();
    /**
     * <pre>
     * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
     * automatic removal of opentelemetry_span_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The opentelemetrySpanLogRetentionTime.
     */
    com.google.protobuf.Int64Value getOpentelemetrySpanLogRetentionTime();
    /**
     * <pre>
     * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
     * automatic removal of opentelemetry_span_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getOpentelemetrySpanLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Enable or disable query_views_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
     * @return Whether the queryViewsLogEnabled field is set.
     */
    boolean hasQueryViewsLogEnabled();
    /**
     * <pre>
     * Enable or disable query_views_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
     * @return The queryViewsLogEnabled.
     */
    com.google.protobuf.BoolValue getQueryViewsLogEnabled();
    /**
     * <pre>
     * Enable or disable query_views_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getQueryViewsLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of query_views_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the queryViewsLogRetentionSize field is set.
     */
    boolean hasQueryViewsLogRetentionSize();
    /**
     * <pre>
     * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of query_views_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The queryViewsLogRetentionSize.
     */
    com.google.protobuf.Int64Value getQueryViewsLogRetentionSize();
    /**
     * <pre>
     * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of query_views_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueryViewsLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that query_views_log records will be retained before removal. If set to 0,
     * automatic removal of query_views_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the queryViewsLogRetentionTime field is set.
     */
    boolean hasQueryViewsLogRetentionTime();
    /**
     * <pre>
     * The maximum time that query_views_log records will be retained before removal. If set to 0,
     * automatic removal of query_views_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The queryViewsLogRetentionTime.
     */
    com.google.protobuf.Int64Value getQueryViewsLogRetentionTime();
    /**
     * <pre>
     * The maximum time that query_views_log records will be retained before removal. If set to 0,
     * automatic removal of query_views_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getQueryViewsLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Enable or disable asynchronous_metric_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
     * @return Whether the asynchronousMetricLogEnabled field is set.
     */
    boolean hasAsynchronousMetricLogEnabled();
    /**
     * <pre>
     * Enable or disable asynchronous_metric_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
     * @return The asynchronousMetricLogEnabled.
     */
    com.google.protobuf.BoolValue getAsynchronousMetricLogEnabled();
    /**
     * <pre>
     * Enable or disable asynchronous_metric_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getAsynchronousMetricLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousMetricLogRetentionSize field is set.
     */
    boolean hasAsynchronousMetricLogRetentionSize();
    /**
     * <pre>
     * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousMetricLogRetentionSize.
     */
    com.google.protobuf.Int64Value getAsynchronousMetricLogRetentionSize();
    /**
     * <pre>
     * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getAsynchronousMetricLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousMetricLogRetentionTime field is set.
     */
    boolean hasAsynchronousMetricLogRetentionTime();
    /**
     * <pre>
     * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousMetricLogRetentionTime.
     */
    com.google.protobuf.Int64Value getAsynchronousMetricLogRetentionTime();
    /**
     * <pre>
     * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getAsynchronousMetricLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Enable or disable session_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
     * @return Whether the sessionLogEnabled field is set.
     */
    boolean hasSessionLogEnabled();
    /**
     * <pre>
     * Enable or disable session_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
     * @return The sessionLogEnabled.
     */
    com.google.protobuf.BoolValue getSessionLogEnabled();
    /**
     * <pre>
     * Enable or disable session_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getSessionLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of session_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the sessionLogRetentionSize field is set.
     */
    boolean hasSessionLogRetentionSize();
    /**
     * <pre>
     * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of session_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The sessionLogRetentionSize.
     */
    com.google.protobuf.Int64Value getSessionLogRetentionSize();
    /**
     * <pre>
     * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of session_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getSessionLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that session_log records will be retained before removal. If set to 0,
     * automatic removal of session_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the sessionLogRetentionTime field is set.
     */
    boolean hasSessionLogRetentionTime();
    /**
     * <pre>
     * The maximum time that session_log records will be retained before removal. If set to 0,
     * automatic removal of session_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The sessionLogRetentionTime.
     */
    com.google.protobuf.Int64Value getSessionLogRetentionTime();
    /**
     * <pre>
     * The maximum time that session_log records will be retained before removal. If set to 0,
     * automatic removal of session_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getSessionLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Enable or disable zookeeper_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
     * @return Whether the zookeeperLogEnabled field is set.
     */
    boolean hasZookeeperLogEnabled();
    /**
     * <pre>
     * Enable or disable zookeeper_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
     * @return The zookeeperLogEnabled.
     */
    com.google.protobuf.BoolValue getZookeeperLogEnabled();
    /**
     * <pre>
     * Enable or disable zookeeper_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getZookeeperLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of zookeeper_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the zookeeperLogRetentionSize field is set.
     */
    boolean hasZookeeperLogRetentionSize();
    /**
     * <pre>
     * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of zookeeper_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The zookeeperLogRetentionSize.
     */
    com.google.protobuf.Int64Value getZookeeperLogRetentionSize();
    /**
     * <pre>
     * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of zookeeper_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getZookeeperLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
     * automatic removal of zookeeper_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the zookeeperLogRetentionTime field is set.
     */
    boolean hasZookeeperLogRetentionTime();
    /**
     * <pre>
     * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
     * automatic removal of zookeeper_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The zookeeperLogRetentionTime.
     */
    com.google.protobuf.Int64Value getZookeeperLogRetentionTime();
    /**
     * <pre>
     * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
     * automatic removal of zookeeper_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getZookeeperLogRetentionTimeOrBuilder();

    /**
     * <pre>
     * Enable or disable asynchronous_insert_log system table. Default value: false.
     * Minimal required ClickHouse version: 22.10.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
     * @return Whether the asynchronousInsertLogEnabled field is set.
     */
    boolean hasAsynchronousInsertLogEnabled();
    /**
     * <pre>
     * Enable or disable asynchronous_insert_log system table. Default value: false.
     * Minimal required ClickHouse version: 22.10.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
     * @return The asynchronousInsertLogEnabled.
     */
    com.google.protobuf.BoolValue getAsynchronousInsertLogEnabled();
    /**
     * <pre>
     * Enable or disable asynchronous_insert_log system table. Default value: false.
     * Minimal required ClickHouse version: 22.10.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getAsynchronousInsertLogEnabledOrBuilder();

    /**
     * <pre>
     * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_insert_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousInsertLogRetentionSize field is set.
     */
    boolean hasAsynchronousInsertLogRetentionSize();
    /**
     * <pre>
     * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_insert_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousInsertLogRetentionSize.
     */
    com.google.protobuf.Int64Value getAsynchronousInsertLogRetentionSize();
    /**
     * <pre>
     * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_insert_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getAsynchronousInsertLogRetentionSizeOrBuilder();

    /**
     * <pre>
     * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_insert_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousInsertLogRetentionTime field is set.
     */
    boolean hasAsynchronousInsertLogRetentionTime();
    /**
     * <pre>
     * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_insert_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousInsertLogRetentionTime.
     */
    com.google.protobuf.Int64Value getAsynchronousInsertLogRetentionTime();
    /**
     * <pre>
     * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_insert_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getAsynchronousInsertLogRetentionTimeOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundPoolSize field is set.
     */
    boolean hasBackgroundPoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundPoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundPoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundPoolSizeOrBuilder();

    /**
     * <pre>
     * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
     * Default: 2
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundMergesMutationsConcurrencyRatio field is set.
     */
    boolean hasBackgroundMergesMutationsConcurrencyRatio();
    /**
     * <pre>
     * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
     * Default: 2
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundMergesMutationsConcurrencyRatio.
     */
    com.google.protobuf.Int64Value getBackgroundMergesMutationsConcurrencyRatio();
    /**
     * <pre>
     * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
     * Default: 2
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundMergesMutationsConcurrencyRatioOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundSchedulePoolSize field is set.
     */
    boolean hasBackgroundSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundSchedulePoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundSchedulePoolSizeOrBuilder();

    /**
     * <pre>
     * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundFetchesPoolSize field is set.
     */
    boolean hasBackgroundFetchesPoolSize();
    /**
     * <pre>
     * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundFetchesPoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundFetchesPoolSize();
    /**
     * <pre>
     * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundFetchesPoolSizeOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundMovePoolSize field is set.
     */
    boolean hasBackgroundMovePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundMovePoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundMovePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundMovePoolSizeOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundDistributedSchedulePoolSize field is set.
     */
    boolean hasBackgroundDistributedSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundDistributedSchedulePoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundDistributedSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundDistributedSchedulePoolSizeOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundBufferFlushSchedulePoolSize field is set.
     */
    boolean hasBackgroundBufferFlushSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundBufferFlushSchedulePoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundBufferFlushSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundBufferFlushSchedulePoolSizeOrBuilder();

    /**
     * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundMessageBrokerSchedulePoolSize field is set.
     */
    boolean hasBackgroundMessageBrokerSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundMessageBrokerSchedulePoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundMessageBrokerSchedulePoolSize();
    /**
     * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundMessageBrokerSchedulePoolSizeOrBuilder();

    /**
     * <pre>
     * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
     * Default: 8
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundCommonPoolSize field is set.
     */
    boolean hasBackgroundCommonPoolSize();
    /**
     * <pre>
     * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
     * Default: 8
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundCommonPoolSize.
     */
    com.google.protobuf.Int64Value getBackgroundCommonPoolSize();
    /**
     * <pre>
     * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
     * Default: 8
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getBackgroundCommonPoolSizeOrBuilder();

    /**
     * <pre>
     * The default database.
     * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
     * </pre>
     *
     * <code>.google.protobuf.StringValue default_database = 43;</code>
     * @return Whether the defaultDatabase field is set.
     */
    boolean hasDefaultDatabase();
    /**
     * <pre>
     * The default database.
     * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
     * </pre>
     *
     * <code>.google.protobuf.StringValue default_database = 43;</code>
     * @return The defaultDatabase.
     */
    com.google.protobuf.StringValue getDefaultDatabase();
    /**
     * <pre>
     * The default database.
     * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
     * </pre>
     *
     * <code>.google.protobuf.StringValue default_database = 43;</code>
     */
    com.google.protobuf.StringValueOrBuilder getDefaultDatabaseOrBuilder();

    /**
     * <pre>
     * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
     * @return Whether the totalMemoryProfilerStep field is set.
     */
    boolean hasTotalMemoryProfilerStep();
    /**
     * <pre>
     * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
     * @return The totalMemoryProfilerStep.
     */
    com.google.protobuf.Int64Value getTotalMemoryProfilerStep();
    /**
     * <pre>
     * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
     */
    com.google.protobuf.Int64ValueOrBuilder getTotalMemoryProfilerStepOrBuilder();

    /**
     * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
     * @return Whether the totalMemoryTrackerSampleProbability field is set.
     */
    boolean hasTotalMemoryTrackerSampleProbability();
    /**
     * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
     * @return The totalMemoryTrackerSampleProbability.
     */
    com.google.protobuf.DoubleValue getTotalMemoryTrackerSampleProbability();
    /**
     * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
     */
    com.google.protobuf.DoubleValueOrBuilder getTotalMemoryTrackerSampleProbabilityOrBuilder();
  }
  /**
   * <pre>
   * ClickHouse configuration options. Detailed description for each set of options
   * is available in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/).
   * Any options not listed here are not supported.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
   */
  public static final class ClickhouseConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig)
      ClickhouseConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClickhouseConfig.newBuilder() to construct.
    private ClickhouseConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClickhouseConfig() {
      logLevel_ = 0;
      compression_ = java.util.Collections.emptyList();
      dictionaries_ = java.util.Collections.emptyList();
      graphiteRollup_ = java.util.Collections.emptyList();
      kafkaTopics_ = java.util.Collections.emptyList();
      timezone_ = "";
      geobaseUri_ = "";
      textLogLevel_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClickhouseConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClickhouseConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              logLevel_ = rawValue;
              break;
            }
            case 18: {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder subBuilder = null;
              if (mergeTree_ != null) {
                subBuilder = mergeTree_.toBuilder();
              }
              mergeTree_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mergeTree_);
                mergeTree_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                compression_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression>();
                mutable_bitField0_ |= 0x00000001;
              }
              compression_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                dictionaries_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary>();
                mutable_bitField0_ |= 0x00000002;
              }
              dictionaries_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                graphiteRollup_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup>();
                mutable_bitField0_ |= 0x00000004;
              }
              graphiteRollup_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.parser(), extensionRegistry));
              break;
            }
            case 50: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConnections_ != null) {
                subBuilder = maxConnections_.toBuilder();
              }
              maxConnections_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConnections_);
                maxConnections_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxConcurrentQueries_ != null) {
                subBuilder = maxConcurrentQueries_.toBuilder();
              }
              maxConcurrentQueries_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConcurrentQueries_);
                maxConcurrentQueries_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (keepAliveTimeout_ != null) {
                subBuilder = keepAliveTimeout_.toBuilder();
              }
              keepAliveTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keepAliveTimeout_);
                keepAliveTimeout_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (uncompressedCacheSize_ != null) {
                subBuilder = uncompressedCacheSize_.toBuilder();
              }
              uncompressedCacheSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uncompressedCacheSize_);
                uncompressedCacheSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (markCacheSize_ != null) {
                subBuilder = markCacheSize_.toBuilder();
              }
              markCacheSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(markCacheSize_);
                markCacheSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxTableSizeToDrop_ != null) {
                subBuilder = maxTableSizeToDrop_.toBuilder();
              }
              maxTableSizeToDrop_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxTableSizeToDrop_);
                maxTableSizeToDrop_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (builtinDictionariesReloadInterval_ != null) {
                subBuilder = builtinDictionariesReloadInterval_.toBuilder();
              }
              builtinDictionariesReloadInterval_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(builtinDictionariesReloadInterval_);
                builtinDictionariesReloadInterval_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (maxPartitionSizeToDrop_ != null) {
                subBuilder = maxPartitionSizeToDrop_.toBuilder();
              }
              maxPartitionSizeToDrop_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxPartitionSizeToDrop_);
                maxPartitionSizeToDrop_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();

              timezone_ = s;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              geobaseUri_ = s;
              break;
            }
            case 130: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queryLogRetentionSize_ != null) {
                subBuilder = queryLogRetentionSize_.toBuilder();
              }
              queryLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryLogRetentionSize_);
                queryLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 138: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queryLogRetentionTime_ != null) {
                subBuilder = queryLogRetentionTime_.toBuilder();
              }
              queryLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryLogRetentionTime_);
                queryLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 146: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (queryThreadLogEnabled_ != null) {
                subBuilder = queryThreadLogEnabled_.toBuilder();
              }
              queryThreadLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryThreadLogEnabled_);
                queryThreadLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 154: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queryThreadLogRetentionSize_ != null) {
                subBuilder = queryThreadLogRetentionSize_.toBuilder();
              }
              queryThreadLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryThreadLogRetentionSize_);
                queryThreadLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 162: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queryThreadLogRetentionTime_ != null) {
                subBuilder = queryThreadLogRetentionTime_.toBuilder();
              }
              queryThreadLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryThreadLogRetentionTime_);
                queryThreadLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (partLogRetentionSize_ != null) {
                subBuilder = partLogRetentionSize_.toBuilder();
              }
              partLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(partLogRetentionSize_);
                partLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 178: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (partLogRetentionTime_ != null) {
                subBuilder = partLogRetentionTime_.toBuilder();
              }
              partLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(partLogRetentionTime_);
                partLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 186: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (metricLogEnabled_ != null) {
                subBuilder = metricLogEnabled_.toBuilder();
              }
              metricLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metricLogEnabled_);
                metricLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 194: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (metricLogRetentionSize_ != null) {
                subBuilder = metricLogRetentionSize_.toBuilder();
              }
              metricLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metricLogRetentionSize_);
                metricLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 202: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (metricLogRetentionTime_ != null) {
                subBuilder = metricLogRetentionTime_.toBuilder();
              }
              metricLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metricLogRetentionTime_);
                metricLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 210: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (traceLogEnabled_ != null) {
                subBuilder = traceLogEnabled_.toBuilder();
              }
              traceLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(traceLogEnabled_);
                traceLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 218: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (traceLogRetentionSize_ != null) {
                subBuilder = traceLogRetentionSize_.toBuilder();
              }
              traceLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(traceLogRetentionSize_);
                traceLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 226: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (traceLogRetentionTime_ != null) {
                subBuilder = traceLogRetentionTime_.toBuilder();
              }
              traceLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(traceLogRetentionTime_);
                traceLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 234: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (textLogEnabled_ != null) {
                subBuilder = textLogEnabled_.toBuilder();
              }
              textLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(textLogEnabled_);
                textLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 242: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (textLogRetentionSize_ != null) {
                subBuilder = textLogRetentionSize_.toBuilder();
              }
              textLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(textLogRetentionSize_);
                textLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 250: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (textLogRetentionTime_ != null) {
                subBuilder = textLogRetentionTime_.toBuilder();
              }
              textLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(textLogRetentionTime_);
                textLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 256: {
              int rawValue = input.readEnum();

              textLogLevel_ = rawValue;
              break;
            }
            case 266: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundPoolSize_ != null) {
                subBuilder = backgroundPoolSize_.toBuilder();
              }
              backgroundPoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundPoolSize_);
                backgroundPoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 274: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundSchedulePoolSize_ != null) {
                subBuilder = backgroundSchedulePoolSize_.toBuilder();
              }
              backgroundSchedulePoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundSchedulePoolSize_);
                backgroundSchedulePoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 282: {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder subBuilder = null;
              if (kafka_ != null) {
                subBuilder = kafka_.toBuilder();
              }
              kafka_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(kafka_);
                kafka_ = subBuilder.buildPartial();
              }

              break;
            }
            case 290: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                kafkaTopics_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic>();
                mutable_bitField0_ |= 0x00000008;
              }
              kafkaTopics_.add(
                  input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.parser(), extensionRegistry));
              break;
            }
            case 298: {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder subBuilder = null;
              if (rabbitmq_ != null) {
                subBuilder = rabbitmq_.toBuilder();
              }
              rabbitmq_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rabbitmq_);
                rabbitmq_ = subBuilder.buildPartial();
              }

              break;
            }
            case 306: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundFetchesPoolSize_ != null) {
                subBuilder = backgroundFetchesPoolSize_.toBuilder();
              }
              backgroundFetchesPoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundFetchesPoolSize_);
                backgroundFetchesPoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 314: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundMovePoolSize_ != null) {
                subBuilder = backgroundMovePoolSize_.toBuilder();
              }
              backgroundMovePoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundMovePoolSize_);
                backgroundMovePoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 322: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundDistributedSchedulePoolSize_ != null) {
                subBuilder = backgroundDistributedSchedulePoolSize_.toBuilder();
              }
              backgroundDistributedSchedulePoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundDistributedSchedulePoolSize_);
                backgroundDistributedSchedulePoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 330: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundBufferFlushSchedulePoolSize_ != null) {
                subBuilder = backgroundBufferFlushSchedulePoolSize_.toBuilder();
              }
              backgroundBufferFlushSchedulePoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundBufferFlushSchedulePoolSize_);
                backgroundBufferFlushSchedulePoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 338: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (opentelemetrySpanLogEnabled_ != null) {
                subBuilder = opentelemetrySpanLogEnabled_.toBuilder();
              }
              opentelemetrySpanLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(opentelemetrySpanLogEnabled_);
                opentelemetrySpanLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 346: {
              com.google.protobuf.StringValue.Builder subBuilder = null;
              if (defaultDatabase_ != null) {
                subBuilder = defaultDatabase_.toBuilder();
              }
              defaultDatabase_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultDatabase_);
                defaultDatabase_ = subBuilder.buildPartial();
              }

              break;
            }
            case 354: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (totalMemoryProfilerStep_ != null) {
                subBuilder = totalMemoryProfilerStep_.toBuilder();
              }
              totalMemoryProfilerStep_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(totalMemoryProfilerStep_);
                totalMemoryProfilerStep_ = subBuilder.buildPartial();
              }

              break;
            }
            case 362: {
              com.google.protobuf.DoubleValue.Builder subBuilder = null;
              if (totalMemoryTrackerSampleProbability_ != null) {
                subBuilder = totalMemoryTrackerSampleProbability_.toBuilder();
              }
              totalMemoryTrackerSampleProbability_ = input.readMessage(com.google.protobuf.DoubleValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(totalMemoryTrackerSampleProbability_);
                totalMemoryTrackerSampleProbability_ = subBuilder.buildPartial();
              }

              break;
            }
            case 370: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundMessageBrokerSchedulePoolSize_ != null) {
                subBuilder = backgroundMessageBrokerSchedulePoolSize_.toBuilder();
              }
              backgroundMessageBrokerSchedulePoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundMessageBrokerSchedulePoolSize_);
                backgroundMessageBrokerSchedulePoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 378: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundCommonPoolSize_ != null) {
                subBuilder = backgroundCommonPoolSize_.toBuilder();
              }
              backgroundCommonPoolSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundCommonPoolSize_);
                backgroundCommonPoolSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 386: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (backgroundMergesMutationsConcurrencyRatio_ != null) {
                subBuilder = backgroundMergesMutationsConcurrencyRatio_.toBuilder();
              }
              backgroundMergesMutationsConcurrencyRatio_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundMergesMutationsConcurrencyRatio_);
                backgroundMergesMutationsConcurrencyRatio_ = subBuilder.buildPartial();
              }

              break;
            }
            case 394: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (queryViewsLogEnabled_ != null) {
                subBuilder = queryViewsLogEnabled_.toBuilder();
              }
              queryViewsLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryViewsLogEnabled_);
                queryViewsLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 402: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queryViewsLogRetentionSize_ != null) {
                subBuilder = queryViewsLogRetentionSize_.toBuilder();
              }
              queryViewsLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryViewsLogRetentionSize_);
                queryViewsLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 410: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (queryViewsLogRetentionTime_ != null) {
                subBuilder = queryViewsLogRetentionTime_.toBuilder();
              }
              queryViewsLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(queryViewsLogRetentionTime_);
                queryViewsLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 418: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (asynchronousMetricLogEnabled_ != null) {
                subBuilder = asynchronousMetricLogEnabled_.toBuilder();
              }
              asynchronousMetricLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(asynchronousMetricLogEnabled_);
                asynchronousMetricLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 426: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (asynchronousMetricLogRetentionSize_ != null) {
                subBuilder = asynchronousMetricLogRetentionSize_.toBuilder();
              }
              asynchronousMetricLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(asynchronousMetricLogRetentionSize_);
                asynchronousMetricLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 434: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (asynchronousMetricLogRetentionTime_ != null) {
                subBuilder = asynchronousMetricLogRetentionTime_.toBuilder();
              }
              asynchronousMetricLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(asynchronousMetricLogRetentionTime_);
                asynchronousMetricLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 442: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (opentelemetrySpanLogRetentionSize_ != null) {
                subBuilder = opentelemetrySpanLogRetentionSize_.toBuilder();
              }
              opentelemetrySpanLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(opentelemetrySpanLogRetentionSize_);
                opentelemetrySpanLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 450: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (opentelemetrySpanLogRetentionTime_ != null) {
                subBuilder = opentelemetrySpanLogRetentionTime_.toBuilder();
              }
              opentelemetrySpanLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(opentelemetrySpanLogRetentionTime_);
                opentelemetrySpanLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 458: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (sessionLogEnabled_ != null) {
                subBuilder = sessionLogEnabled_.toBuilder();
              }
              sessionLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sessionLogEnabled_);
                sessionLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 466: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (sessionLogRetentionSize_ != null) {
                subBuilder = sessionLogRetentionSize_.toBuilder();
              }
              sessionLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sessionLogRetentionSize_);
                sessionLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 474: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (sessionLogRetentionTime_ != null) {
                subBuilder = sessionLogRetentionTime_.toBuilder();
              }
              sessionLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sessionLogRetentionTime_);
                sessionLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 482: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (zookeeperLogEnabled_ != null) {
                subBuilder = zookeeperLogEnabled_.toBuilder();
              }
              zookeeperLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(zookeeperLogEnabled_);
                zookeeperLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 490: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (zookeeperLogRetentionSize_ != null) {
                subBuilder = zookeeperLogRetentionSize_.toBuilder();
              }
              zookeeperLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(zookeeperLogRetentionSize_);
                zookeeperLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 498: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (zookeeperLogRetentionTime_ != null) {
                subBuilder = zookeeperLogRetentionTime_.toBuilder();
              }
              zookeeperLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(zookeeperLogRetentionTime_);
                zookeeperLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 506: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (asynchronousInsertLogEnabled_ != null) {
                subBuilder = asynchronousInsertLogEnabled_.toBuilder();
              }
              asynchronousInsertLogEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(asynchronousInsertLogEnabled_);
                asynchronousInsertLogEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            case 514: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (asynchronousInsertLogRetentionSize_ != null) {
                subBuilder = asynchronousInsertLogRetentionSize_.toBuilder();
              }
              asynchronousInsertLogRetentionSize_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(asynchronousInsertLogRetentionSize_);
                asynchronousInsertLogRetentionSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 522: {
              com.google.protobuf.Int64Value.Builder subBuilder = null;
              if (asynchronousInsertLogRetentionTime_ != null) {
                subBuilder = asynchronousInsertLogRetentionTime_.toBuilder();
              }
              asynchronousInsertLogRetentionTime_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(asynchronousInsertLogRetentionTime_);
                asynchronousInsertLogRetentionTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 530: {
              com.google.protobuf.BoolValue.Builder subBuilder = null;
              if (geobaseEnabled_ != null) {
                subBuilder = geobaseEnabled_.toBuilder();
              }
              geobaseEnabled_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(geobaseEnabled_);
                geobaseEnabled_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          compression_ = java.util.Collections.unmodifiableList(compression_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          dictionaries_ = java.util.Collections.unmodifiableList(dictionaries_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          graphiteRollup_ = java.util.Collections.unmodifiableList(graphiteRollup_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          kafkaTopics_ = java.util.Collections.unmodifiableList(kafkaTopics_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel}
     */
    public enum LogLevel
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
       */
      LOG_LEVEL_UNSPECIFIED(0),
      /**
       * <code>TRACE = 1;</code>
       */
      TRACE(1),
      /**
       * <code>DEBUG = 2;</code>
       */
      DEBUG(2),
      /**
       * <code>INFORMATION = 3;</code>
       */
      INFORMATION(3),
      /**
       * <code>WARNING = 4;</code>
       */
      WARNING(4),
      /**
       * <code>ERROR = 5;</code>
       */
      ERROR(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
       */
      public static final int LOG_LEVEL_UNSPECIFIED_VALUE = 0;
      /**
       * <code>TRACE = 1;</code>
       */
      public static final int TRACE_VALUE = 1;
      /**
       * <code>DEBUG = 2;</code>
       */
      public static final int DEBUG_VALUE = 2;
      /**
       * <code>INFORMATION = 3;</code>
       */
      public static final int INFORMATION_VALUE = 3;
      /**
       * <code>WARNING = 4;</code>
       */
      public static final int WARNING_VALUE = 4;
      /**
       * <code>ERROR = 5;</code>
       */
      public static final int ERROR_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LogLevel valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static LogLevel forNumber(int value) {
        switch (value) {
          case 0: return LOG_LEVEL_UNSPECIFIED;
          case 1: return TRACE;
          case 2: return DEBUG;
          case 3: return INFORMATION;
          case 4: return WARNING;
          case 5: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LogLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          LogLevel> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LogLevel>() {
              public LogLevel findValueByNumber(int number) {
                return LogLevel.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final LogLevel[] VALUES = values();

      public static LogLevel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private LogLevel(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel)
    }

    public interface MergeTreeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Number of blocks of hashes to keep in ZooKeeper.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
       * @return Whether the replicatedDeduplicationWindow field is set.
       */
      boolean hasReplicatedDeduplicationWindow();
      /**
       * <pre>
       * Number of blocks of hashes to keep in ZooKeeper.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
       * @return The replicatedDeduplicationWindow.
       */
      com.google.protobuf.Int64Value getReplicatedDeduplicationWindow();
      /**
       * <pre>
       * Number of blocks of hashes to keep in ZooKeeper.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getReplicatedDeduplicationWindowOrBuilder();

      /**
       * <pre>
       * Period of time to keep blocks of hashes for.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
       * @return Whether the replicatedDeduplicationWindowSeconds field is set.
       */
      boolean hasReplicatedDeduplicationWindowSeconds();
      /**
       * <pre>
       * Period of time to keep blocks of hashes for.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
       * @return The replicatedDeduplicationWindowSeconds.
       */
      com.google.protobuf.Int64Value getReplicatedDeduplicationWindowSeconds();
      /**
       * <pre>
       * Period of time to keep blocks of hashes for.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getReplicatedDeduplicationWindowSecondsOrBuilder();

      /**
       * <pre>
       * If table contains at least that many active parts in single partition, artificially slow down insert into table.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
       * @return Whether the partsToDelayInsert field is set.
       */
      boolean hasPartsToDelayInsert();
      /**
       * <pre>
       * If table contains at least that many active parts in single partition, artificially slow down insert into table.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
       * @return The partsToDelayInsert.
       */
      com.google.protobuf.Int64Value getPartsToDelayInsert();
      /**
       * <pre>
       * If table contains at least that many active parts in single partition, artificially slow down insert into table.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getPartsToDelayInsertOrBuilder();

      /**
       * <pre>
       * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
       * @return Whether the partsToThrowInsert field is set.
       */
      boolean hasPartsToThrowInsert();
      /**
       * <pre>
       * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
       * @return The partsToThrowInsert.
       */
      com.google.protobuf.Int64Value getPartsToThrowInsert();
      /**
       * <pre>
       * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getPartsToThrowInsertOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
       * @return Whether the inactivePartsToDelayInsert field is set.
       */
      boolean hasInactivePartsToDelayInsert();
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
       * @return The inactivePartsToDelayInsert.
       */
      com.google.protobuf.Int64Value getInactivePartsToDelayInsert();
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getInactivePartsToDelayInsertOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
       * @return Whether the inactivePartsToThrowInsert field is set.
       */
      boolean hasInactivePartsToThrowInsert();
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
       * @return The inactivePartsToThrowInsert.
       */
      com.google.protobuf.Int64Value getInactivePartsToThrowInsert();
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getInactivePartsToThrowInsertOrBuilder();

      /**
       * <pre>
       * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
       * @return Whether the maxReplicatedMergesInQueue field is set.
       */
      boolean hasMaxReplicatedMergesInQueue();
      /**
       * <pre>
       * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
       * @return The maxReplicatedMergesInQueue.
       */
      com.google.protobuf.Int64Value getMaxReplicatedMergesInQueue();
      /**
       * <pre>
       * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxReplicatedMergesInQueueOrBuilder();

      /**
       * <pre>
       * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
       * maximum size of merge to process.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
       * @return Whether the numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge field is set.
       */
      boolean hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge();
      /**
       * <pre>
       * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
       * maximum size of merge to process.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
       * @return The numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge.
       */
      com.google.protobuf.Int64Value getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge();
      /**
       * <pre>
       * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
       * maximum size of merge to process.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMergeOrBuilder();

      /**
       * <pre>
       * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
       * in replication queue).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
       * @return Whether the maxBytesToMergeAtMinSpaceInPool field is set.
       */
      boolean hasMaxBytesToMergeAtMinSpaceInPool();
      /**
       * <pre>
       * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
       * in replication queue).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
       * @return The maxBytesToMergeAtMinSpaceInPool.
       */
      com.google.protobuf.Int64Value getMaxBytesToMergeAtMinSpaceInPool();
      /**
       * <pre>
       * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
       * in replication queue).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxBytesToMergeAtMinSpaceInPoolOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
       * @return Whether the maxBytesToMergeAtMaxSpaceInPool field is set.
       */
      boolean hasMaxBytesToMergeAtMaxSpaceInPool();
      /**
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
       * @return The maxBytesToMergeAtMaxSpaceInPool.
       */
      com.google.protobuf.Int64Value getMaxBytesToMergeAtMaxSpaceInPool();
      /**
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxBytesToMergeAtMaxSpaceInPoolOrBuilder();

      /**
       * <pre>
       * Minimum number of bytes in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
       * @return Whether the minBytesForWidePart field is set.
       */
      boolean hasMinBytesForWidePart();
      /**
       * <pre>
       * Minimum number of bytes in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
       * @return The minBytesForWidePart.
       */
      com.google.protobuf.Int64Value getMinBytesForWidePart();
      /**
       * <pre>
       * Minimum number of bytes in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMinBytesForWidePartOrBuilder();

      /**
       * <pre>
       * Minimum number of rows in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
       * @return Whether the minRowsForWidePart field is set.
       */
      boolean hasMinRowsForWidePart();
      /**
       * <pre>
       * Minimum number of rows in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
       * @return The minRowsForWidePart.
       */
      com.google.protobuf.Int64Value getMinRowsForWidePart();
      /**
       * <pre>
       * Minimum number of rows in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMinRowsForWidePartOrBuilder();

      /**
       * <pre>
       * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
       * @return Whether the ttlOnlyDropParts field is set.
       */
      boolean hasTtlOnlyDropParts();
      /**
       * <pre>
       * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
       * @return The ttlOnlyDropParts.
       */
      com.google.protobuf.BoolValue getTtlOnlyDropParts();
      /**
       * <pre>
       * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
       */
      com.google.protobuf.BoolValueOrBuilder getTtlOnlyDropPartsOrBuilder();

      /**
       * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
       * @return Whether the allowRemoteFsZeroCopyReplication field is set.
       */
      boolean hasAllowRemoteFsZeroCopyReplication();
      /**
       * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
       * @return The allowRemoteFsZeroCopyReplication.
       */
      com.google.protobuf.BoolValue getAllowRemoteFsZeroCopyReplication();
      /**
       * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
       */
      com.google.protobuf.BoolValueOrBuilder getAllowRemoteFsZeroCopyReplicationOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
       * @return Whether the mergeWithTtlTimeout field is set.
       */
      boolean hasMergeWithTtlTimeout();
      /**
       * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
       * @return The mergeWithTtlTimeout.
       */
      com.google.protobuf.Int64Value getMergeWithTtlTimeout();
      /**
       * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMergeWithTtlTimeoutOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
       * @return Whether the mergeWithRecompressionTtlTimeout field is set.
       */
      boolean hasMergeWithRecompressionTtlTimeout();
      /**
       * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
       * @return The mergeWithRecompressionTtlTimeout.
       */
      com.google.protobuf.Int64Value getMergeWithRecompressionTtlTimeout();
      /**
       * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMergeWithRecompressionTtlTimeoutOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
       * @return Whether the maxPartsInTotal field is set.
       */
      boolean hasMaxPartsInTotal();
      /**
       * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
       * @return The maxPartsInTotal.
       */
      com.google.protobuf.Int64Value getMaxPartsInTotal();
      /**
       * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxPartsInTotalOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
       * @return Whether the maxNumberOfMergesWithTtlInPool field is set.
       */
      boolean hasMaxNumberOfMergesWithTtlInPool();
      /**
       * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
       * @return The maxNumberOfMergesWithTtlInPool.
       */
      com.google.protobuf.Int64Value getMaxNumberOfMergesWithTtlInPool();
      /**
       * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxNumberOfMergesWithTtlInPoolOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
       * @return Whether the cleanupDelayPeriod field is set.
       */
      boolean hasCleanupDelayPeriod();
      /**
       * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
       * @return The cleanupDelayPeriod.
       */
      com.google.protobuf.Int64Value getCleanupDelayPeriod();
      /**
       * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getCleanupDelayPeriodOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
       * @return Whether the numberOfFreeEntriesInPoolToExecuteMutation field is set.
       */
      boolean hasNumberOfFreeEntriesInPoolToExecuteMutation();
      /**
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
       * @return The numberOfFreeEntriesInPoolToExecuteMutation.
       */
      com.google.protobuf.Int64Value getNumberOfFreeEntriesInPoolToExecuteMutation();
      /**
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getNumberOfFreeEntriesInPoolToExecuteMutationOrBuilder();

      /**
       * <pre>
       * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
       * Default: 1 GiB
       * Min version: 22.10
       * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the maxAvgPartSizeForTooManyParts field is set.
       */
      boolean hasMaxAvgPartSizeForTooManyParts();
      /**
       * <pre>
       * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
       * Default: 1 GiB
       * Min version: 22.10
       * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The maxAvgPartSizeForTooManyParts.
       */
      com.google.protobuf.Int64Value getMaxAvgPartSizeForTooManyParts();
      /**
       * <pre>
       * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
       * Default: 1 GiB
       * Min version: 22.10
       * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxAvgPartSizeForTooManyPartsOrBuilder();

      /**
       * <pre>
       * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
       * Default: 0 - disabled
       * Min_version: 22.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the minAgeToForceMergeSeconds field is set.
       */
      boolean hasMinAgeToForceMergeSeconds();
      /**
       * <pre>
       * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
       * Default: 0 - disabled
       * Min_version: 22.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The minAgeToForceMergeSeconds.
       */
      com.google.protobuf.Int64Value getMinAgeToForceMergeSeconds();
      /**
       * <pre>
       * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
       * Default: 0 - disabled
       * Min_version: 22.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMinAgeToForceMergeSecondsOrBuilder();

      /**
       * <pre>
       * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
       * Default: false
       * Min_version: 22.11
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
       * @return Whether the minAgeToForceMergeOnPartitionOnly field is set.
       */
      boolean hasMinAgeToForceMergeOnPartitionOnly();
      /**
       * <pre>
       * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
       * Default: false
       * Min_version: 22.11
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
       * @return The minAgeToForceMergeOnPartitionOnly.
       */
      com.google.protobuf.BoolValue getMinAgeToForceMergeOnPartitionOnly();
      /**
       * <pre>
       * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
       * Default: false
       * Min_version: 22.11
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
       */
      com.google.protobuf.BoolValueOrBuilder getMinAgeToForceMergeOnPartitionOnlyOrBuilder();

      /**
       * <pre>
       * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
       * Default: 5000
       * Min_version: 21.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the mergeSelectingSleepMs field is set.
       */
      boolean hasMergeSelectingSleepMs();
      /**
       * <pre>
       * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
       * Default: 5000
       * Min_version: 21.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The mergeSelectingSleepMs.
       */
      com.google.protobuf.Int64Value getMergeSelectingSleepMs();
      /**
       * <pre>
       * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
       * Default: 5000
       * Min_version: 21.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMergeSelectingSleepMsOrBuilder();
    }
    /**
     * <pre>
     * Options specific to the MergeTree table engine.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree}
     */
    public static final class MergeTree extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree)
        MergeTreeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use MergeTree.newBuilder() to construct.
      private MergeTree(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MergeTree() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new MergeTree();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private MergeTree(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (replicatedDeduplicationWindow_ != null) {
                  subBuilder = replicatedDeduplicationWindow_.toBuilder();
                }
                replicatedDeduplicationWindow_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(replicatedDeduplicationWindow_);
                  replicatedDeduplicationWindow_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (replicatedDeduplicationWindowSeconds_ != null) {
                  subBuilder = replicatedDeduplicationWindowSeconds_.toBuilder();
                }
                replicatedDeduplicationWindowSeconds_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(replicatedDeduplicationWindowSeconds_);
                  replicatedDeduplicationWindowSeconds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (partsToDelayInsert_ != null) {
                  subBuilder = partsToDelayInsert_.toBuilder();
                }
                partsToDelayInsert_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(partsToDelayInsert_);
                  partsToDelayInsert_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (partsToThrowInsert_ != null) {
                  subBuilder = partsToThrowInsert_.toBuilder();
                }
                partsToThrowInsert_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(partsToThrowInsert_);
                  partsToThrowInsert_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxReplicatedMergesInQueue_ != null) {
                  subBuilder = maxReplicatedMergesInQueue_.toBuilder();
                }
                maxReplicatedMergesInQueue_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxReplicatedMergesInQueue_);
                  maxReplicatedMergesInQueue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ != null) {
                  subBuilder = numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_.toBuilder();
                }
                numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_);
                  numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 58: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxBytesToMergeAtMinSpaceInPool_ != null) {
                  subBuilder = maxBytesToMergeAtMinSpaceInPool_.toBuilder();
                }
                maxBytesToMergeAtMinSpaceInPool_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxBytesToMergeAtMinSpaceInPool_);
                  maxBytesToMergeAtMinSpaceInPool_ = subBuilder.buildPartial();
                }

                break;
              }
              case 66: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxBytesToMergeAtMaxSpaceInPool_ != null) {
                  subBuilder = maxBytesToMergeAtMaxSpaceInPool_.toBuilder();
                }
                maxBytesToMergeAtMaxSpaceInPool_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxBytesToMergeAtMaxSpaceInPool_);
                  maxBytesToMergeAtMaxSpaceInPool_ = subBuilder.buildPartial();
                }

                break;
              }
              case 74: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (inactivePartsToDelayInsert_ != null) {
                  subBuilder = inactivePartsToDelayInsert_.toBuilder();
                }
                inactivePartsToDelayInsert_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inactivePartsToDelayInsert_);
                  inactivePartsToDelayInsert_ = subBuilder.buildPartial();
                }

                break;
              }
              case 82: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (inactivePartsToThrowInsert_ != null) {
                  subBuilder = inactivePartsToThrowInsert_.toBuilder();
                }
                inactivePartsToThrowInsert_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inactivePartsToThrowInsert_);
                  inactivePartsToThrowInsert_ = subBuilder.buildPartial();
                }

                break;
              }
              case 90: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (minBytesForWidePart_ != null) {
                  subBuilder = minBytesForWidePart_.toBuilder();
                }
                minBytesForWidePart_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(minBytesForWidePart_);
                  minBytesForWidePart_ = subBuilder.buildPartial();
                }

                break;
              }
              case 98: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (minRowsForWidePart_ != null) {
                  subBuilder = minRowsForWidePart_.toBuilder();
                }
                minRowsForWidePart_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(minRowsForWidePart_);
                  minRowsForWidePart_ = subBuilder.buildPartial();
                }

                break;
              }
              case 106: {
                com.google.protobuf.BoolValue.Builder subBuilder = null;
                if (ttlOnlyDropParts_ != null) {
                  subBuilder = ttlOnlyDropParts_.toBuilder();
                }
                ttlOnlyDropParts_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(ttlOnlyDropParts_);
                  ttlOnlyDropParts_ = subBuilder.buildPartial();
                }

                break;
              }
              case 114: {
                com.google.protobuf.BoolValue.Builder subBuilder = null;
                if (allowRemoteFsZeroCopyReplication_ != null) {
                  subBuilder = allowRemoteFsZeroCopyReplication_.toBuilder();
                }
                allowRemoteFsZeroCopyReplication_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(allowRemoteFsZeroCopyReplication_);
                  allowRemoteFsZeroCopyReplication_ = subBuilder.buildPartial();
                }

                break;
              }
              case 122: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (mergeWithTtlTimeout_ != null) {
                  subBuilder = mergeWithTtlTimeout_.toBuilder();
                }
                mergeWithTtlTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mergeWithTtlTimeout_);
                  mergeWithTtlTimeout_ = subBuilder.buildPartial();
                }

                break;
              }
              case 130: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (mergeWithRecompressionTtlTimeout_ != null) {
                  subBuilder = mergeWithRecompressionTtlTimeout_.toBuilder();
                }
                mergeWithRecompressionTtlTimeout_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mergeWithRecompressionTtlTimeout_);
                  mergeWithRecompressionTtlTimeout_ = subBuilder.buildPartial();
                }

                break;
              }
              case 138: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxPartsInTotal_ != null) {
                  subBuilder = maxPartsInTotal_.toBuilder();
                }
                maxPartsInTotal_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxPartsInTotal_);
                  maxPartsInTotal_ = subBuilder.buildPartial();
                }

                break;
              }
              case 146: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxNumberOfMergesWithTtlInPool_ != null) {
                  subBuilder = maxNumberOfMergesWithTtlInPool_.toBuilder();
                }
                maxNumberOfMergesWithTtlInPool_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxNumberOfMergesWithTtlInPool_);
                  maxNumberOfMergesWithTtlInPool_ = subBuilder.buildPartial();
                }

                break;
              }
              case 154: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (cleanupDelayPeriod_ != null) {
                  subBuilder = cleanupDelayPeriod_.toBuilder();
                }
                cleanupDelayPeriod_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cleanupDelayPeriod_);
                  cleanupDelayPeriod_ = subBuilder.buildPartial();
                }

                break;
              }
              case 162: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (numberOfFreeEntriesInPoolToExecuteMutation_ != null) {
                  subBuilder = numberOfFreeEntriesInPoolToExecuteMutation_.toBuilder();
                }
                numberOfFreeEntriesInPoolToExecuteMutation_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(numberOfFreeEntriesInPoolToExecuteMutation_);
                  numberOfFreeEntriesInPoolToExecuteMutation_ = subBuilder.buildPartial();
                }

                break;
              }
              case 170: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxAvgPartSizeForTooManyParts_ != null) {
                  subBuilder = maxAvgPartSizeForTooManyParts_.toBuilder();
                }
                maxAvgPartSizeForTooManyParts_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxAvgPartSizeForTooManyParts_);
                  maxAvgPartSizeForTooManyParts_ = subBuilder.buildPartial();
                }

                break;
              }
              case 178: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (minAgeToForceMergeSeconds_ != null) {
                  subBuilder = minAgeToForceMergeSeconds_.toBuilder();
                }
                minAgeToForceMergeSeconds_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(minAgeToForceMergeSeconds_);
                  minAgeToForceMergeSeconds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 186: {
                com.google.protobuf.BoolValue.Builder subBuilder = null;
                if (minAgeToForceMergeOnPartitionOnly_ != null) {
                  subBuilder = minAgeToForceMergeOnPartitionOnly_.toBuilder();
                }
                minAgeToForceMergeOnPartitionOnly_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(minAgeToForceMergeOnPartitionOnly_);
                  minAgeToForceMergeOnPartitionOnly_ = subBuilder.buildPartial();
                }

                break;
              }
              case 194: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (mergeSelectingSleepMs_ != null) {
                  subBuilder = mergeSelectingSleepMs_.toBuilder();
                }
                mergeSelectingSleepMs_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mergeSelectingSleepMs_);
                  mergeSelectingSleepMs_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder.class);
      }

      public static final int REPLICATED_DEDUPLICATION_WINDOW_FIELD_NUMBER = 1;
      private com.google.protobuf.Int64Value replicatedDeduplicationWindow_;
      /**
       * <pre>
       * Number of blocks of hashes to keep in ZooKeeper.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
       * @return Whether the replicatedDeduplicationWindow field is set.
       */
      @java.lang.Override
      public boolean hasReplicatedDeduplicationWindow() {
        return replicatedDeduplicationWindow_ != null;
      }
      /**
       * <pre>
       * Number of blocks of hashes to keep in ZooKeeper.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
       * @return The replicatedDeduplicationWindow.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getReplicatedDeduplicationWindow() {
        return replicatedDeduplicationWindow_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : replicatedDeduplicationWindow_;
      }
      /**
       * <pre>
       * Number of blocks of hashes to keep in ZooKeeper.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getReplicatedDeduplicationWindowOrBuilder() {
        return getReplicatedDeduplicationWindow();
      }

      public static final int REPLICATED_DEDUPLICATION_WINDOW_SECONDS_FIELD_NUMBER = 2;
      private com.google.protobuf.Int64Value replicatedDeduplicationWindowSeconds_;
      /**
       * <pre>
       * Period of time to keep blocks of hashes for.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
       * @return Whether the replicatedDeduplicationWindowSeconds field is set.
       */
      @java.lang.Override
      public boolean hasReplicatedDeduplicationWindowSeconds() {
        return replicatedDeduplicationWindowSeconds_ != null;
      }
      /**
       * <pre>
       * Period of time to keep blocks of hashes for.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
       * @return The replicatedDeduplicationWindowSeconds.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getReplicatedDeduplicationWindowSeconds() {
        return replicatedDeduplicationWindowSeconds_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : replicatedDeduplicationWindowSeconds_;
      }
      /**
       * <pre>
       * Period of time to keep blocks of hashes for.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getReplicatedDeduplicationWindowSecondsOrBuilder() {
        return getReplicatedDeduplicationWindowSeconds();
      }

      public static final int PARTS_TO_DELAY_INSERT_FIELD_NUMBER = 3;
      private com.google.protobuf.Int64Value partsToDelayInsert_;
      /**
       * <pre>
       * If table contains at least that many active parts in single partition, artificially slow down insert into table.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
       * @return Whether the partsToDelayInsert field is set.
       */
      @java.lang.Override
      public boolean hasPartsToDelayInsert() {
        return partsToDelayInsert_ != null;
      }
      /**
       * <pre>
       * If table contains at least that many active parts in single partition, artificially slow down insert into table.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
       * @return The partsToDelayInsert.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getPartsToDelayInsert() {
        return partsToDelayInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partsToDelayInsert_;
      }
      /**
       * <pre>
       * If table contains at least that many active parts in single partition, artificially slow down insert into table.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getPartsToDelayInsertOrBuilder() {
        return getPartsToDelayInsert();
      }

      public static final int PARTS_TO_THROW_INSERT_FIELD_NUMBER = 4;
      private com.google.protobuf.Int64Value partsToThrowInsert_;
      /**
       * <pre>
       * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
       * @return Whether the partsToThrowInsert field is set.
       */
      @java.lang.Override
      public boolean hasPartsToThrowInsert() {
        return partsToThrowInsert_ != null;
      }
      /**
       * <pre>
       * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
       * @return The partsToThrowInsert.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getPartsToThrowInsert() {
        return partsToThrowInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partsToThrowInsert_;
      }
      /**
       * <pre>
       * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getPartsToThrowInsertOrBuilder() {
        return getPartsToThrowInsert();
      }

      public static final int INACTIVE_PARTS_TO_DELAY_INSERT_FIELD_NUMBER = 9;
      private com.google.protobuf.Int64Value inactivePartsToDelayInsert_;
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
       * @return Whether the inactivePartsToDelayInsert field is set.
       */
      @java.lang.Override
      public boolean hasInactivePartsToDelayInsert() {
        return inactivePartsToDelayInsert_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
       * @return The inactivePartsToDelayInsert.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getInactivePartsToDelayInsert() {
        return inactivePartsToDelayInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : inactivePartsToDelayInsert_;
      }
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getInactivePartsToDelayInsertOrBuilder() {
        return getInactivePartsToDelayInsert();
      }

      public static final int INACTIVE_PARTS_TO_THROW_INSERT_FIELD_NUMBER = 10;
      private com.google.protobuf.Int64Value inactivePartsToThrowInsert_;
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
       * @return Whether the inactivePartsToThrowInsert field is set.
       */
      @java.lang.Override
      public boolean hasInactivePartsToThrowInsert() {
        return inactivePartsToThrowInsert_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
       * @return The inactivePartsToThrowInsert.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getInactivePartsToThrowInsert() {
        return inactivePartsToThrowInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : inactivePartsToThrowInsert_;
      }
      /**
       * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getInactivePartsToThrowInsertOrBuilder() {
        return getInactivePartsToThrowInsert();
      }

      public static final int MAX_REPLICATED_MERGES_IN_QUEUE_FIELD_NUMBER = 5;
      private com.google.protobuf.Int64Value maxReplicatedMergesInQueue_;
      /**
       * <pre>
       * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
       * @return Whether the maxReplicatedMergesInQueue field is set.
       */
      @java.lang.Override
      public boolean hasMaxReplicatedMergesInQueue() {
        return maxReplicatedMergesInQueue_ != null;
      }
      /**
       * <pre>
       * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
       * @return The maxReplicatedMergesInQueue.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxReplicatedMergesInQueue() {
        return maxReplicatedMergesInQueue_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxReplicatedMergesInQueue_;
      }
      /**
       * <pre>
       * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxReplicatedMergesInQueueOrBuilder() {
        return getMaxReplicatedMergesInQueue();
      }

      public static final int NUMBER_OF_FREE_ENTRIES_IN_POOL_TO_LOWER_MAX_SIZE_OF_MERGE_FIELD_NUMBER = 6;
      private com.google.protobuf.Int64Value numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_;
      /**
       * <pre>
       * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
       * maximum size of merge to process.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
       * @return Whether the numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge field is set.
       */
      @java.lang.Override
      public boolean hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() {
        return numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ != null;
      }
      /**
       * <pre>
       * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
       * maximum size of merge to process.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
       * @return The numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() {
        return numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_;
      }
      /**
       * <pre>
       * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
       * maximum size of merge to process.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMergeOrBuilder() {
        return getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge();
      }

      public static final int MAX_BYTES_TO_MERGE_AT_MIN_SPACE_IN_POOL_FIELD_NUMBER = 7;
      private com.google.protobuf.Int64Value maxBytesToMergeAtMinSpaceInPool_;
      /**
       * <pre>
       * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
       * in replication queue).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
       * @return Whether the maxBytesToMergeAtMinSpaceInPool field is set.
       */
      @java.lang.Override
      public boolean hasMaxBytesToMergeAtMinSpaceInPool() {
        return maxBytesToMergeAtMinSpaceInPool_ != null;
      }
      /**
       * <pre>
       * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
       * in replication queue).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
       * @return The maxBytesToMergeAtMinSpaceInPool.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxBytesToMergeAtMinSpaceInPool() {
        return maxBytesToMergeAtMinSpaceInPool_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToMergeAtMinSpaceInPool_;
      }
      /**
       * <pre>
       * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
       * in replication queue).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToMergeAtMinSpaceInPoolOrBuilder() {
        return getMaxBytesToMergeAtMinSpaceInPool();
      }

      public static final int MAX_BYTES_TO_MERGE_AT_MAX_SPACE_IN_POOL_FIELD_NUMBER = 8;
      private com.google.protobuf.Int64Value maxBytesToMergeAtMaxSpaceInPool_;
      /**
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
       * @return Whether the maxBytesToMergeAtMaxSpaceInPool field is set.
       */
      @java.lang.Override
      public boolean hasMaxBytesToMergeAtMaxSpaceInPool() {
        return maxBytesToMergeAtMaxSpaceInPool_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
       * @return The maxBytesToMergeAtMaxSpaceInPool.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxBytesToMergeAtMaxSpaceInPool() {
        return maxBytesToMergeAtMaxSpaceInPool_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToMergeAtMaxSpaceInPool_;
      }
      /**
       * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToMergeAtMaxSpaceInPoolOrBuilder() {
        return getMaxBytesToMergeAtMaxSpaceInPool();
      }

      public static final int MIN_BYTES_FOR_WIDE_PART_FIELD_NUMBER = 11;
      private com.google.protobuf.Int64Value minBytesForWidePart_;
      /**
       * <pre>
       * Minimum number of bytes in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
       * @return Whether the minBytesForWidePart field is set.
       */
      @java.lang.Override
      public boolean hasMinBytesForWidePart() {
        return minBytesForWidePart_ != null;
      }
      /**
       * <pre>
       * Minimum number of bytes in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
       * @return The minBytesForWidePart.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMinBytesForWidePart() {
        return minBytesForWidePart_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minBytesForWidePart_;
      }
      /**
       * <pre>
       * Minimum number of bytes in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMinBytesForWidePartOrBuilder() {
        return getMinBytesForWidePart();
      }

      public static final int MIN_ROWS_FOR_WIDE_PART_FIELD_NUMBER = 12;
      private com.google.protobuf.Int64Value minRowsForWidePart_;
      /**
       * <pre>
       * Minimum number of rows in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
       * @return Whether the minRowsForWidePart field is set.
       */
      @java.lang.Override
      public boolean hasMinRowsForWidePart() {
        return minRowsForWidePart_ != null;
      }
      /**
       * <pre>
       * Minimum number of rows in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
       * @return The minRowsForWidePart.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMinRowsForWidePart() {
        return minRowsForWidePart_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minRowsForWidePart_;
      }
      /**
       * <pre>
       * Minimum number of rows in a data part that can be stored in **Wide** format.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMinRowsForWidePartOrBuilder() {
        return getMinRowsForWidePart();
      }

      public static final int TTL_ONLY_DROP_PARTS_FIELD_NUMBER = 13;
      private com.google.protobuf.BoolValue ttlOnlyDropParts_;
      /**
       * <pre>
       * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
       * @return Whether the ttlOnlyDropParts field is set.
       */
      @java.lang.Override
      public boolean hasTtlOnlyDropParts() {
        return ttlOnlyDropParts_ != null;
      }
      /**
       * <pre>
       * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
       * @return The ttlOnlyDropParts.
       */
      @java.lang.Override
      public com.google.protobuf.BoolValue getTtlOnlyDropParts() {
        return ttlOnlyDropParts_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : ttlOnlyDropParts_;
      }
      /**
       * <pre>
       * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
       * </pre>
       *
       * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
       */
      @java.lang.Override
      public com.google.protobuf.BoolValueOrBuilder getTtlOnlyDropPartsOrBuilder() {
        return getTtlOnlyDropParts();
      }

      public static final int ALLOW_REMOTE_FS_ZERO_COPY_REPLICATION_FIELD_NUMBER = 14;
      private com.google.protobuf.BoolValue allowRemoteFsZeroCopyReplication_;
      /**
       * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
       * @return Whether the allowRemoteFsZeroCopyReplication field is set.
       */
      @java.lang.Override
      public boolean hasAllowRemoteFsZeroCopyReplication() {
        return allowRemoteFsZeroCopyReplication_ != null;
      }
      /**
       * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
       * @return The allowRemoteFsZeroCopyReplication.
       */
      @java.lang.Override
      public com.google.protobuf.BoolValue getAllowRemoteFsZeroCopyReplication() {
        return allowRemoteFsZeroCopyReplication_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : allowRemoteFsZeroCopyReplication_;
      }
      /**
       * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
       */
      @java.lang.Override
      public com.google.protobuf.BoolValueOrBuilder getAllowRemoteFsZeroCopyReplicationOrBuilder() {
        return getAllowRemoteFsZeroCopyReplication();
      }

      public static final int MERGE_WITH_TTL_TIMEOUT_FIELD_NUMBER = 15;
      private com.google.protobuf.Int64Value mergeWithTtlTimeout_;
      /**
       * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
       * @return Whether the mergeWithTtlTimeout field is set.
       */
      @java.lang.Override
      public boolean hasMergeWithTtlTimeout() {
        return mergeWithTtlTimeout_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
       * @return The mergeWithTtlTimeout.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMergeWithTtlTimeout() {
        return mergeWithTtlTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeWithTtlTimeout_;
      }
      /**
       * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMergeWithTtlTimeoutOrBuilder() {
        return getMergeWithTtlTimeout();
      }

      public static final int MERGE_WITH_RECOMPRESSION_TTL_TIMEOUT_FIELD_NUMBER = 16;
      private com.google.protobuf.Int64Value mergeWithRecompressionTtlTimeout_;
      /**
       * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
       * @return Whether the mergeWithRecompressionTtlTimeout field is set.
       */
      @java.lang.Override
      public boolean hasMergeWithRecompressionTtlTimeout() {
        return mergeWithRecompressionTtlTimeout_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
       * @return The mergeWithRecompressionTtlTimeout.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMergeWithRecompressionTtlTimeout() {
        return mergeWithRecompressionTtlTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeWithRecompressionTtlTimeout_;
      }
      /**
       * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMergeWithRecompressionTtlTimeoutOrBuilder() {
        return getMergeWithRecompressionTtlTimeout();
      }

      public static final int MAX_PARTS_IN_TOTAL_FIELD_NUMBER = 17;
      private com.google.protobuf.Int64Value maxPartsInTotal_;
      /**
       * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
       * @return Whether the maxPartsInTotal field is set.
       */
      @java.lang.Override
      public boolean hasMaxPartsInTotal() {
        return maxPartsInTotal_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
       * @return The maxPartsInTotal.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxPartsInTotal() {
        return maxPartsInTotal_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPartsInTotal_;
      }
      /**
       * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxPartsInTotalOrBuilder() {
        return getMaxPartsInTotal();
      }

      public static final int MAX_NUMBER_OF_MERGES_WITH_TTL_IN_POOL_FIELD_NUMBER = 18;
      private com.google.protobuf.Int64Value maxNumberOfMergesWithTtlInPool_;
      /**
       * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
       * @return Whether the maxNumberOfMergesWithTtlInPool field is set.
       */
      @java.lang.Override
      public boolean hasMaxNumberOfMergesWithTtlInPool() {
        return maxNumberOfMergesWithTtlInPool_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
       * @return The maxNumberOfMergesWithTtlInPool.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxNumberOfMergesWithTtlInPool() {
        return maxNumberOfMergesWithTtlInPool_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxNumberOfMergesWithTtlInPool_;
      }
      /**
       * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxNumberOfMergesWithTtlInPoolOrBuilder() {
        return getMaxNumberOfMergesWithTtlInPool();
      }

      public static final int CLEANUP_DELAY_PERIOD_FIELD_NUMBER = 19;
      private com.google.protobuf.Int64Value cleanupDelayPeriod_;
      /**
       * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
       * @return Whether the cleanupDelayPeriod field is set.
       */
      @java.lang.Override
      public boolean hasCleanupDelayPeriod() {
        return cleanupDelayPeriod_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
       * @return The cleanupDelayPeriod.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getCleanupDelayPeriod() {
        return cleanupDelayPeriod_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : cleanupDelayPeriod_;
      }
      /**
       * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getCleanupDelayPeriodOrBuilder() {
        return getCleanupDelayPeriod();
      }

      public static final int NUMBER_OF_FREE_ENTRIES_IN_POOL_TO_EXECUTE_MUTATION_FIELD_NUMBER = 20;
      private com.google.protobuf.Int64Value numberOfFreeEntriesInPoolToExecuteMutation_;
      /**
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
       * @return Whether the numberOfFreeEntriesInPoolToExecuteMutation field is set.
       */
      @java.lang.Override
      public boolean hasNumberOfFreeEntriesInPoolToExecuteMutation() {
        return numberOfFreeEntriesInPoolToExecuteMutation_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
       * @return The numberOfFreeEntriesInPoolToExecuteMutation.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getNumberOfFreeEntriesInPoolToExecuteMutation() {
        return numberOfFreeEntriesInPoolToExecuteMutation_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : numberOfFreeEntriesInPoolToExecuteMutation_;
      }
      /**
       * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getNumberOfFreeEntriesInPoolToExecuteMutationOrBuilder() {
        return getNumberOfFreeEntriesInPoolToExecuteMutation();
      }

      public static final int MAX_AVG_PART_SIZE_FOR_TOO_MANY_PARTS_FIELD_NUMBER = 21;
      private com.google.protobuf.Int64Value maxAvgPartSizeForTooManyParts_;
      /**
       * <pre>
       * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
       * Default: 1 GiB
       * Min version: 22.10
       * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the maxAvgPartSizeForTooManyParts field is set.
       */
      @java.lang.Override
      public boolean hasMaxAvgPartSizeForTooManyParts() {
        return maxAvgPartSizeForTooManyParts_ != null;
      }
      /**
       * <pre>
       * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
       * Default: 1 GiB
       * Min version: 22.10
       * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The maxAvgPartSizeForTooManyParts.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxAvgPartSizeForTooManyParts() {
        return maxAvgPartSizeForTooManyParts_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxAvgPartSizeForTooManyParts_;
      }
      /**
       * <pre>
       * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
       * Default: 1 GiB
       * Min version: 22.10
       * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxAvgPartSizeForTooManyPartsOrBuilder() {
        return getMaxAvgPartSizeForTooManyParts();
      }

      public static final int MIN_AGE_TO_FORCE_MERGE_SECONDS_FIELD_NUMBER = 22;
      private com.google.protobuf.Int64Value minAgeToForceMergeSeconds_;
      /**
       * <pre>
       * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
       * Default: 0 - disabled
       * Min_version: 22.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the minAgeToForceMergeSeconds field is set.
       */
      @java.lang.Override
      public boolean hasMinAgeToForceMergeSeconds() {
        return minAgeToForceMergeSeconds_ != null;
      }
      /**
       * <pre>
       * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
       * Default: 0 - disabled
       * Min_version: 22.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The minAgeToForceMergeSeconds.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMinAgeToForceMergeSeconds() {
        return minAgeToForceMergeSeconds_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minAgeToForceMergeSeconds_;
      }
      /**
       * <pre>
       * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
       * Default: 0 - disabled
       * Min_version: 22.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMinAgeToForceMergeSecondsOrBuilder() {
        return getMinAgeToForceMergeSeconds();
      }

      public static final int MIN_AGE_TO_FORCE_MERGE_ON_PARTITION_ONLY_FIELD_NUMBER = 23;
      private com.google.protobuf.BoolValue minAgeToForceMergeOnPartitionOnly_;
      /**
       * <pre>
       * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
       * Default: false
       * Min_version: 22.11
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
       * @return Whether the minAgeToForceMergeOnPartitionOnly field is set.
       */
      @java.lang.Override
      public boolean hasMinAgeToForceMergeOnPartitionOnly() {
        return minAgeToForceMergeOnPartitionOnly_ != null;
      }
      /**
       * <pre>
       * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
       * Default: false
       * Min_version: 22.11
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
       * @return The minAgeToForceMergeOnPartitionOnly.
       */
      @java.lang.Override
      public com.google.protobuf.BoolValue getMinAgeToForceMergeOnPartitionOnly() {
        return minAgeToForceMergeOnPartitionOnly_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : minAgeToForceMergeOnPartitionOnly_;
      }
      /**
       * <pre>
       * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
       * Default: false
       * Min_version: 22.11
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
       * </pre>
       *
       * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
       */
      @java.lang.Override
      public com.google.protobuf.BoolValueOrBuilder getMinAgeToForceMergeOnPartitionOnlyOrBuilder() {
        return getMinAgeToForceMergeOnPartitionOnly();
      }

      public static final int MERGE_SELECTING_SLEEP_MS_FIELD_NUMBER = 24;
      private com.google.protobuf.Int64Value mergeSelectingSleepMs_;
      /**
       * <pre>
       * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
       * Default: 5000
       * Min_version: 21.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the mergeSelectingSleepMs field is set.
       */
      @java.lang.Override
      public boolean hasMergeSelectingSleepMs() {
        return mergeSelectingSleepMs_ != null;
      }
      /**
       * <pre>
       * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
       * Default: 5000
       * Min_version: 21.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The mergeSelectingSleepMs.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMergeSelectingSleepMs() {
        return mergeSelectingSleepMs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeSelectingSleepMs_;
      }
      /**
       * <pre>
       * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
       * Default: 5000
       * Min_version: 21.10
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMergeSelectingSleepMsOrBuilder() {
        return getMergeSelectingSleepMs();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (replicatedDeduplicationWindow_ != null) {
          output.writeMessage(1, getReplicatedDeduplicationWindow());
        }
        if (replicatedDeduplicationWindowSeconds_ != null) {
          output.writeMessage(2, getReplicatedDeduplicationWindowSeconds());
        }
        if (partsToDelayInsert_ != null) {
          output.writeMessage(3, getPartsToDelayInsert());
        }
        if (partsToThrowInsert_ != null) {
          output.writeMessage(4, getPartsToThrowInsert());
        }
        if (maxReplicatedMergesInQueue_ != null) {
          output.writeMessage(5, getMaxReplicatedMergesInQueue());
        }
        if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ != null) {
          output.writeMessage(6, getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge());
        }
        if (maxBytesToMergeAtMinSpaceInPool_ != null) {
          output.writeMessage(7, getMaxBytesToMergeAtMinSpaceInPool());
        }
        if (maxBytesToMergeAtMaxSpaceInPool_ != null) {
          output.writeMessage(8, getMaxBytesToMergeAtMaxSpaceInPool());
        }
        if (inactivePartsToDelayInsert_ != null) {
          output.writeMessage(9, getInactivePartsToDelayInsert());
        }
        if (inactivePartsToThrowInsert_ != null) {
          output.writeMessage(10, getInactivePartsToThrowInsert());
        }
        if (minBytesForWidePart_ != null) {
          output.writeMessage(11, getMinBytesForWidePart());
        }
        if (minRowsForWidePart_ != null) {
          output.writeMessage(12, getMinRowsForWidePart());
        }
        if (ttlOnlyDropParts_ != null) {
          output.writeMessage(13, getTtlOnlyDropParts());
        }
        if (allowRemoteFsZeroCopyReplication_ != null) {
          output.writeMessage(14, getAllowRemoteFsZeroCopyReplication());
        }
        if (mergeWithTtlTimeout_ != null) {
          output.writeMessage(15, getMergeWithTtlTimeout());
        }
        if (mergeWithRecompressionTtlTimeout_ != null) {
          output.writeMessage(16, getMergeWithRecompressionTtlTimeout());
        }
        if (maxPartsInTotal_ != null) {
          output.writeMessage(17, getMaxPartsInTotal());
        }
        if (maxNumberOfMergesWithTtlInPool_ != null) {
          output.writeMessage(18, getMaxNumberOfMergesWithTtlInPool());
        }
        if (cleanupDelayPeriod_ != null) {
          output.writeMessage(19, getCleanupDelayPeriod());
        }
        if (numberOfFreeEntriesInPoolToExecuteMutation_ != null) {
          output.writeMessage(20, getNumberOfFreeEntriesInPoolToExecuteMutation());
        }
        if (maxAvgPartSizeForTooManyParts_ != null) {
          output.writeMessage(21, getMaxAvgPartSizeForTooManyParts());
        }
        if (minAgeToForceMergeSeconds_ != null) {
          output.writeMessage(22, getMinAgeToForceMergeSeconds());
        }
        if (minAgeToForceMergeOnPartitionOnly_ != null) {
          output.writeMessage(23, getMinAgeToForceMergeOnPartitionOnly());
        }
        if (mergeSelectingSleepMs_ != null) {
          output.writeMessage(24, getMergeSelectingSleepMs());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (replicatedDeduplicationWindow_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getReplicatedDeduplicationWindow());
        }
        if (replicatedDeduplicationWindowSeconds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getReplicatedDeduplicationWindowSeconds());
        }
        if (partsToDelayInsert_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getPartsToDelayInsert());
        }
        if (partsToThrowInsert_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getPartsToThrowInsert());
        }
        if (maxReplicatedMergesInQueue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getMaxReplicatedMergesInQueue());
        }
        if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge());
        }
        if (maxBytesToMergeAtMinSpaceInPool_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getMaxBytesToMergeAtMinSpaceInPool());
        }
        if (maxBytesToMergeAtMaxSpaceInPool_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, getMaxBytesToMergeAtMaxSpaceInPool());
        }
        if (inactivePartsToDelayInsert_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, getInactivePartsToDelayInsert());
        }
        if (inactivePartsToThrowInsert_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, getInactivePartsToThrowInsert());
        }
        if (minBytesForWidePart_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, getMinBytesForWidePart());
        }
        if (minRowsForWidePart_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, getMinRowsForWidePart());
        }
        if (ttlOnlyDropParts_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, getTtlOnlyDropParts());
        }
        if (allowRemoteFsZeroCopyReplication_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, getAllowRemoteFsZeroCopyReplication());
        }
        if (mergeWithTtlTimeout_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, getMergeWithTtlTimeout());
        }
        if (mergeWithRecompressionTtlTimeout_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, getMergeWithRecompressionTtlTimeout());
        }
        if (maxPartsInTotal_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, getMaxPartsInTotal());
        }
        if (maxNumberOfMergesWithTtlInPool_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, getMaxNumberOfMergesWithTtlInPool());
        }
        if (cleanupDelayPeriod_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(19, getCleanupDelayPeriod());
        }
        if (numberOfFreeEntriesInPoolToExecuteMutation_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20, getNumberOfFreeEntriesInPoolToExecuteMutation());
        }
        if (maxAvgPartSizeForTooManyParts_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(21, getMaxAvgPartSizeForTooManyParts());
        }
        if (minAgeToForceMergeSeconds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(22, getMinAgeToForceMergeSeconds());
        }
        if (minAgeToForceMergeOnPartitionOnly_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(23, getMinAgeToForceMergeOnPartitionOnly());
        }
        if (mergeSelectingSleepMs_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(24, getMergeSelectingSleepMs());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree) obj;

        if (hasReplicatedDeduplicationWindow() != other.hasReplicatedDeduplicationWindow()) return false;
        if (hasReplicatedDeduplicationWindow()) {
          if (!getReplicatedDeduplicationWindow()
              .equals(other.getReplicatedDeduplicationWindow())) return false;
        }
        if (hasReplicatedDeduplicationWindowSeconds() != other.hasReplicatedDeduplicationWindowSeconds()) return false;
        if (hasReplicatedDeduplicationWindowSeconds()) {
          if (!getReplicatedDeduplicationWindowSeconds()
              .equals(other.getReplicatedDeduplicationWindowSeconds())) return false;
        }
        if (hasPartsToDelayInsert() != other.hasPartsToDelayInsert()) return false;
        if (hasPartsToDelayInsert()) {
          if (!getPartsToDelayInsert()
              .equals(other.getPartsToDelayInsert())) return false;
        }
        if (hasPartsToThrowInsert() != other.hasPartsToThrowInsert()) return false;
        if (hasPartsToThrowInsert()) {
          if (!getPartsToThrowInsert()
              .equals(other.getPartsToThrowInsert())) return false;
        }
        if (hasInactivePartsToDelayInsert() != other.hasInactivePartsToDelayInsert()) return false;
        if (hasInactivePartsToDelayInsert()) {
          if (!getInactivePartsToDelayInsert()
              .equals(other.getInactivePartsToDelayInsert())) return false;
        }
        if (hasInactivePartsToThrowInsert() != other.hasInactivePartsToThrowInsert()) return false;
        if (hasInactivePartsToThrowInsert()) {
          if (!getInactivePartsToThrowInsert()
              .equals(other.getInactivePartsToThrowInsert())) return false;
        }
        if (hasMaxReplicatedMergesInQueue() != other.hasMaxReplicatedMergesInQueue()) return false;
        if (hasMaxReplicatedMergesInQueue()) {
          if (!getMaxReplicatedMergesInQueue()
              .equals(other.getMaxReplicatedMergesInQueue())) return false;
        }
        if (hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() != other.hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge()) return false;
        if (hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge()) {
          if (!getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge()
              .equals(other.getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge())) return false;
        }
        if (hasMaxBytesToMergeAtMinSpaceInPool() != other.hasMaxBytesToMergeAtMinSpaceInPool()) return false;
        if (hasMaxBytesToMergeAtMinSpaceInPool()) {
          if (!getMaxBytesToMergeAtMinSpaceInPool()
              .equals(other.getMaxBytesToMergeAtMinSpaceInPool())) return false;
        }
        if (hasMaxBytesToMergeAtMaxSpaceInPool() != other.hasMaxBytesToMergeAtMaxSpaceInPool()) return false;
        if (hasMaxBytesToMergeAtMaxSpaceInPool()) {
          if (!getMaxBytesToMergeAtMaxSpaceInPool()
              .equals(other.getMaxBytesToMergeAtMaxSpaceInPool())) return false;
        }
        if (hasMinBytesForWidePart() != other.hasMinBytesForWidePart()) return false;
        if (hasMinBytesForWidePart()) {
          if (!getMinBytesForWidePart()
              .equals(other.getMinBytesForWidePart())) return false;
        }
        if (hasMinRowsForWidePart() != other.hasMinRowsForWidePart()) return false;
        if (hasMinRowsForWidePart()) {
          if (!getMinRowsForWidePart()
              .equals(other.getMinRowsForWidePart())) return false;
        }
        if (hasTtlOnlyDropParts() != other.hasTtlOnlyDropParts()) return false;
        if (hasTtlOnlyDropParts()) {
          if (!getTtlOnlyDropParts()
              .equals(other.getTtlOnlyDropParts())) return false;
        }
        if (hasAllowRemoteFsZeroCopyReplication() != other.hasAllowRemoteFsZeroCopyReplication()) return false;
        if (hasAllowRemoteFsZeroCopyReplication()) {
          if (!getAllowRemoteFsZeroCopyReplication()
              .equals(other.getAllowRemoteFsZeroCopyReplication())) return false;
        }
        if (hasMergeWithTtlTimeout() != other.hasMergeWithTtlTimeout()) return false;
        if (hasMergeWithTtlTimeout()) {
          if (!getMergeWithTtlTimeout()
              .equals(other.getMergeWithTtlTimeout())) return false;
        }
        if (hasMergeWithRecompressionTtlTimeout() != other.hasMergeWithRecompressionTtlTimeout()) return false;
        if (hasMergeWithRecompressionTtlTimeout()) {
          if (!getMergeWithRecompressionTtlTimeout()
              .equals(other.getMergeWithRecompressionTtlTimeout())) return false;
        }
        if (hasMaxPartsInTotal() != other.hasMaxPartsInTotal()) return false;
        if (hasMaxPartsInTotal()) {
          if (!getMaxPartsInTotal()
              .equals(other.getMaxPartsInTotal())) return false;
        }
        if (hasMaxNumberOfMergesWithTtlInPool() != other.hasMaxNumberOfMergesWithTtlInPool()) return false;
        if (hasMaxNumberOfMergesWithTtlInPool()) {
          if (!getMaxNumberOfMergesWithTtlInPool()
              .equals(other.getMaxNumberOfMergesWithTtlInPool())) return false;
        }
        if (hasCleanupDelayPeriod() != other.hasCleanupDelayPeriod()) return false;
        if (hasCleanupDelayPeriod()) {
          if (!getCleanupDelayPeriod()
              .equals(other.getCleanupDelayPeriod())) return false;
        }
        if (hasNumberOfFreeEntriesInPoolToExecuteMutation() != other.hasNumberOfFreeEntriesInPoolToExecuteMutation()) return false;
        if (hasNumberOfFreeEntriesInPoolToExecuteMutation()) {
          if (!getNumberOfFreeEntriesInPoolToExecuteMutation()
              .equals(other.getNumberOfFreeEntriesInPoolToExecuteMutation())) return false;
        }
        if (hasMaxAvgPartSizeForTooManyParts() != other.hasMaxAvgPartSizeForTooManyParts()) return false;
        if (hasMaxAvgPartSizeForTooManyParts()) {
          if (!getMaxAvgPartSizeForTooManyParts()
              .equals(other.getMaxAvgPartSizeForTooManyParts())) return false;
        }
        if (hasMinAgeToForceMergeSeconds() != other.hasMinAgeToForceMergeSeconds()) return false;
        if (hasMinAgeToForceMergeSeconds()) {
          if (!getMinAgeToForceMergeSeconds()
              .equals(other.getMinAgeToForceMergeSeconds())) return false;
        }
        if (hasMinAgeToForceMergeOnPartitionOnly() != other.hasMinAgeToForceMergeOnPartitionOnly()) return false;
        if (hasMinAgeToForceMergeOnPartitionOnly()) {
          if (!getMinAgeToForceMergeOnPartitionOnly()
              .equals(other.getMinAgeToForceMergeOnPartitionOnly())) return false;
        }
        if (hasMergeSelectingSleepMs() != other.hasMergeSelectingSleepMs()) return false;
        if (hasMergeSelectingSleepMs()) {
          if (!getMergeSelectingSleepMs()
              .equals(other.getMergeSelectingSleepMs())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasReplicatedDeduplicationWindow()) {
          hash = (37 * hash) + REPLICATED_DEDUPLICATION_WINDOW_FIELD_NUMBER;
          hash = (53 * hash) + getReplicatedDeduplicationWindow().hashCode();
        }
        if (hasReplicatedDeduplicationWindowSeconds()) {
          hash = (37 * hash) + REPLICATED_DEDUPLICATION_WINDOW_SECONDS_FIELD_NUMBER;
          hash = (53 * hash) + getReplicatedDeduplicationWindowSeconds().hashCode();
        }
        if (hasPartsToDelayInsert()) {
          hash = (37 * hash) + PARTS_TO_DELAY_INSERT_FIELD_NUMBER;
          hash = (53 * hash) + getPartsToDelayInsert().hashCode();
        }
        if (hasPartsToThrowInsert()) {
          hash = (37 * hash) + PARTS_TO_THROW_INSERT_FIELD_NUMBER;
          hash = (53 * hash) + getPartsToThrowInsert().hashCode();
        }
        if (hasInactivePartsToDelayInsert()) {
          hash = (37 * hash) + INACTIVE_PARTS_TO_DELAY_INSERT_FIELD_NUMBER;
          hash = (53 * hash) + getInactivePartsToDelayInsert().hashCode();
        }
        if (hasInactivePartsToThrowInsert()) {
          hash = (37 * hash) + INACTIVE_PARTS_TO_THROW_INSERT_FIELD_NUMBER;
          hash = (53 * hash) + getInactivePartsToThrowInsert().hashCode();
        }
        if (hasMaxReplicatedMergesInQueue()) {
          hash = (37 * hash) + MAX_REPLICATED_MERGES_IN_QUEUE_FIELD_NUMBER;
          hash = (53 * hash) + getMaxReplicatedMergesInQueue().hashCode();
        }
        if (hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge()) {
          hash = (37 * hash) + NUMBER_OF_FREE_ENTRIES_IN_POOL_TO_LOWER_MAX_SIZE_OF_MERGE_FIELD_NUMBER;
          hash = (53 * hash) + getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge().hashCode();
        }
        if (hasMaxBytesToMergeAtMinSpaceInPool()) {
          hash = (37 * hash) + MAX_BYTES_TO_MERGE_AT_MIN_SPACE_IN_POOL_FIELD_NUMBER;
          hash = (53 * hash) + getMaxBytesToMergeAtMinSpaceInPool().hashCode();
        }
        if (hasMaxBytesToMergeAtMaxSpaceInPool()) {
          hash = (37 * hash) + MAX_BYTES_TO_MERGE_AT_MAX_SPACE_IN_POOL_FIELD_NUMBER;
          hash = (53 * hash) + getMaxBytesToMergeAtMaxSpaceInPool().hashCode();
        }
        if (hasMinBytesForWidePart()) {
          hash = (37 * hash) + MIN_BYTES_FOR_WIDE_PART_FIELD_NUMBER;
          hash = (53 * hash) + getMinBytesForWidePart().hashCode();
        }
        if (hasMinRowsForWidePart()) {
          hash = (37 * hash) + MIN_ROWS_FOR_WIDE_PART_FIELD_NUMBER;
          hash = (53 * hash) + getMinRowsForWidePart().hashCode();
        }
        if (hasTtlOnlyDropParts()) {
          hash = (37 * hash) + TTL_ONLY_DROP_PARTS_FIELD_NUMBER;
          hash = (53 * hash) + getTtlOnlyDropParts().hashCode();
        }
        if (hasAllowRemoteFsZeroCopyReplication()) {
          hash = (37 * hash) + ALLOW_REMOTE_FS_ZERO_COPY_REPLICATION_FIELD_NUMBER;
          hash = (53 * hash) + getAllowRemoteFsZeroCopyReplication().hashCode();
        }
        if (hasMergeWithTtlTimeout()) {
          hash = (37 * hash) + MERGE_WITH_TTL_TIMEOUT_FIELD_NUMBER;
          hash = (53 * hash) + getMergeWithTtlTimeout().hashCode();
        }
        if (hasMergeWithRecompressionTtlTimeout()) {
          hash = (37 * hash) + MERGE_WITH_RECOMPRESSION_TTL_TIMEOUT_FIELD_NUMBER;
          hash = (53 * hash) + getMergeWithRecompressionTtlTimeout().hashCode();
        }
        if (hasMaxPartsInTotal()) {
          hash = (37 * hash) + MAX_PARTS_IN_TOTAL_FIELD_NUMBER;
          hash = (53 * hash) + getMaxPartsInTotal().hashCode();
        }
        if (hasMaxNumberOfMergesWithTtlInPool()) {
          hash = (37 * hash) + MAX_NUMBER_OF_MERGES_WITH_TTL_IN_POOL_FIELD_NUMBER;
          hash = (53 * hash) + getMaxNumberOfMergesWithTtlInPool().hashCode();
        }
        if (hasCleanupDelayPeriod()) {
          hash = (37 * hash) + CLEANUP_DELAY_PERIOD_FIELD_NUMBER;
          hash = (53 * hash) + getCleanupDelayPeriod().hashCode();
        }
        if (hasNumberOfFreeEntriesInPoolToExecuteMutation()) {
          hash = (37 * hash) + NUMBER_OF_FREE_ENTRIES_IN_POOL_TO_EXECUTE_MUTATION_FIELD_NUMBER;
          hash = (53 * hash) + getNumberOfFreeEntriesInPoolToExecuteMutation().hashCode();
        }
        if (hasMaxAvgPartSizeForTooManyParts()) {
          hash = (37 * hash) + MAX_AVG_PART_SIZE_FOR_TOO_MANY_PARTS_FIELD_NUMBER;
          hash = (53 * hash) + getMaxAvgPartSizeForTooManyParts().hashCode();
        }
        if (hasMinAgeToForceMergeSeconds()) {
          hash = (37 * hash) + MIN_AGE_TO_FORCE_MERGE_SECONDS_FIELD_NUMBER;
          hash = (53 * hash) + getMinAgeToForceMergeSeconds().hashCode();
        }
        if (hasMinAgeToForceMergeOnPartitionOnly()) {
          hash = (37 * hash) + MIN_AGE_TO_FORCE_MERGE_ON_PARTITION_ONLY_FIELD_NUMBER;
          hash = (53 * hash) + getMinAgeToForceMergeOnPartitionOnly().hashCode();
        }
        if (hasMergeSelectingSleepMs()) {
          hash = (37 * hash) + MERGE_SELECTING_SLEEP_MS_FIELD_NUMBER;
          hash = (53 * hash) + getMergeSelectingSleepMs().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Options specific to the MergeTree table engine.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (replicatedDeduplicationWindowBuilder_ == null) {
            replicatedDeduplicationWindow_ = null;
          } else {
            replicatedDeduplicationWindow_ = null;
            replicatedDeduplicationWindowBuilder_ = null;
          }
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            replicatedDeduplicationWindowSeconds_ = null;
          } else {
            replicatedDeduplicationWindowSeconds_ = null;
            replicatedDeduplicationWindowSecondsBuilder_ = null;
          }
          if (partsToDelayInsertBuilder_ == null) {
            partsToDelayInsert_ = null;
          } else {
            partsToDelayInsert_ = null;
            partsToDelayInsertBuilder_ = null;
          }
          if (partsToThrowInsertBuilder_ == null) {
            partsToThrowInsert_ = null;
          } else {
            partsToThrowInsert_ = null;
            partsToThrowInsertBuilder_ = null;
          }
          if (inactivePartsToDelayInsertBuilder_ == null) {
            inactivePartsToDelayInsert_ = null;
          } else {
            inactivePartsToDelayInsert_ = null;
            inactivePartsToDelayInsertBuilder_ = null;
          }
          if (inactivePartsToThrowInsertBuilder_ == null) {
            inactivePartsToThrowInsert_ = null;
          } else {
            inactivePartsToThrowInsert_ = null;
            inactivePartsToThrowInsertBuilder_ = null;
          }
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            maxReplicatedMergesInQueue_ = null;
          } else {
            maxReplicatedMergesInQueue_ = null;
            maxReplicatedMergesInQueueBuilder_ = null;
          }
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = null;
          } else {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = null;
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ = null;
          }
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMinSpaceInPool_ = null;
          } else {
            maxBytesToMergeAtMinSpaceInPool_ = null;
            maxBytesToMergeAtMinSpaceInPoolBuilder_ = null;
          }
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMaxSpaceInPool_ = null;
          } else {
            maxBytesToMergeAtMaxSpaceInPool_ = null;
            maxBytesToMergeAtMaxSpaceInPoolBuilder_ = null;
          }
          if (minBytesForWidePartBuilder_ == null) {
            minBytesForWidePart_ = null;
          } else {
            minBytesForWidePart_ = null;
            minBytesForWidePartBuilder_ = null;
          }
          if (minRowsForWidePartBuilder_ == null) {
            minRowsForWidePart_ = null;
          } else {
            minRowsForWidePart_ = null;
            minRowsForWidePartBuilder_ = null;
          }
          if (ttlOnlyDropPartsBuilder_ == null) {
            ttlOnlyDropParts_ = null;
          } else {
            ttlOnlyDropParts_ = null;
            ttlOnlyDropPartsBuilder_ = null;
          }
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            allowRemoteFsZeroCopyReplication_ = null;
          } else {
            allowRemoteFsZeroCopyReplication_ = null;
            allowRemoteFsZeroCopyReplicationBuilder_ = null;
          }
          if (mergeWithTtlTimeoutBuilder_ == null) {
            mergeWithTtlTimeout_ = null;
          } else {
            mergeWithTtlTimeout_ = null;
            mergeWithTtlTimeoutBuilder_ = null;
          }
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            mergeWithRecompressionTtlTimeout_ = null;
          } else {
            mergeWithRecompressionTtlTimeout_ = null;
            mergeWithRecompressionTtlTimeoutBuilder_ = null;
          }
          if (maxPartsInTotalBuilder_ == null) {
            maxPartsInTotal_ = null;
          } else {
            maxPartsInTotal_ = null;
            maxPartsInTotalBuilder_ = null;
          }
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            maxNumberOfMergesWithTtlInPool_ = null;
          } else {
            maxNumberOfMergesWithTtlInPool_ = null;
            maxNumberOfMergesWithTtlInPoolBuilder_ = null;
          }
          if (cleanupDelayPeriodBuilder_ == null) {
            cleanupDelayPeriod_ = null;
          } else {
            cleanupDelayPeriod_ = null;
            cleanupDelayPeriodBuilder_ = null;
          }
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            numberOfFreeEntriesInPoolToExecuteMutation_ = null;
          } else {
            numberOfFreeEntriesInPoolToExecuteMutation_ = null;
            numberOfFreeEntriesInPoolToExecuteMutationBuilder_ = null;
          }
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            maxAvgPartSizeForTooManyParts_ = null;
          } else {
            maxAvgPartSizeForTooManyParts_ = null;
            maxAvgPartSizeForTooManyPartsBuilder_ = null;
          }
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            minAgeToForceMergeSeconds_ = null;
          } else {
            minAgeToForceMergeSeconds_ = null;
            minAgeToForceMergeSecondsBuilder_ = null;
          }
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            minAgeToForceMergeOnPartitionOnly_ = null;
          } else {
            minAgeToForceMergeOnPartitionOnly_ = null;
            minAgeToForceMergeOnPartitionOnlyBuilder_ = null;
          }
          if (mergeSelectingSleepMsBuilder_ == null) {
            mergeSelectingSleepMs_ = null;
          } else {
            mergeSelectingSleepMs_ = null;
            mergeSelectingSleepMsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree(this);
          if (replicatedDeduplicationWindowBuilder_ == null) {
            result.replicatedDeduplicationWindow_ = replicatedDeduplicationWindow_;
          } else {
            result.replicatedDeduplicationWindow_ = replicatedDeduplicationWindowBuilder_.build();
          }
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            result.replicatedDeduplicationWindowSeconds_ = replicatedDeduplicationWindowSeconds_;
          } else {
            result.replicatedDeduplicationWindowSeconds_ = replicatedDeduplicationWindowSecondsBuilder_.build();
          }
          if (partsToDelayInsertBuilder_ == null) {
            result.partsToDelayInsert_ = partsToDelayInsert_;
          } else {
            result.partsToDelayInsert_ = partsToDelayInsertBuilder_.build();
          }
          if (partsToThrowInsertBuilder_ == null) {
            result.partsToThrowInsert_ = partsToThrowInsert_;
          } else {
            result.partsToThrowInsert_ = partsToThrowInsertBuilder_.build();
          }
          if (inactivePartsToDelayInsertBuilder_ == null) {
            result.inactivePartsToDelayInsert_ = inactivePartsToDelayInsert_;
          } else {
            result.inactivePartsToDelayInsert_ = inactivePartsToDelayInsertBuilder_.build();
          }
          if (inactivePartsToThrowInsertBuilder_ == null) {
            result.inactivePartsToThrowInsert_ = inactivePartsToThrowInsert_;
          } else {
            result.inactivePartsToThrowInsert_ = inactivePartsToThrowInsertBuilder_.build();
          }
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            result.maxReplicatedMergesInQueue_ = maxReplicatedMergesInQueue_;
          } else {
            result.maxReplicatedMergesInQueue_ = maxReplicatedMergesInQueueBuilder_.build();
          }
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            result.numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_;
          } else {
            result.numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_.build();
          }
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            result.maxBytesToMergeAtMinSpaceInPool_ = maxBytesToMergeAtMinSpaceInPool_;
          } else {
            result.maxBytesToMergeAtMinSpaceInPool_ = maxBytesToMergeAtMinSpaceInPoolBuilder_.build();
          }
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            result.maxBytesToMergeAtMaxSpaceInPool_ = maxBytesToMergeAtMaxSpaceInPool_;
          } else {
            result.maxBytesToMergeAtMaxSpaceInPool_ = maxBytesToMergeAtMaxSpaceInPoolBuilder_.build();
          }
          if (minBytesForWidePartBuilder_ == null) {
            result.minBytesForWidePart_ = minBytesForWidePart_;
          } else {
            result.minBytesForWidePart_ = minBytesForWidePartBuilder_.build();
          }
          if (minRowsForWidePartBuilder_ == null) {
            result.minRowsForWidePart_ = minRowsForWidePart_;
          } else {
            result.minRowsForWidePart_ = minRowsForWidePartBuilder_.build();
          }
          if (ttlOnlyDropPartsBuilder_ == null) {
            result.ttlOnlyDropParts_ = ttlOnlyDropParts_;
          } else {
            result.ttlOnlyDropParts_ = ttlOnlyDropPartsBuilder_.build();
          }
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            result.allowRemoteFsZeroCopyReplication_ = allowRemoteFsZeroCopyReplication_;
          } else {
            result.allowRemoteFsZeroCopyReplication_ = allowRemoteFsZeroCopyReplicationBuilder_.build();
          }
          if (mergeWithTtlTimeoutBuilder_ == null) {
            result.mergeWithTtlTimeout_ = mergeWithTtlTimeout_;
          } else {
            result.mergeWithTtlTimeout_ = mergeWithTtlTimeoutBuilder_.build();
          }
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            result.mergeWithRecompressionTtlTimeout_ = mergeWithRecompressionTtlTimeout_;
          } else {
            result.mergeWithRecompressionTtlTimeout_ = mergeWithRecompressionTtlTimeoutBuilder_.build();
          }
          if (maxPartsInTotalBuilder_ == null) {
            result.maxPartsInTotal_ = maxPartsInTotal_;
          } else {
            result.maxPartsInTotal_ = maxPartsInTotalBuilder_.build();
          }
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            result.maxNumberOfMergesWithTtlInPool_ = maxNumberOfMergesWithTtlInPool_;
          } else {
            result.maxNumberOfMergesWithTtlInPool_ = maxNumberOfMergesWithTtlInPoolBuilder_.build();
          }
          if (cleanupDelayPeriodBuilder_ == null) {
            result.cleanupDelayPeriod_ = cleanupDelayPeriod_;
          } else {
            result.cleanupDelayPeriod_ = cleanupDelayPeriodBuilder_.build();
          }
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            result.numberOfFreeEntriesInPoolToExecuteMutation_ = numberOfFreeEntriesInPoolToExecuteMutation_;
          } else {
            result.numberOfFreeEntriesInPoolToExecuteMutation_ = numberOfFreeEntriesInPoolToExecuteMutationBuilder_.build();
          }
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            result.maxAvgPartSizeForTooManyParts_ = maxAvgPartSizeForTooManyParts_;
          } else {
            result.maxAvgPartSizeForTooManyParts_ = maxAvgPartSizeForTooManyPartsBuilder_.build();
          }
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            result.minAgeToForceMergeSeconds_ = minAgeToForceMergeSeconds_;
          } else {
            result.minAgeToForceMergeSeconds_ = minAgeToForceMergeSecondsBuilder_.build();
          }
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            result.minAgeToForceMergeOnPartitionOnly_ = minAgeToForceMergeOnPartitionOnly_;
          } else {
            result.minAgeToForceMergeOnPartitionOnly_ = minAgeToForceMergeOnPartitionOnlyBuilder_.build();
          }
          if (mergeSelectingSleepMsBuilder_ == null) {
            result.mergeSelectingSleepMs_ = mergeSelectingSleepMs_;
          } else {
            result.mergeSelectingSleepMs_ = mergeSelectingSleepMsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.getDefaultInstance()) return this;
          if (other.hasReplicatedDeduplicationWindow()) {
            mergeReplicatedDeduplicationWindow(other.getReplicatedDeduplicationWindow());
          }
          if (other.hasReplicatedDeduplicationWindowSeconds()) {
            mergeReplicatedDeduplicationWindowSeconds(other.getReplicatedDeduplicationWindowSeconds());
          }
          if (other.hasPartsToDelayInsert()) {
            mergePartsToDelayInsert(other.getPartsToDelayInsert());
          }
          if (other.hasPartsToThrowInsert()) {
            mergePartsToThrowInsert(other.getPartsToThrowInsert());
          }
          if (other.hasInactivePartsToDelayInsert()) {
            mergeInactivePartsToDelayInsert(other.getInactivePartsToDelayInsert());
          }
          if (other.hasInactivePartsToThrowInsert()) {
            mergeInactivePartsToThrowInsert(other.getInactivePartsToThrowInsert());
          }
          if (other.hasMaxReplicatedMergesInQueue()) {
            mergeMaxReplicatedMergesInQueue(other.getMaxReplicatedMergesInQueue());
          }
          if (other.hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge()) {
            mergeNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(other.getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge());
          }
          if (other.hasMaxBytesToMergeAtMinSpaceInPool()) {
            mergeMaxBytesToMergeAtMinSpaceInPool(other.getMaxBytesToMergeAtMinSpaceInPool());
          }
          if (other.hasMaxBytesToMergeAtMaxSpaceInPool()) {
            mergeMaxBytesToMergeAtMaxSpaceInPool(other.getMaxBytesToMergeAtMaxSpaceInPool());
          }
          if (other.hasMinBytesForWidePart()) {
            mergeMinBytesForWidePart(other.getMinBytesForWidePart());
          }
          if (other.hasMinRowsForWidePart()) {
            mergeMinRowsForWidePart(other.getMinRowsForWidePart());
          }
          if (other.hasTtlOnlyDropParts()) {
            mergeTtlOnlyDropParts(other.getTtlOnlyDropParts());
          }
          if (other.hasAllowRemoteFsZeroCopyReplication()) {
            mergeAllowRemoteFsZeroCopyReplication(other.getAllowRemoteFsZeroCopyReplication());
          }
          if (other.hasMergeWithTtlTimeout()) {
            mergeMergeWithTtlTimeout(other.getMergeWithTtlTimeout());
          }
          if (other.hasMergeWithRecompressionTtlTimeout()) {
            mergeMergeWithRecompressionTtlTimeout(other.getMergeWithRecompressionTtlTimeout());
          }
          if (other.hasMaxPartsInTotal()) {
            mergeMaxPartsInTotal(other.getMaxPartsInTotal());
          }
          if (other.hasMaxNumberOfMergesWithTtlInPool()) {
            mergeMaxNumberOfMergesWithTtlInPool(other.getMaxNumberOfMergesWithTtlInPool());
          }
          if (other.hasCleanupDelayPeriod()) {
            mergeCleanupDelayPeriod(other.getCleanupDelayPeriod());
          }
          if (other.hasNumberOfFreeEntriesInPoolToExecuteMutation()) {
            mergeNumberOfFreeEntriesInPoolToExecuteMutation(other.getNumberOfFreeEntriesInPoolToExecuteMutation());
          }
          if (other.hasMaxAvgPartSizeForTooManyParts()) {
            mergeMaxAvgPartSizeForTooManyParts(other.getMaxAvgPartSizeForTooManyParts());
          }
          if (other.hasMinAgeToForceMergeSeconds()) {
            mergeMinAgeToForceMergeSeconds(other.getMinAgeToForceMergeSeconds());
          }
          if (other.hasMinAgeToForceMergeOnPartitionOnly()) {
            mergeMinAgeToForceMergeOnPartitionOnly(other.getMinAgeToForceMergeOnPartitionOnly());
          }
          if (other.hasMergeSelectingSleepMs()) {
            mergeMergeSelectingSleepMs(other.getMergeSelectingSleepMs());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.Int64Value replicatedDeduplicationWindow_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> replicatedDeduplicationWindowBuilder_;
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         * @return Whether the replicatedDeduplicationWindow field is set.
         */
        public boolean hasReplicatedDeduplicationWindow() {
          return replicatedDeduplicationWindowBuilder_ != null || replicatedDeduplicationWindow_ != null;
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         * @return The replicatedDeduplicationWindow.
         */
        public com.google.protobuf.Int64Value getReplicatedDeduplicationWindow() {
          if (replicatedDeduplicationWindowBuilder_ == null) {
            return replicatedDeduplicationWindow_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : replicatedDeduplicationWindow_;
          } else {
            return replicatedDeduplicationWindowBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        public Builder setReplicatedDeduplicationWindow(com.google.protobuf.Int64Value value) {
          if (replicatedDeduplicationWindowBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            replicatedDeduplicationWindow_ = value;
            onChanged();
          } else {
            replicatedDeduplicationWindowBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        public Builder setReplicatedDeduplicationWindow(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (replicatedDeduplicationWindowBuilder_ == null) {
            replicatedDeduplicationWindow_ = builderForValue.build();
            onChanged();
          } else {
            replicatedDeduplicationWindowBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        public Builder mergeReplicatedDeduplicationWindow(com.google.protobuf.Int64Value value) {
          if (replicatedDeduplicationWindowBuilder_ == null) {
            if (replicatedDeduplicationWindow_ != null) {
              replicatedDeduplicationWindow_ =
                com.google.protobuf.Int64Value.newBuilder(replicatedDeduplicationWindow_).mergeFrom(value).buildPartial();
            } else {
              replicatedDeduplicationWindow_ = value;
            }
            onChanged();
          } else {
            replicatedDeduplicationWindowBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        public Builder clearReplicatedDeduplicationWindow() {
          if (replicatedDeduplicationWindowBuilder_ == null) {
            replicatedDeduplicationWindow_ = null;
            onChanged();
          } else {
            replicatedDeduplicationWindow_ = null;
            replicatedDeduplicationWindowBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        public com.google.protobuf.Int64Value.Builder getReplicatedDeduplicationWindowBuilder() {
          
          onChanged();
          return getReplicatedDeduplicationWindowFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getReplicatedDeduplicationWindowOrBuilder() {
          if (replicatedDeduplicationWindowBuilder_ != null) {
            return replicatedDeduplicationWindowBuilder_.getMessageOrBuilder();
          } else {
            return replicatedDeduplicationWindow_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : replicatedDeduplicationWindow_;
          }
        }
        /**
         * <pre>
         * Number of blocks of hashes to keep in ZooKeeper.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getReplicatedDeduplicationWindowFieldBuilder() {
          if (replicatedDeduplicationWindowBuilder_ == null) {
            replicatedDeduplicationWindowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getReplicatedDeduplicationWindow(),
                    getParentForChildren(),
                    isClean());
            replicatedDeduplicationWindow_ = null;
          }
          return replicatedDeduplicationWindowBuilder_;
        }

        private com.google.protobuf.Int64Value replicatedDeduplicationWindowSeconds_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> replicatedDeduplicationWindowSecondsBuilder_;
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         * @return Whether the replicatedDeduplicationWindowSeconds field is set.
         */
        public boolean hasReplicatedDeduplicationWindowSeconds() {
          return replicatedDeduplicationWindowSecondsBuilder_ != null || replicatedDeduplicationWindowSeconds_ != null;
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         * @return The replicatedDeduplicationWindowSeconds.
         */
        public com.google.protobuf.Int64Value getReplicatedDeduplicationWindowSeconds() {
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            return replicatedDeduplicationWindowSeconds_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : replicatedDeduplicationWindowSeconds_;
          } else {
            return replicatedDeduplicationWindowSecondsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        public Builder setReplicatedDeduplicationWindowSeconds(com.google.protobuf.Int64Value value) {
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            replicatedDeduplicationWindowSeconds_ = value;
            onChanged();
          } else {
            replicatedDeduplicationWindowSecondsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        public Builder setReplicatedDeduplicationWindowSeconds(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            replicatedDeduplicationWindowSeconds_ = builderForValue.build();
            onChanged();
          } else {
            replicatedDeduplicationWindowSecondsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        public Builder mergeReplicatedDeduplicationWindowSeconds(com.google.protobuf.Int64Value value) {
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            if (replicatedDeduplicationWindowSeconds_ != null) {
              replicatedDeduplicationWindowSeconds_ =
                com.google.protobuf.Int64Value.newBuilder(replicatedDeduplicationWindowSeconds_).mergeFrom(value).buildPartial();
            } else {
              replicatedDeduplicationWindowSeconds_ = value;
            }
            onChanged();
          } else {
            replicatedDeduplicationWindowSecondsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        public Builder clearReplicatedDeduplicationWindowSeconds() {
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            replicatedDeduplicationWindowSeconds_ = null;
            onChanged();
          } else {
            replicatedDeduplicationWindowSeconds_ = null;
            replicatedDeduplicationWindowSecondsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        public com.google.protobuf.Int64Value.Builder getReplicatedDeduplicationWindowSecondsBuilder() {
          
          onChanged();
          return getReplicatedDeduplicationWindowSecondsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getReplicatedDeduplicationWindowSecondsOrBuilder() {
          if (replicatedDeduplicationWindowSecondsBuilder_ != null) {
            return replicatedDeduplicationWindowSecondsBuilder_.getMessageOrBuilder();
          } else {
            return replicatedDeduplicationWindowSeconds_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : replicatedDeduplicationWindowSeconds_;
          }
        }
        /**
         * <pre>
         * Period of time to keep blocks of hashes for.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value replicated_deduplication_window_seconds = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getReplicatedDeduplicationWindowSecondsFieldBuilder() {
          if (replicatedDeduplicationWindowSecondsBuilder_ == null) {
            replicatedDeduplicationWindowSecondsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getReplicatedDeduplicationWindowSeconds(),
                    getParentForChildren(),
                    isClean());
            replicatedDeduplicationWindowSeconds_ = null;
          }
          return replicatedDeduplicationWindowSecondsBuilder_;
        }

        private com.google.protobuf.Int64Value partsToDelayInsert_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> partsToDelayInsertBuilder_;
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         * @return Whether the partsToDelayInsert field is set.
         */
        public boolean hasPartsToDelayInsert() {
          return partsToDelayInsertBuilder_ != null || partsToDelayInsert_ != null;
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         * @return The partsToDelayInsert.
         */
        public com.google.protobuf.Int64Value getPartsToDelayInsert() {
          if (partsToDelayInsertBuilder_ == null) {
            return partsToDelayInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partsToDelayInsert_;
          } else {
            return partsToDelayInsertBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        public Builder setPartsToDelayInsert(com.google.protobuf.Int64Value value) {
          if (partsToDelayInsertBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            partsToDelayInsert_ = value;
            onChanged();
          } else {
            partsToDelayInsertBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        public Builder setPartsToDelayInsert(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (partsToDelayInsertBuilder_ == null) {
            partsToDelayInsert_ = builderForValue.build();
            onChanged();
          } else {
            partsToDelayInsertBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        public Builder mergePartsToDelayInsert(com.google.protobuf.Int64Value value) {
          if (partsToDelayInsertBuilder_ == null) {
            if (partsToDelayInsert_ != null) {
              partsToDelayInsert_ =
                com.google.protobuf.Int64Value.newBuilder(partsToDelayInsert_).mergeFrom(value).buildPartial();
            } else {
              partsToDelayInsert_ = value;
            }
            onChanged();
          } else {
            partsToDelayInsertBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        public Builder clearPartsToDelayInsert() {
          if (partsToDelayInsertBuilder_ == null) {
            partsToDelayInsert_ = null;
            onChanged();
          } else {
            partsToDelayInsert_ = null;
            partsToDelayInsertBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        public com.google.protobuf.Int64Value.Builder getPartsToDelayInsertBuilder() {
          
          onChanged();
          return getPartsToDelayInsertFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getPartsToDelayInsertOrBuilder() {
          if (partsToDelayInsertBuilder_ != null) {
            return partsToDelayInsertBuilder_.getMessageOrBuilder();
          } else {
            return partsToDelayInsert_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : partsToDelayInsert_;
          }
        }
        /**
         * <pre>
         * If table contains at least that many active parts in single partition, artificially slow down insert into table.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_delay_insert = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getPartsToDelayInsertFieldBuilder() {
          if (partsToDelayInsertBuilder_ == null) {
            partsToDelayInsertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getPartsToDelayInsert(),
                    getParentForChildren(),
                    isClean());
            partsToDelayInsert_ = null;
          }
          return partsToDelayInsertBuilder_;
        }

        private com.google.protobuf.Int64Value partsToThrowInsert_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> partsToThrowInsertBuilder_;
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         * @return Whether the partsToThrowInsert field is set.
         */
        public boolean hasPartsToThrowInsert() {
          return partsToThrowInsertBuilder_ != null || partsToThrowInsert_ != null;
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         * @return The partsToThrowInsert.
         */
        public com.google.protobuf.Int64Value getPartsToThrowInsert() {
          if (partsToThrowInsertBuilder_ == null) {
            return partsToThrowInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partsToThrowInsert_;
          } else {
            return partsToThrowInsertBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        public Builder setPartsToThrowInsert(com.google.protobuf.Int64Value value) {
          if (partsToThrowInsertBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            partsToThrowInsert_ = value;
            onChanged();
          } else {
            partsToThrowInsertBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        public Builder setPartsToThrowInsert(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (partsToThrowInsertBuilder_ == null) {
            partsToThrowInsert_ = builderForValue.build();
            onChanged();
          } else {
            partsToThrowInsertBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        public Builder mergePartsToThrowInsert(com.google.protobuf.Int64Value value) {
          if (partsToThrowInsertBuilder_ == null) {
            if (partsToThrowInsert_ != null) {
              partsToThrowInsert_ =
                com.google.protobuf.Int64Value.newBuilder(partsToThrowInsert_).mergeFrom(value).buildPartial();
            } else {
              partsToThrowInsert_ = value;
            }
            onChanged();
          } else {
            partsToThrowInsertBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        public Builder clearPartsToThrowInsert() {
          if (partsToThrowInsertBuilder_ == null) {
            partsToThrowInsert_ = null;
            onChanged();
          } else {
            partsToThrowInsert_ = null;
            partsToThrowInsertBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        public com.google.protobuf.Int64Value.Builder getPartsToThrowInsertBuilder() {
          
          onChanged();
          return getPartsToThrowInsertFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getPartsToThrowInsertOrBuilder() {
          if (partsToThrowInsertBuilder_ != null) {
            return partsToThrowInsertBuilder_.getMessageOrBuilder();
          } else {
            return partsToThrowInsert_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : partsToThrowInsert_;
          }
        }
        /**
         * <pre>
         * If more than this number active parts in single partition, throw 'Too many parts ...' exception.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value parts_to_throw_insert = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getPartsToThrowInsertFieldBuilder() {
          if (partsToThrowInsertBuilder_ == null) {
            partsToThrowInsertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getPartsToThrowInsert(),
                    getParentForChildren(),
                    isClean());
            partsToThrowInsert_ = null;
          }
          return partsToThrowInsertBuilder_;
        }

        private com.google.protobuf.Int64Value inactivePartsToDelayInsert_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> inactivePartsToDelayInsertBuilder_;
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         * @return Whether the inactivePartsToDelayInsert field is set.
         */
        public boolean hasInactivePartsToDelayInsert() {
          return inactivePartsToDelayInsertBuilder_ != null || inactivePartsToDelayInsert_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         * @return The inactivePartsToDelayInsert.
         */
        public com.google.protobuf.Int64Value getInactivePartsToDelayInsert() {
          if (inactivePartsToDelayInsertBuilder_ == null) {
            return inactivePartsToDelayInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : inactivePartsToDelayInsert_;
          } else {
            return inactivePartsToDelayInsertBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        public Builder setInactivePartsToDelayInsert(com.google.protobuf.Int64Value value) {
          if (inactivePartsToDelayInsertBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inactivePartsToDelayInsert_ = value;
            onChanged();
          } else {
            inactivePartsToDelayInsertBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        public Builder setInactivePartsToDelayInsert(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (inactivePartsToDelayInsertBuilder_ == null) {
            inactivePartsToDelayInsert_ = builderForValue.build();
            onChanged();
          } else {
            inactivePartsToDelayInsertBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        public Builder mergeInactivePartsToDelayInsert(com.google.protobuf.Int64Value value) {
          if (inactivePartsToDelayInsertBuilder_ == null) {
            if (inactivePartsToDelayInsert_ != null) {
              inactivePartsToDelayInsert_ =
                com.google.protobuf.Int64Value.newBuilder(inactivePartsToDelayInsert_).mergeFrom(value).buildPartial();
            } else {
              inactivePartsToDelayInsert_ = value;
            }
            onChanged();
          } else {
            inactivePartsToDelayInsertBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        public Builder clearInactivePartsToDelayInsert() {
          if (inactivePartsToDelayInsertBuilder_ == null) {
            inactivePartsToDelayInsert_ = null;
            onChanged();
          } else {
            inactivePartsToDelayInsert_ = null;
            inactivePartsToDelayInsertBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        public com.google.protobuf.Int64Value.Builder getInactivePartsToDelayInsertBuilder() {
          
          onChanged();
          return getInactivePartsToDelayInsertFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getInactivePartsToDelayInsertOrBuilder() {
          if (inactivePartsToDelayInsertBuilder_ != null) {
            return inactivePartsToDelayInsertBuilder_.getMessageOrBuilder();
          } else {
            return inactivePartsToDelayInsert_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : inactivePartsToDelayInsert_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_delay_insert = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getInactivePartsToDelayInsertFieldBuilder() {
          if (inactivePartsToDelayInsertBuilder_ == null) {
            inactivePartsToDelayInsertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getInactivePartsToDelayInsert(),
                    getParentForChildren(),
                    isClean());
            inactivePartsToDelayInsert_ = null;
          }
          return inactivePartsToDelayInsertBuilder_;
        }

        private com.google.protobuf.Int64Value inactivePartsToThrowInsert_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> inactivePartsToThrowInsertBuilder_;
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         * @return Whether the inactivePartsToThrowInsert field is set.
         */
        public boolean hasInactivePartsToThrowInsert() {
          return inactivePartsToThrowInsertBuilder_ != null || inactivePartsToThrowInsert_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         * @return The inactivePartsToThrowInsert.
         */
        public com.google.protobuf.Int64Value getInactivePartsToThrowInsert() {
          if (inactivePartsToThrowInsertBuilder_ == null) {
            return inactivePartsToThrowInsert_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : inactivePartsToThrowInsert_;
          } else {
            return inactivePartsToThrowInsertBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        public Builder setInactivePartsToThrowInsert(com.google.protobuf.Int64Value value) {
          if (inactivePartsToThrowInsertBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inactivePartsToThrowInsert_ = value;
            onChanged();
          } else {
            inactivePartsToThrowInsertBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        public Builder setInactivePartsToThrowInsert(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (inactivePartsToThrowInsertBuilder_ == null) {
            inactivePartsToThrowInsert_ = builderForValue.build();
            onChanged();
          } else {
            inactivePartsToThrowInsertBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        public Builder mergeInactivePartsToThrowInsert(com.google.protobuf.Int64Value value) {
          if (inactivePartsToThrowInsertBuilder_ == null) {
            if (inactivePartsToThrowInsert_ != null) {
              inactivePartsToThrowInsert_ =
                com.google.protobuf.Int64Value.newBuilder(inactivePartsToThrowInsert_).mergeFrom(value).buildPartial();
            } else {
              inactivePartsToThrowInsert_ = value;
            }
            onChanged();
          } else {
            inactivePartsToThrowInsertBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        public Builder clearInactivePartsToThrowInsert() {
          if (inactivePartsToThrowInsertBuilder_ == null) {
            inactivePartsToThrowInsert_ = null;
            onChanged();
          } else {
            inactivePartsToThrowInsert_ = null;
            inactivePartsToThrowInsertBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        public com.google.protobuf.Int64Value.Builder getInactivePartsToThrowInsertBuilder() {
          
          onChanged();
          return getInactivePartsToThrowInsertFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getInactivePartsToThrowInsertOrBuilder() {
          if (inactivePartsToThrowInsertBuilder_ != null) {
            return inactivePartsToThrowInsertBuilder_.getMessageOrBuilder();
          } else {
            return inactivePartsToThrowInsert_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : inactivePartsToThrowInsert_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value inactive_parts_to_throw_insert = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getInactivePartsToThrowInsertFieldBuilder() {
          if (inactivePartsToThrowInsertBuilder_ == null) {
            inactivePartsToThrowInsertBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getInactivePartsToThrowInsert(),
                    getParentForChildren(),
                    isClean());
            inactivePartsToThrowInsert_ = null;
          }
          return inactivePartsToThrowInsertBuilder_;
        }

        private com.google.protobuf.Int64Value maxReplicatedMergesInQueue_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxReplicatedMergesInQueueBuilder_;
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         * @return Whether the maxReplicatedMergesInQueue field is set.
         */
        public boolean hasMaxReplicatedMergesInQueue() {
          return maxReplicatedMergesInQueueBuilder_ != null || maxReplicatedMergesInQueue_ != null;
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         * @return The maxReplicatedMergesInQueue.
         */
        public com.google.protobuf.Int64Value getMaxReplicatedMergesInQueue() {
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            return maxReplicatedMergesInQueue_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxReplicatedMergesInQueue_;
          } else {
            return maxReplicatedMergesInQueueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        public Builder setMaxReplicatedMergesInQueue(com.google.protobuf.Int64Value value) {
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxReplicatedMergesInQueue_ = value;
            onChanged();
          } else {
            maxReplicatedMergesInQueueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        public Builder setMaxReplicatedMergesInQueue(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            maxReplicatedMergesInQueue_ = builderForValue.build();
            onChanged();
          } else {
            maxReplicatedMergesInQueueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        public Builder mergeMaxReplicatedMergesInQueue(com.google.protobuf.Int64Value value) {
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            if (maxReplicatedMergesInQueue_ != null) {
              maxReplicatedMergesInQueue_ =
                com.google.protobuf.Int64Value.newBuilder(maxReplicatedMergesInQueue_).mergeFrom(value).buildPartial();
            } else {
              maxReplicatedMergesInQueue_ = value;
            }
            onChanged();
          } else {
            maxReplicatedMergesInQueueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        public Builder clearMaxReplicatedMergesInQueue() {
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            maxReplicatedMergesInQueue_ = null;
            onChanged();
          } else {
            maxReplicatedMergesInQueue_ = null;
            maxReplicatedMergesInQueueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxReplicatedMergesInQueueBuilder() {
          
          onChanged();
          return getMaxReplicatedMergesInQueueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxReplicatedMergesInQueueOrBuilder() {
          if (maxReplicatedMergesInQueueBuilder_ != null) {
            return maxReplicatedMergesInQueueBuilder_.getMessageOrBuilder();
          } else {
            return maxReplicatedMergesInQueue_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxReplicatedMergesInQueue_;
          }
        }
        /**
         * <pre>
         * How many tasks of merging and mutating parts are allowed simultaneously in ReplicatedMergeTree queue.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_replicated_merges_in_queue = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxReplicatedMergesInQueueFieldBuilder() {
          if (maxReplicatedMergesInQueueBuilder_ == null) {
            maxReplicatedMergesInQueueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxReplicatedMergesInQueue(),
                    getParentForChildren(),
                    isClean());
            maxReplicatedMergesInQueue_ = null;
          }
          return maxReplicatedMergesInQueueBuilder_;
        }

        private com.google.protobuf.Int64Value numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_;
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         * @return Whether the numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge field is set.
         */
        public boolean hasNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() {
          return numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ != null || numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ != null;
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         * @return The numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge.
         */
        public com.google.protobuf.Int64Value getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            return numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_;
          } else {
            return numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        public Builder setNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(com.google.protobuf.Int64Value value) {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = value;
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        public Builder setNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = builderForValue.build();
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        public Builder mergeNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(com.google.protobuf.Int64Value value) {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ != null) {
              numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ =
                com.google.protobuf.Int64Value.newBuilder(numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_).mergeFrom(value).buildPartial();
            } else {
              numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = value;
            }
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        public Builder clearNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge() {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = null;
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = null;
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        public com.google.protobuf.Int64Value.Builder getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder() {
          
          onChanged();
          return getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMergeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMergeOrBuilder() {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ != null) {
            return numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_.getMessageOrBuilder();
          } else {
            return numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_;
          }
        }
        /**
         * <pre>
         * If there is less than specified number of free entries in background pool (or replicated queue), start to lower
         * maximum size of merge to process.
         * </pre>
         *
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_lower_max_size_of_merge = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMergeFieldBuilder() {
          if (numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ == null) {
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getNumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge(),
                    getParentForChildren(),
                    isClean());
            numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge_ = null;
          }
          return numberOfFreeEntriesInPoolToLowerMaxSizeOfMergeBuilder_;
        }

        private com.google.protobuf.Int64Value maxBytesToMergeAtMinSpaceInPool_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesToMergeAtMinSpaceInPoolBuilder_;
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         * @return Whether the maxBytesToMergeAtMinSpaceInPool field is set.
         */
        public boolean hasMaxBytesToMergeAtMinSpaceInPool() {
          return maxBytesToMergeAtMinSpaceInPoolBuilder_ != null || maxBytesToMergeAtMinSpaceInPool_ != null;
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         * @return The maxBytesToMergeAtMinSpaceInPool.
         */
        public com.google.protobuf.Int64Value getMaxBytesToMergeAtMinSpaceInPool() {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            return maxBytesToMergeAtMinSpaceInPool_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToMergeAtMinSpaceInPool_;
          } else {
            return maxBytesToMergeAtMinSpaceInPoolBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        public Builder setMaxBytesToMergeAtMinSpaceInPool(com.google.protobuf.Int64Value value) {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxBytesToMergeAtMinSpaceInPool_ = value;
            onChanged();
          } else {
            maxBytesToMergeAtMinSpaceInPoolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        public Builder setMaxBytesToMergeAtMinSpaceInPool(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMinSpaceInPool_ = builderForValue.build();
            onChanged();
          } else {
            maxBytesToMergeAtMinSpaceInPoolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        public Builder mergeMaxBytesToMergeAtMinSpaceInPool(com.google.protobuf.Int64Value value) {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            if (maxBytesToMergeAtMinSpaceInPool_ != null) {
              maxBytesToMergeAtMinSpaceInPool_ =
                com.google.protobuf.Int64Value.newBuilder(maxBytesToMergeAtMinSpaceInPool_).mergeFrom(value).buildPartial();
            } else {
              maxBytesToMergeAtMinSpaceInPool_ = value;
            }
            onChanged();
          } else {
            maxBytesToMergeAtMinSpaceInPoolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        public Builder clearMaxBytesToMergeAtMinSpaceInPool() {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMinSpaceInPool_ = null;
            onChanged();
          } else {
            maxBytesToMergeAtMinSpaceInPool_ = null;
            maxBytesToMergeAtMinSpaceInPoolBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxBytesToMergeAtMinSpaceInPoolBuilder() {
          
          onChanged();
          return getMaxBytesToMergeAtMinSpaceInPoolFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToMergeAtMinSpaceInPoolOrBuilder() {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ != null) {
            return maxBytesToMergeAtMinSpaceInPoolBuilder_.getMessageOrBuilder();
          } else {
            return maxBytesToMergeAtMinSpaceInPool_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToMergeAtMinSpaceInPool_;
          }
        }
        /**
         * <pre>
         * Maximum in total size of parts to merge, when there are minimum free threads in background pool (or entries
         * in replication queue).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_min_space_in_pool = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxBytesToMergeAtMinSpaceInPoolFieldBuilder() {
          if (maxBytesToMergeAtMinSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMinSpaceInPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxBytesToMergeAtMinSpaceInPool(),
                    getParentForChildren(),
                    isClean());
            maxBytesToMergeAtMinSpaceInPool_ = null;
          }
          return maxBytesToMergeAtMinSpaceInPoolBuilder_;
        }

        private com.google.protobuf.Int64Value maxBytesToMergeAtMaxSpaceInPool_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxBytesToMergeAtMaxSpaceInPoolBuilder_;
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         * @return Whether the maxBytesToMergeAtMaxSpaceInPool field is set.
         */
        public boolean hasMaxBytesToMergeAtMaxSpaceInPool() {
          return maxBytesToMergeAtMaxSpaceInPoolBuilder_ != null || maxBytesToMergeAtMaxSpaceInPool_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         * @return The maxBytesToMergeAtMaxSpaceInPool.
         */
        public com.google.protobuf.Int64Value getMaxBytesToMergeAtMaxSpaceInPool() {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            return maxBytesToMergeAtMaxSpaceInPool_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToMergeAtMaxSpaceInPool_;
          } else {
            return maxBytesToMergeAtMaxSpaceInPoolBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        public Builder setMaxBytesToMergeAtMaxSpaceInPool(com.google.protobuf.Int64Value value) {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxBytesToMergeAtMaxSpaceInPool_ = value;
            onChanged();
          } else {
            maxBytesToMergeAtMaxSpaceInPoolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        public Builder setMaxBytesToMergeAtMaxSpaceInPool(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMaxSpaceInPool_ = builderForValue.build();
            onChanged();
          } else {
            maxBytesToMergeAtMaxSpaceInPoolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        public Builder mergeMaxBytesToMergeAtMaxSpaceInPool(com.google.protobuf.Int64Value value) {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            if (maxBytesToMergeAtMaxSpaceInPool_ != null) {
              maxBytesToMergeAtMaxSpaceInPool_ =
                com.google.protobuf.Int64Value.newBuilder(maxBytesToMergeAtMaxSpaceInPool_).mergeFrom(value).buildPartial();
            } else {
              maxBytesToMergeAtMaxSpaceInPool_ = value;
            }
            onChanged();
          } else {
            maxBytesToMergeAtMaxSpaceInPoolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        public Builder clearMaxBytesToMergeAtMaxSpaceInPool() {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMaxSpaceInPool_ = null;
            onChanged();
          } else {
            maxBytesToMergeAtMaxSpaceInPool_ = null;
            maxBytesToMergeAtMaxSpaceInPoolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxBytesToMergeAtMaxSpaceInPoolBuilder() {
          
          onChanged();
          return getMaxBytesToMergeAtMaxSpaceInPoolFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxBytesToMergeAtMaxSpaceInPoolOrBuilder() {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ != null) {
            return maxBytesToMergeAtMaxSpaceInPoolBuilder_.getMessageOrBuilder();
          } else {
            return maxBytesToMergeAtMaxSpaceInPool_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxBytesToMergeAtMaxSpaceInPool_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_bytes_to_merge_at_max_space_in_pool = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxBytesToMergeAtMaxSpaceInPoolFieldBuilder() {
          if (maxBytesToMergeAtMaxSpaceInPoolBuilder_ == null) {
            maxBytesToMergeAtMaxSpaceInPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxBytesToMergeAtMaxSpaceInPool(),
                    getParentForChildren(),
                    isClean());
            maxBytesToMergeAtMaxSpaceInPool_ = null;
          }
          return maxBytesToMergeAtMaxSpaceInPoolBuilder_;
        }

        private com.google.protobuf.Int64Value minBytesForWidePart_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minBytesForWidePartBuilder_;
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         * @return Whether the minBytesForWidePart field is set.
         */
        public boolean hasMinBytesForWidePart() {
          return minBytesForWidePartBuilder_ != null || minBytesForWidePart_ != null;
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         * @return The minBytesForWidePart.
         */
        public com.google.protobuf.Int64Value getMinBytesForWidePart() {
          if (minBytesForWidePartBuilder_ == null) {
            return minBytesForWidePart_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minBytesForWidePart_;
          } else {
            return minBytesForWidePartBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        public Builder setMinBytesForWidePart(com.google.protobuf.Int64Value value) {
          if (minBytesForWidePartBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            minBytesForWidePart_ = value;
            onChanged();
          } else {
            minBytesForWidePartBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        public Builder setMinBytesForWidePart(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (minBytesForWidePartBuilder_ == null) {
            minBytesForWidePart_ = builderForValue.build();
            onChanged();
          } else {
            minBytesForWidePartBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        public Builder mergeMinBytesForWidePart(com.google.protobuf.Int64Value value) {
          if (minBytesForWidePartBuilder_ == null) {
            if (minBytesForWidePart_ != null) {
              minBytesForWidePart_ =
                com.google.protobuf.Int64Value.newBuilder(minBytesForWidePart_).mergeFrom(value).buildPartial();
            } else {
              minBytesForWidePart_ = value;
            }
            onChanged();
          } else {
            minBytesForWidePartBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        public Builder clearMinBytesForWidePart() {
          if (minBytesForWidePartBuilder_ == null) {
            minBytesForWidePart_ = null;
            onChanged();
          } else {
            minBytesForWidePart_ = null;
            minBytesForWidePartBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMinBytesForWidePartBuilder() {
          
          onChanged();
          return getMinBytesForWidePartFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMinBytesForWidePartOrBuilder() {
          if (minBytesForWidePartBuilder_ != null) {
            return minBytesForWidePartBuilder_.getMessageOrBuilder();
          } else {
            return minBytesForWidePart_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : minBytesForWidePart_;
          }
        }
        /**
         * <pre>
         * Minimum number of bytes in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_bytes_for_wide_part = 11;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMinBytesForWidePartFieldBuilder() {
          if (minBytesForWidePartBuilder_ == null) {
            minBytesForWidePartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMinBytesForWidePart(),
                    getParentForChildren(),
                    isClean());
            minBytesForWidePart_ = null;
          }
          return minBytesForWidePartBuilder_;
        }

        private com.google.protobuf.Int64Value minRowsForWidePart_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minRowsForWidePartBuilder_;
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         * @return Whether the minRowsForWidePart field is set.
         */
        public boolean hasMinRowsForWidePart() {
          return minRowsForWidePartBuilder_ != null || minRowsForWidePart_ != null;
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         * @return The minRowsForWidePart.
         */
        public com.google.protobuf.Int64Value getMinRowsForWidePart() {
          if (minRowsForWidePartBuilder_ == null) {
            return minRowsForWidePart_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minRowsForWidePart_;
          } else {
            return minRowsForWidePartBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        public Builder setMinRowsForWidePart(com.google.protobuf.Int64Value value) {
          if (minRowsForWidePartBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            minRowsForWidePart_ = value;
            onChanged();
          } else {
            minRowsForWidePartBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        public Builder setMinRowsForWidePart(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (minRowsForWidePartBuilder_ == null) {
            minRowsForWidePart_ = builderForValue.build();
            onChanged();
          } else {
            minRowsForWidePartBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        public Builder mergeMinRowsForWidePart(com.google.protobuf.Int64Value value) {
          if (minRowsForWidePartBuilder_ == null) {
            if (minRowsForWidePart_ != null) {
              minRowsForWidePart_ =
                com.google.protobuf.Int64Value.newBuilder(minRowsForWidePart_).mergeFrom(value).buildPartial();
            } else {
              minRowsForWidePart_ = value;
            }
            onChanged();
          } else {
            minRowsForWidePartBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        public Builder clearMinRowsForWidePart() {
          if (minRowsForWidePartBuilder_ == null) {
            minRowsForWidePart_ = null;
            onChanged();
          } else {
            minRowsForWidePart_ = null;
            minRowsForWidePartBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMinRowsForWidePartBuilder() {
          
          onChanged();
          return getMinRowsForWidePartFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMinRowsForWidePartOrBuilder() {
          if (minRowsForWidePartBuilder_ != null) {
            return minRowsForWidePartBuilder_.getMessageOrBuilder();
          } else {
            return minRowsForWidePart_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : minRowsForWidePart_;
          }
        }
        /**
         * <pre>
         * Minimum number of rows in a data part that can be stored in **Wide** format.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/engines/table-engines/mergetree-family/mergetree/#min_bytes_for_wide_part).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_rows_for_wide_part = 12;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMinRowsForWidePartFieldBuilder() {
          if (minRowsForWidePartBuilder_ == null) {
            minRowsForWidePartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMinRowsForWidePart(),
                    getParentForChildren(),
                    isClean());
            minRowsForWidePart_ = null;
          }
          return minRowsForWidePartBuilder_;
        }

        private com.google.protobuf.BoolValue ttlOnlyDropParts_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> ttlOnlyDropPartsBuilder_;
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         * @return Whether the ttlOnlyDropParts field is set.
         */
        public boolean hasTtlOnlyDropParts() {
          return ttlOnlyDropPartsBuilder_ != null || ttlOnlyDropParts_ != null;
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         * @return The ttlOnlyDropParts.
         */
        public com.google.protobuf.BoolValue getTtlOnlyDropParts() {
          if (ttlOnlyDropPartsBuilder_ == null) {
            return ttlOnlyDropParts_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : ttlOnlyDropParts_;
          } else {
            return ttlOnlyDropPartsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        public Builder setTtlOnlyDropParts(com.google.protobuf.BoolValue value) {
          if (ttlOnlyDropPartsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ttlOnlyDropParts_ = value;
            onChanged();
          } else {
            ttlOnlyDropPartsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        public Builder setTtlOnlyDropParts(
            com.google.protobuf.BoolValue.Builder builderForValue) {
          if (ttlOnlyDropPartsBuilder_ == null) {
            ttlOnlyDropParts_ = builderForValue.build();
            onChanged();
          } else {
            ttlOnlyDropPartsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        public Builder mergeTtlOnlyDropParts(com.google.protobuf.BoolValue value) {
          if (ttlOnlyDropPartsBuilder_ == null) {
            if (ttlOnlyDropParts_ != null) {
              ttlOnlyDropParts_ =
                com.google.protobuf.BoolValue.newBuilder(ttlOnlyDropParts_).mergeFrom(value).buildPartial();
            } else {
              ttlOnlyDropParts_ = value;
            }
            onChanged();
          } else {
            ttlOnlyDropPartsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        public Builder clearTtlOnlyDropParts() {
          if (ttlOnlyDropPartsBuilder_ == null) {
            ttlOnlyDropParts_ = null;
            onChanged();
          } else {
            ttlOnlyDropParts_ = null;
            ttlOnlyDropPartsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        public com.google.protobuf.BoolValue.Builder getTtlOnlyDropPartsBuilder() {
          
          onChanged();
          return getTtlOnlyDropPartsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getTtlOnlyDropPartsOrBuilder() {
          if (ttlOnlyDropPartsBuilder_ != null) {
            return ttlOnlyDropPartsBuilder_.getMessageOrBuilder();
          } else {
            return ttlOnlyDropParts_ == null ?
                com.google.protobuf.BoolValue.getDefaultInstance() : ttlOnlyDropParts_;
          }
        }
        /**
         * <pre>
         * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
         * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings/#ttl_only_drop_parts).
         * </pre>
         *
         * <code>.google.protobuf.BoolValue ttl_only_drop_parts = 13;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
            getTtlOnlyDropPartsFieldBuilder() {
          if (ttlOnlyDropPartsBuilder_ == null) {
            ttlOnlyDropPartsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                    getTtlOnlyDropParts(),
                    getParentForChildren(),
                    isClean());
            ttlOnlyDropParts_ = null;
          }
          return ttlOnlyDropPartsBuilder_;
        }

        private com.google.protobuf.BoolValue allowRemoteFsZeroCopyReplication_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> allowRemoteFsZeroCopyReplicationBuilder_;
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         * @return Whether the allowRemoteFsZeroCopyReplication field is set.
         */
        public boolean hasAllowRemoteFsZeroCopyReplication() {
          return allowRemoteFsZeroCopyReplicationBuilder_ != null || allowRemoteFsZeroCopyReplication_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         * @return The allowRemoteFsZeroCopyReplication.
         */
        public com.google.protobuf.BoolValue getAllowRemoteFsZeroCopyReplication() {
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            return allowRemoteFsZeroCopyReplication_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : allowRemoteFsZeroCopyReplication_;
          } else {
            return allowRemoteFsZeroCopyReplicationBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        public Builder setAllowRemoteFsZeroCopyReplication(com.google.protobuf.BoolValue value) {
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            allowRemoteFsZeroCopyReplication_ = value;
            onChanged();
          } else {
            allowRemoteFsZeroCopyReplicationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        public Builder setAllowRemoteFsZeroCopyReplication(
            com.google.protobuf.BoolValue.Builder builderForValue) {
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            allowRemoteFsZeroCopyReplication_ = builderForValue.build();
            onChanged();
          } else {
            allowRemoteFsZeroCopyReplicationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        public Builder mergeAllowRemoteFsZeroCopyReplication(com.google.protobuf.BoolValue value) {
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            if (allowRemoteFsZeroCopyReplication_ != null) {
              allowRemoteFsZeroCopyReplication_ =
                com.google.protobuf.BoolValue.newBuilder(allowRemoteFsZeroCopyReplication_).mergeFrom(value).buildPartial();
            } else {
              allowRemoteFsZeroCopyReplication_ = value;
            }
            onChanged();
          } else {
            allowRemoteFsZeroCopyReplicationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        public Builder clearAllowRemoteFsZeroCopyReplication() {
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            allowRemoteFsZeroCopyReplication_ = null;
            onChanged();
          } else {
            allowRemoteFsZeroCopyReplication_ = null;
            allowRemoteFsZeroCopyReplicationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        public com.google.protobuf.BoolValue.Builder getAllowRemoteFsZeroCopyReplicationBuilder() {
          
          onChanged();
          return getAllowRemoteFsZeroCopyReplicationFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getAllowRemoteFsZeroCopyReplicationOrBuilder() {
          if (allowRemoteFsZeroCopyReplicationBuilder_ != null) {
            return allowRemoteFsZeroCopyReplicationBuilder_.getMessageOrBuilder();
          } else {
            return allowRemoteFsZeroCopyReplication_ == null ?
                com.google.protobuf.BoolValue.getDefaultInstance() : allowRemoteFsZeroCopyReplication_;
          }
        }
        /**
         * <code>.google.protobuf.BoolValue allow_remote_fs_zero_copy_replication = 14;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
            getAllowRemoteFsZeroCopyReplicationFieldBuilder() {
          if (allowRemoteFsZeroCopyReplicationBuilder_ == null) {
            allowRemoteFsZeroCopyReplicationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                    getAllowRemoteFsZeroCopyReplication(),
                    getParentForChildren(),
                    isClean());
            allowRemoteFsZeroCopyReplication_ = null;
          }
          return allowRemoteFsZeroCopyReplicationBuilder_;
        }

        private com.google.protobuf.Int64Value mergeWithTtlTimeout_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeWithTtlTimeoutBuilder_;
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         * @return Whether the mergeWithTtlTimeout field is set.
         */
        public boolean hasMergeWithTtlTimeout() {
          return mergeWithTtlTimeoutBuilder_ != null || mergeWithTtlTimeout_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         * @return The mergeWithTtlTimeout.
         */
        public com.google.protobuf.Int64Value getMergeWithTtlTimeout() {
          if (mergeWithTtlTimeoutBuilder_ == null) {
            return mergeWithTtlTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeWithTtlTimeout_;
          } else {
            return mergeWithTtlTimeoutBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        public Builder setMergeWithTtlTimeout(com.google.protobuf.Int64Value value) {
          if (mergeWithTtlTimeoutBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mergeWithTtlTimeout_ = value;
            onChanged();
          } else {
            mergeWithTtlTimeoutBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        public Builder setMergeWithTtlTimeout(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (mergeWithTtlTimeoutBuilder_ == null) {
            mergeWithTtlTimeout_ = builderForValue.build();
            onChanged();
          } else {
            mergeWithTtlTimeoutBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        public Builder mergeMergeWithTtlTimeout(com.google.protobuf.Int64Value value) {
          if (mergeWithTtlTimeoutBuilder_ == null) {
            if (mergeWithTtlTimeout_ != null) {
              mergeWithTtlTimeout_ =
                com.google.protobuf.Int64Value.newBuilder(mergeWithTtlTimeout_).mergeFrom(value).buildPartial();
            } else {
              mergeWithTtlTimeout_ = value;
            }
            onChanged();
          } else {
            mergeWithTtlTimeoutBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        public Builder clearMergeWithTtlTimeout() {
          if (mergeWithTtlTimeoutBuilder_ == null) {
            mergeWithTtlTimeout_ = null;
            onChanged();
          } else {
            mergeWithTtlTimeout_ = null;
            mergeWithTtlTimeoutBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMergeWithTtlTimeoutBuilder() {
          
          onChanged();
          return getMergeWithTtlTimeoutFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMergeWithTtlTimeoutOrBuilder() {
          if (mergeWithTtlTimeoutBuilder_ != null) {
            return mergeWithTtlTimeoutBuilder_.getMessageOrBuilder();
          } else {
            return mergeWithTtlTimeout_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : mergeWithTtlTimeout_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_ttl_timeout = 15;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMergeWithTtlTimeoutFieldBuilder() {
          if (mergeWithTtlTimeoutBuilder_ == null) {
            mergeWithTtlTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMergeWithTtlTimeout(),
                    getParentForChildren(),
                    isClean());
            mergeWithTtlTimeout_ = null;
          }
          return mergeWithTtlTimeoutBuilder_;
        }

        private com.google.protobuf.Int64Value mergeWithRecompressionTtlTimeout_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeWithRecompressionTtlTimeoutBuilder_;
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         * @return Whether the mergeWithRecompressionTtlTimeout field is set.
         */
        public boolean hasMergeWithRecompressionTtlTimeout() {
          return mergeWithRecompressionTtlTimeoutBuilder_ != null || mergeWithRecompressionTtlTimeout_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         * @return The mergeWithRecompressionTtlTimeout.
         */
        public com.google.protobuf.Int64Value getMergeWithRecompressionTtlTimeout() {
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            return mergeWithRecompressionTtlTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeWithRecompressionTtlTimeout_;
          } else {
            return mergeWithRecompressionTtlTimeoutBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        public Builder setMergeWithRecompressionTtlTimeout(com.google.protobuf.Int64Value value) {
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mergeWithRecompressionTtlTimeout_ = value;
            onChanged();
          } else {
            mergeWithRecompressionTtlTimeoutBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        public Builder setMergeWithRecompressionTtlTimeout(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            mergeWithRecompressionTtlTimeout_ = builderForValue.build();
            onChanged();
          } else {
            mergeWithRecompressionTtlTimeoutBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        public Builder mergeMergeWithRecompressionTtlTimeout(com.google.protobuf.Int64Value value) {
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            if (mergeWithRecompressionTtlTimeout_ != null) {
              mergeWithRecompressionTtlTimeout_ =
                com.google.protobuf.Int64Value.newBuilder(mergeWithRecompressionTtlTimeout_).mergeFrom(value).buildPartial();
            } else {
              mergeWithRecompressionTtlTimeout_ = value;
            }
            onChanged();
          } else {
            mergeWithRecompressionTtlTimeoutBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        public Builder clearMergeWithRecompressionTtlTimeout() {
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            mergeWithRecompressionTtlTimeout_ = null;
            onChanged();
          } else {
            mergeWithRecompressionTtlTimeout_ = null;
            mergeWithRecompressionTtlTimeoutBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMergeWithRecompressionTtlTimeoutBuilder() {
          
          onChanged();
          return getMergeWithRecompressionTtlTimeoutFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMergeWithRecompressionTtlTimeoutOrBuilder() {
          if (mergeWithRecompressionTtlTimeoutBuilder_ != null) {
            return mergeWithRecompressionTtlTimeoutBuilder_.getMessageOrBuilder();
          } else {
            return mergeWithRecompressionTtlTimeout_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : mergeWithRecompressionTtlTimeout_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value merge_with_recompression_ttl_timeout = 16;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMergeWithRecompressionTtlTimeoutFieldBuilder() {
          if (mergeWithRecompressionTtlTimeoutBuilder_ == null) {
            mergeWithRecompressionTtlTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMergeWithRecompressionTtlTimeout(),
                    getParentForChildren(),
                    isClean());
            mergeWithRecompressionTtlTimeout_ = null;
          }
          return mergeWithRecompressionTtlTimeoutBuilder_;
        }

        private com.google.protobuf.Int64Value maxPartsInTotal_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxPartsInTotalBuilder_;
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         * @return Whether the maxPartsInTotal field is set.
         */
        public boolean hasMaxPartsInTotal() {
          return maxPartsInTotalBuilder_ != null || maxPartsInTotal_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         * @return The maxPartsInTotal.
         */
        public com.google.protobuf.Int64Value getMaxPartsInTotal() {
          if (maxPartsInTotalBuilder_ == null) {
            return maxPartsInTotal_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPartsInTotal_;
          } else {
            return maxPartsInTotalBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        public Builder setMaxPartsInTotal(com.google.protobuf.Int64Value value) {
          if (maxPartsInTotalBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxPartsInTotal_ = value;
            onChanged();
          } else {
            maxPartsInTotalBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        public Builder setMaxPartsInTotal(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxPartsInTotalBuilder_ == null) {
            maxPartsInTotal_ = builderForValue.build();
            onChanged();
          } else {
            maxPartsInTotalBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        public Builder mergeMaxPartsInTotal(com.google.protobuf.Int64Value value) {
          if (maxPartsInTotalBuilder_ == null) {
            if (maxPartsInTotal_ != null) {
              maxPartsInTotal_ =
                com.google.protobuf.Int64Value.newBuilder(maxPartsInTotal_).mergeFrom(value).buildPartial();
            } else {
              maxPartsInTotal_ = value;
            }
            onChanged();
          } else {
            maxPartsInTotalBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        public Builder clearMaxPartsInTotal() {
          if (maxPartsInTotalBuilder_ == null) {
            maxPartsInTotal_ = null;
            onChanged();
          } else {
            maxPartsInTotal_ = null;
            maxPartsInTotalBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxPartsInTotalBuilder() {
          
          onChanged();
          return getMaxPartsInTotalFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxPartsInTotalOrBuilder() {
          if (maxPartsInTotalBuilder_ != null) {
            return maxPartsInTotalBuilder_.getMessageOrBuilder();
          } else {
            return maxPartsInTotal_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxPartsInTotal_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_parts_in_total = 17;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxPartsInTotalFieldBuilder() {
          if (maxPartsInTotalBuilder_ == null) {
            maxPartsInTotalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxPartsInTotal(),
                    getParentForChildren(),
                    isClean());
            maxPartsInTotal_ = null;
          }
          return maxPartsInTotalBuilder_;
        }

        private com.google.protobuf.Int64Value maxNumberOfMergesWithTtlInPool_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxNumberOfMergesWithTtlInPoolBuilder_;
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         * @return Whether the maxNumberOfMergesWithTtlInPool field is set.
         */
        public boolean hasMaxNumberOfMergesWithTtlInPool() {
          return maxNumberOfMergesWithTtlInPoolBuilder_ != null || maxNumberOfMergesWithTtlInPool_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         * @return The maxNumberOfMergesWithTtlInPool.
         */
        public com.google.protobuf.Int64Value getMaxNumberOfMergesWithTtlInPool() {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            return maxNumberOfMergesWithTtlInPool_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxNumberOfMergesWithTtlInPool_;
          } else {
            return maxNumberOfMergesWithTtlInPoolBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        public Builder setMaxNumberOfMergesWithTtlInPool(com.google.protobuf.Int64Value value) {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxNumberOfMergesWithTtlInPool_ = value;
            onChanged();
          } else {
            maxNumberOfMergesWithTtlInPoolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        public Builder setMaxNumberOfMergesWithTtlInPool(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            maxNumberOfMergesWithTtlInPool_ = builderForValue.build();
            onChanged();
          } else {
            maxNumberOfMergesWithTtlInPoolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        public Builder mergeMaxNumberOfMergesWithTtlInPool(com.google.protobuf.Int64Value value) {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            if (maxNumberOfMergesWithTtlInPool_ != null) {
              maxNumberOfMergesWithTtlInPool_ =
                com.google.protobuf.Int64Value.newBuilder(maxNumberOfMergesWithTtlInPool_).mergeFrom(value).buildPartial();
            } else {
              maxNumberOfMergesWithTtlInPool_ = value;
            }
            onChanged();
          } else {
            maxNumberOfMergesWithTtlInPoolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        public Builder clearMaxNumberOfMergesWithTtlInPool() {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            maxNumberOfMergesWithTtlInPool_ = null;
            onChanged();
          } else {
            maxNumberOfMergesWithTtlInPool_ = null;
            maxNumberOfMergesWithTtlInPoolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxNumberOfMergesWithTtlInPoolBuilder() {
          
          onChanged();
          return getMaxNumberOfMergesWithTtlInPoolFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxNumberOfMergesWithTtlInPoolOrBuilder() {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ != null) {
            return maxNumberOfMergesWithTtlInPoolBuilder_.getMessageOrBuilder();
          } else {
            return maxNumberOfMergesWithTtlInPool_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxNumberOfMergesWithTtlInPool_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_number_of_merges_with_ttl_in_pool = 18;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxNumberOfMergesWithTtlInPoolFieldBuilder() {
          if (maxNumberOfMergesWithTtlInPoolBuilder_ == null) {
            maxNumberOfMergesWithTtlInPoolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxNumberOfMergesWithTtlInPool(),
                    getParentForChildren(),
                    isClean());
            maxNumberOfMergesWithTtlInPool_ = null;
          }
          return maxNumberOfMergesWithTtlInPoolBuilder_;
        }

        private com.google.protobuf.Int64Value cleanupDelayPeriod_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> cleanupDelayPeriodBuilder_;
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         * @return Whether the cleanupDelayPeriod field is set.
         */
        public boolean hasCleanupDelayPeriod() {
          return cleanupDelayPeriodBuilder_ != null || cleanupDelayPeriod_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         * @return The cleanupDelayPeriod.
         */
        public com.google.protobuf.Int64Value getCleanupDelayPeriod() {
          if (cleanupDelayPeriodBuilder_ == null) {
            return cleanupDelayPeriod_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : cleanupDelayPeriod_;
          } else {
            return cleanupDelayPeriodBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        public Builder setCleanupDelayPeriod(com.google.protobuf.Int64Value value) {
          if (cleanupDelayPeriodBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cleanupDelayPeriod_ = value;
            onChanged();
          } else {
            cleanupDelayPeriodBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        public Builder setCleanupDelayPeriod(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (cleanupDelayPeriodBuilder_ == null) {
            cleanupDelayPeriod_ = builderForValue.build();
            onChanged();
          } else {
            cleanupDelayPeriodBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        public Builder mergeCleanupDelayPeriod(com.google.protobuf.Int64Value value) {
          if (cleanupDelayPeriodBuilder_ == null) {
            if (cleanupDelayPeriod_ != null) {
              cleanupDelayPeriod_ =
                com.google.protobuf.Int64Value.newBuilder(cleanupDelayPeriod_).mergeFrom(value).buildPartial();
            } else {
              cleanupDelayPeriod_ = value;
            }
            onChanged();
          } else {
            cleanupDelayPeriodBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        public Builder clearCleanupDelayPeriod() {
          if (cleanupDelayPeriodBuilder_ == null) {
            cleanupDelayPeriod_ = null;
            onChanged();
          } else {
            cleanupDelayPeriod_ = null;
            cleanupDelayPeriodBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        public com.google.protobuf.Int64Value.Builder getCleanupDelayPeriodBuilder() {
          
          onChanged();
          return getCleanupDelayPeriodFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getCleanupDelayPeriodOrBuilder() {
          if (cleanupDelayPeriodBuilder_ != null) {
            return cleanupDelayPeriodBuilder_.getMessageOrBuilder();
          } else {
            return cleanupDelayPeriod_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : cleanupDelayPeriod_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value cleanup_delay_period = 19;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getCleanupDelayPeriodFieldBuilder() {
          if (cleanupDelayPeriodBuilder_ == null) {
            cleanupDelayPeriodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getCleanupDelayPeriod(),
                    getParentForChildren(),
                    isClean());
            cleanupDelayPeriod_ = null;
          }
          return cleanupDelayPeriodBuilder_;
        }

        private com.google.protobuf.Int64Value numberOfFreeEntriesInPoolToExecuteMutation_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> numberOfFreeEntriesInPoolToExecuteMutationBuilder_;
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         * @return Whether the numberOfFreeEntriesInPoolToExecuteMutation field is set.
         */
        public boolean hasNumberOfFreeEntriesInPoolToExecuteMutation() {
          return numberOfFreeEntriesInPoolToExecuteMutationBuilder_ != null || numberOfFreeEntriesInPoolToExecuteMutation_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         * @return The numberOfFreeEntriesInPoolToExecuteMutation.
         */
        public com.google.protobuf.Int64Value getNumberOfFreeEntriesInPoolToExecuteMutation() {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            return numberOfFreeEntriesInPoolToExecuteMutation_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : numberOfFreeEntriesInPoolToExecuteMutation_;
          } else {
            return numberOfFreeEntriesInPoolToExecuteMutationBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        public Builder setNumberOfFreeEntriesInPoolToExecuteMutation(com.google.protobuf.Int64Value value) {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            numberOfFreeEntriesInPoolToExecuteMutation_ = value;
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToExecuteMutationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        public Builder setNumberOfFreeEntriesInPoolToExecuteMutation(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            numberOfFreeEntriesInPoolToExecuteMutation_ = builderForValue.build();
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToExecuteMutationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        public Builder mergeNumberOfFreeEntriesInPoolToExecuteMutation(com.google.protobuf.Int64Value value) {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            if (numberOfFreeEntriesInPoolToExecuteMutation_ != null) {
              numberOfFreeEntriesInPoolToExecuteMutation_ =
                com.google.protobuf.Int64Value.newBuilder(numberOfFreeEntriesInPoolToExecuteMutation_).mergeFrom(value).buildPartial();
            } else {
              numberOfFreeEntriesInPoolToExecuteMutation_ = value;
            }
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToExecuteMutationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        public Builder clearNumberOfFreeEntriesInPoolToExecuteMutation() {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            numberOfFreeEntriesInPoolToExecuteMutation_ = null;
            onChanged();
          } else {
            numberOfFreeEntriesInPoolToExecuteMutation_ = null;
            numberOfFreeEntriesInPoolToExecuteMutationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        public com.google.protobuf.Int64Value.Builder getNumberOfFreeEntriesInPoolToExecuteMutationBuilder() {
          
          onChanged();
          return getNumberOfFreeEntriesInPoolToExecuteMutationFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getNumberOfFreeEntriesInPoolToExecuteMutationOrBuilder() {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ != null) {
            return numberOfFreeEntriesInPoolToExecuteMutationBuilder_.getMessageOrBuilder();
          } else {
            return numberOfFreeEntriesInPoolToExecuteMutation_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : numberOfFreeEntriesInPoolToExecuteMutation_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value number_of_free_entries_in_pool_to_execute_mutation = 20;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getNumberOfFreeEntriesInPoolToExecuteMutationFieldBuilder() {
          if (numberOfFreeEntriesInPoolToExecuteMutationBuilder_ == null) {
            numberOfFreeEntriesInPoolToExecuteMutationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getNumberOfFreeEntriesInPoolToExecuteMutation(),
                    getParentForChildren(),
                    isClean());
            numberOfFreeEntriesInPoolToExecuteMutation_ = null;
          }
          return numberOfFreeEntriesInPoolToExecuteMutationBuilder_;
        }

        private com.google.protobuf.Int64Value maxAvgPartSizeForTooManyParts_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxAvgPartSizeForTooManyPartsBuilder_;
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return Whether the maxAvgPartSizeForTooManyParts field is set.
         */
        public boolean hasMaxAvgPartSizeForTooManyParts() {
          return maxAvgPartSizeForTooManyPartsBuilder_ != null || maxAvgPartSizeForTooManyParts_ != null;
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return The maxAvgPartSizeForTooManyParts.
         */
        public com.google.protobuf.Int64Value getMaxAvgPartSizeForTooManyParts() {
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            return maxAvgPartSizeForTooManyParts_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxAvgPartSizeForTooManyParts_;
          } else {
            return maxAvgPartSizeForTooManyPartsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setMaxAvgPartSizeForTooManyParts(com.google.protobuf.Int64Value value) {
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxAvgPartSizeForTooManyParts_ = value;
            onChanged();
          } else {
            maxAvgPartSizeForTooManyPartsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setMaxAvgPartSizeForTooManyParts(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            maxAvgPartSizeForTooManyParts_ = builderForValue.build();
            onChanged();
          } else {
            maxAvgPartSizeForTooManyPartsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder mergeMaxAvgPartSizeForTooManyParts(com.google.protobuf.Int64Value value) {
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            if (maxAvgPartSizeForTooManyParts_ != null) {
              maxAvgPartSizeForTooManyParts_ =
                com.google.protobuf.Int64Value.newBuilder(maxAvgPartSizeForTooManyParts_).mergeFrom(value).buildPartial();
            } else {
              maxAvgPartSizeForTooManyParts_ = value;
            }
            onChanged();
          } else {
            maxAvgPartSizeForTooManyPartsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder clearMaxAvgPartSizeForTooManyParts() {
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            maxAvgPartSizeForTooManyParts_ = null;
            onChanged();
          } else {
            maxAvgPartSizeForTooManyParts_ = null;
            maxAvgPartSizeForTooManyPartsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxAvgPartSizeForTooManyPartsBuilder() {
          
          onChanged();
          return getMaxAvgPartSizeForTooManyPartsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxAvgPartSizeForTooManyPartsOrBuilder() {
          if (maxAvgPartSizeForTooManyPartsBuilder_ != null) {
            return maxAvgPartSizeForTooManyPartsBuilder_.getMessageOrBuilder();
          } else {
            return maxAvgPartSizeForTooManyParts_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxAvgPartSizeForTooManyParts_;
          }
        }
        /**
         * <pre>
         * The 'too many parts' check according to 'parts_to_delay_insert' and 'parts_to_throw_insert' will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
         * Default: 1 GiB
         * Min version: 22.10
         * See in-depth description in [ClickHouse GitHub](https://github.com/ClickHouse/ClickHouse/blob/f9558345e886876b9132d9c018e357f7fa9b22a3/src/Storages/MergeTree/MergeTreeSettings.h#L80)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value max_avg_part_size_for_too_many_parts = 21 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxAvgPartSizeForTooManyPartsFieldBuilder() {
          if (maxAvgPartSizeForTooManyPartsBuilder_ == null) {
            maxAvgPartSizeForTooManyPartsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxAvgPartSizeForTooManyParts(),
                    getParentForChildren(),
                    isClean());
            maxAvgPartSizeForTooManyParts_ = null;
          }
          return maxAvgPartSizeForTooManyPartsBuilder_;
        }

        private com.google.protobuf.Int64Value minAgeToForceMergeSeconds_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> minAgeToForceMergeSecondsBuilder_;
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return Whether the minAgeToForceMergeSeconds field is set.
         */
        public boolean hasMinAgeToForceMergeSeconds() {
          return minAgeToForceMergeSecondsBuilder_ != null || minAgeToForceMergeSeconds_ != null;
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return The minAgeToForceMergeSeconds.
         */
        public com.google.protobuf.Int64Value getMinAgeToForceMergeSeconds() {
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            return minAgeToForceMergeSeconds_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : minAgeToForceMergeSeconds_;
          } else {
            return minAgeToForceMergeSecondsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setMinAgeToForceMergeSeconds(com.google.protobuf.Int64Value value) {
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            minAgeToForceMergeSeconds_ = value;
            onChanged();
          } else {
            minAgeToForceMergeSecondsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setMinAgeToForceMergeSeconds(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            minAgeToForceMergeSeconds_ = builderForValue.build();
            onChanged();
          } else {
            minAgeToForceMergeSecondsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder mergeMinAgeToForceMergeSeconds(com.google.protobuf.Int64Value value) {
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            if (minAgeToForceMergeSeconds_ != null) {
              minAgeToForceMergeSeconds_ =
                com.google.protobuf.Int64Value.newBuilder(minAgeToForceMergeSeconds_).mergeFrom(value).buildPartial();
            } else {
              minAgeToForceMergeSeconds_ = value;
            }
            onChanged();
          } else {
            minAgeToForceMergeSecondsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder clearMinAgeToForceMergeSeconds() {
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            minAgeToForceMergeSeconds_ = null;
            onChanged();
          } else {
            minAgeToForceMergeSeconds_ = null;
            minAgeToForceMergeSecondsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64Value.Builder getMinAgeToForceMergeSecondsBuilder() {
          
          onChanged();
          return getMinAgeToForceMergeSecondsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMinAgeToForceMergeSecondsOrBuilder() {
          if (minAgeToForceMergeSecondsBuilder_ != null) {
            return minAgeToForceMergeSecondsBuilder_.getMessageOrBuilder();
          } else {
            return minAgeToForceMergeSeconds_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : minAgeToForceMergeSeconds_;
          }
        }
        /**
         * <pre>
         * Merge parts if every part in the range is older than the value of min_age_to_force_merge_seconds.
         * Default: 0 - disabled
         * Min_version: 22.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value min_age_to_force_merge_seconds = 22 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMinAgeToForceMergeSecondsFieldBuilder() {
          if (minAgeToForceMergeSecondsBuilder_ == null) {
            minAgeToForceMergeSecondsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMinAgeToForceMergeSeconds(),
                    getParentForChildren(),
                    isClean());
            minAgeToForceMergeSeconds_ = null;
          }
          return minAgeToForceMergeSecondsBuilder_;
        }

        private com.google.protobuf.BoolValue minAgeToForceMergeOnPartitionOnly_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> minAgeToForceMergeOnPartitionOnlyBuilder_;
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         * @return Whether the minAgeToForceMergeOnPartitionOnly field is set.
         */
        public boolean hasMinAgeToForceMergeOnPartitionOnly() {
          return minAgeToForceMergeOnPartitionOnlyBuilder_ != null || minAgeToForceMergeOnPartitionOnly_ != null;
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         * @return The minAgeToForceMergeOnPartitionOnly.
         */
        public com.google.protobuf.BoolValue getMinAgeToForceMergeOnPartitionOnly() {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            return minAgeToForceMergeOnPartitionOnly_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : minAgeToForceMergeOnPartitionOnly_;
          } else {
            return minAgeToForceMergeOnPartitionOnlyBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        public Builder setMinAgeToForceMergeOnPartitionOnly(com.google.protobuf.BoolValue value) {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            minAgeToForceMergeOnPartitionOnly_ = value;
            onChanged();
          } else {
            minAgeToForceMergeOnPartitionOnlyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        public Builder setMinAgeToForceMergeOnPartitionOnly(
            com.google.protobuf.BoolValue.Builder builderForValue) {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            minAgeToForceMergeOnPartitionOnly_ = builderForValue.build();
            onChanged();
          } else {
            minAgeToForceMergeOnPartitionOnlyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        public Builder mergeMinAgeToForceMergeOnPartitionOnly(com.google.protobuf.BoolValue value) {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            if (minAgeToForceMergeOnPartitionOnly_ != null) {
              minAgeToForceMergeOnPartitionOnly_ =
                com.google.protobuf.BoolValue.newBuilder(minAgeToForceMergeOnPartitionOnly_).mergeFrom(value).buildPartial();
            } else {
              minAgeToForceMergeOnPartitionOnly_ = value;
            }
            onChanged();
          } else {
            minAgeToForceMergeOnPartitionOnlyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        public Builder clearMinAgeToForceMergeOnPartitionOnly() {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            minAgeToForceMergeOnPartitionOnly_ = null;
            onChanged();
          } else {
            minAgeToForceMergeOnPartitionOnly_ = null;
            minAgeToForceMergeOnPartitionOnlyBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        public com.google.protobuf.BoolValue.Builder getMinAgeToForceMergeOnPartitionOnlyBuilder() {
          
          onChanged();
          return getMinAgeToForceMergeOnPartitionOnlyFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getMinAgeToForceMergeOnPartitionOnlyOrBuilder() {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ != null) {
            return minAgeToForceMergeOnPartitionOnlyBuilder_.getMessageOrBuilder();
          } else {
            return minAgeToForceMergeOnPartitionOnly_ == null ?
                com.google.protobuf.BoolValue.getDefaultInstance() : minAgeToForceMergeOnPartitionOnly_;
          }
        }
        /**
         * <pre>
         * Whether min_age_to_force_merge_seconds should be applied only on the entire partition and not on subset.
         * Default: false
         * Min_version: 22.11
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/merge-tree-settings#min_age_to_force_merge_seconds)
         * </pre>
         *
         * <code>.google.protobuf.BoolValue min_age_to_force_merge_on_partition_only = 23;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
            getMinAgeToForceMergeOnPartitionOnlyFieldBuilder() {
          if (minAgeToForceMergeOnPartitionOnlyBuilder_ == null) {
            minAgeToForceMergeOnPartitionOnlyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                    getMinAgeToForceMergeOnPartitionOnly(),
                    getParentForChildren(),
                    isClean());
            minAgeToForceMergeOnPartitionOnly_ = null;
          }
          return minAgeToForceMergeOnPartitionOnlyBuilder_;
        }

        private com.google.protobuf.Int64Value mergeSelectingSleepMs_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> mergeSelectingSleepMsBuilder_;
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         * @return Whether the mergeSelectingSleepMs field is set.
         */
        public boolean hasMergeSelectingSleepMs() {
          return mergeSelectingSleepMsBuilder_ != null || mergeSelectingSleepMs_ != null;
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         * @return The mergeSelectingSleepMs.
         */
        public com.google.protobuf.Int64Value getMergeSelectingSleepMs() {
          if (mergeSelectingSleepMsBuilder_ == null) {
            return mergeSelectingSleepMs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : mergeSelectingSleepMs_;
          } else {
            return mergeSelectingSleepMsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        public Builder setMergeSelectingSleepMs(com.google.protobuf.Int64Value value) {
          if (mergeSelectingSleepMsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mergeSelectingSleepMs_ = value;
            onChanged();
          } else {
            mergeSelectingSleepMsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        public Builder setMergeSelectingSleepMs(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (mergeSelectingSleepMsBuilder_ == null) {
            mergeSelectingSleepMs_ = builderForValue.build();
            onChanged();
          } else {
            mergeSelectingSleepMsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        public Builder mergeMergeSelectingSleepMs(com.google.protobuf.Int64Value value) {
          if (mergeSelectingSleepMsBuilder_ == null) {
            if (mergeSelectingSleepMs_ != null) {
              mergeSelectingSleepMs_ =
                com.google.protobuf.Int64Value.newBuilder(mergeSelectingSleepMs_).mergeFrom(value).buildPartial();
            } else {
              mergeSelectingSleepMs_ = value;
            }
            onChanged();
          } else {
            mergeSelectingSleepMsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        public Builder clearMergeSelectingSleepMs() {
          if (mergeSelectingSleepMsBuilder_ == null) {
            mergeSelectingSleepMs_ = null;
            onChanged();
          } else {
            mergeSelectingSleepMs_ = null;
            mergeSelectingSleepMsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        public com.google.protobuf.Int64Value.Builder getMergeSelectingSleepMsBuilder() {
          
          onChanged();
          return getMergeSelectingSleepMsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMergeSelectingSleepMsOrBuilder() {
          if (mergeSelectingSleepMsBuilder_ != null) {
            return mergeSelectingSleepMsBuilder_.getMessageOrBuilder();
          } else {
            return mergeSelectingSleepMs_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : mergeSelectingSleepMs_;
          }
        }
        /**
         * <pre>
         * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in background_schedule_pool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
         * Default: 5000
         * Min_version: 21.10
         * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/settings/settings#merge_selecting_sleep_ms)
         * </pre>
         *
         * <code>.google.protobuf.Int64Value merge_selecting_sleep_ms = 24 [(.yandex.cloud.value) = "&gt;0"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMergeSelectingSleepMsFieldBuilder() {
          if (mergeSelectingSleepMsBuilder_ == null) {
            mergeSelectingSleepMsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMergeSelectingSleepMs(),
                    getParentForChildren(),
                    isClean());
            mergeSelectingSleepMs_ = null;
          }
          return mergeSelectingSleepMsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<MergeTree>
          PARSER = new com.google.protobuf.AbstractParser<MergeTree>() {
        @java.lang.Override
        public MergeTree parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MergeTree(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<MergeTree> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MergeTree> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface KafkaOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
       * @return The enum numeric value on the wire for securityProtocol.
       */
      int getSecurityProtocolValue();
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
       * @return The securityProtocol.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol getSecurityProtocol();

      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
       * @return The enum numeric value on the wire for saslMechanism.
       */
      int getSaslMechanismValue();
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
       * @return The saslMechanism.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism getSaslMechanism();

      /**
       * <code>string sasl_username = 3;</code>
       * @return The saslUsername.
       */
      java.lang.String getSaslUsername();
      /**
       * <code>string sasl_username = 3;</code>
       * @return The bytes for saslUsername.
       */
      com.google.protobuf.ByteString
          getSaslUsernameBytes();

      /**
       * <code>string sasl_password = 4;</code>
       * @return The saslPassword.
       */
      java.lang.String getSaslPassword();
      /**
       * <code>string sasl_password = 4;</code>
       * @return The bytes for saslPassword.
       */
      com.google.protobuf.ByteString
          getSaslPasswordBytes();

      /**
       * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
       * @return Whether the enableSslCertificateVerification field is set.
       */
      boolean hasEnableSslCertificateVerification();
      /**
       * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
       * @return The enableSslCertificateVerification.
       */
      com.google.protobuf.BoolValue getEnableSslCertificateVerification();
      /**
       * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
       */
      com.google.protobuf.BoolValueOrBuilder getEnableSslCertificateVerificationOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the maxPollIntervalMs field is set.
       */
      boolean hasMaxPollIntervalMs();
      /**
       * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The maxPollIntervalMs.
       */
      com.google.protobuf.Int64Value getMaxPollIntervalMs();
      /**
       * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getMaxPollIntervalMsOrBuilder();

      /**
       * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the sessionTimeoutMs field is set.
       */
      boolean hasSessionTimeoutMs();
      /**
       * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The sessionTimeoutMs.
       */
      com.google.protobuf.Int64Value getSessionTimeoutMs();
      /**
       * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getSessionTimeoutMsOrBuilder();
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka}
     */
    public static final class Kafka extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka)
        KafkaOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Kafka.newBuilder() to construct.
      private Kafka(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Kafka() {
        securityProtocol_ = 0;
        saslMechanism_ = 0;
        saslUsername_ = "";
        saslPassword_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Kafka();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Kafka(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                securityProtocol_ = rawValue;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                saslMechanism_ = rawValue;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                saslUsername_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                saslPassword_ = s;
                break;
              }
              case 42: {
                com.google.protobuf.BoolValue.Builder subBuilder = null;
                if (enableSslCertificateVerification_ != null) {
                  subBuilder = enableSslCertificateVerification_.toBuilder();
                }
                enableSslCertificateVerification_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(enableSslCertificateVerification_);
                  enableSslCertificateVerification_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (maxPollIntervalMs_ != null) {
                  subBuilder = maxPollIntervalMs_.toBuilder();
                }
                maxPollIntervalMs_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxPollIntervalMs_);
                  maxPollIntervalMs_ = subBuilder.buildPartial();
                }

                break;
              }
              case 58: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (sessionTimeoutMs_ != null) {
                  subBuilder = sessionTimeoutMs_.toBuilder();
                }
                sessionTimeoutMs_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sessionTimeoutMs_);
                  sessionTimeoutMs_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder.class);
      }

      /**
       * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol}
       */
      public enum SecurityProtocol
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SECURITY_PROTOCOL_UNSPECIFIED = 0;</code>
         */
        SECURITY_PROTOCOL_UNSPECIFIED(0),
        /**
         * <code>SECURITY_PROTOCOL_PLAINTEXT = 1;</code>
         */
        SECURITY_PROTOCOL_PLAINTEXT(1),
        /**
         * <code>SECURITY_PROTOCOL_SSL = 2;</code>
         */
        SECURITY_PROTOCOL_SSL(2),
        /**
         * <code>SECURITY_PROTOCOL_SASL_PLAINTEXT = 3;</code>
         */
        SECURITY_PROTOCOL_SASL_PLAINTEXT(3),
        /**
         * <code>SECURITY_PROTOCOL_SASL_SSL = 4;</code>
         */
        SECURITY_PROTOCOL_SASL_SSL(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>SECURITY_PROTOCOL_UNSPECIFIED = 0;</code>
         */
        public static final int SECURITY_PROTOCOL_UNSPECIFIED_VALUE = 0;
        /**
         * <code>SECURITY_PROTOCOL_PLAINTEXT = 1;</code>
         */
        public static final int SECURITY_PROTOCOL_PLAINTEXT_VALUE = 1;
        /**
         * <code>SECURITY_PROTOCOL_SSL = 2;</code>
         */
        public static final int SECURITY_PROTOCOL_SSL_VALUE = 2;
        /**
         * <code>SECURITY_PROTOCOL_SASL_PLAINTEXT = 3;</code>
         */
        public static final int SECURITY_PROTOCOL_SASL_PLAINTEXT_VALUE = 3;
        /**
         * <code>SECURITY_PROTOCOL_SASL_SSL = 4;</code>
         */
        public static final int SECURITY_PROTOCOL_SASL_SSL_VALUE = 4;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SecurityProtocol valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SecurityProtocol forNumber(int value) {
          switch (value) {
            case 0: return SECURITY_PROTOCOL_UNSPECIFIED;
            case 1: return SECURITY_PROTOCOL_PLAINTEXT;
            case 2: return SECURITY_PROTOCOL_SSL;
            case 3: return SECURITY_PROTOCOL_SASL_PLAINTEXT;
            case 4: return SECURITY_PROTOCOL_SASL_SSL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SecurityProtocol>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SecurityProtocol> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SecurityProtocol>() {
                public SecurityProtocol findValueByNumber(int number) {
                  return SecurityProtocol.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDescriptor().getEnumTypes().get(0);
        }

        private static final SecurityProtocol[] VALUES = values();

        public static SecurityProtocol valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SecurityProtocol(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol)
      }

      /**
       * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism}
       */
      public enum SaslMechanism
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SASL_MECHANISM_UNSPECIFIED = 0;</code>
         */
        SASL_MECHANISM_UNSPECIFIED(0),
        /**
         * <code>SASL_MECHANISM_GSSAPI = 1;</code>
         */
        SASL_MECHANISM_GSSAPI(1),
        /**
         * <code>SASL_MECHANISM_PLAIN = 2;</code>
         */
        SASL_MECHANISM_PLAIN(2),
        /**
         * <code>SASL_MECHANISM_SCRAM_SHA_256 = 3;</code>
         */
        SASL_MECHANISM_SCRAM_SHA_256(3),
        /**
         * <code>SASL_MECHANISM_SCRAM_SHA_512 = 4;</code>
         */
        SASL_MECHANISM_SCRAM_SHA_512(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>SASL_MECHANISM_UNSPECIFIED = 0;</code>
         */
        public static final int SASL_MECHANISM_UNSPECIFIED_VALUE = 0;
        /**
         * <code>SASL_MECHANISM_GSSAPI = 1;</code>
         */
        public static final int SASL_MECHANISM_GSSAPI_VALUE = 1;
        /**
         * <code>SASL_MECHANISM_PLAIN = 2;</code>
         */
        public static final int SASL_MECHANISM_PLAIN_VALUE = 2;
        /**
         * <code>SASL_MECHANISM_SCRAM_SHA_256 = 3;</code>
         */
        public static final int SASL_MECHANISM_SCRAM_SHA_256_VALUE = 3;
        /**
         * <code>SASL_MECHANISM_SCRAM_SHA_512 = 4;</code>
         */
        public static final int SASL_MECHANISM_SCRAM_SHA_512_VALUE = 4;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SaslMechanism valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SaslMechanism forNumber(int value) {
          switch (value) {
            case 0: return SASL_MECHANISM_UNSPECIFIED;
            case 1: return SASL_MECHANISM_GSSAPI;
            case 2: return SASL_MECHANISM_PLAIN;
            case 3: return SASL_MECHANISM_SCRAM_SHA_256;
            case 4: return SASL_MECHANISM_SCRAM_SHA_512;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SaslMechanism>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SaslMechanism> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SaslMechanism>() {
                public SaslMechanism findValueByNumber(int number) {
                  return SaslMechanism.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDescriptor().getEnumTypes().get(1);
        }

        private static final SaslMechanism[] VALUES = values();

        public static SaslMechanism valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SaslMechanism(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism)
      }

      public static final int SECURITY_PROTOCOL_FIELD_NUMBER = 1;
      private int securityProtocol_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
       * @return The enum numeric value on the wire for securityProtocol.
       */
      @java.lang.Override public int getSecurityProtocolValue() {
        return securityProtocol_;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
       * @return The securityProtocol.
       */
      @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol getSecurityProtocol() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol.valueOf(securityProtocol_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol.UNRECOGNIZED : result;
      }

      public static final int SASL_MECHANISM_FIELD_NUMBER = 2;
      private int saslMechanism_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
       * @return The enum numeric value on the wire for saslMechanism.
       */
      @java.lang.Override public int getSaslMechanismValue() {
        return saslMechanism_;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
       * @return The saslMechanism.
       */
      @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism getSaslMechanism() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism.valueOf(saslMechanism_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism.UNRECOGNIZED : result;
      }

      public static final int SASL_USERNAME_FIELD_NUMBER = 3;
      private volatile java.lang.Object saslUsername_;
      /**
       * <code>string sasl_username = 3;</code>
       * @return The saslUsername.
       */
      @java.lang.Override
      public java.lang.String getSaslUsername() {
        java.lang.Object ref = saslUsername_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          saslUsername_ = s;
          return s;
        }
      }
      /**
       * <code>string sasl_username = 3;</code>
       * @return The bytes for saslUsername.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSaslUsernameBytes() {
        java.lang.Object ref = saslUsername_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          saslUsername_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SASL_PASSWORD_FIELD_NUMBER = 4;
      private volatile java.lang.Object saslPassword_;
      /**
       * <code>string sasl_password = 4;</code>
       * @return The saslPassword.
       */
      @java.lang.Override
      public java.lang.String getSaslPassword() {
        java.lang.Object ref = saslPassword_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          saslPassword_ = s;
          return s;
        }
      }
      /**
       * <code>string sasl_password = 4;</code>
       * @return The bytes for saslPassword.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSaslPasswordBytes() {
        java.lang.Object ref = saslPassword_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          saslPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ENABLE_SSL_CERTIFICATE_VERIFICATION_FIELD_NUMBER = 5;
      private com.google.protobuf.BoolValue enableSslCertificateVerification_;
      /**
       * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
       * @return Whether the enableSslCertificateVerification field is set.
       */
      @java.lang.Override
      public boolean hasEnableSslCertificateVerification() {
        return enableSslCertificateVerification_ != null;
      }
      /**
       * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
       * @return The enableSslCertificateVerification.
       */
      @java.lang.Override
      public com.google.protobuf.BoolValue getEnableSslCertificateVerification() {
        return enableSslCertificateVerification_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enableSslCertificateVerification_;
      }
      /**
       * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
       */
      @java.lang.Override
      public com.google.protobuf.BoolValueOrBuilder getEnableSslCertificateVerificationOrBuilder() {
        return getEnableSslCertificateVerification();
      }

      public static final int MAX_POLL_INTERVAL_MS_FIELD_NUMBER = 6;
      private com.google.protobuf.Int64Value maxPollIntervalMs_;
      /**
       * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the maxPollIntervalMs field is set.
       */
      @java.lang.Override
      public boolean hasMaxPollIntervalMs() {
        return maxPollIntervalMs_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The maxPollIntervalMs.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getMaxPollIntervalMs() {
        return maxPollIntervalMs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPollIntervalMs_;
      }
      /**
       * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getMaxPollIntervalMsOrBuilder() {
        return getMaxPollIntervalMs();
      }

      public static final int SESSION_TIMEOUT_MS_FIELD_NUMBER = 7;
      private com.google.protobuf.Int64Value sessionTimeoutMs_;
      /**
       * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the sessionTimeoutMs field is set.
       */
      @java.lang.Override
      public boolean hasSessionTimeoutMs() {
        return sessionTimeoutMs_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The sessionTimeoutMs.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getSessionTimeoutMs() {
        return sessionTimeoutMs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sessionTimeoutMs_;
      }
      /**
       * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getSessionTimeoutMsOrBuilder() {
        return getSessionTimeoutMs();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (securityProtocol_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol.SECURITY_PROTOCOL_UNSPECIFIED.getNumber()) {
          output.writeEnum(1, securityProtocol_);
        }
        if (saslMechanism_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism.SASL_MECHANISM_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, saslMechanism_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(saslUsername_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, saslUsername_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(saslPassword_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, saslPassword_);
        }
        if (enableSslCertificateVerification_ != null) {
          output.writeMessage(5, getEnableSslCertificateVerification());
        }
        if (maxPollIntervalMs_ != null) {
          output.writeMessage(6, getMaxPollIntervalMs());
        }
        if (sessionTimeoutMs_ != null) {
          output.writeMessage(7, getSessionTimeoutMs());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (securityProtocol_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol.SECURITY_PROTOCOL_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, securityProtocol_);
        }
        if (saslMechanism_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism.SASL_MECHANISM_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, saslMechanism_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(saslUsername_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, saslUsername_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(saslPassword_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, saslPassword_);
        }
        if (enableSslCertificateVerification_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getEnableSslCertificateVerification());
        }
        if (maxPollIntervalMs_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getMaxPollIntervalMs());
        }
        if (sessionTimeoutMs_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getSessionTimeoutMs());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka) obj;

        if (securityProtocol_ != other.securityProtocol_) return false;
        if (saslMechanism_ != other.saslMechanism_) return false;
        if (!getSaslUsername()
            .equals(other.getSaslUsername())) return false;
        if (!getSaslPassword()
            .equals(other.getSaslPassword())) return false;
        if (hasEnableSslCertificateVerification() != other.hasEnableSslCertificateVerification()) return false;
        if (hasEnableSslCertificateVerification()) {
          if (!getEnableSslCertificateVerification()
              .equals(other.getEnableSslCertificateVerification())) return false;
        }
        if (hasMaxPollIntervalMs() != other.hasMaxPollIntervalMs()) return false;
        if (hasMaxPollIntervalMs()) {
          if (!getMaxPollIntervalMs()
              .equals(other.getMaxPollIntervalMs())) return false;
        }
        if (hasSessionTimeoutMs() != other.hasSessionTimeoutMs()) return false;
        if (hasSessionTimeoutMs()) {
          if (!getSessionTimeoutMs()
              .equals(other.getSessionTimeoutMs())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SECURITY_PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + securityProtocol_;
        hash = (37 * hash) + SASL_MECHANISM_FIELD_NUMBER;
        hash = (53 * hash) + saslMechanism_;
        hash = (37 * hash) + SASL_USERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getSaslUsername().hashCode();
        hash = (37 * hash) + SASL_PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getSaslPassword().hashCode();
        if (hasEnableSslCertificateVerification()) {
          hash = (37 * hash) + ENABLE_SSL_CERTIFICATE_VERIFICATION_FIELD_NUMBER;
          hash = (53 * hash) + getEnableSslCertificateVerification().hashCode();
        }
        if (hasMaxPollIntervalMs()) {
          hash = (37 * hash) + MAX_POLL_INTERVAL_MS_FIELD_NUMBER;
          hash = (53 * hash) + getMaxPollIntervalMs().hashCode();
        }
        if (hasSessionTimeoutMs()) {
          hash = (37 * hash) + SESSION_TIMEOUT_MS_FIELD_NUMBER;
          hash = (53 * hash) + getSessionTimeoutMs().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          securityProtocol_ = 0;

          saslMechanism_ = 0;

          saslUsername_ = "";

          saslPassword_ = "";

          if (enableSslCertificateVerificationBuilder_ == null) {
            enableSslCertificateVerification_ = null;
          } else {
            enableSslCertificateVerification_ = null;
            enableSslCertificateVerificationBuilder_ = null;
          }
          if (maxPollIntervalMsBuilder_ == null) {
            maxPollIntervalMs_ = null;
          } else {
            maxPollIntervalMs_ = null;
            maxPollIntervalMsBuilder_ = null;
          }
          if (sessionTimeoutMsBuilder_ == null) {
            sessionTimeoutMs_ = null;
          } else {
            sessionTimeoutMs_ = null;
            sessionTimeoutMsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka(this);
          result.securityProtocol_ = securityProtocol_;
          result.saslMechanism_ = saslMechanism_;
          result.saslUsername_ = saslUsername_;
          result.saslPassword_ = saslPassword_;
          if (enableSslCertificateVerificationBuilder_ == null) {
            result.enableSslCertificateVerification_ = enableSslCertificateVerification_;
          } else {
            result.enableSslCertificateVerification_ = enableSslCertificateVerificationBuilder_.build();
          }
          if (maxPollIntervalMsBuilder_ == null) {
            result.maxPollIntervalMs_ = maxPollIntervalMs_;
          } else {
            result.maxPollIntervalMs_ = maxPollIntervalMsBuilder_.build();
          }
          if (sessionTimeoutMsBuilder_ == null) {
            result.sessionTimeoutMs_ = sessionTimeoutMs_;
          } else {
            result.sessionTimeoutMs_ = sessionTimeoutMsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance()) return this;
          if (other.securityProtocol_ != 0) {
            setSecurityProtocolValue(other.getSecurityProtocolValue());
          }
          if (other.saslMechanism_ != 0) {
            setSaslMechanismValue(other.getSaslMechanismValue());
          }
          if (!other.getSaslUsername().isEmpty()) {
            saslUsername_ = other.saslUsername_;
            onChanged();
          }
          if (!other.getSaslPassword().isEmpty()) {
            saslPassword_ = other.saslPassword_;
            onChanged();
          }
          if (other.hasEnableSslCertificateVerification()) {
            mergeEnableSslCertificateVerification(other.getEnableSslCertificateVerification());
          }
          if (other.hasMaxPollIntervalMs()) {
            mergeMaxPollIntervalMs(other.getMaxPollIntervalMs());
          }
          if (other.hasSessionTimeoutMs()) {
            mergeSessionTimeoutMs(other.getSessionTimeoutMs());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int securityProtocol_ = 0;
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
         * @return The enum numeric value on the wire for securityProtocol.
         */
        @java.lang.Override public int getSecurityProtocolValue() {
          return securityProtocol_;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
         * @param value The enum numeric value on the wire for securityProtocol to set.
         * @return This builder for chaining.
         */
        public Builder setSecurityProtocolValue(int value) {
          
          securityProtocol_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
         * @return The securityProtocol.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol getSecurityProtocol() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol.valueOf(securityProtocol_);
          return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol.UNRECOGNIZED : result;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
         * @param value The securityProtocol to set.
         * @return This builder for chaining.
         */
        public Builder setSecurityProtocol(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SecurityProtocol value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          securityProtocol_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SecurityProtocol security_protocol = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSecurityProtocol() {
          
          securityProtocol_ = 0;
          onChanged();
          return this;
        }

        private int saslMechanism_ = 0;
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
         * @return The enum numeric value on the wire for saslMechanism.
         */
        @java.lang.Override public int getSaslMechanismValue() {
          return saslMechanism_;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
         * @param value The enum numeric value on the wire for saslMechanism to set.
         * @return This builder for chaining.
         */
        public Builder setSaslMechanismValue(int value) {
          
          saslMechanism_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
         * @return The saslMechanism.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism getSaslMechanism() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism.valueOf(saslMechanism_);
          return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism.UNRECOGNIZED : result;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
         * @param value The saslMechanism to set.
         * @return This builder for chaining.
         */
        public Builder setSaslMechanism(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.SaslMechanism value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          saslMechanism_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka.SaslMechanism sasl_mechanism = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSaslMechanism() {
          
          saslMechanism_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object saslUsername_ = "";
        /**
         * <code>string sasl_username = 3;</code>
         * @return The saslUsername.
         */
        public java.lang.String getSaslUsername() {
          java.lang.Object ref = saslUsername_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            saslUsername_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string sasl_username = 3;</code>
         * @return The bytes for saslUsername.
         */
        public com.google.protobuf.ByteString
            getSaslUsernameBytes() {
          java.lang.Object ref = saslUsername_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            saslUsername_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string sasl_username = 3;</code>
         * @param value The saslUsername to set.
         * @return This builder for chaining.
         */
        public Builder setSaslUsername(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          saslUsername_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string sasl_username = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSaslUsername() {
          
          saslUsername_ = getDefaultInstance().getSaslUsername();
          onChanged();
          return this;
        }
        /**
         * <code>string sasl_username = 3;</code>
         * @param value The bytes for saslUsername to set.
         * @return This builder for chaining.
         */
        public Builder setSaslUsernameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          saslUsername_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object saslPassword_ = "";
        /**
         * <code>string sasl_password = 4;</code>
         * @return The saslPassword.
         */
        public java.lang.String getSaslPassword() {
          java.lang.Object ref = saslPassword_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            saslPassword_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string sasl_password = 4;</code>
         * @return The bytes for saslPassword.
         */
        public com.google.protobuf.ByteString
            getSaslPasswordBytes() {
          java.lang.Object ref = saslPassword_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            saslPassword_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string sasl_password = 4;</code>
         * @param value The saslPassword to set.
         * @return This builder for chaining.
         */
        public Builder setSaslPassword(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          saslPassword_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string sasl_password = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearSaslPassword() {
          
          saslPassword_ = getDefaultInstance().getSaslPassword();
          onChanged();
          return this;
        }
        /**
         * <code>string sasl_password = 4;</code>
         * @param value The bytes for saslPassword to set.
         * @return This builder for chaining.
         */
        public Builder setSaslPasswordBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          saslPassword_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.BoolValue enableSslCertificateVerification_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> enableSslCertificateVerificationBuilder_;
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         * @return Whether the enableSslCertificateVerification field is set.
         */
        public boolean hasEnableSslCertificateVerification() {
          return enableSslCertificateVerificationBuilder_ != null || enableSslCertificateVerification_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         * @return The enableSslCertificateVerification.
         */
        public com.google.protobuf.BoolValue getEnableSslCertificateVerification() {
          if (enableSslCertificateVerificationBuilder_ == null) {
            return enableSslCertificateVerification_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enableSslCertificateVerification_;
          } else {
            return enableSslCertificateVerificationBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        public Builder setEnableSslCertificateVerification(com.google.protobuf.BoolValue value) {
          if (enableSslCertificateVerificationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            enableSslCertificateVerification_ = value;
            onChanged();
          } else {
            enableSslCertificateVerificationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        public Builder setEnableSslCertificateVerification(
            com.google.protobuf.BoolValue.Builder builderForValue) {
          if (enableSslCertificateVerificationBuilder_ == null) {
            enableSslCertificateVerification_ = builderForValue.build();
            onChanged();
          } else {
            enableSslCertificateVerificationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        public Builder mergeEnableSslCertificateVerification(com.google.protobuf.BoolValue value) {
          if (enableSslCertificateVerificationBuilder_ == null) {
            if (enableSslCertificateVerification_ != null) {
              enableSslCertificateVerification_ =
                com.google.protobuf.BoolValue.newBuilder(enableSslCertificateVerification_).mergeFrom(value).buildPartial();
            } else {
              enableSslCertificateVerification_ = value;
            }
            onChanged();
          } else {
            enableSslCertificateVerificationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        public Builder clearEnableSslCertificateVerification() {
          if (enableSslCertificateVerificationBuilder_ == null) {
            enableSslCertificateVerification_ = null;
            onChanged();
          } else {
            enableSslCertificateVerification_ = null;
            enableSslCertificateVerificationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        public com.google.protobuf.BoolValue.Builder getEnableSslCertificateVerificationBuilder() {
          
          onChanged();
          return getEnableSslCertificateVerificationFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getEnableSslCertificateVerificationOrBuilder() {
          if (enableSslCertificateVerificationBuilder_ != null) {
            return enableSslCertificateVerificationBuilder_.getMessageOrBuilder();
          } else {
            return enableSslCertificateVerification_ == null ?
                com.google.protobuf.BoolValue.getDefaultInstance() : enableSslCertificateVerification_;
          }
        }
        /**
         * <code>.google.protobuf.BoolValue enable_ssl_certificate_verification = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
            getEnableSslCertificateVerificationFieldBuilder() {
          if (enableSslCertificateVerificationBuilder_ == null) {
            enableSslCertificateVerificationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                    getEnableSslCertificateVerification(),
                    getParentForChildren(),
                    isClean());
            enableSslCertificateVerification_ = null;
          }
          return enableSslCertificateVerificationBuilder_;
        }

        private com.google.protobuf.Int64Value maxPollIntervalMs_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxPollIntervalMsBuilder_;
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return Whether the maxPollIntervalMs field is set.
         */
        public boolean hasMaxPollIntervalMs() {
          return maxPollIntervalMsBuilder_ != null || maxPollIntervalMs_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return The maxPollIntervalMs.
         */
        public com.google.protobuf.Int64Value getMaxPollIntervalMs() {
          if (maxPollIntervalMsBuilder_ == null) {
            return maxPollIntervalMs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPollIntervalMs_;
          } else {
            return maxPollIntervalMsBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setMaxPollIntervalMs(com.google.protobuf.Int64Value value) {
          if (maxPollIntervalMsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxPollIntervalMs_ = value;
            onChanged();
          } else {
            maxPollIntervalMsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setMaxPollIntervalMs(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (maxPollIntervalMsBuilder_ == null) {
            maxPollIntervalMs_ = builderForValue.build();
            onChanged();
          } else {
            maxPollIntervalMsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder mergeMaxPollIntervalMs(com.google.protobuf.Int64Value value) {
          if (maxPollIntervalMsBuilder_ == null) {
            if (maxPollIntervalMs_ != null) {
              maxPollIntervalMs_ =
                com.google.protobuf.Int64Value.newBuilder(maxPollIntervalMs_).mergeFrom(value).buildPartial();
            } else {
              maxPollIntervalMs_ = value;
            }
            onChanged();
          } else {
            maxPollIntervalMsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder clearMaxPollIntervalMs() {
          if (maxPollIntervalMsBuilder_ == null) {
            maxPollIntervalMs_ = null;
            onChanged();
          } else {
            maxPollIntervalMs_ = null;
            maxPollIntervalMsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64Value.Builder getMaxPollIntervalMsBuilder() {
          
          onChanged();
          return getMaxPollIntervalMsFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getMaxPollIntervalMsOrBuilder() {
          if (maxPollIntervalMsBuilder_ != null) {
            return maxPollIntervalMsBuilder_.getMessageOrBuilder();
          } else {
            return maxPollIntervalMs_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : maxPollIntervalMs_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value max_poll_interval_ms = 6 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getMaxPollIntervalMsFieldBuilder() {
          if (maxPollIntervalMsBuilder_ == null) {
            maxPollIntervalMsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getMaxPollIntervalMs(),
                    getParentForChildren(),
                    isClean());
            maxPollIntervalMs_ = null;
          }
          return maxPollIntervalMsBuilder_;
        }

        private com.google.protobuf.Int64Value sessionTimeoutMs_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> sessionTimeoutMsBuilder_;
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return Whether the sessionTimeoutMs field is set.
         */
        public boolean hasSessionTimeoutMs() {
          return sessionTimeoutMsBuilder_ != null || sessionTimeoutMs_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return The sessionTimeoutMs.
         */
        public com.google.protobuf.Int64Value getSessionTimeoutMs() {
          if (sessionTimeoutMsBuilder_ == null) {
            return sessionTimeoutMs_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sessionTimeoutMs_;
          } else {
            return sessionTimeoutMsBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setSessionTimeoutMs(com.google.protobuf.Int64Value value) {
          if (sessionTimeoutMsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sessionTimeoutMs_ = value;
            onChanged();
          } else {
            sessionTimeoutMsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setSessionTimeoutMs(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (sessionTimeoutMsBuilder_ == null) {
            sessionTimeoutMs_ = builderForValue.build();
            onChanged();
          } else {
            sessionTimeoutMsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder mergeSessionTimeoutMs(com.google.protobuf.Int64Value value) {
          if (sessionTimeoutMsBuilder_ == null) {
            if (sessionTimeoutMs_ != null) {
              sessionTimeoutMs_ =
                com.google.protobuf.Int64Value.newBuilder(sessionTimeoutMs_).mergeFrom(value).buildPartial();
            } else {
              sessionTimeoutMs_ = value;
            }
            onChanged();
          } else {
            sessionTimeoutMsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder clearSessionTimeoutMs() {
          if (sessionTimeoutMsBuilder_ == null) {
            sessionTimeoutMs_ = null;
            onChanged();
          } else {
            sessionTimeoutMs_ = null;
            sessionTimeoutMsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64Value.Builder getSessionTimeoutMsBuilder() {
          
          onChanged();
          return getSessionTimeoutMsFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getSessionTimeoutMsOrBuilder() {
          if (sessionTimeoutMsBuilder_ != null) {
            return sessionTimeoutMsBuilder_.getMessageOrBuilder();
          } else {
            return sessionTimeoutMs_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : sessionTimeoutMs_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value session_timeout_ms = 7 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getSessionTimeoutMsFieldBuilder() {
          if (sessionTimeoutMsBuilder_ == null) {
            sessionTimeoutMsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getSessionTimeoutMs(),
                    getParentForChildren(),
                    isClean());
            sessionTimeoutMs_ = null;
          }
          return sessionTimeoutMsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Kafka>
          PARSER = new com.google.protobuf.AbstractParser<Kafka>() {
        @java.lang.Override
        public Kafka parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Kafka(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Kafka> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Kafka> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface KafkaTopicOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
       * @return Whether the settings field is set.
       */
      boolean hasSettings();
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
       * @return The settings.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getSettings();
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder getSettingsOrBuilder();
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic}
     */
    public static final class KafkaTopic extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic)
        KafkaTopicOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use KafkaTopic.newBuilder() to construct.
      private KafkaTopic(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private KafkaTopic() {
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new KafkaTopic();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private KafkaTopic(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder subBuilder = null;
                if (settings_ != null) {
                  subBuilder = settings_.toBuilder();
                }
                settings_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(settings_);
                  settings_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SETTINGS_FIELD_NUMBER = 2;
      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka settings_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
       * @return Whether the settings field is set.
       */
      @java.lang.Override
      public boolean hasSettings() {
        return settings_ != null;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
       * @return The settings.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getSettings() {
        return settings_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance() : settings_;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder getSettingsOrBuilder() {
        return getSettings();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (settings_ != null) {
          output.writeMessage(2, getSettings());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (settings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getSettings());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (hasSettings() != other.hasSettings()) return false;
        if (hasSettings()) {
          if (!getSettings()
              .equals(other.getSettings())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (hasSettings()) {
          hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getSettings().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          if (settingsBuilder_ == null) {
            settings_ = null;
          } else {
            settings_ = null;
            settingsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic(this);
          result.name_ = name_;
          if (settingsBuilder_ == null) {
            result.settings_ = settings_;
          } else {
            result.settings_ = settingsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (other.hasSettings()) {
            mergeSettings(other.getSettings());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka settings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder> settingsBuilder_;
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         * @return Whether the settings field is set.
         */
        public boolean hasSettings() {
          return settingsBuilder_ != null || settings_ != null;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         * @return The settings.
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getSettings() {
          if (settingsBuilder_ == null) {
            return settings_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance() : settings_;
          } else {
            return settingsBuilder_.getMessage();
          }
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder setSettings(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka value) {
          if (settingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            settings_ = value;
            onChanged();
          } else {
            settingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder setSettings(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder builderForValue) {
          if (settingsBuilder_ == null) {
            settings_ = builderForValue.build();
            onChanged();
          } else {
            settingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder mergeSettings(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka value) {
          if (settingsBuilder_ == null) {
            if (settings_ != null) {
              settings_ =
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.newBuilder(settings_).mergeFrom(value).buildPartial();
            } else {
              settings_ = value;
            }
            onChanged();
          } else {
            settingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder clearSettings() {
          if (settingsBuilder_ == null) {
            settings_ = null;
            onChanged();
          } else {
            settings_ = null;
            settingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder getSettingsBuilder() {
          
          onChanged();
          return getSettingsFieldBuilder().getBuilder();
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder getSettingsOrBuilder() {
          if (settingsBuilder_ != null) {
            return settingsBuilder_.getMessageOrBuilder();
          } else {
            return settings_ == null ?
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance() : settings_;
          }
        }
        /**
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka settings = 2 [(.yandex.cloud.required) = true];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder> 
            getSettingsFieldBuilder() {
          if (settingsBuilder_ == null) {
            settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder>(
                    getSettings(),
                    getParentForChildren(),
                    isClean());
            settings_ = null;
          }
          return settingsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<KafkaTopic>
          PARSER = new com.google.protobuf.AbstractParser<KafkaTopic>() {
        @java.lang.Override
        public KafkaTopic parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new KafkaTopic(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<KafkaTopic> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<KafkaTopic> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RabbitmqOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
       * </pre>
       *
       * <code>string username = 1;</code>
       * @return The username.
       */
      java.lang.String getUsername();
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
       * </pre>
       *
       * <code>string username = 1;</code>
       * @return The bytes for username.
       */
      com.google.protobuf.ByteString
          getUsernameBytes();

      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
       * </pre>
       *
       * <code>string password = 2;</code>
       * @return The password.
       */
      java.lang.String getPassword();
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
       * </pre>
       *
       * <code>string password = 2;</code>
       * @return The bytes for password.
       */
      com.google.protobuf.ByteString
          getPasswordBytes();

      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
       * </pre>
       *
       * <code>string vhost = 3;</code>
       * @return The vhost.
       */
      java.lang.String getVhost();
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
       * </pre>
       *
       * <code>string vhost = 3;</code>
       * @return The bytes for vhost.
       */
      com.google.protobuf.ByteString
          getVhostBytes();
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq}
     */
    public static final class Rabbitmq extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq)
        RabbitmqOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Rabbitmq.newBuilder() to construct.
      private Rabbitmq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Rabbitmq() {
        username_ = "";
        password_ = "";
        vhost_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Rabbitmq();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Rabbitmq(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                username_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                password_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                vhost_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder.class);
      }

      public static final int USERNAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object username_;
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
       * </pre>
       *
       * <code>string username = 1;</code>
       * @return The username.
       */
      @java.lang.Override
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          username_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
       * </pre>
       *
       * <code>string username = 1;</code>
       * @return The bytes for username.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PASSWORD_FIELD_NUMBER = 2;
      private volatile java.lang.Object password_;
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
       * </pre>
       *
       * <code>string password = 2;</code>
       * @return The password.
       */
      @java.lang.Override
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
       * </pre>
       *
       * <code>string password = 2;</code>
       * @return The bytes for password.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int VHOST_FIELD_NUMBER = 3;
      private volatile java.lang.Object vhost_;
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
       * </pre>
       *
       * <code>string vhost = 3;</code>
       * @return The vhost.
       */
      @java.lang.Override
      public java.lang.String getVhost() {
        java.lang.Object ref = vhost_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          vhost_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
       * </pre>
       *
       * <code>string vhost = 3;</code>
       * @return The bytes for vhost.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVhostBytes() {
        java.lang.Object ref = vhost_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vhost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(username_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, username_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vhost_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, vhost_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(username_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, username_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(vhost_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, vhost_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq) obj;

        if (!getUsername()
            .equals(other.getUsername())) return false;
        if (!getPassword()
            .equals(other.getPassword())) return false;
        if (!getVhost()
            .equals(other.getVhost())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + USERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getUsername().hashCode();
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
        hash = (37 * hash) + VHOST_FIELD_NUMBER;
        hash = (53 * hash) + getVhost().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          username_ = "";

          password_ = "";

          vhost_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq(this);
          result.username_ = username_;
          result.password_ = password_;
          result.vhost_ = vhost_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.getDefaultInstance()) return this;
          if (!other.getUsername().isEmpty()) {
            username_ = other.username_;
            onChanged();
          }
          if (!other.getPassword().isEmpty()) {
            password_ = other.password_;
            onChanged();
          }
          if (!other.getVhost().isEmpty()) {
            vhost_ = other.vhost_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object username_ = "";
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
         * </pre>
         *
         * <code>string username = 1;</code>
         * @return The username.
         */
        public java.lang.String getUsername() {
          java.lang.Object ref = username_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            username_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
         * </pre>
         *
         * <code>string username = 1;</code>
         * @return The bytes for username.
         */
        public com.google.protobuf.ByteString
            getUsernameBytes() {
          java.lang.Object ref = username_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            username_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
         * </pre>
         *
         * <code>string username = 1;</code>
         * @param value The username to set.
         * @return This builder for chaining.
         */
        public Builder setUsername(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          username_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
         * </pre>
         *
         * <code>string username = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearUsername() {
          
          username_ = getDefaultInstance().getUsername();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) username
         * </pre>
         *
         * <code>string username = 1;</code>
         * @param value The bytes for username to set.
         * @return This builder for chaining.
         */
        public Builder setUsernameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          username_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object password_ = "";
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
         * </pre>
         *
         * <code>string password = 2;</code>
         * @return The password.
         */
        public java.lang.String getPassword() {
          java.lang.Object ref = password_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            password_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
         * </pre>
         *
         * <code>string password = 2;</code>
         * @return The bytes for password.
         */
        public com.google.protobuf.ByteString
            getPasswordBytes() {
          java.lang.Object ref = password_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            password_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
         * </pre>
         *
         * <code>string password = 2;</code>
         * @param value The password to set.
         * @return This builder for chaining.
         */
        public Builder setPassword(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          password_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
         * </pre>
         *
         * <code>string password = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPassword() {
          
          password_ = getDefaultInstance().getPassword();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) password
         * </pre>
         *
         * <code>string password = 2;</code>
         * @param value The bytes for password to set.
         * @return This builder for chaining.
         */
        public Builder setPasswordBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          password_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object vhost_ = "";
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
         * </pre>
         *
         * <code>string vhost = 3;</code>
         * @return The vhost.
         */
        public java.lang.String getVhost() {
          java.lang.Object ref = vhost_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            vhost_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
         * </pre>
         *
         * <code>string vhost = 3;</code>
         * @return The bytes for vhost.
         */
        public com.google.protobuf.ByteString
            getVhostBytes() {
          java.lang.Object ref = vhost_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            vhost_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
         * </pre>
         *
         * <code>string vhost = 3;</code>
         * @param value The vhost to set.
         * @return This builder for chaining.
         */
        public Builder setVhost(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          vhost_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
         * </pre>
         *
         * <code>string vhost = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearVhost() {
          
          vhost_ = getDefaultInstance().getVhost();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [RabbitMQ](https://clickhouse.com/docs/en/engines/table-engines/integrations/rabbitmq/) virtual host
         * </pre>
         *
         * <code>string vhost = 3;</code>
         * @param value The bytes for vhost to set.
         * @return This builder for chaining.
         */
        public Builder setVhostBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          vhost_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Rabbitmq>
          PARSER = new com.google.protobuf.AbstractParser<Rabbitmq>() {
        @java.lang.Override
        public Rabbitmq parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Rabbitmq(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Rabbitmq> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Rabbitmq> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CompressionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
       * @return The enum numeric value on the wire for method.
       */
      int getMethodValue();
      /**
       * <pre>
       * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
       * @return The method.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method getMethod();

      /**
       * <pre>
       * Minimum size of a part of a table.
       * </pre>
       *
       * <code>int64 min_part_size = 2 [(.yandex.cloud.value) = "&gt;=1"];</code>
       * @return The minPartSize.
       */
      long getMinPartSize();

      /**
       * <pre>
       * Minimum ratio of a part relative to the size of all the data in the table.
       * </pre>
       *
       * <code>double min_part_size_ratio = 3;</code>
       * @return The minPartSizeRatio.
       */
      double getMinPartSizeRatio();

      /**
       * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the level field is set.
       */
      boolean hasLevel();
      /**
       * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The level.
       */
      com.google.protobuf.Int64Value getLevel();
      /**
       * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      com.google.protobuf.Int64ValueOrBuilder getLevelOrBuilder();
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression}
     */
    public static final class Compression extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression)
        CompressionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Compression.newBuilder() to construct.
      private Compression(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Compression() {
        method_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Compression();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Compression(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                method_ = rawValue;
                break;
              }
              case 16: {

                minPartSize_ = input.readInt64();
                break;
              }
              case 25: {

                minPartSizeRatio_ = input.readDouble();
                break;
              }
              case 34: {
                com.google.protobuf.Int64Value.Builder subBuilder = null;
                if (level_ != null) {
                  subBuilder = level_.toBuilder();
                }
                level_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(level_);
                  level_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder.class);
      }

      /**
       * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method}
       */
      public enum Method
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>METHOD_UNSPECIFIED = 0;</code>
         */
        METHOD_UNSPECIFIED(0),
        /**
         * <pre>
         * [LZ4 compression algorithm](https://lz4.github.io/lz4/).
         * </pre>
         *
         * <code>LZ4 = 1;</code>
         */
        LZ4(1),
        /**
         * <pre>
         * [Zstandard compression algorithm](https://facebook.github.io/zstd/).
         * </pre>
         *
         * <code>ZSTD = 2;</code>
         */
        ZSTD(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>METHOD_UNSPECIFIED = 0;</code>
         */
        public static final int METHOD_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * [LZ4 compression algorithm](https://lz4.github.io/lz4/).
         * </pre>
         *
         * <code>LZ4 = 1;</code>
         */
        public static final int LZ4_VALUE = 1;
        /**
         * <pre>
         * [Zstandard compression algorithm](https://facebook.github.io/zstd/).
         * </pre>
         *
         * <code>ZSTD = 2;</code>
         */
        public static final int ZSTD_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Method valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Method forNumber(int value) {
          switch (value) {
            case 0: return METHOD_UNSPECIFIED;
            case 1: return LZ4;
            case 2: return ZSTD;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Method>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Method> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Method>() {
                public Method findValueByNumber(int number) {
                  return Method.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.getDescriptor().getEnumTypes().get(0);
        }

        private static final Method[] VALUES = values();

        public static Method valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Method(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method)
      }

      public static final int METHOD_FIELD_NUMBER = 1;
      private int method_;
      /**
       * <pre>
       * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
       * @return The enum numeric value on the wire for method.
       */
      @java.lang.Override public int getMethodValue() {
        return method_;
      }
      /**
       * <pre>
       * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
       * @return The method.
       */
      @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method getMethod() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method.valueOf(method_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method.UNRECOGNIZED : result;
      }

      public static final int MIN_PART_SIZE_FIELD_NUMBER = 2;
      private long minPartSize_;
      /**
       * <pre>
       * Minimum size of a part of a table.
       * </pre>
       *
       * <code>int64 min_part_size = 2 [(.yandex.cloud.value) = "&gt;=1"];</code>
       * @return The minPartSize.
       */
      @java.lang.Override
      public long getMinPartSize() {
        return minPartSize_;
      }

      public static final int MIN_PART_SIZE_RATIO_FIELD_NUMBER = 3;
      private double minPartSizeRatio_;
      /**
       * <pre>
       * Minimum ratio of a part relative to the size of all the data in the table.
       * </pre>
       *
       * <code>double min_part_size_ratio = 3;</code>
       * @return The minPartSizeRatio.
       */
      @java.lang.Override
      public double getMinPartSizeRatio() {
        return minPartSizeRatio_;
      }

      public static final int LEVEL_FIELD_NUMBER = 4;
      private com.google.protobuf.Int64Value level_;
      /**
       * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the level field is set.
       */
      @java.lang.Override
      public boolean hasLevel() {
        return level_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The level.
       */
      @java.lang.Override
      public com.google.protobuf.Int64Value getLevel() {
        return level_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : level_;
      }
      /**
       * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Int64ValueOrBuilder getLevelOrBuilder() {
        return getLevel();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (method_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method.METHOD_UNSPECIFIED.getNumber()) {
          output.writeEnum(1, method_);
        }
        if (minPartSize_ != 0L) {
          output.writeInt64(2, minPartSize_);
        }
        if (java.lang.Double.doubleToRawLongBits(minPartSizeRatio_) != 0) {
          output.writeDouble(3, minPartSizeRatio_);
        }
        if (level_ != null) {
          output.writeMessage(4, getLevel());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (method_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method.METHOD_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, method_);
        }
        if (minPartSize_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, minPartSize_);
        }
        if (java.lang.Double.doubleToRawLongBits(minPartSizeRatio_) != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, minPartSizeRatio_);
        }
        if (level_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getLevel());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression) obj;

        if (method_ != other.method_) return false;
        if (getMinPartSize()
            != other.getMinPartSize()) return false;
        if (java.lang.Double.doubleToLongBits(getMinPartSizeRatio())
            != java.lang.Double.doubleToLongBits(
                other.getMinPartSizeRatio())) return false;
        if (hasLevel() != other.hasLevel()) return false;
        if (hasLevel()) {
          if (!getLevel()
              .equals(other.getLevel())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + METHOD_FIELD_NUMBER;
        hash = (53 * hash) + method_;
        hash = (37 * hash) + MIN_PART_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMinPartSize());
        hash = (37 * hash) + MIN_PART_SIZE_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMinPartSizeRatio()));
        if (hasLevel()) {
          hash = (37 * hash) + LEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getLevel().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          method_ = 0;

          minPartSize_ = 0L;

          minPartSizeRatio_ = 0D;

          if (levelBuilder_ == null) {
            level_ = null;
          } else {
            level_ = null;
            levelBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression(this);
          result.method_ = method_;
          result.minPartSize_ = minPartSize_;
          result.minPartSizeRatio_ = minPartSizeRatio_;
          if (levelBuilder_ == null) {
            result.level_ = level_;
          } else {
            result.level_ = levelBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.getDefaultInstance()) return this;
          if (other.method_ != 0) {
            setMethodValue(other.getMethodValue());
          }
          if (other.getMinPartSize() != 0L) {
            setMinPartSize(other.getMinPartSize());
          }
          if (other.getMinPartSizeRatio() != 0D) {
            setMinPartSizeRatio(other.getMinPartSizeRatio());
          }
          if (other.hasLevel()) {
            mergeLevel(other.getLevel());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int method_ = 0;
        /**
         * <pre>
         * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
         * @return The enum numeric value on the wire for method.
         */
        @java.lang.Override public int getMethodValue() {
          return method_;
        }
        /**
         * <pre>
         * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
         * @param value The enum numeric value on the wire for method to set.
         * @return This builder for chaining.
         */
        public Builder setMethodValue(int value) {
          
          method_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
         * @return The method.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method getMethod() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method.valueOf(method_);
          return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
         * @param value The method to set.
         * @return This builder for chaining.
         */
        public Builder setMethod(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Method value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          method_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Compression method to use for the specified combination of [min_part_size] and [min_part_size_ratio].
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression.Method method = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMethod() {
          
          method_ = 0;
          onChanged();
          return this;
        }

        private long minPartSize_ ;
        /**
         * <pre>
         * Minimum size of a part of a table.
         * </pre>
         *
         * <code>int64 min_part_size = 2 [(.yandex.cloud.value) = "&gt;=1"];</code>
         * @return The minPartSize.
         */
        @java.lang.Override
        public long getMinPartSize() {
          return minPartSize_;
        }
        /**
         * <pre>
         * Minimum size of a part of a table.
         * </pre>
         *
         * <code>int64 min_part_size = 2 [(.yandex.cloud.value) = "&gt;=1"];</code>
         * @param value The minPartSize to set.
         * @return This builder for chaining.
         */
        public Builder setMinPartSize(long value) {
          
          minPartSize_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Minimum size of a part of a table.
         * </pre>
         *
         * <code>int64 min_part_size = 2 [(.yandex.cloud.value) = "&gt;=1"];</code>
         * @return This builder for chaining.
         */
        public Builder clearMinPartSize() {
          
          minPartSize_ = 0L;
          onChanged();
          return this;
        }

        private double minPartSizeRatio_ ;
        /**
         * <pre>
         * Minimum ratio of a part relative to the size of all the data in the table.
         * </pre>
         *
         * <code>double min_part_size_ratio = 3;</code>
         * @return The minPartSizeRatio.
         */
        @java.lang.Override
        public double getMinPartSizeRatio() {
          return minPartSizeRatio_;
        }
        /**
         * <pre>
         * Minimum ratio of a part relative to the size of all the data in the table.
         * </pre>
         *
         * <code>double min_part_size_ratio = 3;</code>
         * @param value The minPartSizeRatio to set.
         * @return This builder for chaining.
         */
        public Builder setMinPartSizeRatio(double value) {
          
          minPartSizeRatio_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Minimum ratio of a part relative to the size of all the data in the table.
         * </pre>
         *
         * <code>double min_part_size_ratio = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMinPartSizeRatio() {
          
          minPartSizeRatio_ = 0D;
          onChanged();
          return this;
        }

        private com.google.protobuf.Int64Value level_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> levelBuilder_;
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return Whether the level field is set.
         */
        public boolean hasLevel() {
          return levelBuilder_ != null || level_ != null;
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         * @return The level.
         */
        public com.google.protobuf.Int64Value getLevel() {
          if (levelBuilder_ == null) {
            return level_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : level_;
          } else {
            return levelBuilder_.getMessage();
          }
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setLevel(com.google.protobuf.Int64Value value) {
          if (levelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            level_ = value;
            onChanged();
          } else {
            levelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder setLevel(
            com.google.protobuf.Int64Value.Builder builderForValue) {
          if (levelBuilder_ == null) {
            level_ = builderForValue.build();
            onChanged();
          } else {
            levelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder mergeLevel(com.google.protobuf.Int64Value value) {
          if (levelBuilder_ == null) {
            if (level_ != null) {
              level_ =
                com.google.protobuf.Int64Value.newBuilder(level_).mergeFrom(value).buildPartial();
            } else {
              level_ = value;
            }
            onChanged();
          } else {
            levelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public Builder clearLevel() {
          if (levelBuilder_ == null) {
            level_ = null;
            onChanged();
          } else {
            level_ = null;
            levelBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64Value.Builder getLevelBuilder() {
          
          onChanged();
          return getLevelFieldBuilder().getBuilder();
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        public com.google.protobuf.Int64ValueOrBuilder getLevelOrBuilder() {
          if (levelBuilder_ != null) {
            return levelBuilder_.getMessageOrBuilder();
          } else {
            return level_ == null ?
                com.google.protobuf.Int64Value.getDefaultInstance() : level_;
          }
        }
        /**
         * <code>.google.protobuf.Int64Value level = 4 [(.yandex.cloud.value) = "&gt;=0"];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
            getLevelFieldBuilder() {
          if (levelBuilder_ == null) {
            levelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                    getLevel(),
                    getParentForChildren(),
                    isClean());
            level_ = null;
          }
          return levelBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Compression>
          PARSER = new com.google.protobuf.AbstractParser<Compression>() {
        @java.lang.Override
        public Compression parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Compression(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Compression> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Compression> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ExternalDictionaryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of the external dictionary.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the external dictionary.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Set of attributes for the external dictionary.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
       * @return Whether the structure field is set.
       */
      boolean hasStructure();
      /**
       * <pre>
       * Set of attributes for the external dictionary.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
       * @return The structure.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure getStructure();
      /**
       * <pre>
       * Set of attributes for the external dictionary.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder getStructureOrBuilder();

      /**
       * <pre>
       * Layout for storing the dictionary in memory.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
       * @return Whether the layout field is set.
       */
      boolean hasLayout();
      /**
       * <pre>
       * Layout for storing the dictionary in memory.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
       * @return The layout.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout getLayout();
      /**
       * <pre>
       * Layout for storing the dictionary in memory.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder getLayoutOrBuilder();

      /**
       * <pre>
       * Fixed interval between dictionary updates.
       * </pre>
       *
       * <code>int64 fixed_lifetime = 4;</code>
       * @return Whether the fixedLifetime field is set.
       */
      boolean hasFixedLifetime();
      /**
       * <pre>
       * Fixed interval between dictionary updates.
       * </pre>
       *
       * <code>int64 fixed_lifetime = 4;</code>
       * @return The fixedLifetime.
       */
      long getFixedLifetime();

      /**
       * <pre>
       * Range of intervals between dictionary updates for ClickHouse to choose from.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
       * @return Whether the lifetimeRange field is set.
       */
      boolean hasLifetimeRange();
      /**
       * <pre>
       * Range of intervals between dictionary updates for ClickHouse to choose from.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
       * @return The lifetimeRange.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range getLifetimeRange();
      /**
       * <pre>
       * Range of intervals between dictionary updates for ClickHouse to choose from.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder getLifetimeRangeOrBuilder();

      /**
       * <pre>
       * HTTP source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
       * @return Whether the httpSource field is set.
       */
      boolean hasHttpSource();
      /**
       * <pre>
       * HTTP source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
       * @return The httpSource.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource getHttpSource();
      /**
       * <pre>
       * HTTP source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder getHttpSourceOrBuilder();

      /**
       * <pre>
       * MySQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
       * @return Whether the mysqlSource field is set.
       */
      boolean hasMysqlSource();
      /**
       * <pre>
       * MySQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
       * @return The mysqlSource.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource getMysqlSource();
      /**
       * <pre>
       * MySQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder getMysqlSourceOrBuilder();

      /**
       * <pre>
       * ClickHouse source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
       * @return Whether the clickhouseSource field is set.
       */
      boolean hasClickhouseSource();
      /**
       * <pre>
       * ClickHouse source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
       * @return The clickhouseSource.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource getClickhouseSource();
      /**
       * <pre>
       * ClickHouse source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder getClickhouseSourceOrBuilder();

      /**
       * <pre>
       * MongoDB source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
       * @return Whether the mongodbSource field is set.
       */
      boolean hasMongodbSource();
      /**
       * <pre>
       * MongoDB source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
       * @return The mongodbSource.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource getMongodbSource();
      /**
       * <pre>
       * MongoDB source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder getMongodbSourceOrBuilder();

      /**
       * <pre>
       * PostgreSQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
       * @return Whether the postgresqlSource field is set.
       */
      boolean hasPostgresqlSource();
      /**
       * <pre>
       * PostgreSQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
       * @return The postgresqlSource.
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource getPostgresqlSource();
      /**
       * <pre>
       * PostgreSQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder getPostgresqlSourceOrBuilder();

      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LifetimeCase getLifetimeCase();

      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.SourceCase getSourceCase();
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary}
     */
    public static final class ExternalDictionary extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary)
        ExternalDictionaryOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ExternalDictionary.newBuilder() to construct.
      private ExternalDictionary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExternalDictionary() {
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ExternalDictionary();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ExternalDictionary(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder subBuilder = null;
                if (structure_ != null) {
                  subBuilder = structure_.toBuilder();
                }
                structure_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(structure_);
                  structure_ = subBuilder.buildPartial();
                }

                break;
              }
              case 26: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder subBuilder = null;
                if (layout_ != null) {
                  subBuilder = layout_.toBuilder();
                }
                layout_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(layout_);
                  layout_ = subBuilder.buildPartial();
                }

                break;
              }
              case 32: {
                lifetime_ = input.readInt64();
                lifetimeCase_ = 4;
                break;
              }
              case 42: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder subBuilder = null;
                if (lifetimeCase_ == 5) {
                  subBuilder = ((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_).toBuilder();
                }
                lifetime_ =
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_);
                  lifetime_ = subBuilder.buildPartial();
                }
                lifetimeCase_ = 5;
                break;
              }
              case 50: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder subBuilder = null;
                if (sourceCase_ == 6) {
                  subBuilder = ((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_).toBuilder();
                }
                source_ =
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_);
                  source_ = subBuilder.buildPartial();
                }
                sourceCase_ = 6;
                break;
              }
              case 58: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder subBuilder = null;
                if (sourceCase_ == 7) {
                  subBuilder = ((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_).toBuilder();
                }
                source_ =
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_);
                  source_ = subBuilder.buildPartial();
                }
                sourceCase_ = 7;
                break;
              }
              case 66: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder subBuilder = null;
                if (sourceCase_ == 8) {
                  subBuilder = ((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_).toBuilder();
                }
                source_ =
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_);
                  source_ = subBuilder.buildPartial();
                }
                sourceCase_ = 8;
                break;
              }
              case 74: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder subBuilder = null;
                if (sourceCase_ == 9) {
                  subBuilder = ((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_).toBuilder();
                }
                source_ =
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_);
                  source_ = subBuilder.buildPartial();
                }
                sourceCase_ = 9;
                break;
              }
              case 82: {
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder subBuilder = null;
                if (sourceCase_ == 10) {
                  subBuilder = ((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_).toBuilder();
                }
                source_ =
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_);
                  source_ = subBuilder.buildPartial();
                }
                sourceCase_ = 10;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder.class);
      }

      public interface HttpSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * URL of the source dictionary available over HTTP.
         * </pre>
         *
         * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
         * @return The url.
         */
        java.lang.String getUrl();
        /**
         * <pre>
         * URL of the source dictionary available over HTTP.
         * </pre>
         *
         * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for url.
         */
        com.google.protobuf.ByteString
            getUrlBytes();

        /**
         * <pre>
         * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
         * </pre>
         *
         * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
         * @return The format.
         */
        java.lang.String getFormat();
        /**
         * <pre>
         * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
         * </pre>
         *
         * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for format.
         */
        com.google.protobuf.ByteString
            getFormatBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource}
       */
      public static final class HttpSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource)
          HttpSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use HttpSource.newBuilder() to construct.
        private HttpSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private HttpSource() {
          url_ = "";
          format_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new HttpSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private HttpSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  url_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  format_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder.class);
        }

        public static final int URL_FIELD_NUMBER = 1;
        private volatile java.lang.Object url_;
        /**
         * <pre>
         * URL of the source dictionary available over HTTP.
         * </pre>
         *
         * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
         * @return The url.
         */
        @java.lang.Override
        public java.lang.String getUrl() {
          java.lang.Object ref = url_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            url_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * URL of the source dictionary available over HTTP.
         * </pre>
         *
         * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for url.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUrlBytes() {
          java.lang.Object ref = url_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            url_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FORMAT_FIELD_NUMBER = 2;
        private volatile java.lang.Object format_;
        /**
         * <pre>
         * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
         * </pre>
         *
         * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
         * @return The format.
         */
        @java.lang.Override
        public java.lang.String getFormat() {
          java.lang.Object ref = format_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            format_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
         * </pre>
         *
         * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for format.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFormatBytes() {
          java.lang.Object ref = format_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            format_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(url_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, url_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(format_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, format_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(url_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, url_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(format_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, format_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) obj;

          if (!getUrl()
              .equals(other.getUrl())) return false;
          if (!getFormat()
              .equals(other.getFormat())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + URL_FIELD_NUMBER;
          hash = (53 * hash) + getUrl().hashCode();
          hash = (37 * hash) + FORMAT_FIELD_NUMBER;
          hash = (53 * hash) + getFormat().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            url_ = "";

            format_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource(this);
            result.url_ = url_;
            result.format_ = format_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance()) return this;
            if (!other.getUrl().isEmpty()) {
              url_ = other.url_;
              onChanged();
            }
            if (!other.getFormat().isEmpty()) {
              format_ = other.format_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object url_ = "";
          /**
           * <pre>
           * URL of the source dictionary available over HTTP.
           * </pre>
           *
           * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
           * @return The url.
           */
          public java.lang.String getUrl() {
            java.lang.Object ref = url_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              url_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * URL of the source dictionary available over HTTP.
           * </pre>
           *
           * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for url.
           */
          public com.google.protobuf.ByteString
              getUrlBytes() {
            java.lang.Object ref = url_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              url_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * URL of the source dictionary available over HTTP.
           * </pre>
           *
           * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The url to set.
           * @return This builder for chaining.
           */
          public Builder setUrl(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            url_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * URL of the source dictionary available over HTTP.
           * </pre>
           *
           * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearUrl() {
            
            url_ = getDefaultInstance().getUrl();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * URL of the source dictionary available over HTTP.
           * </pre>
           *
           * <code>string url = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for url to set.
           * @return This builder for chaining.
           */
          public Builder setUrlBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            url_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object format_ = "";
          /**
           * <pre>
           * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
           * </pre>
           *
           * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
           * @return The format.
           */
          public java.lang.String getFormat() {
            java.lang.Object ref = format_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              format_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
           * </pre>
           *
           * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for format.
           */
          public com.google.protobuf.ByteString
              getFormatBytes() {
            java.lang.Object ref = format_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              format_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
           * </pre>
           *
           * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The format to set.
           * @return This builder for chaining.
           */
          public Builder setFormat(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            format_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
           * </pre>
           *
           * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearFormat() {
            
            format_ = getDefaultInstance().getFormat();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The data format. Valid values are all formats supported by ClickHouse SQL dialect.
           * </pre>
           *
           * <code>string format = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for format to set.
           * @return This builder for chaining.
           */
          public Builder setFormatBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            format_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HttpSource>
            PARSER = new com.google.protobuf.AbstractParser<HttpSource>() {
          @java.lang.Override
          public HttpSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new HttpSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<HttpSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HttpSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MysqlSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Name of the MySQL database to connect to.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        java.lang.String getDb();
        /**
         * <pre>
         * Name of the MySQL database to connect to.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        com.google.protobuf.ByteString
            getDbBytes();

        /**
         * <pre>
         * Name of the database table to use as a ClickHouse dictionary.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The table.
         */
        java.lang.String getTable();
        /**
         * <pre>
         * Name of the database table to use as a ClickHouse dictionary.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for table.
         */
        com.google.protobuf.ByteString
            getTableBytes();

        /**
         * <pre>
         * Default port to use when connecting to a replica of the dictionary source.
         * </pre>
         *
         * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        long getPort();

        /**
         * <pre>
         * Name of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string user = 4;</code>
         * @return The user.
         */
        java.lang.String getUser();
        /**
         * <pre>
         * Name of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string user = 4;</code>
         * @return The bytes for user.
         */
        com.google.protobuf.ByteString
            getUserBytes();

        /**
         * <pre>
         * Password of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string password = 5;</code>
         * @return The password.
         */
        java.lang.String getPassword();
        /**
         * <pre>
         * Password of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string password = 5;</code>
         * @return The bytes for password.
         */
        com.google.protobuf.ByteString
            getPasswordBytes();

        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica> 
            getReplicasList();
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica getReplicas(int index);
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        int getReplicasCount();
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder> 
            getReplicasOrBuilderList();
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder getReplicasOrBuilder(
            int index);

        /**
         * <pre>
         * Selection criteria for the data in the specified MySQL table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The where.
         */
        java.lang.String getWhere();
        /**
         * <pre>
         * Selection criteria for the data in the specified MySQL table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The bytes for where.
         */
        com.google.protobuf.ByteString
            getWhereBytes();

        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 8;</code>
         * @return The invalidateQuery.
         */
        java.lang.String getInvalidateQuery();
        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 8;</code>
         * @return The bytes for invalidateQuery.
         */
        com.google.protobuf.ByteString
            getInvalidateQueryBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource}
       */
      public static final class MysqlSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource)
          MysqlSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MysqlSource.newBuilder() to construct.
        private MysqlSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MysqlSource() {
          db_ = "";
          table_ = "";
          user_ = "";
          password_ = "";
          replicas_ = java.util.Collections.emptyList();
          where_ = "";
          invalidateQuery_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new MysqlSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private MysqlSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  db_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  table_ = s;
                  break;
                }
                case 24: {

                  port_ = input.readInt64();
                  break;
                }
                case 34: {
                  java.lang.String s = input.readStringRequireUtf8();

                  user_ = s;
                  break;
                }
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();

                  password_ = s;
                  break;
                }
                case 50: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    replicas_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  replicas_.add(
                      input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  java.lang.String s = input.readStringRequireUtf8();

                  where_ = s;
                  break;
                }
                case 66: {
                  java.lang.String s = input.readStringRequireUtf8();

                  invalidateQuery_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              replicas_ = java.util.Collections.unmodifiableList(replicas_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder.class);
        }

        public interface ReplicaOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * MySQL host of the replica.
           * </pre>
           *
           * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The host.
           */
          java.lang.String getHost();
          /**
           * <pre>
           * MySQL host of the replica.
           * </pre>
           *
           * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The bytes for host.
           */
          com.google.protobuf.ByteString
              getHostBytes();

          /**
           * <pre>
           * The priority of the replica that ClickHouse takes into account when connecting.
           * Replica with the highest priority should have this field set to the lowest number.
           * </pre>
           *
           * <code>int64 priority = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.value) = "&gt;0"];</code>
           * @return The priority.
           */
          long getPriority();

          /**
           * <pre>
           * Port to use when connecting to the replica.
           * If a port is not specified for a replica, ClickHouse uses the port specified for the source.
           * </pre>
           *
           * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return The port.
           */
          long getPort();

          /**
           * <pre>
           * Name of the MySQL database user.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return The user.
           */
          java.lang.String getUser();
          /**
           * <pre>
           * Name of the MySQL database user.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return The bytes for user.
           */
          com.google.protobuf.ByteString
              getUserBytes();

          /**
           * <pre>
           * Password of the MySQL database user.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return The password.
           */
          java.lang.String getPassword();
          /**
           * <pre>
           * Password of the MySQL database user.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return The bytes for password.
           */
          com.google.protobuf.ByteString
              getPasswordBytes();
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica}
         */
        public static final class Replica extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)
            ReplicaOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Replica.newBuilder() to construct.
          private Replica(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Replica() {
            host_ = "";
            user_ = "";
            password_ = "";
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Replica();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Replica(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    java.lang.String s = input.readStringRequireUtf8();

                    host_ = s;
                    break;
                  }
                  case 16: {

                    priority_ = input.readInt64();
                    break;
                  }
                  case 24: {

                    port_ = input.readInt64();
                    break;
                  }
                  case 34: {
                    java.lang.String s = input.readStringRequireUtf8();

                    user_ = s;
                    break;
                  }
                  case 42: {
                    java.lang.String s = input.readStringRequireUtf8();

                    password_ = s;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder.class);
          }

          public static final int HOST_FIELD_NUMBER = 1;
          private volatile java.lang.Object host_;
          /**
           * <pre>
           * MySQL host of the replica.
           * </pre>
           *
           * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The host.
           */
          @java.lang.Override
          public java.lang.String getHost() {
            java.lang.Object ref = host_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              host_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * MySQL host of the replica.
           * </pre>
           *
           * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The bytes for host.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getHostBytes() {
            java.lang.Object ref = host_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              host_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int PRIORITY_FIELD_NUMBER = 2;
          private long priority_;
          /**
           * <pre>
           * The priority of the replica that ClickHouse takes into account when connecting.
           * Replica with the highest priority should have this field set to the lowest number.
           * </pre>
           *
           * <code>int64 priority = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.value) = "&gt;0"];</code>
           * @return The priority.
           */
          @java.lang.Override
          public long getPriority() {
            return priority_;
          }

          public static final int PORT_FIELD_NUMBER = 3;
          private long port_;
          /**
           * <pre>
           * Port to use when connecting to the replica.
           * If a port is not specified for a replica, ClickHouse uses the port specified for the source.
           * </pre>
           *
           * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return The port.
           */
          @java.lang.Override
          public long getPort() {
            return port_;
          }

          public static final int USER_FIELD_NUMBER = 4;
          private volatile java.lang.Object user_;
          /**
           * <pre>
           * Name of the MySQL database user.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return The user.
           */
          @java.lang.Override
          public java.lang.String getUser() {
            java.lang.Object ref = user_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              user_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Name of the MySQL database user.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return The bytes for user.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getUserBytes() {
            java.lang.Object ref = user_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              user_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int PASSWORD_FIELD_NUMBER = 5;
          private volatile java.lang.Object password_;
          /**
           * <pre>
           * Password of the MySQL database user.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return The password.
           */
          @java.lang.Override
          public java.lang.String getPassword() {
            java.lang.Object ref = password_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              password_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Password of the MySQL database user.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return The bytes for password.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getPasswordBytes() {
            java.lang.Object ref = password_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              password_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
            }
            if (priority_ != 0L) {
              output.writeInt64(2, priority_);
            }
            if (port_ != 0L) {
              output.writeInt64(3, port_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 4, user_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 5, password_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
            }
            if (priority_ != 0L) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(2, priority_);
            }
            if (port_ != 0L) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(3, port_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, user_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, password_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)) {
              return super.equals(obj);
            }
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica) obj;

            if (!getHost()
                .equals(other.getHost())) return false;
            if (getPriority()
                != other.getPriority()) return false;
            if (getPort()
                != other.getPort()) return false;
            if (!getUser()
                .equals(other.getUser())) return false;
            if (!getPassword()
                .equals(other.getPassword())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + HOST_FIELD_NUMBER;
            hash = (53 * hash) + getHost().hashCode();
            hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getPriority());
            hash = (37 * hash) + PORT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getPort());
            hash = (37 * hash) + USER_FIELD_NUMBER;
            hash = (53 * hash) + getUser().hashCode();
            hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
            hash = (53 * hash) + getPassword().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder.class);
            }

            // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              host_ = "";

              priority_ = 0L;

              port_ = 0L;

              user_ = "";

              password_ = "";

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica getDefaultInstanceForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica build() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica buildPartial() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica(this);
              result.host_ = host_;
              result.priority_ = priority_;
              result.port_ = port_;
              result.user_ = user_;
              result.password_ = password_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica) {
                return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica other) {
              if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.getDefaultInstance()) return this;
              if (!other.getHost().isEmpty()) {
                host_ = other.host_;
                onChanged();
              }
              if (other.getPriority() != 0L) {
                setPriority(other.getPriority());
              }
              if (other.getPort() != 0L) {
                setPort(other.getPort());
              }
              if (!other.getUser().isEmpty()) {
                user_ = other.user_;
                onChanged();
              }
              if (!other.getPassword().isEmpty()) {
                password_ = other.password_;
                onChanged();
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private java.lang.Object host_ = "";
            /**
             * <pre>
             * MySQL host of the replica.
             * </pre>
             *
             * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
             * @return The host.
             */
            public java.lang.String getHost() {
              java.lang.Object ref = host_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                host_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * MySQL host of the replica.
             * </pre>
             *
             * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
             * @return The bytes for host.
             */
            public com.google.protobuf.ByteString
                getHostBytes() {
              java.lang.Object ref = host_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                host_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * MySQL host of the replica.
             * </pre>
             *
             * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
             * @param value The host to set.
             * @return This builder for chaining.
             */
            public Builder setHost(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              host_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * MySQL host of the replica.
             * </pre>
             *
             * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
             * @return This builder for chaining.
             */
            public Builder clearHost() {
              
              host_ = getDefaultInstance().getHost();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * MySQL host of the replica.
             * </pre>
             *
             * <code>string host = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
             * @param value The bytes for host to set.
             * @return This builder for chaining.
             */
            public Builder setHostBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              host_ = value;
              onChanged();
              return this;
            }

            private long priority_ ;
            /**
             * <pre>
             * The priority of the replica that ClickHouse takes into account when connecting.
             * Replica with the highest priority should have this field set to the lowest number.
             * </pre>
             *
             * <code>int64 priority = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.value) = "&gt;0"];</code>
             * @return The priority.
             */
            @java.lang.Override
            public long getPriority() {
              return priority_;
            }
            /**
             * <pre>
             * The priority of the replica that ClickHouse takes into account when connecting.
             * Replica with the highest priority should have this field set to the lowest number.
             * </pre>
             *
             * <code>int64 priority = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.value) = "&gt;0"];</code>
             * @param value The priority to set.
             * @return This builder for chaining.
             */
            public Builder setPriority(long value) {
              
              priority_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * The priority of the replica that ClickHouse takes into account when connecting.
             * Replica with the highest priority should have this field set to the lowest number.
             * </pre>
             *
             * <code>int64 priority = 2 [(.yandex.cloud.required) = true, (.yandex.cloud.value) = "&gt;0"];</code>
             * @return This builder for chaining.
             */
            public Builder clearPriority() {
              
              priority_ = 0L;
              onChanged();
              return this;
            }

            private long port_ ;
            /**
             * <pre>
             * Port to use when connecting to the replica.
             * If a port is not specified for a replica, ClickHouse uses the port specified for the source.
             * </pre>
             *
             * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
             * @return The port.
             */
            @java.lang.Override
            public long getPort() {
              return port_;
            }
            /**
             * <pre>
             * Port to use when connecting to the replica.
             * If a port is not specified for a replica, ClickHouse uses the port specified for the source.
             * </pre>
             *
             * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
             * @param value The port to set.
             * @return This builder for chaining.
             */
            public Builder setPort(long value) {
              
              port_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Port to use when connecting to the replica.
             * If a port is not specified for a replica, ClickHouse uses the port specified for the source.
             * </pre>
             *
             * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
             * @return This builder for chaining.
             */
            public Builder clearPort() {
              
              port_ = 0L;
              onChanged();
              return this;
            }

            private java.lang.Object user_ = "";
            /**
             * <pre>
             * Name of the MySQL database user.
             * </pre>
             *
             * <code>string user = 4;</code>
             * @return The user.
             */
            public java.lang.String getUser() {
              java.lang.Object ref = user_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                user_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Name of the MySQL database user.
             * </pre>
             *
             * <code>string user = 4;</code>
             * @return The bytes for user.
             */
            public com.google.protobuf.ByteString
                getUserBytes() {
              java.lang.Object ref = user_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                user_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Name of the MySQL database user.
             * </pre>
             *
             * <code>string user = 4;</code>
             * @param value The user to set.
             * @return This builder for chaining.
             */
            public Builder setUser(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              user_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Name of the MySQL database user.
             * </pre>
             *
             * <code>string user = 4;</code>
             * @return This builder for chaining.
             */
            public Builder clearUser() {
              
              user_ = getDefaultInstance().getUser();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Name of the MySQL database user.
             * </pre>
             *
             * <code>string user = 4;</code>
             * @param value The bytes for user to set.
             * @return This builder for chaining.
             */
            public Builder setUserBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              user_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object password_ = "";
            /**
             * <pre>
             * Password of the MySQL database user.
             * </pre>
             *
             * <code>string password = 5;</code>
             * @return The password.
             */
            public java.lang.String getPassword() {
              java.lang.Object ref = password_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                password_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Password of the MySQL database user.
             * </pre>
             *
             * <code>string password = 5;</code>
             * @return The bytes for password.
             */
            public com.google.protobuf.ByteString
                getPasswordBytes() {
              java.lang.Object ref = password_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                password_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Password of the MySQL database user.
             * </pre>
             *
             * <code>string password = 5;</code>
             * @param value The password to set.
             * @return This builder for chaining.
             */
            public Builder setPassword(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              password_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Password of the MySQL database user.
             * </pre>
             *
             * <code>string password = 5;</code>
             * @return This builder for chaining.
             */
            public Builder clearPassword() {
              
              password_ = getDefaultInstance().getPassword();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Password of the MySQL database user.
             * </pre>
             *
             * <code>string password = 5;</code>
             * @param value The bytes for password to set.
             * @return This builder for chaining.
             */
            public Builder setPasswordBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              password_ = value;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica)
          private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica();
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Replica>
              PARSER = new com.google.protobuf.AbstractParser<Replica>() {
            @java.lang.Override
            public Replica parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Replica(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Replica> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Replica> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public static final int DB_FIELD_NUMBER = 1;
        private volatile java.lang.Object db_;
        /**
         * <pre>
         * Name of the MySQL database to connect to.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        @java.lang.Override
        public java.lang.String getDb() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            db_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the MySQL database to connect to.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDbBytes() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            db_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TABLE_FIELD_NUMBER = 2;
        private volatile java.lang.Object table_;
        /**
         * <pre>
         * Name of the database table to use as a ClickHouse dictionary.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The table.
         */
        @java.lang.Override
        public java.lang.String getTable() {
          java.lang.Object ref = table_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            table_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the database table to use as a ClickHouse dictionary.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for table.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTableBytes() {
          java.lang.Object ref = table_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            table_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PORT_FIELD_NUMBER = 3;
        private long port_;
        /**
         * <pre>
         * Default port to use when connecting to a replica of the dictionary source.
         * </pre>
         *
         * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        @java.lang.Override
        public long getPort() {
          return port_;
        }

        public static final int USER_FIELD_NUMBER = 4;
        private volatile java.lang.Object user_;
        /**
         * <pre>
         * Name of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string user = 4;</code>
         * @return The user.
         */
        @java.lang.Override
        public java.lang.String getUser() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            user_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string user = 4;</code>
         * @return The bytes for user.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUserBytes() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            user_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PASSWORD_FIELD_NUMBER = 5;
        private volatile java.lang.Object password_;
        /**
         * <pre>
         * Password of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string password = 5;</code>
         * @return The password.
         */
        @java.lang.Override
        public java.lang.String getPassword() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            password_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Password of the default user for replicas of the dictionary source.
         * </pre>
         *
         * <code>string password = 5;</code>
         * @return The bytes for password.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPasswordBytes() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            password_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int REPLICAS_FIELD_NUMBER = 6;
        private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica> replicas_;
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica> getReplicasList() {
          return replicas_;
        }
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder> 
            getReplicasOrBuilderList() {
          return replicas_;
        }
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public int getReplicasCount() {
          return replicas_.size();
        }
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica getReplicas(int index) {
          return replicas_.get(index);
        }
        /**
         * <pre>
         * List of MySQL replicas of the database used as dictionary source.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder getReplicasOrBuilder(
            int index) {
          return replicas_.get(index);
        }

        public static final int WHERE_FIELD_NUMBER = 7;
        private volatile java.lang.Object where_;
        /**
         * <pre>
         * Selection criteria for the data in the specified MySQL table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The where.
         */
        @java.lang.Override
        public java.lang.String getWhere() {
          java.lang.Object ref = where_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            where_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Selection criteria for the data in the specified MySQL table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The bytes for where.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getWhereBytes() {
          java.lang.Object ref = where_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            where_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int INVALIDATE_QUERY_FIELD_NUMBER = 8;
        private volatile java.lang.Object invalidateQuery_;
        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 8;</code>
         * @return The invalidateQuery.
         */
        @java.lang.Override
        public java.lang.String getInvalidateQuery() {
          java.lang.Object ref = invalidateQuery_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            invalidateQuery_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 8;</code>
         * @return The bytes for invalidateQuery.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getInvalidateQueryBytes() {
          java.lang.Object ref = invalidateQuery_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            invalidateQuery_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, table_);
          }
          if (port_ != 0L) {
            output.writeInt64(3, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, password_);
          }
          for (int i = 0; i < replicas_.size(); i++) {
            output.writeMessage(6, replicas_.get(i));
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(where_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 7, where_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(invalidateQuery_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 8, invalidateQuery_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, table_);
          }
          if (port_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(3, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, password_);
          }
          for (int i = 0; i < replicas_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, replicas_.get(i));
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(where_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, where_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(invalidateQuery_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, invalidateQuery_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) obj;

          if (!getDb()
              .equals(other.getDb())) return false;
          if (!getTable()
              .equals(other.getTable())) return false;
          if (getPort()
              != other.getPort()) return false;
          if (!getUser()
              .equals(other.getUser())) return false;
          if (!getPassword()
              .equals(other.getPassword())) return false;
          if (!getReplicasList()
              .equals(other.getReplicasList())) return false;
          if (!getWhere()
              .equals(other.getWhere())) return false;
          if (!getInvalidateQuery()
              .equals(other.getInvalidateQuery())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + DB_FIELD_NUMBER;
          hash = (53 * hash) + getDb().hashCode();
          hash = (37 * hash) + TABLE_FIELD_NUMBER;
          hash = (53 * hash) + getTable().hashCode();
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPort());
          hash = (37 * hash) + USER_FIELD_NUMBER;
          hash = (53 * hash) + getUser().hashCode();
          hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
          hash = (53 * hash) + getPassword().hashCode();
          if (getReplicasCount() > 0) {
            hash = (37 * hash) + REPLICAS_FIELD_NUMBER;
            hash = (53 * hash) + getReplicasList().hashCode();
          }
          hash = (37 * hash) + WHERE_FIELD_NUMBER;
          hash = (53 * hash) + getWhere().hashCode();
          hash = (37 * hash) + INVALIDATE_QUERY_FIELD_NUMBER;
          hash = (53 * hash) + getInvalidateQuery().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getReplicasFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            db_ = "";

            table_ = "";

            port_ = 0L;

            user_ = "";

            password_ = "";

            if (replicasBuilder_ == null) {
              replicas_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              replicasBuilder_.clear();
            }
            where_ = "";

            invalidateQuery_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource(this);
            int from_bitField0_ = bitField0_;
            result.db_ = db_;
            result.table_ = table_;
            result.port_ = port_;
            result.user_ = user_;
            result.password_ = password_;
            if (replicasBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                replicas_ = java.util.Collections.unmodifiableList(replicas_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.replicas_ = replicas_;
            } else {
              result.replicas_ = replicasBuilder_.build();
            }
            result.where_ = where_;
            result.invalidateQuery_ = invalidateQuery_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance()) return this;
            if (!other.getDb().isEmpty()) {
              db_ = other.db_;
              onChanged();
            }
            if (!other.getTable().isEmpty()) {
              table_ = other.table_;
              onChanged();
            }
            if (other.getPort() != 0L) {
              setPort(other.getPort());
            }
            if (!other.getUser().isEmpty()) {
              user_ = other.user_;
              onChanged();
            }
            if (!other.getPassword().isEmpty()) {
              password_ = other.password_;
              onChanged();
            }
            if (replicasBuilder_ == null) {
              if (!other.replicas_.isEmpty()) {
                if (replicas_.isEmpty()) {
                  replicas_ = other.replicas_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureReplicasIsMutable();
                  replicas_.addAll(other.replicas_);
                }
                onChanged();
              }
            } else {
              if (!other.replicas_.isEmpty()) {
                if (replicasBuilder_.isEmpty()) {
                  replicasBuilder_.dispose();
                  replicasBuilder_ = null;
                  replicas_ = other.replicas_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  replicasBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getReplicasFieldBuilder() : null;
                } else {
                  replicasBuilder_.addAllMessages(other.replicas_);
                }
              }
            }
            if (!other.getWhere().isEmpty()) {
              where_ = other.where_;
              onChanged();
            }
            if (!other.getInvalidateQuery().isEmpty()) {
              invalidateQuery_ = other.invalidateQuery_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object db_ = "";
          /**
           * <pre>
           * Name of the MySQL database to connect to.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The db.
           */
          public java.lang.String getDb() {
            java.lang.Object ref = db_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              db_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the MySQL database to connect to.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for db.
           */
          public com.google.protobuf.ByteString
              getDbBytes() {
            java.lang.Object ref = db_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              db_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the MySQL database to connect to.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The db to set.
           * @return This builder for chaining.
           */
          public Builder setDb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            db_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the MySQL database to connect to.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearDb() {
            
            db_ = getDefaultInstance().getDb();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the MySQL database to connect to.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for db to set.
           * @return This builder for chaining.
           */
          public Builder setDbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            db_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object table_ = "";
          /**
           * <pre>
           * Name of the database table to use as a ClickHouse dictionary.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return The table.
           */
          public java.lang.String getTable() {
            java.lang.Object ref = table_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              table_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the database table to use as a ClickHouse dictionary.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for table.
           */
          public com.google.protobuf.ByteString
              getTableBytes() {
            java.lang.Object ref = table_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              table_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the database table to use as a ClickHouse dictionary.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The table to set.
           * @return This builder for chaining.
           */
          public Builder setTable(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            table_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the database table to use as a ClickHouse dictionary.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearTable() {
            
            table_ = getDefaultInstance().getTable();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the database table to use as a ClickHouse dictionary.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for table to set.
           * @return This builder for chaining.
           */
          public Builder setTableBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            table_ = value;
            onChanged();
            return this;
          }

          private long port_ ;
          /**
           * <pre>
           * Default port to use when connecting to a replica of the dictionary source.
           * </pre>
           *
           * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return The port.
           */
          @java.lang.Override
          public long getPort() {
            return port_;
          }
          /**
           * <pre>
           * Default port to use when connecting to a replica of the dictionary source.
           * </pre>
           *
           * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
           * @param value The port to set.
           * @return This builder for chaining.
           */
          public Builder setPort(long value) {
            
            port_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Default port to use when connecting to a replica of the dictionary source.
           * </pre>
           *
           * <code>int64 port = 3 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return This builder for chaining.
           */
          public Builder clearPort() {
            
            port_ = 0L;
            onChanged();
            return this;
          }

          private java.lang.Object user_ = "";
          /**
           * <pre>
           * Name of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return The user.
           */
          public java.lang.String getUser() {
            java.lang.Object ref = user_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              user_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return The bytes for user.
           */
          public com.google.protobuf.ByteString
              getUserBytes() {
            java.lang.Object ref = user_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              user_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @param value The user to set.
           * @return This builder for chaining.
           */
          public Builder setUser(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            user_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearUser() {
            
            user_ = getDefaultInstance().getUser();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string user = 4;</code>
           * @param value The bytes for user to set.
           * @return This builder for chaining.
           */
          public Builder setUserBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            user_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object password_ = "";
          /**
           * <pre>
           * Password of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return The password.
           */
          public java.lang.String getPassword() {
            java.lang.Object ref = password_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              password_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Password of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return The bytes for password.
           */
          public com.google.protobuf.ByteString
              getPasswordBytes() {
            java.lang.Object ref = password_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              password_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Password of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @param value The password to set.
           * @return This builder for chaining.
           */
          public Builder setPassword(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            password_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearPassword() {
            
            password_ = getDefaultInstance().getPassword();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the default user for replicas of the dictionary source.
           * </pre>
           *
           * <code>string password = 5;</code>
           * @param value The bytes for password to set.
           * @return This builder for chaining.
           */
          public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            password_ = value;
            onChanged();
            return this;
          }

          private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica> replicas_ =
            java.util.Collections.emptyList();
          private void ensureReplicasIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              replicas_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica>(replicas_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder> replicasBuilder_;

          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica> getReplicasList() {
            if (replicasBuilder_ == null) {
              return java.util.Collections.unmodifiableList(replicas_);
            } else {
              return replicasBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public int getReplicasCount() {
            if (replicasBuilder_ == null) {
              return replicas_.size();
            } else {
              return replicasBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica getReplicas(int index) {
            if (replicasBuilder_ == null) {
              return replicas_.get(index);
            } else {
              return replicasBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder setReplicas(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica value) {
            if (replicasBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureReplicasIsMutable();
              replicas_.set(index, value);
              onChanged();
            } else {
              replicasBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder setReplicas(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder builderForValue) {
            if (replicasBuilder_ == null) {
              ensureReplicasIsMutable();
              replicas_.set(index, builderForValue.build());
              onChanged();
            } else {
              replicasBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addReplicas(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica value) {
            if (replicasBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureReplicasIsMutable();
              replicas_.add(value);
              onChanged();
            } else {
              replicasBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addReplicas(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica value) {
            if (replicasBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureReplicasIsMutable();
              replicas_.add(index, value);
              onChanged();
            } else {
              replicasBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addReplicas(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder builderForValue) {
            if (replicasBuilder_ == null) {
              ensureReplicasIsMutable();
              replicas_.add(builderForValue.build());
              onChanged();
            } else {
              replicasBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addReplicas(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder builderForValue) {
            if (replicasBuilder_ == null) {
              ensureReplicasIsMutable();
              replicas_.add(index, builderForValue.build());
              onChanged();
            } else {
              replicasBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAllReplicas(
              java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica> values) {
            if (replicasBuilder_ == null) {
              ensureReplicasIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, replicas_);
              onChanged();
            } else {
              replicasBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder clearReplicas() {
            if (replicasBuilder_ == null) {
              replicas_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              replicasBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder removeReplicas(int index) {
            if (replicasBuilder_ == null) {
              ensureReplicasIsMutable();
              replicas_.remove(index);
              onChanged();
            } else {
              replicasBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder getReplicasBuilder(
              int index) {
            return getReplicasFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder getReplicasOrBuilder(
              int index) {
            if (replicasBuilder_ == null) {
              return replicas_.get(index);  } else {
              return replicasBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder> 
               getReplicasOrBuilderList() {
            if (replicasBuilder_ != null) {
              return replicasBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(replicas_);
            }
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder addReplicasBuilder() {
            return getReplicasFieldBuilder().addBuilder(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.getDefaultInstance());
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder addReplicasBuilder(
              int index) {
            return getReplicasFieldBuilder().addBuilder(
                index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.getDefaultInstance());
          }
          /**
           * <pre>
           * List of MySQL replicas of the database used as dictionary source.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica replicas = 6 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder> 
               getReplicasBuilderList() {
            return getReplicasFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder> 
              getReplicasFieldBuilder() {
            if (replicasBuilder_ == null) {
              replicasBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Replica.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.ReplicaOrBuilder>(
                      replicas_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              replicas_ = null;
            }
            return replicasBuilder_;
          }

          private java.lang.Object where_ = "";
          /**
           * <pre>
           * Selection criteria for the data in the specified MySQL table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @return The where.
           */
          public java.lang.String getWhere() {
            java.lang.Object ref = where_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              where_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified MySQL table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @return The bytes for where.
           */
          public com.google.protobuf.ByteString
              getWhereBytes() {
            java.lang.Object ref = where_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              where_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified MySQL table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @param value The where to set.
           * @return This builder for chaining.
           */
          public Builder setWhere(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            where_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified MySQL table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearWhere() {
            
            where_ = getDefaultInstance().getWhere();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified MySQL table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @param value The bytes for where to set.
           * @return This builder for chaining.
           */
          public Builder setWhereBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            where_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object invalidateQuery_ = "";
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 8;</code>
           * @return The invalidateQuery.
           */
          public java.lang.String getInvalidateQuery() {
            java.lang.Object ref = invalidateQuery_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              invalidateQuery_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 8;</code>
           * @return The bytes for invalidateQuery.
           */
          public com.google.protobuf.ByteString
              getInvalidateQueryBytes() {
            java.lang.Object ref = invalidateQuery_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              invalidateQuery_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 8;</code>
           * @param value The invalidateQuery to set.
           * @return This builder for chaining.
           */
          public Builder setInvalidateQuery(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            invalidateQuery_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearInvalidateQuery() {
            
            invalidateQuery_ = getDefaultInstance().getInvalidateQuery();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 8;</code>
           * @param value The bytes for invalidateQuery to set.
           * @return This builder for chaining.
           */
          public Builder setInvalidateQueryBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            invalidateQuery_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MysqlSource>
            PARSER = new com.google.protobuf.AbstractParser<MysqlSource>() {
          @java.lang.Override
          public MysqlSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MysqlSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<MysqlSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MysqlSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ClickhouseSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Name of the ClickHouse database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        java.lang.String getDb();
        /**
         * <pre>
         * Name of the ClickHouse database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        com.google.protobuf.ByteString
            getDbBytes();

        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The table.
         */
        java.lang.String getTable();
        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for table.
         */
        com.google.protobuf.ByteString
            getTableBytes();

        /**
         * <pre>
         * ClickHouse host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The host.
         */
        java.lang.String getHost();
        /**
         * <pre>
         * ClickHouse host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The bytes for host.
         */
        com.google.protobuf.ByteString
            getHostBytes();

        /**
         * <pre>
         * Port to use when connecting to the host.
         * </pre>
         *
         * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        long getPort();

        /**
         * <pre>
         * Name of the ClickHouse database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The user.
         */
        java.lang.String getUser();
        /**
         * <pre>
         * Name of the ClickHouse database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for user.
         */
        com.google.protobuf.ByteString
            getUserBytes();

        /**
         * <pre>
         * Password of the ClickHouse database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The password.
         */
        java.lang.String getPassword();
        /**
         * <pre>
         * Password of the ClickHouse database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The bytes for password.
         */
        com.google.protobuf.ByteString
            getPasswordBytes();

        /**
         * <pre>
         * Selection criteria for the data in the specified ClickHouse table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The where.
         */
        java.lang.String getWhere();
        /**
         * <pre>
         * Selection criteria for the data in the specified ClickHouse table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The bytes for where.
         */
        com.google.protobuf.ByteString
            getWhereBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource}
       */
      public static final class ClickhouseSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource)
          ClickhouseSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ClickhouseSource.newBuilder() to construct.
        private ClickhouseSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ClickhouseSource() {
          db_ = "";
          table_ = "";
          host_ = "";
          user_ = "";
          password_ = "";
          where_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ClickhouseSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ClickhouseSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  db_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  table_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  host_ = s;
                  break;
                }
                case 32: {

                  port_ = input.readInt64();
                  break;
                }
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();

                  user_ = s;
                  break;
                }
                case 50: {
                  java.lang.String s = input.readStringRequireUtf8();

                  password_ = s;
                  break;
                }
                case 58: {
                  java.lang.String s = input.readStringRequireUtf8();

                  where_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder.class);
        }

        public static final int DB_FIELD_NUMBER = 1;
        private volatile java.lang.Object db_;
        /**
         * <pre>
         * Name of the ClickHouse database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        @java.lang.Override
        public java.lang.String getDb() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            db_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the ClickHouse database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDbBytes() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            db_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TABLE_FIELD_NUMBER = 2;
        private volatile java.lang.Object table_;
        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The table.
         */
        @java.lang.Override
        public java.lang.String getTable() {
          java.lang.Object ref = table_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            table_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for table.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTableBytes() {
          java.lang.Object ref = table_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            table_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int HOST_FIELD_NUMBER = 3;
        private volatile java.lang.Object host_;
        /**
         * <pre>
         * ClickHouse host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The host.
         */
        @java.lang.Override
        public java.lang.String getHost() {
          java.lang.Object ref = host_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            host_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * ClickHouse host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The bytes for host.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getHostBytes() {
          java.lang.Object ref = host_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            host_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PORT_FIELD_NUMBER = 4;
        private long port_;
        /**
         * <pre>
         * Port to use when connecting to the host.
         * </pre>
         *
         * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        @java.lang.Override
        public long getPort() {
          return port_;
        }

        public static final int USER_FIELD_NUMBER = 5;
        private volatile java.lang.Object user_;
        /**
         * <pre>
         * Name of the ClickHouse database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The user.
         */
        @java.lang.Override
        public java.lang.String getUser() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            user_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the ClickHouse database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for user.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUserBytes() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            user_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PASSWORD_FIELD_NUMBER = 6;
        private volatile java.lang.Object password_;
        /**
         * <pre>
         * Password of the ClickHouse database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The password.
         */
        @java.lang.Override
        public java.lang.String getPassword() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            password_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Password of the ClickHouse database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The bytes for password.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPasswordBytes() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            password_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int WHERE_FIELD_NUMBER = 7;
        private volatile java.lang.Object where_;
        /**
         * <pre>
         * Selection criteria for the data in the specified ClickHouse table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The where.
         */
        @java.lang.Override
        public java.lang.String getWhere() {
          java.lang.Object ref = where_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            where_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Selection criteria for the data in the specified ClickHouse table.
         * </pre>
         *
         * <code>string where = 7;</code>
         * @return The bytes for where.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getWhereBytes() {
          java.lang.Object ref = where_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            where_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, table_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, host_);
          }
          if (port_ != 0L) {
            output.writeInt64(4, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, password_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(where_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 7, where_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, table_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, host_);
          }
          if (port_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(4, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, password_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(where_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, where_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) obj;

          if (!getDb()
              .equals(other.getDb())) return false;
          if (!getTable()
              .equals(other.getTable())) return false;
          if (!getHost()
              .equals(other.getHost())) return false;
          if (getPort()
              != other.getPort()) return false;
          if (!getUser()
              .equals(other.getUser())) return false;
          if (!getPassword()
              .equals(other.getPassword())) return false;
          if (!getWhere()
              .equals(other.getWhere())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + DB_FIELD_NUMBER;
          hash = (53 * hash) + getDb().hashCode();
          hash = (37 * hash) + TABLE_FIELD_NUMBER;
          hash = (53 * hash) + getTable().hashCode();
          hash = (37 * hash) + HOST_FIELD_NUMBER;
          hash = (53 * hash) + getHost().hashCode();
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPort());
          hash = (37 * hash) + USER_FIELD_NUMBER;
          hash = (53 * hash) + getUser().hashCode();
          hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
          hash = (53 * hash) + getPassword().hashCode();
          hash = (37 * hash) + WHERE_FIELD_NUMBER;
          hash = (53 * hash) + getWhere().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            db_ = "";

            table_ = "";

            host_ = "";

            port_ = 0L;

            user_ = "";

            password_ = "";

            where_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource(this);
            result.db_ = db_;
            result.table_ = table_;
            result.host_ = host_;
            result.port_ = port_;
            result.user_ = user_;
            result.password_ = password_;
            result.where_ = where_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance()) return this;
            if (!other.getDb().isEmpty()) {
              db_ = other.db_;
              onChanged();
            }
            if (!other.getTable().isEmpty()) {
              table_ = other.table_;
              onChanged();
            }
            if (!other.getHost().isEmpty()) {
              host_ = other.host_;
              onChanged();
            }
            if (other.getPort() != 0L) {
              setPort(other.getPort());
            }
            if (!other.getUser().isEmpty()) {
              user_ = other.user_;
              onChanged();
            }
            if (!other.getPassword().isEmpty()) {
              password_ = other.password_;
              onChanged();
            }
            if (!other.getWhere().isEmpty()) {
              where_ = other.where_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object db_ = "";
          /**
           * <pre>
           * Name of the ClickHouse database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The db.
           */
          public java.lang.String getDb() {
            java.lang.Object ref = db_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              db_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the ClickHouse database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for db.
           */
          public com.google.protobuf.ByteString
              getDbBytes() {
            java.lang.Object ref = db_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              db_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the ClickHouse database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The db to set.
           * @return This builder for chaining.
           */
          public Builder setDb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            db_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the ClickHouse database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearDb() {
            
            db_ = getDefaultInstance().getDb();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the ClickHouse database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for db to set.
           * @return This builder for chaining.
           */
          public Builder setDbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            db_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object table_ = "";
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return The table.
           */
          public java.lang.String getTable() {
            java.lang.Object ref = table_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              table_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for table.
           */
          public com.google.protobuf.ByteString
              getTableBytes() {
            java.lang.Object ref = table_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              table_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The table to set.
           * @return This builder for chaining.
           */
          public Builder setTable(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            table_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearTable() {
            
            table_ = getDefaultInstance().getTable();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for table to set.
           * @return This builder for chaining.
           */
          public Builder setTableBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            table_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object host_ = "";
          /**
           * <pre>
           * ClickHouse host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The host.
           */
          public java.lang.String getHost() {
            java.lang.Object ref = host_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              host_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * ClickHouse host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The bytes for host.
           */
          public com.google.protobuf.ByteString
              getHostBytes() {
            java.lang.Object ref = host_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              host_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * ClickHouse host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @param value The host to set.
           * @return This builder for chaining.
           */
          public Builder setHost(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            host_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * ClickHouse host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return This builder for chaining.
           */
          public Builder clearHost() {
            
            host_ = getDefaultInstance().getHost();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * ClickHouse host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @param value The bytes for host to set.
           * @return This builder for chaining.
           */
          public Builder setHostBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            host_ = value;
            onChanged();
            return this;
          }

          private long port_ ;
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return The port.
           */
          @java.lang.Override
          public long getPort() {
            return port_;
          }
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @param value The port to set.
           * @return This builder for chaining.
           */
          public Builder setPort(long value) {
            
            port_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return This builder for chaining.
           */
          public Builder clearPort() {
            
            port_ = 0L;
            onChanged();
            return this;
          }

          private java.lang.Object user_ = "";
          /**
           * <pre>
           * Name of the ClickHouse database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return The user.
           */
          public java.lang.String getUser() {
            java.lang.Object ref = user_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              user_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the ClickHouse database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for user.
           */
          public com.google.protobuf.ByteString
              getUserBytes() {
            java.lang.Object ref = user_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              user_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the ClickHouse database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @param value The user to set.
           * @return This builder for chaining.
           */
          public Builder setUser(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            user_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the ClickHouse database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearUser() {
            
            user_ = getDefaultInstance().getUser();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the ClickHouse database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for user to set.
           * @return This builder for chaining.
           */
          public Builder setUserBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            user_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object password_ = "";
          /**
           * <pre>
           * Password of the ClickHouse database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return The password.
           */
          public java.lang.String getPassword() {
            java.lang.Object ref = password_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              password_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Password of the ClickHouse database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return The bytes for password.
           */
          public com.google.protobuf.ByteString
              getPasswordBytes() {
            java.lang.Object ref = password_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              password_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Password of the ClickHouse database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @param value The password to set.
           * @return This builder for chaining.
           */
          public Builder setPassword(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            password_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the ClickHouse database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearPassword() {
            
            password_ = getDefaultInstance().getPassword();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the ClickHouse database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @param value The bytes for password to set.
           * @return This builder for chaining.
           */
          public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            password_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object where_ = "";
          /**
           * <pre>
           * Selection criteria for the data in the specified ClickHouse table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @return The where.
           */
          public java.lang.String getWhere() {
            java.lang.Object ref = where_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              where_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified ClickHouse table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @return The bytes for where.
           */
          public com.google.protobuf.ByteString
              getWhereBytes() {
            java.lang.Object ref = where_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              where_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified ClickHouse table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @param value The where to set.
           * @return This builder for chaining.
           */
          public Builder setWhere(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            where_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified ClickHouse table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearWhere() {
            
            where_ = getDefaultInstance().getWhere();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Selection criteria for the data in the specified ClickHouse table.
           * </pre>
           *
           * <code>string where = 7;</code>
           * @param value The bytes for where to set.
           * @return This builder for chaining.
           */
          public Builder setWhereBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            where_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ClickhouseSource>
            PARSER = new com.google.protobuf.AbstractParser<ClickhouseSource>() {
          @java.lang.Override
          public ClickhouseSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ClickhouseSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ClickhouseSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ClickhouseSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MongodbSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Name of the MongoDB database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        java.lang.String getDb();
        /**
         * <pre>
         * Name of the MongoDB database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        com.google.protobuf.ByteString
            getDbBytes();

        /**
         * <pre>
         * Name of the collection in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
         * @return The collection.
         */
        java.lang.String getCollection();
        /**
         * <pre>
         * Name of the collection in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for collection.
         */
        com.google.protobuf.ByteString
            getCollectionBytes();

        /**
         * <pre>
         * MongoDB host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The host.
         */
        java.lang.String getHost();
        /**
         * <pre>
         * MongoDB host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The bytes for host.
         */
        com.google.protobuf.ByteString
            getHostBytes();

        /**
         * <pre>
         * Port to use when connecting to the host.
         * </pre>
         *
         * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        long getPort();

        /**
         * <pre>
         * Name of the MongoDB database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The user.
         */
        java.lang.String getUser();
        /**
         * <pre>
         * Name of the MongoDB database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for user.
         */
        com.google.protobuf.ByteString
            getUserBytes();

        /**
         * <pre>
         * Password of the MongoDB database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The password.
         */
        java.lang.String getPassword();
        /**
         * <pre>
         * Password of the MongoDB database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The bytes for password.
         */
        com.google.protobuf.ByteString
            getPasswordBytes();

        /**
         * <code>string options = 7;</code>
         * @return The options.
         */
        java.lang.String getOptions();
        /**
         * <code>string options = 7;</code>
         * @return The bytes for options.
         */
        com.google.protobuf.ByteString
            getOptionsBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource}
       */
      public static final class MongodbSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource)
          MongodbSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MongodbSource.newBuilder() to construct.
        private MongodbSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MongodbSource() {
          db_ = "";
          collection_ = "";
          host_ = "";
          user_ = "";
          password_ = "";
          options_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new MongodbSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private MongodbSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  db_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  collection_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  host_ = s;
                  break;
                }
                case 32: {

                  port_ = input.readInt64();
                  break;
                }
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();

                  user_ = s;
                  break;
                }
                case 50: {
                  java.lang.String s = input.readStringRequireUtf8();

                  password_ = s;
                  break;
                }
                case 58: {
                  java.lang.String s = input.readStringRequireUtf8();

                  options_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder.class);
        }

        public static final int DB_FIELD_NUMBER = 1;
        private volatile java.lang.Object db_;
        /**
         * <pre>
         * Name of the MongoDB database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        @java.lang.Override
        public java.lang.String getDb() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            db_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the MongoDB database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDbBytes() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            db_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int COLLECTION_FIELD_NUMBER = 2;
        private volatile java.lang.Object collection_;
        /**
         * <pre>
         * Name of the collection in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
         * @return The collection.
         */
        @java.lang.Override
        public java.lang.String getCollection() {
          java.lang.Object ref = collection_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            collection_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the collection in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for collection.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getCollectionBytes() {
          java.lang.Object ref = collection_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            collection_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int HOST_FIELD_NUMBER = 3;
        private volatile java.lang.Object host_;
        /**
         * <pre>
         * MongoDB host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The host.
         */
        @java.lang.Override
        public java.lang.String getHost() {
          java.lang.Object ref = host_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            host_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * MongoDB host of the specified database.
         * </pre>
         *
         * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
         * @return The bytes for host.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getHostBytes() {
          java.lang.Object ref = host_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            host_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PORT_FIELD_NUMBER = 4;
        private long port_;
        /**
         * <pre>
         * Port to use when connecting to the host.
         * </pre>
         *
         * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        @java.lang.Override
        public long getPort() {
          return port_;
        }

        public static final int USER_FIELD_NUMBER = 5;
        private volatile java.lang.Object user_;
        /**
         * <pre>
         * Name of the MongoDB database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The user.
         */
        @java.lang.Override
        public java.lang.String getUser() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            user_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the MongoDB database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for user.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUserBytes() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            user_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PASSWORD_FIELD_NUMBER = 6;
        private volatile java.lang.Object password_;
        /**
         * <pre>
         * Password of the MongoDB database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The password.
         */
        @java.lang.Override
        public java.lang.String getPassword() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            password_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Password of the MongoDB database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The bytes for password.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPasswordBytes() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            password_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int OPTIONS_FIELD_NUMBER = 7;
        private volatile java.lang.Object options_;
        /**
         * <code>string options = 7;</code>
         * @return The options.
         */
        @java.lang.Override
        public java.lang.String getOptions() {
          java.lang.Object ref = options_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            options_ = s;
            return s;
          }
        }
        /**
         * <code>string options = 7;</code>
         * @return The bytes for options.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getOptionsBytes() {
          java.lang.Object ref = options_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            options_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(collection_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, collection_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, host_);
          }
          if (port_ != 0L) {
            output.writeInt64(4, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, password_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(options_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 7, options_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(collection_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, collection_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, host_);
          }
          if (port_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(4, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, password_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(options_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, options_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) obj;

          if (!getDb()
              .equals(other.getDb())) return false;
          if (!getCollection()
              .equals(other.getCollection())) return false;
          if (!getHost()
              .equals(other.getHost())) return false;
          if (getPort()
              != other.getPort()) return false;
          if (!getUser()
              .equals(other.getUser())) return false;
          if (!getPassword()
              .equals(other.getPassword())) return false;
          if (!getOptions()
              .equals(other.getOptions())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + DB_FIELD_NUMBER;
          hash = (53 * hash) + getDb().hashCode();
          hash = (37 * hash) + COLLECTION_FIELD_NUMBER;
          hash = (53 * hash) + getCollection().hashCode();
          hash = (37 * hash) + HOST_FIELD_NUMBER;
          hash = (53 * hash) + getHost().hashCode();
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPort());
          hash = (37 * hash) + USER_FIELD_NUMBER;
          hash = (53 * hash) + getUser().hashCode();
          hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
          hash = (53 * hash) + getPassword().hashCode();
          hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
          hash = (53 * hash) + getOptions().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            db_ = "";

            collection_ = "";

            host_ = "";

            port_ = 0L;

            user_ = "";

            password_ = "";

            options_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource(this);
            result.db_ = db_;
            result.collection_ = collection_;
            result.host_ = host_;
            result.port_ = port_;
            result.user_ = user_;
            result.password_ = password_;
            result.options_ = options_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance()) return this;
            if (!other.getDb().isEmpty()) {
              db_ = other.db_;
              onChanged();
            }
            if (!other.getCollection().isEmpty()) {
              collection_ = other.collection_;
              onChanged();
            }
            if (!other.getHost().isEmpty()) {
              host_ = other.host_;
              onChanged();
            }
            if (other.getPort() != 0L) {
              setPort(other.getPort());
            }
            if (!other.getUser().isEmpty()) {
              user_ = other.user_;
              onChanged();
            }
            if (!other.getPassword().isEmpty()) {
              password_ = other.password_;
              onChanged();
            }
            if (!other.getOptions().isEmpty()) {
              options_ = other.options_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object db_ = "";
          /**
           * <pre>
           * Name of the MongoDB database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The db.
           */
          public java.lang.String getDb() {
            java.lang.Object ref = db_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              db_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the MongoDB database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for db.
           */
          public com.google.protobuf.ByteString
              getDbBytes() {
            java.lang.Object ref = db_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              db_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the MongoDB database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The db to set.
           * @return This builder for chaining.
           */
          public Builder setDb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            db_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the MongoDB database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearDb() {
            
            db_ = getDefaultInstance().getDb();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the MongoDB database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for db to set.
           * @return This builder for chaining.
           */
          public Builder setDbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            db_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object collection_ = "";
          /**
           * <pre>
           * Name of the collection in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
           * @return The collection.
           */
          public java.lang.String getCollection() {
            java.lang.Object ref = collection_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              collection_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the collection in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for collection.
           */
          public com.google.protobuf.ByteString
              getCollectionBytes() {
            java.lang.Object ref = collection_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              collection_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the collection in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The collection to set.
           * @return This builder for chaining.
           */
          public Builder setCollection(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            collection_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the collection in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearCollection() {
            
            collection_ = getDefaultInstance().getCollection();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the collection in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string collection = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for collection to set.
           * @return This builder for chaining.
           */
          public Builder setCollectionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            collection_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object host_ = "";
          /**
           * <pre>
           * MongoDB host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The host.
           */
          public java.lang.String getHost() {
            java.lang.Object ref = host_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              host_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * MongoDB host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return The bytes for host.
           */
          public com.google.protobuf.ByteString
              getHostBytes() {
            java.lang.Object ref = host_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              host_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * MongoDB host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @param value The host to set.
           * @return This builder for chaining.
           */
          public Builder setHost(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            host_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * MongoDB host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @return This builder for chaining.
           */
          public Builder clearHost() {
            
            host_ = getDefaultInstance().getHost();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * MongoDB host of the specified database.
           * </pre>
           *
           * <code>string host = 3 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=253"];</code>
           * @param value The bytes for host to set.
           * @return This builder for chaining.
           */
          public Builder setHostBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            host_ = value;
            onChanged();
            return this;
          }

          private long port_ ;
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return The port.
           */
          @java.lang.Override
          public long getPort() {
            return port_;
          }
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @param value The port to set.
           * @return This builder for chaining.
           */
          public Builder setPort(long value) {
            
            port_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return This builder for chaining.
           */
          public Builder clearPort() {
            
            port_ = 0L;
            onChanged();
            return this;
          }

          private java.lang.Object user_ = "";
          /**
           * <pre>
           * Name of the MongoDB database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return The user.
           */
          public java.lang.String getUser() {
            java.lang.Object ref = user_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              user_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the MongoDB database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for user.
           */
          public com.google.protobuf.ByteString
              getUserBytes() {
            java.lang.Object ref = user_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              user_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the MongoDB database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @param value The user to set.
           * @return This builder for chaining.
           */
          public Builder setUser(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            user_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the MongoDB database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearUser() {
            
            user_ = getDefaultInstance().getUser();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the MongoDB database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for user to set.
           * @return This builder for chaining.
           */
          public Builder setUserBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            user_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object password_ = "";
          /**
           * <pre>
           * Password of the MongoDB database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return The password.
           */
          public java.lang.String getPassword() {
            java.lang.Object ref = password_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              password_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Password of the MongoDB database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return The bytes for password.
           */
          public com.google.protobuf.ByteString
              getPasswordBytes() {
            java.lang.Object ref = password_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              password_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Password of the MongoDB database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @param value The password to set.
           * @return This builder for chaining.
           */
          public Builder setPassword(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            password_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the MongoDB database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearPassword() {
            
            password_ = getDefaultInstance().getPassword();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the MongoDB database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @param value The bytes for password to set.
           * @return This builder for chaining.
           */
          public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            password_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object options_ = "";
          /**
           * <code>string options = 7;</code>
           * @return The options.
           */
          public java.lang.String getOptions() {
            java.lang.Object ref = options_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              options_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>string options = 7;</code>
           * @return The bytes for options.
           */
          public com.google.protobuf.ByteString
              getOptionsBytes() {
            java.lang.Object ref = options_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              options_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>string options = 7;</code>
           * @param value The options to set.
           * @return This builder for chaining.
           */
          public Builder setOptions(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            options_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>string options = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearOptions() {
            
            options_ = getDefaultInstance().getOptions();
            onChanged();
            return this;
          }
          /**
           * <code>string options = 7;</code>
           * @param value The bytes for options to set.
           * @return This builder for chaining.
           */
          public Builder setOptionsBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            options_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MongodbSource>
            PARSER = new com.google.protobuf.AbstractParser<MongodbSource>() {
          @java.lang.Override
          public MongodbSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MongodbSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<MongodbSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MongodbSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface PostgresqlSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Name of the PostrgreSQL database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        java.lang.String getDb();
        /**
         * <pre>
         * Name of the PostrgreSQL database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        com.google.protobuf.ByteString
            getDbBytes();

        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The table.
         */
        java.lang.String getTable();
        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for table.
         */
        com.google.protobuf.ByteString
            getTableBytes();

        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @return A list containing the hosts.
         */
        java.util.List<java.lang.String>
            getHostsList();
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @return The count of hosts.
         */
        int getHostsCount();
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @param index The index of the element to return.
         * @return The hosts at the given index.
         */
        java.lang.String getHosts(int index);
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @param index The index of the value to return.
         * @return The bytes of the hosts at the given index.
         */
        com.google.protobuf.ByteString
            getHostsBytes(int index);

        /**
         * <pre>
         * Port to use when connecting to the host.
         * </pre>
         *
         * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        long getPort();

        /**
         * <pre>
         * Name of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The user.
         */
        java.lang.String getUser();
        /**
         * <pre>
         * Name of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for user.
         */
        com.google.protobuf.ByteString
            getUserBytes();

        /**
         * <pre>
         * Password of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The password.
         */
        java.lang.String getPassword();
        /**
         * <pre>
         * Password of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The bytes for password.
         */
        com.google.protobuf.ByteString
            getPasswordBytes();

        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 7;</code>
         * @return The invalidateQuery.
         */
        java.lang.String getInvalidateQuery();
        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 7;</code>
         * @return The bytes for invalidateQuery.
         */
        com.google.protobuf.ByteString
            getInvalidateQueryBytes();

        /**
         * <pre>
         * Mode of SSL TCP/IP connection to the PostgreSQL host.
         * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
         * @return The enum numeric value on the wire for sslMode.
         */
        int getSslModeValue();
        /**
         * <pre>
         * Mode of SSL TCP/IP connection to the PostgreSQL host.
         * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
         * @return The sslMode.
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode getSslMode();
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource}
       */
      public static final class PostgresqlSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource)
          PostgresqlSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use PostgresqlSource.newBuilder() to construct.
        private PostgresqlSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private PostgresqlSource() {
          db_ = "";
          table_ = "";
          hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          user_ = "";
          password_ = "";
          invalidateQuery_ = "";
          sslMode_ = 0;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new PostgresqlSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private PostgresqlSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  db_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  table_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    hosts_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  hosts_.add(s);
                  break;
                }
                case 32: {

                  port_ = input.readInt64();
                  break;
                }
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();

                  user_ = s;
                  break;
                }
                case 50: {
                  java.lang.String s = input.readStringRequireUtf8();

                  password_ = s;
                  break;
                }
                case 58: {
                  java.lang.String s = input.readStringRequireUtf8();

                  invalidateQuery_ = s;
                  break;
                }
                case 64: {
                  int rawValue = input.readEnum();

                  sslMode_ = rawValue;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              hosts_ = hosts_.getUnmodifiableView();
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder.class);
        }

        /**
         * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode}
         */
        public enum SslMode
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>SSL_MODE_UNSPECIFIED = 0;</code>
           */
          SSL_MODE_UNSPECIFIED(0),
          /**
           * <pre>
           * Only try a non-SSL connection.
           * </pre>
           *
           * <code>DISABLE = 1;</code>
           */
          DISABLE(1),
          /**
           * <pre>
           * First try a non-SSL connection; if that fails, try an SSL connection.
           * </pre>
           *
           * <code>ALLOW = 2;</code>
           */
          ALLOW(2),
          /**
           * <pre>
           * First try an SSL connection; if that fails, try a non-SSL connection.
           * </pre>
           *
           * <code>PREFER = 3;</code>
           */
          PREFER(3),
          /**
           * <pre>
           * Only try an SSL connection, and verify that the server certificate is issued by a trusted certificate authority (CA).
           * </pre>
           *
           * <code>VERIFY_CA = 4;</code>
           */
          VERIFY_CA(4),
          /**
           * <pre>
           * Only try an SSL connection, verify that the server certificate is issued by a trusted CA and that the requested server host name matches that in the certificate.
           * </pre>
           *
           * <code>VERIFY_FULL = 5;</code>
           */
          VERIFY_FULL(5),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>SSL_MODE_UNSPECIFIED = 0;</code>
           */
          public static final int SSL_MODE_UNSPECIFIED_VALUE = 0;
          /**
           * <pre>
           * Only try a non-SSL connection.
           * </pre>
           *
           * <code>DISABLE = 1;</code>
           */
          public static final int DISABLE_VALUE = 1;
          /**
           * <pre>
           * First try a non-SSL connection; if that fails, try an SSL connection.
           * </pre>
           *
           * <code>ALLOW = 2;</code>
           */
          public static final int ALLOW_VALUE = 2;
          /**
           * <pre>
           * First try an SSL connection; if that fails, try a non-SSL connection.
           * </pre>
           *
           * <code>PREFER = 3;</code>
           */
          public static final int PREFER_VALUE = 3;
          /**
           * <pre>
           * Only try an SSL connection, and verify that the server certificate is issued by a trusted certificate authority (CA).
           * </pre>
           *
           * <code>VERIFY_CA = 4;</code>
           */
          public static final int VERIFY_CA_VALUE = 4;
          /**
           * <pre>
           * Only try an SSL connection, verify that the server certificate is issued by a trusted CA and that the requested server host name matches that in the certificate.
           * </pre>
           *
           * <code>VERIFY_FULL = 5;</code>
           */
          public static final int VERIFY_FULL_VALUE = 5;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static SslMode valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static SslMode forNumber(int value) {
            switch (value) {
              case 0: return SSL_MODE_UNSPECIFIED;
              case 1: return DISABLE;
              case 2: return ALLOW;
              case 3: return PREFER;
              case 4: return VERIFY_CA;
              case 5: return VERIFY_FULL;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<SslMode>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              SslMode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<SslMode>() {
                  public SslMode findValueByNumber(int number) {
                    return SslMode.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDescriptor().getEnumTypes().get(0);
          }

          private static final SslMode[] VALUES = values();

          public static SslMode valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private SslMode(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode)
        }

        public static final int DB_FIELD_NUMBER = 1;
        private volatile java.lang.Object db_;
        /**
         * <pre>
         * Name of the PostrgreSQL database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The db.
         */
        @java.lang.Override
        public java.lang.String getDb() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            db_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the PostrgreSQL database.
         * </pre>
         *
         * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for db.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDbBytes() {
          java.lang.Object ref = db_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            db_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TABLE_FIELD_NUMBER = 2;
        private volatile java.lang.Object table_;
        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The table.
         */
        @java.lang.Override
        public java.lang.String getTable() {
          java.lang.Object ref = table_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            table_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the table in the specified database to be used as the dictionary source.
         * </pre>
         *
         * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for table.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTableBytes() {
          java.lang.Object ref = table_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            table_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int HOSTS_FIELD_NUMBER = 3;
        private com.google.protobuf.LazyStringList hosts_;
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @return A list containing the hosts.
         */
        public com.google.protobuf.ProtocolStringList
            getHostsList() {
          return hosts_;
        }
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @return The count of hosts.
         */
        public int getHostsCount() {
          return hosts_.size();
        }
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @param index The index of the element to return.
         * @return The hosts at the given index.
         */
        public java.lang.String getHosts(int index) {
          return hosts_.get(index);
        }
        /**
         * <pre>
         * Name of the PostrgreSQL host
         * </pre>
         *
         * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         * @param index The index of the value to return.
         * @return The bytes of the hosts at the given index.
         */
        public com.google.protobuf.ByteString
            getHostsBytes(int index) {
          return hosts_.getByteString(index);
        }

        public static final int PORT_FIELD_NUMBER = 4;
        private long port_;
        /**
         * <pre>
         * Port to use when connecting to the host.
         * </pre>
         *
         * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
         * @return The port.
         */
        @java.lang.Override
        public long getPort() {
          return port_;
        }

        public static final int USER_FIELD_NUMBER = 5;
        private volatile java.lang.Object user_;
        /**
         * <pre>
         * Name of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The user.
         */
        @java.lang.Override
        public java.lang.String getUser() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            user_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for user.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUserBytes() {
          java.lang.Object ref = user_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            user_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int PASSWORD_FIELD_NUMBER = 6;
        private volatile java.lang.Object password_;
        /**
         * <pre>
         * Password of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The password.
         */
        @java.lang.Override
        public java.lang.String getPassword() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            password_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Password of the PostrgreSQL database user.
         * </pre>
         *
         * <code>string password = 6;</code>
         * @return The bytes for password.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getPasswordBytes() {
          java.lang.Object ref = password_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            password_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int INVALIDATE_QUERY_FIELD_NUMBER = 7;
        private volatile java.lang.Object invalidateQuery_;
        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 7;</code>
         * @return The invalidateQuery.
         */
        @java.lang.Override
        public java.lang.String getInvalidateQuery() {
          java.lang.Object ref = invalidateQuery_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            invalidateQuery_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Query for checking the dictionary status, to pull only updated data.
         * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
         * </pre>
         *
         * <code>string invalidate_query = 7;</code>
         * @return The bytes for invalidateQuery.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getInvalidateQueryBytes() {
          java.lang.Object ref = invalidateQuery_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            invalidateQuery_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int SSL_MODE_FIELD_NUMBER = 8;
        private int sslMode_;
        /**
         * <pre>
         * Mode of SSL TCP/IP connection to the PostgreSQL host.
         * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
         * @return The enum numeric value on the wire for sslMode.
         */
        @java.lang.Override public int getSslModeValue() {
          return sslMode_;
        }
        /**
         * <pre>
         * Mode of SSL TCP/IP connection to the PostgreSQL host.
         * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
         * @return The sslMode.
         */
        @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode getSslMode() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode.valueOf(sslMode_);
          return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, table_);
          }
          for (int i = 0; i < hosts_.size(); i++) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, hosts_.getRaw(i));
          }
          if (port_ != 0L) {
            output.writeInt64(4, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, password_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(invalidateQuery_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 7, invalidateQuery_);
          }
          if (sslMode_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode.SSL_MODE_UNSPECIFIED.getNumber()) {
            output.writeEnum(8, sslMode_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(db_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, db_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(table_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, table_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < hosts_.size(); i++) {
              dataSize += computeStringSizeNoTag(hosts_.getRaw(i));
            }
            size += dataSize;
            size += 1 * getHostsList().size();
          }
          if (port_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(4, port_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, user_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(password_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, password_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(invalidateQuery_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, invalidateQuery_);
          }
          if (sslMode_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode.SSL_MODE_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(8, sslMode_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) obj;

          if (!getDb()
              .equals(other.getDb())) return false;
          if (!getTable()
              .equals(other.getTable())) return false;
          if (!getHostsList()
              .equals(other.getHostsList())) return false;
          if (getPort()
              != other.getPort()) return false;
          if (!getUser()
              .equals(other.getUser())) return false;
          if (!getPassword()
              .equals(other.getPassword())) return false;
          if (!getInvalidateQuery()
              .equals(other.getInvalidateQuery())) return false;
          if (sslMode_ != other.sslMode_) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + DB_FIELD_NUMBER;
          hash = (53 * hash) + getDb().hashCode();
          hash = (37 * hash) + TABLE_FIELD_NUMBER;
          hash = (53 * hash) + getTable().hashCode();
          if (getHostsCount() > 0) {
            hash = (37 * hash) + HOSTS_FIELD_NUMBER;
            hash = (53 * hash) + getHostsList().hashCode();
          }
          hash = (37 * hash) + PORT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPort());
          hash = (37 * hash) + USER_FIELD_NUMBER;
          hash = (53 * hash) + getUser().hashCode();
          hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
          hash = (53 * hash) + getPassword().hashCode();
          hash = (37 * hash) + INVALIDATE_QUERY_FIELD_NUMBER;
          hash = (53 * hash) + getInvalidateQuery().hashCode();
          hash = (37 * hash) + SSL_MODE_FIELD_NUMBER;
          hash = (53 * hash) + sslMode_;
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            db_ = "";

            table_ = "";

            hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            port_ = 0L;

            user_ = "";

            password_ = "";

            invalidateQuery_ = "";

            sslMode_ = 0;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource(this);
            int from_bitField0_ = bitField0_;
            result.db_ = db_;
            result.table_ = table_;
            if (((bitField0_ & 0x00000001) != 0)) {
              hosts_ = hosts_.getUnmodifiableView();
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.hosts_ = hosts_;
            result.port_ = port_;
            result.user_ = user_;
            result.password_ = password_;
            result.invalidateQuery_ = invalidateQuery_;
            result.sslMode_ = sslMode_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance()) return this;
            if (!other.getDb().isEmpty()) {
              db_ = other.db_;
              onChanged();
            }
            if (!other.getTable().isEmpty()) {
              table_ = other.table_;
              onChanged();
            }
            if (!other.hosts_.isEmpty()) {
              if (hosts_.isEmpty()) {
                hosts_ = other.hosts_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureHostsIsMutable();
                hosts_.addAll(other.hosts_);
              }
              onChanged();
            }
            if (other.getPort() != 0L) {
              setPort(other.getPort());
            }
            if (!other.getUser().isEmpty()) {
              user_ = other.user_;
              onChanged();
            }
            if (!other.getPassword().isEmpty()) {
              password_ = other.password_;
              onChanged();
            }
            if (!other.getInvalidateQuery().isEmpty()) {
              invalidateQuery_ = other.invalidateQuery_;
              onChanged();
            }
            if (other.sslMode_ != 0) {
              setSslModeValue(other.getSslModeValue());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object db_ = "";
          /**
           * <pre>
           * Name of the PostrgreSQL database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The db.
           */
          public java.lang.String getDb() {
            java.lang.Object ref = db_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              db_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for db.
           */
          public com.google.protobuf.ByteString
              getDbBytes() {
            java.lang.Object ref = db_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              db_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The db to set.
           * @return This builder for chaining.
           */
          public Builder setDb(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            db_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearDb() {
            
            db_ = getDefaultInstance().getDb();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database.
           * </pre>
           *
           * <code>string db = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for db to set.
           * @return This builder for chaining.
           */
          public Builder setDbBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            db_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object table_ = "";
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return The table.
           */
          public java.lang.String getTable() {
            java.lang.Object ref = table_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              table_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for table.
           */
          public com.google.protobuf.ByteString
              getTableBytes() {
            java.lang.Object ref = table_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              table_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The table to set.
           * @return This builder for chaining.
           */
          public Builder setTable(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            table_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearTable() {
            
            table_ = getDefaultInstance().getTable();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the table in the specified database to be used as the dictionary source.
           * </pre>
           *
           * <code>string table = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for table to set.
           * @return This builder for chaining.
           */
          public Builder setTableBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            table_ = value;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureHostsIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              hosts_ = new com.google.protobuf.LazyStringArrayList(hosts_);
              bitField0_ |= 0x00000001;
             }
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @return A list containing the hosts.
           */
          public com.google.protobuf.ProtocolStringList
              getHostsList() {
            return hosts_.getUnmodifiableView();
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @return The count of hosts.
           */
          public int getHostsCount() {
            return hosts_.size();
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @param index The index of the element to return.
           * @return The hosts at the given index.
           */
          public java.lang.String getHosts(int index) {
            return hosts_.get(index);
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @param index The index of the value to return.
           * @return The bytes of the hosts at the given index.
           */
          public com.google.protobuf.ByteString
              getHostsBytes(int index) {
            return hosts_.getByteString(index);
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @param index The index to set the value at.
           * @param value The hosts to set.
           * @return This builder for chaining.
           */
          public Builder setHosts(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureHostsIsMutable();
            hosts_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @param value The hosts to add.
           * @return This builder for chaining.
           */
          public Builder addHosts(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureHostsIsMutable();
            hosts_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @param values The hosts to add.
           * @return This builder for chaining.
           */
          public Builder addAllHosts(
              java.lang.Iterable<java.lang.String> values) {
            ensureHostsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, hosts_);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @return This builder for chaining.
           */
          public Builder clearHosts() {
            hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL host
           * </pre>
           *
           * <code>repeated string hosts = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           * @param value The bytes of the hosts to add.
           * @return This builder for chaining.
           */
          public Builder addHostsBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            ensureHostsIsMutable();
            hosts_.add(value);
            onChanged();
            return this;
          }

          private long port_ ;
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return The port.
           */
          @java.lang.Override
          public long getPort() {
            return port_;
          }
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @param value The port to set.
           * @return This builder for chaining.
           */
          public Builder setPort(long value) {
            
            port_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Port to use when connecting to the host.
           * </pre>
           *
           * <code>int64 port = 4 [(.yandex.cloud.value) = "0-65535"];</code>
           * @return This builder for chaining.
           */
          public Builder clearPort() {
            
            port_ = 0L;
            onChanged();
            return this;
          }

          private java.lang.Object user_ = "";
          /**
           * <pre>
           * Name of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return The user.
           */
          public java.lang.String getUser() {
            java.lang.Object ref = user_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              user_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for user.
           */
          public com.google.protobuf.ByteString
              getUserBytes() {
            java.lang.Object ref = user_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              user_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @param value The user to set.
           * @return This builder for chaining.
           */
          public Builder setUser(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            user_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearUser() {
            
            user_ = getDefaultInstance().getUser();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string user = 5 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for user to set.
           * @return This builder for chaining.
           */
          public Builder setUserBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            user_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object password_ = "";
          /**
           * <pre>
           * Password of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return The password.
           */
          public java.lang.String getPassword() {
            java.lang.Object ref = password_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              password_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Password of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return The bytes for password.
           */
          public com.google.protobuf.ByteString
              getPasswordBytes() {
            java.lang.Object ref = password_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              password_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Password of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @param value The password to set.
           * @return This builder for chaining.
           */
          public Builder setPassword(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            password_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearPassword() {
            
            password_ = getDefaultInstance().getPassword();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Password of the PostrgreSQL database user.
           * </pre>
           *
           * <code>string password = 6;</code>
           * @param value The bytes for password to set.
           * @return This builder for chaining.
           */
          public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            password_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object invalidateQuery_ = "";
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 7;</code>
           * @return The invalidateQuery.
           */
          public java.lang.String getInvalidateQuery() {
            java.lang.Object ref = invalidateQuery_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              invalidateQuery_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 7;</code>
           * @return The bytes for invalidateQuery.
           */
          public com.google.protobuf.ByteString
              getInvalidateQueryBytes() {
            java.lang.Object ref = invalidateQuery_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              invalidateQuery_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 7;</code>
           * @param value The invalidateQuery to set.
           * @return This builder for chaining.
           */
          public Builder setInvalidateQuery(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            invalidateQuery_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearInvalidateQuery() {
            
            invalidateQuery_ = getDefaultInstance().getInvalidateQuery();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Query for checking the dictionary status, to pull only updated data.
           * For more details, see [ClickHouse documentation on dictionaries](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_lifetime/).
           * </pre>
           *
           * <code>string invalidate_query = 7;</code>
           * @param value The bytes for invalidateQuery to set.
           * @return This builder for chaining.
           */
          public Builder setInvalidateQueryBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            invalidateQuery_ = value;
            onChanged();
            return this;
          }

          private int sslMode_ = 0;
          /**
           * <pre>
           * Mode of SSL TCP/IP connection to the PostgreSQL host.
           * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
           * @return The enum numeric value on the wire for sslMode.
           */
          @java.lang.Override public int getSslModeValue() {
            return sslMode_;
          }
          /**
           * <pre>
           * Mode of SSL TCP/IP connection to the PostgreSQL host.
           * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
           * @param value The enum numeric value on the wire for sslMode to set.
           * @return This builder for chaining.
           */
          public Builder setSslModeValue(int value) {
            
            sslMode_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Mode of SSL TCP/IP connection to the PostgreSQL host.
           * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
           * @return The sslMode.
           */
          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode getSslMode() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode.valueOf(sslMode_);
            return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Mode of SSL TCP/IP connection to the PostgreSQL host.
           * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
           * @param value The sslMode to set.
           * @return This builder for chaining.
           */
          public Builder setSslMode(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            sslMode_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Mode of SSL TCP/IP connection to the PostgreSQL host.
           * For more details, see [PostgreSQL documentation](https://www.postgresql.org/docs/current/libpq-ssl.html).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource.SslMode ssl_mode = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearSslMode() {
            
            sslMode_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PostgresqlSource>
            PARSER = new com.google.protobuf.AbstractParser<PostgresqlSource>() {
          @java.lang.Override
          public PostgresqlSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PostgresqlSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<PostgresqlSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PostgresqlSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface StructureOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Single numeric key column for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
         * @return Whether the id field is set.
         */
        boolean hasId();
        /**
         * <pre>
         * Single numeric key column for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
         * @return The id.
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id getId();
        /**
         * <pre>
         * Single numeric key column for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder getIdOrBuilder();

        /**
         * <pre>
         * Composite key for the dictionary, containing of one or more key columns.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
         * @return Whether the key field is set.
         */
        boolean hasKey();
        /**
         * <pre>
         * Composite key for the dictionary, containing of one or more key columns.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
         * @return The key.
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key getKey();
        /**
         * <pre>
         * Composite key for the dictionary, containing of one or more key columns.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder getKeyOrBuilder();

        /**
         * <pre>
         * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
         * @return Whether the rangeMin field is set.
         */
        boolean hasRangeMin();
        /**
         * <pre>
         * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
         * @return The rangeMin.
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getRangeMin();
        /**
         * <pre>
         * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getRangeMinOrBuilder();

        /**
         * <pre>
         * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
         * @return Whether the rangeMax field is set.
         */
        boolean hasRangeMax();
        /**
         * <pre>
         * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
         * @return The rangeMax.
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getRangeMax();
        /**
         * <pre>
         * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getRangeMaxOrBuilder();

        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> 
            getAttributesList();
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getAttributes(int index);
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        int getAttributesCount();
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
            getAttributesOrBuilderList();
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getAttributesOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure}
       */
      public static final class Structure extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure)
          StructureOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Structure.newBuilder() to construct.
        private Structure(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Structure() {
          attributes_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Structure();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Structure(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder subBuilder = null;
                  if (id_ != null) {
                    subBuilder = id_.toBuilder();
                  }
                  id_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(id_);
                    id_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    attributes_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  attributes_.add(
                      input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder subBuilder = null;
                  if (key_ != null) {
                    subBuilder = key_.toBuilder();
                  }
                  key_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(key_);
                    key_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder subBuilder = null;
                  if (rangeMin_ != null) {
                    subBuilder = rangeMin_.toBuilder();
                  }
                  rangeMin_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rangeMin_);
                    rangeMin_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder subBuilder = null;
                  if (rangeMax_ != null) {
                    subBuilder = rangeMax_.toBuilder();
                  }
                  rangeMax_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(rangeMax_);
                    rangeMax_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              attributes_ = java.util.Collections.unmodifiableList(attributes_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder.class);
        }

        public interface AttributeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Name of the column.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The name.
           */
          java.lang.String getName();
          /**
           * <pre>
           * Name of the column.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for name.
           */
          com.google.protobuf.ByteString
              getNameBytes();

          /**
           * <pre>
           * Type of the column.
           * </pre>
           *
           * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
           * @return The type.
           */
          java.lang.String getType();
          /**
           * <pre>
           * Type of the column.
           * </pre>
           *
           * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for type.
           */
          com.google.protobuf.ByteString
              getTypeBytes();

          /**
           * <pre>
           * Default value for an element without data (for example, an empty string).
           * </pre>
           *
           * <code>string null_value = 3;</code>
           * @return The nullValue.
           */
          java.lang.String getNullValue();
          /**
           * <pre>
           * Default value for an element without data (for example, an empty string).
           * </pre>
           *
           * <code>string null_value = 3;</code>
           * @return The bytes for nullValue.
           */
          com.google.protobuf.ByteString
              getNullValueBytes();

          /**
           * <pre>
           * Expression, describing the attribute, if applicable.
           * </pre>
           *
           * <code>string expression = 4;</code>
           * @return The expression.
           */
          java.lang.String getExpression();
          /**
           * <pre>
           * Expression, describing the attribute, if applicable.
           * </pre>
           *
           * <code>string expression = 4;</code>
           * @return The bytes for expression.
           */
          com.google.protobuf.ByteString
              getExpressionBytes();

          /**
           * <pre>
           * Indication of hierarchy support.
           * Default value: `false`.
           * </pre>
           *
           * <code>bool hierarchical = 5;</code>
           * @return The hierarchical.
           */
          boolean getHierarchical();

          /**
           * <pre>
           * Indication of injective mapping "id -&gt; attribute".
           * Default value: `false`.
           * </pre>
           *
           * <code>bool injective = 6;</code>
           * @return The injective.
           */
          boolean getInjective();
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
         */
        public static final class Attribute extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute)
            AttributeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Attribute.newBuilder() to construct.
          private Attribute(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Attribute() {
            name_ = "";
            type_ = "";
            nullValue_ = "";
            expression_ = "";
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Attribute();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Attribute(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    java.lang.String s = input.readStringRequireUtf8();

                    name_ = s;
                    break;
                  }
                  case 18: {
                    java.lang.String s = input.readStringRequireUtf8();

                    type_ = s;
                    break;
                  }
                  case 26: {
                    java.lang.String s = input.readStringRequireUtf8();

                    nullValue_ = s;
                    break;
                  }
                  case 34: {
                    java.lang.String s = input.readStringRequireUtf8();

                    expression_ = s;
                    break;
                  }
                  case 40: {

                    hierarchical_ = input.readBool();
                    break;
                  }
                  case 48: {

                    injective_ = input.readBool();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder.class);
          }

          public static final int NAME_FIELD_NUMBER = 1;
          private volatile java.lang.Object name_;
          /**
           * <pre>
           * Name of the column.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The name.
           */
          @java.lang.Override
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Name of the column.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for name.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int TYPE_FIELD_NUMBER = 2;
          private volatile java.lang.Object type_;
          /**
           * <pre>
           * Type of the column.
           * </pre>
           *
           * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
           * @return The type.
           */
          @java.lang.Override
          public java.lang.String getType() {
            java.lang.Object ref = type_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              type_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Type of the column.
           * </pre>
           *
           * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for type.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getTypeBytes() {
            java.lang.Object ref = type_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              type_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int NULL_VALUE_FIELD_NUMBER = 3;
          private volatile java.lang.Object nullValue_;
          /**
           * <pre>
           * Default value for an element without data (for example, an empty string).
           * </pre>
           *
           * <code>string null_value = 3;</code>
           * @return The nullValue.
           */
          @java.lang.Override
          public java.lang.String getNullValue() {
            java.lang.Object ref = nullValue_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              nullValue_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Default value for an element without data (for example, an empty string).
           * </pre>
           *
           * <code>string null_value = 3;</code>
           * @return The bytes for nullValue.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getNullValueBytes() {
            java.lang.Object ref = nullValue_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              nullValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int EXPRESSION_FIELD_NUMBER = 4;
          private volatile java.lang.Object expression_;
          /**
           * <pre>
           * Expression, describing the attribute, if applicable.
           * </pre>
           *
           * <code>string expression = 4;</code>
           * @return The expression.
           */
          @java.lang.Override
          public java.lang.String getExpression() {
            java.lang.Object ref = expression_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              expression_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Expression, describing the attribute, if applicable.
           * </pre>
           *
           * <code>string expression = 4;</code>
           * @return The bytes for expression.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getExpressionBytes() {
            java.lang.Object ref = expression_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              expression_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int HIERARCHICAL_FIELD_NUMBER = 5;
          private boolean hierarchical_;
          /**
           * <pre>
           * Indication of hierarchy support.
           * Default value: `false`.
           * </pre>
           *
           * <code>bool hierarchical = 5;</code>
           * @return The hierarchical.
           */
          @java.lang.Override
          public boolean getHierarchical() {
            return hierarchical_;
          }

          public static final int INJECTIVE_FIELD_NUMBER = 6;
          private boolean injective_;
          /**
           * <pre>
           * Indication of injective mapping "id -&gt; attribute".
           * Default value: `false`.
           * </pre>
           *
           * <code>bool injective = 6;</code>
           * @return The injective.
           */
          @java.lang.Override
          public boolean getInjective() {
            return injective_;
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nullValue_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nullValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(expression_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 4, expression_);
            }
            if (hierarchical_ != false) {
              output.writeBool(5, hierarchical_);
            }
            if (injective_ != false) {
              output.writeBool(6, injective_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(nullValue_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nullValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(expression_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, expression_);
            }
            if (hierarchical_ != false) {
              size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(5, hierarchical_);
            }
            if (injective_ != false) {
              size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(6, injective_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute)) {
              return super.equals(obj);
            }
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute) obj;

            if (!getName()
                .equals(other.getName())) return false;
            if (!getType()
                .equals(other.getType())) return false;
            if (!getNullValue()
                .equals(other.getNullValue())) return false;
            if (!getExpression()
                .equals(other.getExpression())) return false;
            if (getHierarchical()
                != other.getHierarchical()) return false;
            if (getInjective()
                != other.getInjective()) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getType().hashCode();
            hash = (37 * hash) + NULL_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getNullValue().hashCode();
            hash = (37 * hash) + EXPRESSION_FIELD_NUMBER;
            hash = (53 * hash) + getExpression().hashCode();
            hash = (37 * hash) + HIERARCHICAL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getHierarchical());
            hash = (37 * hash) + INJECTIVE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getInjective());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute)
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder.class);
            }

            // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              name_ = "";

              type_ = "";

              nullValue_ = "";

              expression_ = "";

              hierarchical_ = false;

              injective_ = false;

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getDefaultInstanceForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute build() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute buildPartial() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute(this);
              result.name_ = name_;
              result.type_ = type_;
              result.nullValue_ = nullValue_;
              result.expression_ = expression_;
              result.hierarchical_ = hierarchical_;
              result.injective_ = injective_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute) {
                return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute other) {
              if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance()) return this;
              if (!other.getName().isEmpty()) {
                name_ = other.name_;
                onChanged();
              }
              if (!other.getType().isEmpty()) {
                type_ = other.type_;
                onChanged();
              }
              if (!other.getNullValue().isEmpty()) {
                nullValue_ = other.nullValue_;
                onChanged();
              }
              if (!other.getExpression().isEmpty()) {
                expression_ = other.expression_;
                onChanged();
              }
              if (other.getHierarchical() != false) {
                setHierarchical(other.getHierarchical());
              }
              if (other.getInjective() != false) {
                setInjective(other.getInjective());
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private java.lang.Object name_ = "";
            /**
             * <pre>
             * Name of the column.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @return The name.
             */
            public java.lang.String getName() {
              java.lang.Object ref = name_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Name of the column.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @return The bytes for name.
             */
            public com.google.protobuf.ByteString
                getNameBytes() {
              java.lang.Object ref = name_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                name_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Name of the column.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @param value The name to set.
             * @return This builder for chaining.
             */
            public Builder setName(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              name_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Name of the column.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @return This builder for chaining.
             */
            public Builder clearName() {
              
              name_ = getDefaultInstance().getName();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Name of the column.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @param value The bytes for name to set.
             * @return This builder for chaining.
             */
            public Builder setNameBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              name_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object type_ = "";
            /**
             * <pre>
             * Type of the column.
             * </pre>
             *
             * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
             * @return The type.
             */
            public java.lang.String getType() {
              java.lang.Object ref = type_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                type_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Type of the column.
             * </pre>
             *
             * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
             * @return The bytes for type.
             */
            public com.google.protobuf.ByteString
                getTypeBytes() {
              java.lang.Object ref = type_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                type_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Type of the column.
             * </pre>
             *
             * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
             * @param value The type to set.
             * @return This builder for chaining.
             */
            public Builder setType(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              type_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Type of the column.
             * </pre>
             *
             * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
             * @return This builder for chaining.
             */
            public Builder clearType() {
              
              type_ = getDefaultInstance().getType();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Type of the column.
             * </pre>
             *
             * <code>string type = 2 [(.yandex.cloud.required) = true];</code>
             * @param value The bytes for type to set.
             * @return This builder for chaining.
             */
            public Builder setTypeBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              type_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object nullValue_ = "";
            /**
             * <pre>
             * Default value for an element without data (for example, an empty string).
             * </pre>
             *
             * <code>string null_value = 3;</code>
             * @return The nullValue.
             */
            public java.lang.String getNullValue() {
              java.lang.Object ref = nullValue_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                nullValue_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Default value for an element without data (for example, an empty string).
             * </pre>
             *
             * <code>string null_value = 3;</code>
             * @return The bytes for nullValue.
             */
            public com.google.protobuf.ByteString
                getNullValueBytes() {
              java.lang.Object ref = nullValue_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                nullValue_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Default value for an element without data (for example, an empty string).
             * </pre>
             *
             * <code>string null_value = 3;</code>
             * @param value The nullValue to set.
             * @return This builder for chaining.
             */
            public Builder setNullValue(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              nullValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Default value for an element without data (for example, an empty string).
             * </pre>
             *
             * <code>string null_value = 3;</code>
             * @return This builder for chaining.
             */
            public Builder clearNullValue() {
              
              nullValue_ = getDefaultInstance().getNullValue();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Default value for an element without data (for example, an empty string).
             * </pre>
             *
             * <code>string null_value = 3;</code>
             * @param value The bytes for nullValue to set.
             * @return This builder for chaining.
             */
            public Builder setNullValueBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              nullValue_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object expression_ = "";
            /**
             * <pre>
             * Expression, describing the attribute, if applicable.
             * </pre>
             *
             * <code>string expression = 4;</code>
             * @return The expression.
             */
            public java.lang.String getExpression() {
              java.lang.Object ref = expression_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                expression_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Expression, describing the attribute, if applicable.
             * </pre>
             *
             * <code>string expression = 4;</code>
             * @return The bytes for expression.
             */
            public com.google.protobuf.ByteString
                getExpressionBytes() {
              java.lang.Object ref = expression_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                expression_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Expression, describing the attribute, if applicable.
             * </pre>
             *
             * <code>string expression = 4;</code>
             * @param value The expression to set.
             * @return This builder for chaining.
             */
            public Builder setExpression(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              expression_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Expression, describing the attribute, if applicable.
             * </pre>
             *
             * <code>string expression = 4;</code>
             * @return This builder for chaining.
             */
            public Builder clearExpression() {
              
              expression_ = getDefaultInstance().getExpression();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Expression, describing the attribute, if applicable.
             * </pre>
             *
             * <code>string expression = 4;</code>
             * @param value The bytes for expression to set.
             * @return This builder for chaining.
             */
            public Builder setExpressionBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              expression_ = value;
              onChanged();
              return this;
            }

            private boolean hierarchical_ ;
            /**
             * <pre>
             * Indication of hierarchy support.
             * Default value: `false`.
             * </pre>
             *
             * <code>bool hierarchical = 5;</code>
             * @return The hierarchical.
             */
            @java.lang.Override
            public boolean getHierarchical() {
              return hierarchical_;
            }
            /**
             * <pre>
             * Indication of hierarchy support.
             * Default value: `false`.
             * </pre>
             *
             * <code>bool hierarchical = 5;</code>
             * @param value The hierarchical to set.
             * @return This builder for chaining.
             */
            public Builder setHierarchical(boolean value) {
              
              hierarchical_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Indication of hierarchy support.
             * Default value: `false`.
             * </pre>
             *
             * <code>bool hierarchical = 5;</code>
             * @return This builder for chaining.
             */
            public Builder clearHierarchical() {
              
              hierarchical_ = false;
              onChanged();
              return this;
            }

            private boolean injective_ ;
            /**
             * <pre>
             * Indication of injective mapping "id -&gt; attribute".
             * Default value: `false`.
             * </pre>
             *
             * <code>bool injective = 6;</code>
             * @return The injective.
             */
            @java.lang.Override
            public boolean getInjective() {
              return injective_;
            }
            /**
             * <pre>
             * Indication of injective mapping "id -&gt; attribute".
             * Default value: `false`.
             * </pre>
             *
             * <code>bool injective = 6;</code>
             * @param value The injective to set.
             * @return This builder for chaining.
             */
            public Builder setInjective(boolean value) {
              
              injective_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Indication of injective mapping "id -&gt; attribute".
             * Default value: `false`.
             * </pre>
             *
             * <code>bool injective = 6;</code>
             * @return This builder for chaining.
             */
            public Builder clearInjective() {
              
              injective_ = false;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute)
          private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute();
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Attribute>
              PARSER = new com.google.protobuf.AbstractParser<Attribute>() {
            @java.lang.Override
            public Attribute parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Attribute(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Attribute> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Attribute> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface IdOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Name of the numeric key.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The name.
           */
          java.lang.String getName();
          /**
           * <pre>
           * Name of the numeric key.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for name.
           */
          com.google.protobuf.ByteString
              getNameBytes();
        }
        /**
         * <pre>
         * Numeric key.
         * </pre>
         *
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id}
         */
        public static final class Id extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id)
            IdOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Id.newBuilder() to construct.
          private Id(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Id() {
            name_ = "";
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Id();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Id(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    java.lang.String s = input.readStringRequireUtf8();

                    name_ = s;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder.class);
          }

          public static final int NAME_FIELD_NUMBER = 1;
          private volatile java.lang.Object name_;
          /**
           * <pre>
           * Name of the numeric key.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The name.
           */
          @java.lang.Override
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Name of the numeric key.
           * </pre>
           *
           * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for name.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id)) {
              return super.equals(obj);
            }
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id) obj;

            if (!getName()
                .equals(other.getName())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * <pre>
           * Numeric key.
           * </pre>
           *
           * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id)
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder.class);
            }

            // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              name_ = "";

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id getDefaultInstanceForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id build() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id buildPartial() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id(this);
              result.name_ = name_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id) {
                return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id other) {
              if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.getDefaultInstance()) return this;
              if (!other.getName().isEmpty()) {
                name_ = other.name_;
                onChanged();
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private java.lang.Object name_ = "";
            /**
             * <pre>
             * Name of the numeric key.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @return The name.
             */
            public java.lang.String getName() {
              java.lang.Object ref = name_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Name of the numeric key.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @return The bytes for name.
             */
            public com.google.protobuf.ByteString
                getNameBytes() {
              java.lang.Object ref = name_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                name_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Name of the numeric key.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @param value The name to set.
             * @return This builder for chaining.
             */
            public Builder setName(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              name_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Name of the numeric key.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @return This builder for chaining.
             */
            public Builder clearName() {
              
              name_ = getDefaultInstance().getName();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Name of the numeric key.
             * </pre>
             *
             * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
             * @param value The bytes for name to set.
             * @return This builder for chaining.
             */
            public Builder setNameBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              name_ = value;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id)
          private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id();
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Id>
              PARSER = new com.google.protobuf.AbstractParser<Id>() {
            @java.lang.Override
            public Id parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Id(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Id> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Id> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface KeyOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> 
              getAttributesList();
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getAttributes(int index);
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          int getAttributesCount();
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
              getAttributesOrBuilderList();
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getAttributesOrBuilder(
              int index);
        }
        /**
         * <pre>
         * Complex key.
         * </pre>
         *
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key}
         */
        public static final class Key extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key)
            KeyOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Key.newBuilder() to construct.
          private Key(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Key() {
            attributes_ = java.util.Collections.emptyList();
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Key();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Key(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                      attributes_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute>();
                      mutable_bitField0_ |= 0x00000001;
                    }
                    attributes_.add(
                        input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.parser(), extensionRegistry));
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              if (((mutable_bitField0_ & 0x00000001) != 0)) {
                attributes_ = java.util.Collections.unmodifiableList(attributes_);
              }
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder.class);
          }

          public static final int ATTRIBUTES_FIELD_NUMBER = 1;
          private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> attributes_;
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          @java.lang.Override
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> getAttributesList() {
            return attributes_;
          }
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          @java.lang.Override
          public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
              getAttributesOrBuilderList() {
            return attributes_;
          }
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          @java.lang.Override
          public int getAttributesCount() {
            return attributes_.size();
          }
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getAttributes(int index) {
            return attributes_.get(index);
          }
          /**
           * <pre>
           * Attributes of a complex key.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getAttributesOrBuilder(
              int index) {
            return attributes_.get(index);
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            for (int i = 0; i < attributes_.size(); i++) {
              output.writeMessage(1, attributes_.get(i));
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < attributes_.size(); i++) {
              size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, attributes_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key)) {
              return super.equals(obj);
            }
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key) obj;

            if (!getAttributesList()
                .equals(other.getAttributesList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getAttributesCount() > 0) {
              hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
              hash = (53 * hash) + getAttributesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * <pre>
           * Complex key.
           * </pre>
           *
           * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key)
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder.class);
            }

            // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
                getAttributesFieldBuilder();
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              if (attributesBuilder_ == null) {
                attributes_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                attributesBuilder_.clear();
              }
              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key getDefaultInstanceForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key build() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key buildPartial() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key(this);
              int from_bitField0_ = bitField0_;
              if (attributesBuilder_ == null) {
                if (((bitField0_ & 0x00000001) != 0)) {
                  attributes_ = java.util.Collections.unmodifiableList(attributes_);
                  bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.attributes_ = attributes_;
              } else {
                result.attributes_ = attributesBuilder_.build();
              }
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key) {
                return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key other) {
              if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.getDefaultInstance()) return this;
              if (attributesBuilder_ == null) {
                if (!other.attributes_.isEmpty()) {
                  if (attributes_.isEmpty()) {
                    attributes_ = other.attributes_;
                    bitField0_ = (bitField0_ & ~0x00000001);
                  } else {
                    ensureAttributesIsMutable();
                    attributes_.addAll(other.attributes_);
                  }
                  onChanged();
                }
              } else {
                if (!other.attributes_.isEmpty()) {
                  if (attributesBuilder_.isEmpty()) {
                    attributesBuilder_.dispose();
                    attributesBuilder_ = null;
                    attributes_ = other.attributes_;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    attributesBuilder_ = 
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                         getAttributesFieldBuilder() : null;
                  } else {
                    attributesBuilder_.addAllMessages(other.attributes_);
                  }
                }
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> attributes_ =
              java.util.Collections.emptyList();
            private void ensureAttributesIsMutable() {
              if (!((bitField0_ & 0x00000001) != 0)) {
                attributes_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute>(attributes_);
                bitField0_ |= 0x00000001;
               }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> attributesBuilder_;

            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> getAttributesList() {
              if (attributesBuilder_ == null) {
                return java.util.Collections.unmodifiableList(attributes_);
              } else {
                return attributesBuilder_.getMessageList();
              }
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public int getAttributesCount() {
              if (attributesBuilder_ == null) {
                return attributes_.size();
              } else {
                return attributesBuilder_.getCount();
              }
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getAttributes(int index) {
              if (attributesBuilder_ == null) {
                return attributes_.get(index);
              } else {
                return attributesBuilder_.getMessage(index);
              }
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder setAttributes(
                int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
              if (attributesBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureAttributesIsMutable();
                attributes_.set(index, value);
                onChanged();
              } else {
                attributesBuilder_.setMessage(index, value);
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder setAttributes(
                int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
              if (attributesBuilder_ == null) {
                ensureAttributesIsMutable();
                attributes_.set(index, builderForValue.build());
                onChanged();
              } else {
                attributesBuilder_.setMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder addAttributes(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
              if (attributesBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureAttributesIsMutable();
                attributes_.add(value);
                onChanged();
              } else {
                attributesBuilder_.addMessage(value);
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder addAttributes(
                int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
              if (attributesBuilder_ == null) {
                if (value == null) {
                  throw new NullPointerException();
                }
                ensureAttributesIsMutable();
                attributes_.add(index, value);
                onChanged();
              } else {
                attributesBuilder_.addMessage(index, value);
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder addAttributes(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
              if (attributesBuilder_ == null) {
                ensureAttributesIsMutable();
                attributes_.add(builderForValue.build());
                onChanged();
              } else {
                attributesBuilder_.addMessage(builderForValue.build());
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder addAttributes(
                int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
              if (attributesBuilder_ == null) {
                ensureAttributesIsMutable();
                attributes_.add(index, builderForValue.build());
                onChanged();
              } else {
                attributesBuilder_.addMessage(index, builderForValue.build());
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder addAllAttributes(
                java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> values) {
              if (attributesBuilder_ == null) {
                ensureAttributesIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                    values, attributes_);
                onChanged();
              } else {
                attributesBuilder_.addAllMessages(values);
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder clearAttributes() {
              if (attributesBuilder_ == null) {
                attributes_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
              } else {
                attributesBuilder_.clear();
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public Builder removeAttributes(int index) {
              if (attributesBuilder_ == null) {
                ensureAttributesIsMutable();
                attributes_.remove(index);
                onChanged();
              } else {
                attributesBuilder_.remove(index);
              }
              return this;
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder getAttributesBuilder(
                int index) {
              return getAttributesFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getAttributesOrBuilder(
                int index) {
              if (attributesBuilder_ == null) {
                return attributes_.get(index);  } else {
                return attributesBuilder_.getMessageOrBuilder(index);
              }
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
                 getAttributesOrBuilderList() {
              if (attributesBuilder_ != null) {
                return attributesBuilder_.getMessageOrBuilderList();
              } else {
                return java.util.Collections.unmodifiableList(attributes_);
              }
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder addAttributesBuilder() {
              return getAttributesFieldBuilder().addBuilder(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance());
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder addAttributesBuilder(
                int index) {
              return getAttributesFieldBuilder().addBuilder(
                  index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance());
            }
            /**
             * <pre>
             * Attributes of a complex key.
             * </pre>
             *
             * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 1 [(.yandex.cloud.size) = "&gt;0"];</code>
             */
            public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder> 
                 getAttributesBuilderList() {
              return getAttributesFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
                getAttributesFieldBuilder() {
              if (attributesBuilder_ == null) {
                attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder>(
                        attributes_,
                        ((bitField0_ & 0x00000001) != 0),
                        getParentForChildren(),
                        isClean());
                attributes_ = null;
              }
              return attributesBuilder_;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key)
          private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key();
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Key>
              PARSER = new com.google.protobuf.AbstractParser<Key>() {
            @java.lang.Override
            public Key parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Key(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Key> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Key> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public static final int ID_FIELD_NUMBER = 1;
        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id id_;
        /**
         * <pre>
         * Single numeric key column for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return id_ != null;
        }
        /**
         * <pre>
         * Single numeric key column for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id getId() {
          return id_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.getDefaultInstance() : id_;
        }
        /**
         * <pre>
         * Single numeric key column for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder getIdOrBuilder() {
          return getId();
        }

        public static final int KEY_FIELD_NUMBER = 3;
        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key key_;
        /**
         * <pre>
         * Composite key for the dictionary, containing of one or more key columns.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
         * @return Whether the key field is set.
         */
        @java.lang.Override
        public boolean hasKey() {
          return key_ != null;
        }
        /**
         * <pre>
         * Composite key for the dictionary, containing of one or more key columns.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
         * @return The key.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key getKey() {
          return key_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.getDefaultInstance() : key_;
        }
        /**
         * <pre>
         * Composite key for the dictionary, containing of one or more key columns.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder getKeyOrBuilder() {
          return getKey();
        }

        public static final int RANGE_MIN_FIELD_NUMBER = 4;
        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute rangeMin_;
        /**
         * <pre>
         * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
         * @return Whether the rangeMin field is set.
         */
        @java.lang.Override
        public boolean hasRangeMin() {
          return rangeMin_ != null;
        }
        /**
         * <pre>
         * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
         * @return The rangeMin.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getRangeMin() {
          return rangeMin_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance() : rangeMin_;
        }
        /**
         * <pre>
         * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getRangeMinOrBuilder() {
          return getRangeMin();
        }

        public static final int RANGE_MAX_FIELD_NUMBER = 5;
        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute rangeMax_;
        /**
         * <pre>
         * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
         * @return Whether the rangeMax field is set.
         */
        @java.lang.Override
        public boolean hasRangeMax() {
          return rangeMax_ != null;
        }
        /**
         * <pre>
         * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
         * @return The rangeMax.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getRangeMax() {
          return rangeMax_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance() : rangeMax_;
        }
        /**
         * <pre>
         * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getRangeMaxOrBuilder() {
          return getRangeMax();
        }

        public static final int ATTRIBUTES_FIELD_NUMBER = 2;
        private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> attributes_;
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> getAttributesList() {
          return attributes_;
        }
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
            getAttributesOrBuilderList() {
          return attributes_;
        }
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public int getAttributesCount() {
          return attributes_.size();
        }
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getAttributes(int index) {
          return attributes_.get(index);
        }
        /**
         * <pre>
         * Description of the fields available for database queries.
         * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getAttributesOrBuilder(
            int index) {
          return attributes_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (id_ != null) {
            output.writeMessage(1, getId());
          }
          for (int i = 0; i < attributes_.size(); i++) {
            output.writeMessage(2, attributes_.get(i));
          }
          if (key_ != null) {
            output.writeMessage(3, getKey());
          }
          if (rangeMin_ != null) {
            output.writeMessage(4, getRangeMin());
          }
          if (rangeMax_ != null) {
            output.writeMessage(5, getRangeMax());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (id_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getId());
          }
          for (int i = 0; i < attributes_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, attributes_.get(i));
          }
          if (key_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getKey());
          }
          if (rangeMin_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getRangeMin());
          }
          if (rangeMax_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getRangeMax());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure) obj;

          if (hasId() != other.hasId()) return false;
          if (hasId()) {
            if (!getId()
                .equals(other.getId())) return false;
          }
          if (hasKey() != other.hasKey()) return false;
          if (hasKey()) {
            if (!getKey()
                .equals(other.getKey())) return false;
          }
          if (hasRangeMin() != other.hasRangeMin()) return false;
          if (hasRangeMin()) {
            if (!getRangeMin()
                .equals(other.getRangeMin())) return false;
          }
          if (hasRangeMax() != other.hasRangeMax()) return false;
          if (hasRangeMax()) {
            if (!getRangeMax()
                .equals(other.getRangeMax())) return false;
          }
          if (!getAttributesList()
              .equals(other.getAttributesList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasId()) {
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
          }
          if (hasKey()) {
            hash = (37 * hash) + KEY_FIELD_NUMBER;
            hash = (53 * hash) + getKey().hashCode();
          }
          if (hasRangeMin()) {
            hash = (37 * hash) + RANGE_MIN_FIELD_NUMBER;
            hash = (53 * hash) + getRangeMin().hashCode();
          }
          if (hasRangeMax()) {
            hash = (37 * hash) + RANGE_MAX_FIELD_NUMBER;
            hash = (53 * hash) + getRangeMax().hashCode();
          }
          if (getAttributesCount() > 0) {
            hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
            hash = (53 * hash) + getAttributesList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getAttributesFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (idBuilder_ == null) {
              id_ = null;
            } else {
              id_ = null;
              idBuilder_ = null;
            }
            if (keyBuilder_ == null) {
              key_ = null;
            } else {
              key_ = null;
              keyBuilder_ = null;
            }
            if (rangeMinBuilder_ == null) {
              rangeMin_ = null;
            } else {
              rangeMin_ = null;
              rangeMinBuilder_ = null;
            }
            if (rangeMaxBuilder_ == null) {
              rangeMax_ = null;
            } else {
              rangeMax_ = null;
              rangeMaxBuilder_ = null;
            }
            if (attributesBuilder_ == null) {
              attributes_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              attributesBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure(this);
            int from_bitField0_ = bitField0_;
            if (idBuilder_ == null) {
              result.id_ = id_;
            } else {
              result.id_ = idBuilder_.build();
            }
            if (keyBuilder_ == null) {
              result.key_ = key_;
            } else {
              result.key_ = keyBuilder_.build();
            }
            if (rangeMinBuilder_ == null) {
              result.rangeMin_ = rangeMin_;
            } else {
              result.rangeMin_ = rangeMinBuilder_.build();
            }
            if (rangeMaxBuilder_ == null) {
              result.rangeMax_ = rangeMax_;
            } else {
              result.rangeMax_ = rangeMaxBuilder_.build();
            }
            if (attributesBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                attributes_ = java.util.Collections.unmodifiableList(attributes_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.attributes_ = attributes_;
            } else {
              result.attributes_ = attributesBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.getDefaultInstance()) return this;
            if (other.hasId()) {
              mergeId(other.getId());
            }
            if (other.hasKey()) {
              mergeKey(other.getKey());
            }
            if (other.hasRangeMin()) {
              mergeRangeMin(other.getRangeMin());
            }
            if (other.hasRangeMax()) {
              mergeRangeMax(other.getRangeMax());
            }
            if (attributesBuilder_ == null) {
              if (!other.attributes_.isEmpty()) {
                if (attributes_.isEmpty()) {
                  attributes_ = other.attributes_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureAttributesIsMutable();
                  attributes_.addAll(other.attributes_);
                }
                onChanged();
              }
            } else {
              if (!other.attributes_.isEmpty()) {
                if (attributesBuilder_.isEmpty()) {
                  attributesBuilder_.dispose();
                  attributesBuilder_ = null;
                  attributes_ = other.attributes_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  attributesBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getAttributesFieldBuilder() : null;
                } else {
                  attributesBuilder_.addAllMessages(other.attributes_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id id_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder> idBuilder_;
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           * @return Whether the id field is set.
           */
          public boolean hasId() {
            return idBuilder_ != null || id_ != null;
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           * @return The id.
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id getId() {
            if (idBuilder_ == null) {
              return id_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.getDefaultInstance() : id_;
            } else {
              return idBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          public Builder setId(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id value) {
            if (idBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              id_ = value;
              onChanged();
            } else {
              idBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          public Builder setId(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder builderForValue) {
            if (idBuilder_ == null) {
              id_ = builderForValue.build();
              onChanged();
            } else {
              idBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          public Builder mergeId(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id value) {
            if (idBuilder_ == null) {
              if (id_ != null) {
                id_ =
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.newBuilder(id_).mergeFrom(value).buildPartial();
              } else {
                id_ = value;
              }
              onChanged();
            } else {
              idBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          public Builder clearId() {
            if (idBuilder_ == null) {
              id_ = null;
              onChanged();
            } else {
              id_ = null;
              idBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder getIdBuilder() {
            
            onChanged();
            return getIdFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder getIdOrBuilder() {
            if (idBuilder_ != null) {
              return idBuilder_.getMessageOrBuilder();
            } else {
              return id_ == null ?
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.getDefaultInstance() : id_;
            }
          }
          /**
           * <pre>
           * Single numeric key column for the dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Id id = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder> 
              getIdFieldBuilder() {
            if (idBuilder_ == null) {
              idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Id.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.IdOrBuilder>(
                      getId(),
                      getParentForChildren(),
                      isClean());
              id_ = null;
            }
            return idBuilder_;
          }

          private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key key_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder> keyBuilder_;
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           * @return Whether the key field is set.
           */
          public boolean hasKey() {
            return keyBuilder_ != null || key_ != null;
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           * @return The key.
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key getKey() {
            if (keyBuilder_ == null) {
              return key_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.getDefaultInstance() : key_;
            } else {
              return keyBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          public Builder setKey(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key value) {
            if (keyBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              key_ = value;
              onChanged();
            } else {
              keyBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          public Builder setKey(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder builderForValue) {
            if (keyBuilder_ == null) {
              key_ = builderForValue.build();
              onChanged();
            } else {
              keyBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          public Builder mergeKey(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key value) {
            if (keyBuilder_ == null) {
              if (key_ != null) {
                key_ =
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.newBuilder(key_).mergeFrom(value).buildPartial();
              } else {
                key_ = value;
              }
              onChanged();
            } else {
              keyBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          public Builder clearKey() {
            if (keyBuilder_ == null) {
              key_ = null;
              onChanged();
            } else {
              key_ = null;
              keyBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder getKeyBuilder() {
            
            onChanged();
            return getKeyFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder getKeyOrBuilder() {
            if (keyBuilder_ != null) {
              return keyBuilder_.getMessageOrBuilder();
            } else {
              return key_ == null ?
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.getDefaultInstance() : key_;
            }
          }
          /**
           * <pre>
           * Composite key for the dictionary, containing of one or more key columns.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#composite-key).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Key key = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder> 
              getKeyFieldBuilder() {
            if (keyBuilder_ == null) {
              keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Key.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.KeyOrBuilder>(
                      getKey(),
                      getParentForChildren(),
                      isClean());
              key_ = null;
            }
            return keyBuilder_;
          }

          private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute rangeMin_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> rangeMinBuilder_;
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           * @return Whether the rangeMin field is set.
           */
          public boolean hasRangeMin() {
            return rangeMinBuilder_ != null || rangeMin_ != null;
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           * @return The rangeMin.
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getRangeMin() {
            if (rangeMinBuilder_ == null) {
              return rangeMin_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance() : rangeMin_;
            } else {
              return rangeMinBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          public Builder setRangeMin(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (rangeMinBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              rangeMin_ = value;
              onChanged();
            } else {
              rangeMinBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          public Builder setRangeMin(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
            if (rangeMinBuilder_ == null) {
              rangeMin_ = builderForValue.build();
              onChanged();
            } else {
              rangeMinBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          public Builder mergeRangeMin(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (rangeMinBuilder_ == null) {
              if (rangeMin_ != null) {
                rangeMin_ =
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.newBuilder(rangeMin_).mergeFrom(value).buildPartial();
              } else {
                rangeMin_ = value;
              }
              onChanged();
            } else {
              rangeMinBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          public Builder clearRangeMin() {
            if (rangeMinBuilder_ == null) {
              rangeMin_ = null;
              onChanged();
            } else {
              rangeMin_ = null;
              rangeMinBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder getRangeMinBuilder() {
            
            onChanged();
            return getRangeMinFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getRangeMinOrBuilder() {
            if (rangeMinBuilder_ != null) {
              return rangeMinBuilder_.getMessageOrBuilder();
            } else {
              return rangeMin_ == null ?
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance() : rangeMin_;
            }
          }
          /**
           * <pre>
           * Field holding the beginning of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_min = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
              getRangeMinFieldBuilder() {
            if (rangeMinBuilder_ == null) {
              rangeMinBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder>(
                      getRangeMin(),
                      getParentForChildren(),
                      isClean());
              rangeMin_ = null;
            }
            return rangeMinBuilder_;
          }

          private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute rangeMax_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> rangeMaxBuilder_;
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           * @return Whether the rangeMax field is set.
           */
          public boolean hasRangeMax() {
            return rangeMaxBuilder_ != null || rangeMax_ != null;
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           * @return The rangeMax.
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getRangeMax() {
            if (rangeMaxBuilder_ == null) {
              return rangeMax_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance() : rangeMax_;
            } else {
              return rangeMaxBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          public Builder setRangeMax(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (rangeMaxBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              rangeMax_ = value;
              onChanged();
            } else {
              rangeMaxBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          public Builder setRangeMax(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
            if (rangeMaxBuilder_ == null) {
              rangeMax_ = builderForValue.build();
              onChanged();
            } else {
              rangeMaxBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          public Builder mergeRangeMax(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (rangeMaxBuilder_ == null) {
              if (rangeMax_ != null) {
                rangeMax_ =
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.newBuilder(rangeMax_).mergeFrom(value).buildPartial();
              } else {
                rangeMax_ = value;
              }
              onChanged();
            } else {
              rangeMaxBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          public Builder clearRangeMax() {
            if (rangeMaxBuilder_ == null) {
              rangeMax_ = null;
              onChanged();
            } else {
              rangeMax_ = null;
              rangeMaxBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder getRangeMaxBuilder() {
            
            onChanged();
            return getRangeMaxFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getRangeMaxOrBuilder() {
            if (rangeMaxBuilder_ != null) {
              return rangeMaxBuilder_.getMessageOrBuilder();
            } else {
              return rangeMax_ == null ?
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance() : rangeMax_;
            }
          }
          /**
           * <pre>
           * Field holding the end of the range for dictionaries with `RANGE_HASHED` layout.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/#range-hashed).
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute range_max = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
              getRangeMaxFieldBuilder() {
            if (rangeMaxBuilder_ == null) {
              rangeMaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder>(
                      getRangeMax(),
                      getParentForChildren(),
                      isClean());
              rangeMax_ = null;
            }
            return rangeMaxBuilder_;
          }

          private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> attributes_ =
            java.util.Collections.emptyList();
          private void ensureAttributesIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              attributes_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute>(attributes_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> attributesBuilder_;

          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> getAttributesList() {
            if (attributesBuilder_ == null) {
              return java.util.Collections.unmodifiableList(attributes_);
            } else {
              return attributesBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public int getAttributesCount() {
            if (attributesBuilder_ == null) {
              return attributes_.size();
            } else {
              return attributesBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute getAttributes(int index) {
            if (attributesBuilder_ == null) {
              return attributes_.get(index);
            } else {
              return attributesBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder setAttributes(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (attributesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAttributesIsMutable();
              attributes_.set(index, value);
              onChanged();
            } else {
              attributesBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder setAttributes(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
            if (attributesBuilder_ == null) {
              ensureAttributesIsMutable();
              attributes_.set(index, builderForValue.build());
              onChanged();
            } else {
              attributesBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAttributes(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (attributesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAttributesIsMutable();
              attributes_.add(value);
              onChanged();
            } else {
              attributesBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAttributes(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute value) {
            if (attributesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureAttributesIsMutable();
              attributes_.add(index, value);
              onChanged();
            } else {
              attributesBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAttributes(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
            if (attributesBuilder_ == null) {
              ensureAttributesIsMutable();
              attributes_.add(builderForValue.build());
              onChanged();
            } else {
              attributesBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAttributes(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder builderForValue) {
            if (attributesBuilder_ == null) {
              ensureAttributesIsMutable();
              attributes_.add(index, builderForValue.build());
              onChanged();
            } else {
              attributesBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAllAttributes(
              java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute> values) {
            if (attributesBuilder_ == null) {
              ensureAttributesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, attributes_);
              onChanged();
            } else {
              attributesBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder clearAttributes() {
            if (attributesBuilder_ == null) {
              attributes_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              attributesBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder removeAttributes(int index) {
            if (attributesBuilder_ == null) {
              ensureAttributesIsMutable();
              attributes_.remove(index);
              onChanged();
            } else {
              attributesBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder getAttributesBuilder(
              int index) {
            return getAttributesFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder getAttributesOrBuilder(
              int index) {
            if (attributesBuilder_ == null) {
              return attributes_.get(index);  } else {
              return attributesBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
               getAttributesOrBuilderList() {
            if (attributesBuilder_ != null) {
              return attributesBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(attributes_);
            }
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder addAttributesBuilder() {
            return getAttributesFieldBuilder().addBuilder(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance());
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder addAttributesBuilder(
              int index) {
            return getAttributesFieldBuilder().addBuilder(
                index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.getDefaultInstance());
          }
          /**
           * <pre>
           * Description of the fields available for database queries.
           * For details, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/#attributes).
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure.Attribute attributes = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder> 
               getAttributesBuilderList() {
            return getAttributesFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder> 
              getAttributesFieldBuilder() {
            if (attributesBuilder_ == null) {
              attributesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Attribute.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.AttributeOrBuilder>(
                      attributes_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              attributes_ = null;
            }
            return attributesBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Structure>
            PARSER = new com.google.protobuf.AbstractParser<Structure>() {
          @java.lang.Override
          public Structure parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Structure(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Structure> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Structure> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface LayoutOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Layout type for an external dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
         * @return The enum numeric value on the wire for type.
         */
        int getTypeValue();
        /**
         * <pre>
         * Layout type for an external dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
         * @return The type.
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type getType();

        /**
         * <pre>
         * Number of cells in the cache. Rounded up to a power of two.
         * Applicable only for CACHE and COMPLEX_KEY_CACHE layout types.
         * </pre>
         *
         * <code>int64 size_in_cells = 2;</code>
         * @return The sizeInCells.
         */
        long getSizeInCells();
      }
      /**
       * <pre>
       * Layout determining how to store the dictionary in memory.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout}
       */
      public static final class Layout extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout)
          LayoutOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Layout.newBuilder() to construct.
        private Layout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Layout() {
          type_ = 0;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Layout();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Layout(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();

                  type_ = rawValue;
                  break;
                }
                case 16: {

                  sizeInCells_ = input.readInt64();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder.class);
        }

        /**
         * Protobuf enum {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type}
         */
        public enum Type
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>TYPE_UNSPECIFIED = 0;</code>
           */
          TYPE_UNSPECIFIED(0),
          /**
           * <pre>
           * The entire dictionary is stored in memory in the form of flat arrays.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>FLAT = 1;</code>
           */
          FLAT(1),
          /**
           * <pre>
           * The entire dictionary is stored in memory in the form of a hash table.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>HASHED = 2;</code>
           */
          HASHED(2),
          /**
           * <pre>
           * Similar to HASHED, to be used with composite keys.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>COMPLEX_KEY_HASHED = 3;</code>
           */
          COMPLEX_KEY_HASHED(3),
          /**
           * <pre>
           * The entire dictionary is stored in memory in the form of a hash table,
           * with an ordered array of ranges and their corresponding values.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>RANGE_HASHED = 4;</code>
           */
          RANGE_HASHED(4),
          /**
           * <pre>
           * The dictionary is stored in a cache with a set number of cells.
           * Available for MySQL, ClickHouse and HTTP dictionary sources.
           * </pre>
           *
           * <code>CACHE = 5;</code>
           */
          CACHE(5),
          /**
           * <pre>
           * Similar to CACHE, to be used with composite keys.
           * Available for MySQL, ClickHouse and HTTP dictionary sources.
           * </pre>
           *
           * <code>COMPLEX_KEY_CACHE = 6;</code>
           */
          COMPLEX_KEY_CACHE(6),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>TYPE_UNSPECIFIED = 0;</code>
           */
          public static final int TYPE_UNSPECIFIED_VALUE = 0;
          /**
           * <pre>
           * The entire dictionary is stored in memory in the form of flat arrays.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>FLAT = 1;</code>
           */
          public static final int FLAT_VALUE = 1;
          /**
           * <pre>
           * The entire dictionary is stored in memory in the form of a hash table.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>HASHED = 2;</code>
           */
          public static final int HASHED_VALUE = 2;
          /**
           * <pre>
           * Similar to HASHED, to be used with composite keys.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>COMPLEX_KEY_HASHED = 3;</code>
           */
          public static final int COMPLEX_KEY_HASHED_VALUE = 3;
          /**
           * <pre>
           * The entire dictionary is stored in memory in the form of a hash table,
           * with an ordered array of ranges and their corresponding values.
           * Available for all dictionary sources.
           * </pre>
           *
           * <code>RANGE_HASHED = 4;</code>
           */
          public static final int RANGE_HASHED_VALUE = 4;
          /**
           * <pre>
           * The dictionary is stored in a cache with a set number of cells.
           * Available for MySQL, ClickHouse and HTTP dictionary sources.
           * </pre>
           *
           * <code>CACHE = 5;</code>
           */
          public static final int CACHE_VALUE = 5;
          /**
           * <pre>
           * Similar to CACHE, to be used with composite keys.
           * Available for MySQL, ClickHouse and HTTP dictionary sources.
           * </pre>
           *
           * <code>COMPLEX_KEY_CACHE = 6;</code>
           */
          public static final int COMPLEX_KEY_CACHE_VALUE = 6;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static Type valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static Type forNumber(int value) {
            switch (value) {
              case 0: return TYPE_UNSPECIFIED;
              case 1: return FLAT;
              case 2: return HASHED;
              case 3: return COMPLEX_KEY_HASHED;
              case 4: return RANGE_HASHED;
              case 5: return CACHE;
              case 6: return COMPLEX_KEY_CACHE;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<Type>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              Type> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                  public Type findValueByNumber(int number) {
                    return Type.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.getDescriptor().getEnumTypes().get(0);
          }

          private static final Type[] VALUES = values();

          public static Type valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private Type(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type)
        }

        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <pre>
         * Layout type for an external dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Layout type for an external dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
         * @return The type.
         */
        @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type getType() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type.valueOf(type_);
          return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type.UNRECOGNIZED : result;
        }

        public static final int SIZE_IN_CELLS_FIELD_NUMBER = 2;
        private long sizeInCells_;
        /**
         * <pre>
         * Number of cells in the cache. Rounded up to a power of two.
         * Applicable only for CACHE and COMPLEX_KEY_CACHE layout types.
         * </pre>
         *
         * <code>int64 size_in_cells = 2;</code>
         * @return The sizeInCells.
         */
        @java.lang.Override
        public long getSizeInCells() {
          return sizeInCells_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (type_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type.TYPE_UNSPECIFIED.getNumber()) {
            output.writeEnum(1, type_);
          }
          if (sizeInCells_ != 0L) {
            output.writeInt64(2, sizeInCells_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (type_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type.TYPE_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, type_);
          }
          if (sizeInCells_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(2, sizeInCells_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout) obj;

          if (type_ != other.type_) return false;
          if (getSizeInCells()
              != other.getSizeInCells()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
          hash = (37 * hash) + SIZE_IN_CELLS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSizeInCells());
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Layout determining how to store the dictionary in memory.
         * </pre>
         *
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            type_ = 0;

            sizeInCells_ = 0L;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout(this);
            result.type_ = type_;
            result.sizeInCells_ = sizeInCells_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.getDefaultInstance()) return this;
            if (other.type_ != 0) {
              setTypeValue(other.getTypeValue());
            }
            if (other.getSizeInCells() != 0L) {
              setSizeInCells(other.getSizeInCells());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int type_ = 0;
          /**
           * <pre>
           * Layout type for an external dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
           * @return The enum numeric value on the wire for type.
           */
          @java.lang.Override public int getTypeValue() {
            return type_;
          }
          /**
           * <pre>
           * Layout type for an external dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The enum numeric value on the wire for type to set.
           * @return This builder for chaining.
           */
          public Builder setTypeValue(int value) {
            
            type_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Layout type for an external dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
           * @return The type.
           */
          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type getType() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type.valueOf(type_);
            return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Layout type for an external dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Type value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Layout type for an external dictionary.
           * </pre>
           *
           * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout.Type type = 1 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            
            type_ = 0;
            onChanged();
            return this;
          }

          private long sizeInCells_ ;
          /**
           * <pre>
           * Number of cells in the cache. Rounded up to a power of two.
           * Applicable only for CACHE and COMPLEX_KEY_CACHE layout types.
           * </pre>
           *
           * <code>int64 size_in_cells = 2;</code>
           * @return The sizeInCells.
           */
          @java.lang.Override
          public long getSizeInCells() {
            return sizeInCells_;
          }
          /**
           * <pre>
           * Number of cells in the cache. Rounded up to a power of two.
           * Applicable only for CACHE and COMPLEX_KEY_CACHE layout types.
           * </pre>
           *
           * <code>int64 size_in_cells = 2;</code>
           * @param value The sizeInCells to set.
           * @return This builder for chaining.
           */
          public Builder setSizeInCells(long value) {
            
            sizeInCells_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Number of cells in the cache. Rounded up to a power of two.
           * Applicable only for CACHE and COMPLEX_KEY_CACHE layout types.
           * </pre>
           *
           * <code>int64 size_in_cells = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearSizeInCells() {
            
            sizeInCells_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Layout>
            PARSER = new com.google.protobuf.AbstractParser<Layout>() {
          @java.lang.Override
          public Layout parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Layout(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Layout> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Layout> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface RangeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Minimum dictionary lifetime.
         * </pre>
         *
         * <code>int64 min = 1;</code>
         * @return The min.
         */
        long getMin();

        /**
         * <pre>
         * Maximum dictionary lifetime.
         * </pre>
         *
         * <code>int64 max = 2;</code>
         * @return The max.
         */
        long getMax();
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range}
       */
      public static final class Range extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range)
          RangeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Range.newBuilder() to construct.
        private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Range() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Range();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Range(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  min_ = input.readInt64();
                  break;
                }
                case 16: {

                  max_ = input.readInt64();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder.class);
        }

        public static final int MIN_FIELD_NUMBER = 1;
        private long min_;
        /**
         * <pre>
         * Minimum dictionary lifetime.
         * </pre>
         *
         * <code>int64 min = 1;</code>
         * @return The min.
         */
        @java.lang.Override
        public long getMin() {
          return min_;
        }

        public static final int MAX_FIELD_NUMBER = 2;
        private long max_;
        /**
         * <pre>
         * Maximum dictionary lifetime.
         * </pre>
         *
         * <code>int64 max = 2;</code>
         * @return The max.
         */
        @java.lang.Override
        public long getMax() {
          return max_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (min_ != 0L) {
            output.writeInt64(1, min_);
          }
          if (max_ != 0L) {
            output.writeInt64(2, max_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (min_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, min_);
          }
          if (max_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(2, max_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) obj;

          if (getMin()
              != other.getMin()) return false;
          if (getMax()
              != other.getMax()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + MIN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMin());
          hash = (37 * hash) + MAX_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMax());
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            min_ = 0L;

            max_ = 0L;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range(this);
            result.min_ = min_;
            result.max_ = max_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance()) return this;
            if (other.getMin() != 0L) {
              setMin(other.getMin());
            }
            if (other.getMax() != 0L) {
              setMax(other.getMax());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private long min_ ;
          /**
           * <pre>
           * Minimum dictionary lifetime.
           * </pre>
           *
           * <code>int64 min = 1;</code>
           * @return The min.
           */
          @java.lang.Override
          public long getMin() {
            return min_;
          }
          /**
           * <pre>
           * Minimum dictionary lifetime.
           * </pre>
           *
           * <code>int64 min = 1;</code>
           * @param value The min to set.
           * @return This builder for chaining.
           */
          public Builder setMin(long value) {
            
            min_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Minimum dictionary lifetime.
           * </pre>
           *
           * <code>int64 min = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearMin() {
            
            min_ = 0L;
            onChanged();
            return this;
          }

          private long max_ ;
          /**
           * <pre>
           * Maximum dictionary lifetime.
           * </pre>
           *
           * <code>int64 max = 2;</code>
           * @return The max.
           */
          @java.lang.Override
          public long getMax() {
            return max_;
          }
          /**
           * <pre>
           * Maximum dictionary lifetime.
           * </pre>
           *
           * <code>int64 max = 2;</code>
           * @param value The max to set.
           * @return This builder for chaining.
           */
          public Builder setMax(long value) {
            
            max_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Maximum dictionary lifetime.
           * </pre>
           *
           * <code>int64 max = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearMax() {
            
            max_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Range>
            PARSER = new com.google.protobuf.AbstractParser<Range>() {
          @java.lang.Override
          public Range parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Range(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Range> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Range> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int lifetimeCase_ = 0;
      private java.lang.Object lifetime_;
      public enum LifetimeCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        FIXED_LIFETIME(4),
        LIFETIME_RANGE(5),
        LIFETIME_NOT_SET(0);
        private final int value;
        private LifetimeCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static LifetimeCase valueOf(int value) {
          return forNumber(value);
        }

        public static LifetimeCase forNumber(int value) {
          switch (value) {
            case 4: return FIXED_LIFETIME;
            case 5: return LIFETIME_RANGE;
            case 0: return LIFETIME_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public LifetimeCase
      getLifetimeCase() {
        return LifetimeCase.forNumber(
            lifetimeCase_);
      }

      private int sourceCase_ = 0;
      private java.lang.Object source_;
      public enum SourceCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        HTTP_SOURCE(6),
        MYSQL_SOURCE(7),
        CLICKHOUSE_SOURCE(8),
        MONGODB_SOURCE(9),
        POSTGRESQL_SOURCE(10),
        SOURCE_NOT_SET(0);
        private final int value;
        private SourceCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SourceCase valueOf(int value) {
          return forNumber(value);
        }

        public static SourceCase forNumber(int value) {
          switch (value) {
            case 6: return HTTP_SOURCE;
            case 7: return MYSQL_SOURCE;
            case 8: return CLICKHOUSE_SOURCE;
            case 9: return MONGODB_SOURCE;
            case 10: return POSTGRESQL_SOURCE;
            case 0: return SOURCE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public SourceCase
      getSourceCase() {
        return SourceCase.forNumber(
            sourceCase_);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the external dictionary.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Name of the external dictionary.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STRUCTURE_FIELD_NUMBER = 2;
      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure structure_;
      /**
       * <pre>
       * Set of attributes for the external dictionary.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
       * @return Whether the structure field is set.
       */
      @java.lang.Override
      public boolean hasStructure() {
        return structure_ != null;
      }
      /**
       * <pre>
       * Set of attributes for the external dictionary.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
       * @return The structure.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure getStructure() {
        return structure_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.getDefaultInstance() : structure_;
      }
      /**
       * <pre>
       * Set of attributes for the external dictionary.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder getStructureOrBuilder() {
        return getStructure();
      }

      public static final int LAYOUT_FIELD_NUMBER = 3;
      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout layout_;
      /**
       * <pre>
       * Layout for storing the dictionary in memory.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
       * @return Whether the layout field is set.
       */
      @java.lang.Override
      public boolean hasLayout() {
        return layout_ != null;
      }
      /**
       * <pre>
       * Layout for storing the dictionary in memory.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
       * @return The layout.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout getLayout() {
        return layout_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.getDefaultInstance() : layout_;
      }
      /**
       * <pre>
       * Layout for storing the dictionary in memory.
       * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder getLayoutOrBuilder() {
        return getLayout();
      }

      public static final int FIXED_LIFETIME_FIELD_NUMBER = 4;
      /**
       * <pre>
       * Fixed interval between dictionary updates.
       * </pre>
       *
       * <code>int64 fixed_lifetime = 4;</code>
       * @return Whether the fixedLifetime field is set.
       */
      @java.lang.Override
      public boolean hasFixedLifetime() {
        return lifetimeCase_ == 4;
      }
      /**
       * <pre>
       * Fixed interval between dictionary updates.
       * </pre>
       *
       * <code>int64 fixed_lifetime = 4;</code>
       * @return The fixedLifetime.
       */
      @java.lang.Override
      public long getFixedLifetime() {
        if (lifetimeCase_ == 4) {
          return (java.lang.Long) lifetime_;
        }
        return 0L;
      }

      public static final int LIFETIME_RANGE_FIELD_NUMBER = 5;
      /**
       * <pre>
       * Range of intervals between dictionary updates for ClickHouse to choose from.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
       * @return Whether the lifetimeRange field is set.
       */
      @java.lang.Override
      public boolean hasLifetimeRange() {
        return lifetimeCase_ == 5;
      }
      /**
       * <pre>
       * Range of intervals between dictionary updates for ClickHouse to choose from.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
       * @return The lifetimeRange.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range getLifetimeRange() {
        if (lifetimeCase_ == 5) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
      }
      /**
       * <pre>
       * Range of intervals between dictionary updates for ClickHouse to choose from.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder getLifetimeRangeOrBuilder() {
        if (lifetimeCase_ == 5) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
      }

      public static final int HTTP_SOURCE_FIELD_NUMBER = 6;
      /**
       * <pre>
       * HTTP source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
       * @return Whether the httpSource field is set.
       */
      @java.lang.Override
      public boolean hasHttpSource() {
        return sourceCase_ == 6;
      }
      /**
       * <pre>
       * HTTP source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
       * @return The httpSource.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource getHttpSource() {
        if (sourceCase_ == 6) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
      }
      /**
       * <pre>
       * HTTP source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder getHttpSourceOrBuilder() {
        if (sourceCase_ == 6) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
      }

      public static final int MYSQL_SOURCE_FIELD_NUMBER = 7;
      /**
       * <pre>
       * MySQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
       * @return Whether the mysqlSource field is set.
       */
      @java.lang.Override
      public boolean hasMysqlSource() {
        return sourceCase_ == 7;
      }
      /**
       * <pre>
       * MySQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
       * @return The mysqlSource.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource getMysqlSource() {
        if (sourceCase_ == 7) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
      }
      /**
       * <pre>
       * MySQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder getMysqlSourceOrBuilder() {
        if (sourceCase_ == 7) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
      }

      public static final int CLICKHOUSE_SOURCE_FIELD_NUMBER = 8;
      /**
       * <pre>
       * ClickHouse source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
       * @return Whether the clickhouseSource field is set.
       */
      @java.lang.Override
      public boolean hasClickhouseSource() {
        return sourceCase_ == 8;
      }
      /**
       * <pre>
       * ClickHouse source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
       * @return The clickhouseSource.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource getClickhouseSource() {
        if (sourceCase_ == 8) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
      }
      /**
       * <pre>
       * ClickHouse source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder getClickhouseSourceOrBuilder() {
        if (sourceCase_ == 8) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
      }

      public static final int MONGODB_SOURCE_FIELD_NUMBER = 9;
      /**
       * <pre>
       * MongoDB source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
       * @return Whether the mongodbSource field is set.
       */
      @java.lang.Override
      public boolean hasMongodbSource() {
        return sourceCase_ == 9;
      }
      /**
       * <pre>
       * MongoDB source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
       * @return The mongodbSource.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource getMongodbSource() {
        if (sourceCase_ == 9) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
      }
      /**
       * <pre>
       * MongoDB source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder getMongodbSourceOrBuilder() {
        if (sourceCase_ == 9) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
      }

      public static final int POSTGRESQL_SOURCE_FIELD_NUMBER = 10;
      /**
       * <pre>
       * PostgreSQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
       * @return Whether the postgresqlSource field is set.
       */
      @java.lang.Override
      public boolean hasPostgresqlSource() {
        return sourceCase_ == 10;
      }
      /**
       * <pre>
       * PostgreSQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
       * @return The postgresqlSource.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource getPostgresqlSource() {
        if (sourceCase_ == 10) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
      }
      /**
       * <pre>
       * PostgreSQL source for the dictionary.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder getPostgresqlSourceOrBuilder() {
        if (sourceCase_ == 10) {
           return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_;
        }
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (structure_ != null) {
          output.writeMessage(2, getStructure());
        }
        if (layout_ != null) {
          output.writeMessage(3, getLayout());
        }
        if (lifetimeCase_ == 4) {
          output.writeInt64(
              4, (long)((java.lang.Long) lifetime_));
        }
        if (lifetimeCase_ == 5) {
          output.writeMessage(5, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_);
        }
        if (sourceCase_ == 6) {
          output.writeMessage(6, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_);
        }
        if (sourceCase_ == 7) {
          output.writeMessage(7, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_);
        }
        if (sourceCase_ == 8) {
          output.writeMessage(8, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_);
        }
        if (sourceCase_ == 9) {
          output.writeMessage(9, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_);
        }
        if (sourceCase_ == 10) {
          output.writeMessage(10, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (structure_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getStructure());
        }
        if (layout_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getLayout());
        }
        if (lifetimeCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(
                4, (long)((java.lang.Long) lifetime_));
        }
        if (lifetimeCase_ == 5) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_);
        }
        if (sourceCase_ == 6) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_);
        }
        if (sourceCase_ == 7) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_);
        }
        if (sourceCase_ == 8) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_);
        }
        if (sourceCase_ == 9) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_);
        }
        if (sourceCase_ == 10) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (hasStructure() != other.hasStructure()) return false;
        if (hasStructure()) {
          if (!getStructure()
              .equals(other.getStructure())) return false;
        }
        if (hasLayout() != other.hasLayout()) return false;
        if (hasLayout()) {
          if (!getLayout()
              .equals(other.getLayout())) return false;
        }
        if (!getLifetimeCase().equals(other.getLifetimeCase())) return false;
        switch (lifetimeCase_) {
          case 4:
            if (getFixedLifetime()
                != other.getFixedLifetime()) return false;
            break;
          case 5:
            if (!getLifetimeRange()
                .equals(other.getLifetimeRange())) return false;
            break;
          case 0:
          default:
        }
        if (!getSourceCase().equals(other.getSourceCase())) return false;
        switch (sourceCase_) {
          case 6:
            if (!getHttpSource()
                .equals(other.getHttpSource())) return false;
            break;
          case 7:
            if (!getMysqlSource()
                .equals(other.getMysqlSource())) return false;
            break;
          case 8:
            if (!getClickhouseSource()
                .equals(other.getClickhouseSource())) return false;
            break;
          case 9:
            if (!getMongodbSource()
                .equals(other.getMongodbSource())) return false;
            break;
          case 10:
            if (!getPostgresqlSource()
                .equals(other.getPostgresqlSource())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (hasStructure()) {
          hash = (37 * hash) + STRUCTURE_FIELD_NUMBER;
          hash = (53 * hash) + getStructure().hashCode();
        }
        if (hasLayout()) {
          hash = (37 * hash) + LAYOUT_FIELD_NUMBER;
          hash = (53 * hash) + getLayout().hashCode();
        }
        switch (lifetimeCase_) {
          case 4:
            hash = (37 * hash) + FIXED_LIFETIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getFixedLifetime());
            break;
          case 5:
            hash = (37 * hash) + LIFETIME_RANGE_FIELD_NUMBER;
            hash = (53 * hash) + getLifetimeRange().hashCode();
            break;
          case 0:
          default:
        }
        switch (sourceCase_) {
          case 6:
            hash = (37 * hash) + HTTP_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getHttpSource().hashCode();
            break;
          case 7:
            hash = (37 * hash) + MYSQL_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getMysqlSource().hashCode();
            break;
          case 8:
            hash = (37 * hash) + CLICKHOUSE_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getClickhouseSource().hashCode();
            break;
          case 9:
            hash = (37 * hash) + MONGODB_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getMongodbSource().hashCode();
            break;
          case 10:
            hash = (37 * hash) + POSTGRESQL_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getPostgresqlSource().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          if (structureBuilder_ == null) {
            structure_ = null;
          } else {
            structure_ = null;
            structureBuilder_ = null;
          }
          if (layoutBuilder_ == null) {
            layout_ = null;
          } else {
            layout_ = null;
            layoutBuilder_ = null;
          }
          lifetimeCase_ = 0;
          lifetime_ = null;
          sourceCase_ = 0;
          source_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary(this);
          result.name_ = name_;
          if (structureBuilder_ == null) {
            result.structure_ = structure_;
          } else {
            result.structure_ = structureBuilder_.build();
          }
          if (layoutBuilder_ == null) {
            result.layout_ = layout_;
          } else {
            result.layout_ = layoutBuilder_.build();
          }
          if (lifetimeCase_ == 4) {
            result.lifetime_ = lifetime_;
          }
          if (lifetimeCase_ == 5) {
            if (lifetimeRangeBuilder_ == null) {
              result.lifetime_ = lifetime_;
            } else {
              result.lifetime_ = lifetimeRangeBuilder_.build();
            }
          }
          if (sourceCase_ == 6) {
            if (httpSourceBuilder_ == null) {
              result.source_ = source_;
            } else {
              result.source_ = httpSourceBuilder_.build();
            }
          }
          if (sourceCase_ == 7) {
            if (mysqlSourceBuilder_ == null) {
              result.source_ = source_;
            } else {
              result.source_ = mysqlSourceBuilder_.build();
            }
          }
          if (sourceCase_ == 8) {
            if (clickhouseSourceBuilder_ == null) {
              result.source_ = source_;
            } else {
              result.source_ = clickhouseSourceBuilder_.build();
            }
          }
          if (sourceCase_ == 9) {
            if (mongodbSourceBuilder_ == null) {
              result.source_ = source_;
            } else {
              result.source_ = mongodbSourceBuilder_.build();
            }
          }
          if (sourceCase_ == 10) {
            if (postgresqlSourceBuilder_ == null) {
              result.source_ = source_;
            } else {
              result.source_ = postgresqlSourceBuilder_.build();
            }
          }
          result.lifetimeCase_ = lifetimeCase_;
          result.sourceCase_ = sourceCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (other.hasStructure()) {
            mergeStructure(other.getStructure());
          }
          if (other.hasLayout()) {
            mergeLayout(other.getLayout());
          }
          switch (other.getLifetimeCase()) {
            case FIXED_LIFETIME: {
              setFixedLifetime(other.getFixedLifetime());
              break;
            }
            case LIFETIME_RANGE: {
              mergeLifetimeRange(other.getLifetimeRange());
              break;
            }
            case LIFETIME_NOT_SET: {
              break;
            }
          }
          switch (other.getSourceCase()) {
            case HTTP_SOURCE: {
              mergeHttpSource(other.getHttpSource());
              break;
            }
            case MYSQL_SOURCE: {
              mergeMysqlSource(other.getMysqlSource());
              break;
            }
            case CLICKHOUSE_SOURCE: {
              mergeClickhouseSource(other.getClickhouseSource());
              break;
            }
            case MONGODB_SOURCE: {
              mergeMongodbSource(other.getMongodbSource());
              break;
            }
            case POSTGRESQL_SOURCE: {
              mergePostgresqlSource(other.getPostgresqlSource());
              break;
            }
            case SOURCE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int lifetimeCase_ = 0;
        private java.lang.Object lifetime_;
        public LifetimeCase
            getLifetimeCase() {
          return LifetimeCase.forNumber(
              lifetimeCase_);
        }

        public Builder clearLifetime() {
          lifetimeCase_ = 0;
          lifetime_ = null;
          onChanged();
          return this;
        }

        private int sourceCase_ = 0;
        private java.lang.Object source_;
        public SourceCase
            getSourceCase() {
          return SourceCase.forNumber(
              sourceCase_);
        }

        public Builder clearSource() {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
          return this;
        }


        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the external dictionary.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the external dictionary.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the external dictionary.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the external dictionary.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the external dictionary.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure structure_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder> structureBuilder_;
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         * @return Whether the structure field is set.
         */
        public boolean hasStructure() {
          return structureBuilder_ != null || structure_ != null;
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         * @return The structure.
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure getStructure() {
          if (structureBuilder_ == null) {
            return structure_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.getDefaultInstance() : structure_;
          } else {
            return structureBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder setStructure(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure value) {
          if (structureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            structure_ = value;
            onChanged();
          } else {
            structureBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder setStructure(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder builderForValue) {
          if (structureBuilder_ == null) {
            structure_ = builderForValue.build();
            onChanged();
          } else {
            structureBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder mergeStructure(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure value) {
          if (structureBuilder_ == null) {
            if (structure_ != null) {
              structure_ =
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.newBuilder(structure_).mergeFrom(value).buildPartial();
            } else {
              structure_ = value;
            }
            onChanged();
          } else {
            structureBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        public Builder clearStructure() {
          if (structureBuilder_ == null) {
            structure_ = null;
            onChanged();
          } else {
            structure_ = null;
            structureBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder getStructureBuilder() {
          
          onChanged();
          return getStructureFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder getStructureOrBuilder() {
          if (structureBuilder_ != null) {
            return structureBuilder_.getMessageOrBuilder();
          } else {
            return structure_ == null ?
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.getDefaultInstance() : structure_;
          }
        }
        /**
         * <pre>
         * Set of attributes for the external dictionary.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_structure/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Structure structure = 2 [(.yandex.cloud.required) = true];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder> 
            getStructureFieldBuilder() {
          if (structureBuilder_ == null) {
            structureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Structure.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.StructureOrBuilder>(
                    getStructure(),
                    getParentForChildren(),
                    isClean());
            structure_ = null;
          }
          return structureBuilder_;
        }

        private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout layout_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder> layoutBuilder_;
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         * @return Whether the layout field is set.
         */
        public boolean hasLayout() {
          return layoutBuilder_ != null || layout_ != null;
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         * @return The layout.
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout getLayout() {
          if (layoutBuilder_ == null) {
            return layout_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.getDefaultInstance() : layout_;
          } else {
            return layoutBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        public Builder setLayout(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout value) {
          if (layoutBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            layout_ = value;
            onChanged();
          } else {
            layoutBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        public Builder setLayout(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder builderForValue) {
          if (layoutBuilder_ == null) {
            layout_ = builderForValue.build();
            onChanged();
          } else {
            layoutBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        public Builder mergeLayout(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout value) {
          if (layoutBuilder_ == null) {
            if (layout_ != null) {
              layout_ =
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.newBuilder(layout_).mergeFrom(value).buildPartial();
            } else {
              layout_ = value;
            }
            onChanged();
          } else {
            layoutBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        public Builder clearLayout() {
          if (layoutBuilder_ == null) {
            layout_ = null;
            onChanged();
          } else {
            layout_ = null;
            layoutBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder getLayoutBuilder() {
          
          onChanged();
          return getLayoutFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder getLayoutOrBuilder() {
          if (layoutBuilder_ != null) {
            return layoutBuilder_.getMessageOrBuilder();
          } else {
            return layout_ == null ?
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.getDefaultInstance() : layout_;
          }
        }
        /**
         * <pre>
         * Layout for storing the dictionary in memory.
         * For in-depth description, see [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts_dict_layout/).
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Layout layout = 3 [(.yandex.cloud.required) = true];</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder> 
            getLayoutFieldBuilder() {
          if (layoutBuilder_ == null) {
            layoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Layout.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.LayoutOrBuilder>(
                    getLayout(),
                    getParentForChildren(),
                    isClean());
            layout_ = null;
          }
          return layoutBuilder_;
        }

        /**
         * <pre>
         * Fixed interval between dictionary updates.
         * </pre>
         *
         * <code>int64 fixed_lifetime = 4;</code>
         * @return Whether the fixedLifetime field is set.
         */
        public boolean hasFixedLifetime() {
          return lifetimeCase_ == 4;
        }
        /**
         * <pre>
         * Fixed interval between dictionary updates.
         * </pre>
         *
         * <code>int64 fixed_lifetime = 4;</code>
         * @return The fixedLifetime.
         */
        public long getFixedLifetime() {
          if (lifetimeCase_ == 4) {
            return (java.lang.Long) lifetime_;
          }
          return 0L;
        }
        /**
         * <pre>
         * Fixed interval between dictionary updates.
         * </pre>
         *
         * <code>int64 fixed_lifetime = 4;</code>
         * @param value The fixedLifetime to set.
         * @return This builder for chaining.
         */
        public Builder setFixedLifetime(long value) {
          lifetimeCase_ = 4;
          lifetime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Fixed interval between dictionary updates.
         * </pre>
         *
         * <code>int64 fixed_lifetime = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFixedLifetime() {
          if (lifetimeCase_ == 4) {
            lifetimeCase_ = 0;
            lifetime_ = null;
            onChanged();
          }
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder> lifetimeRangeBuilder_;
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         * @return Whether the lifetimeRange field is set.
         */
        @java.lang.Override
        public boolean hasLifetimeRange() {
          return lifetimeCase_ == 5;
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         * @return The lifetimeRange.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range getLifetimeRange() {
          if (lifetimeRangeBuilder_ == null) {
            if (lifetimeCase_ == 5) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
          } else {
            if (lifetimeCase_ == 5) {
              return lifetimeRangeBuilder_.getMessage();
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        public Builder setLifetimeRange(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range value) {
          if (lifetimeRangeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lifetime_ = value;
            onChanged();
          } else {
            lifetimeRangeBuilder_.setMessage(value);
          }
          lifetimeCase_ = 5;
          return this;
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        public Builder setLifetimeRange(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder builderForValue) {
          if (lifetimeRangeBuilder_ == null) {
            lifetime_ = builderForValue.build();
            onChanged();
          } else {
            lifetimeRangeBuilder_.setMessage(builderForValue.build());
          }
          lifetimeCase_ = 5;
          return this;
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        public Builder mergeLifetimeRange(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range value) {
          if (lifetimeRangeBuilder_ == null) {
            if (lifetimeCase_ == 5 &&
                lifetime_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance()) {
              lifetime_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.newBuilder((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_)
                  .mergeFrom(value).buildPartial();
            } else {
              lifetime_ = value;
            }
            onChanged();
          } else {
            if (lifetimeCase_ == 5) {
              lifetimeRangeBuilder_.mergeFrom(value);
            }
            lifetimeRangeBuilder_.setMessage(value);
          }
          lifetimeCase_ = 5;
          return this;
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        public Builder clearLifetimeRange() {
          if (lifetimeRangeBuilder_ == null) {
            if (lifetimeCase_ == 5) {
              lifetimeCase_ = 0;
              lifetime_ = null;
              onChanged();
            }
          } else {
            if (lifetimeCase_ == 5) {
              lifetimeCase_ = 0;
              lifetime_ = null;
            }
            lifetimeRangeBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder getLifetimeRangeBuilder() {
          return getLifetimeRangeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder getLifetimeRangeOrBuilder() {
          if ((lifetimeCase_ == 5) && (lifetimeRangeBuilder_ != null)) {
            return lifetimeRangeBuilder_.getMessageOrBuilder();
          } else {
            if (lifetimeCase_ == 5) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Range of intervals between dictionary updates for ClickHouse to choose from.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.Range lifetime_range = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder> 
            getLifetimeRangeFieldBuilder() {
          if (lifetimeRangeBuilder_ == null) {
            if (!(lifetimeCase_ == 5)) {
              lifetime_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.getDefaultInstance();
            }
            lifetimeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.RangeOrBuilder>(
                    (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Range) lifetime_,
                    getParentForChildren(),
                    isClean());
            lifetime_ = null;
          }
          lifetimeCase_ = 5;
          onChanged();;
          return lifetimeRangeBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder> httpSourceBuilder_;
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         * @return Whether the httpSource field is set.
         */
        @java.lang.Override
        public boolean hasHttpSource() {
          return sourceCase_ == 6;
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         * @return The httpSource.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource getHttpSource() {
          if (httpSourceBuilder_ == null) {
            if (sourceCase_ == 6) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
          } else {
            if (sourceCase_ == 6) {
              return httpSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        public Builder setHttpSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource value) {
          if (httpSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            source_ = value;
            onChanged();
          } else {
            httpSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 6;
          return this;
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        public Builder setHttpSource(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder builderForValue) {
          if (httpSourceBuilder_ == null) {
            source_ = builderForValue.build();
            onChanged();
          } else {
            httpSourceBuilder_.setMessage(builderForValue.build());
          }
          sourceCase_ = 6;
          return this;
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        public Builder mergeHttpSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource value) {
          if (httpSourceBuilder_ == null) {
            if (sourceCase_ == 6 &&
                source_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance()) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.newBuilder((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_)
                  .mergeFrom(value).buildPartial();
            } else {
              source_ = value;
            }
            onChanged();
          } else {
            if (sourceCase_ == 6) {
              httpSourceBuilder_.mergeFrom(value);
            }
            httpSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 6;
          return this;
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        public Builder clearHttpSource() {
          if (httpSourceBuilder_ == null) {
            if (sourceCase_ == 6) {
              sourceCase_ = 0;
              source_ = null;
              onChanged();
            }
          } else {
            if (sourceCase_ == 6) {
              sourceCase_ = 0;
              source_ = null;
            }
            httpSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder getHttpSourceBuilder() {
          return getHttpSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder getHttpSourceOrBuilder() {
          if ((sourceCase_ == 6) && (httpSourceBuilder_ != null)) {
            return httpSourceBuilder_.getMessageOrBuilder();
          } else {
            if (sourceCase_ == 6) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * HTTP source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.HttpSource http_source = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder> 
            getHttpSourceFieldBuilder() {
          if (httpSourceBuilder_ == null) {
            if (!(sourceCase_ == 6)) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.getDefaultInstance();
            }
            httpSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSourceOrBuilder>(
                    (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.HttpSource) source_,
                    getParentForChildren(),
                    isClean());
            source_ = null;
          }
          sourceCase_ = 6;
          onChanged();;
          return httpSourceBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder> mysqlSourceBuilder_;
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         * @return Whether the mysqlSource field is set.
         */
        @java.lang.Override
        public boolean hasMysqlSource() {
          return sourceCase_ == 7;
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         * @return The mysqlSource.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource getMysqlSource() {
          if (mysqlSourceBuilder_ == null) {
            if (sourceCase_ == 7) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
          } else {
            if (sourceCase_ == 7) {
              return mysqlSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        public Builder setMysqlSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource value) {
          if (mysqlSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            source_ = value;
            onChanged();
          } else {
            mysqlSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 7;
          return this;
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        public Builder setMysqlSource(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder builderForValue) {
          if (mysqlSourceBuilder_ == null) {
            source_ = builderForValue.build();
            onChanged();
          } else {
            mysqlSourceBuilder_.setMessage(builderForValue.build());
          }
          sourceCase_ = 7;
          return this;
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        public Builder mergeMysqlSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource value) {
          if (mysqlSourceBuilder_ == null) {
            if (sourceCase_ == 7 &&
                source_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance()) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.newBuilder((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_)
                  .mergeFrom(value).buildPartial();
            } else {
              source_ = value;
            }
            onChanged();
          } else {
            if (sourceCase_ == 7) {
              mysqlSourceBuilder_.mergeFrom(value);
            }
            mysqlSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 7;
          return this;
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        public Builder clearMysqlSource() {
          if (mysqlSourceBuilder_ == null) {
            if (sourceCase_ == 7) {
              sourceCase_ = 0;
              source_ = null;
              onChanged();
            }
          } else {
            if (sourceCase_ == 7) {
              sourceCase_ = 0;
              source_ = null;
            }
            mysqlSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder getMysqlSourceBuilder() {
          return getMysqlSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder getMysqlSourceOrBuilder() {
          if ((sourceCase_ == 7) && (mysqlSourceBuilder_ != null)) {
            return mysqlSourceBuilder_.getMessageOrBuilder();
          } else {
            if (sourceCase_ == 7) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * MySQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MysqlSource mysql_source = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder> 
            getMysqlSourceFieldBuilder() {
          if (mysqlSourceBuilder_ == null) {
            if (!(sourceCase_ == 7)) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.getDefaultInstance();
            }
            mysqlSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSourceOrBuilder>(
                    (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MysqlSource) source_,
                    getParentForChildren(),
                    isClean());
            source_ = null;
          }
          sourceCase_ = 7;
          onChanged();;
          return mysqlSourceBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder> clickhouseSourceBuilder_;
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         * @return Whether the clickhouseSource field is set.
         */
        @java.lang.Override
        public boolean hasClickhouseSource() {
          return sourceCase_ == 8;
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         * @return The clickhouseSource.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource getClickhouseSource() {
          if (clickhouseSourceBuilder_ == null) {
            if (sourceCase_ == 8) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
          } else {
            if (sourceCase_ == 8) {
              return clickhouseSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        public Builder setClickhouseSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource value) {
          if (clickhouseSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            source_ = value;
            onChanged();
          } else {
            clickhouseSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 8;
          return this;
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        public Builder setClickhouseSource(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder builderForValue) {
          if (clickhouseSourceBuilder_ == null) {
            source_ = builderForValue.build();
            onChanged();
          } else {
            clickhouseSourceBuilder_.setMessage(builderForValue.build());
          }
          sourceCase_ = 8;
          return this;
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        public Builder mergeClickhouseSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource value) {
          if (clickhouseSourceBuilder_ == null) {
            if (sourceCase_ == 8 &&
                source_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance()) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.newBuilder((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_)
                  .mergeFrom(value).buildPartial();
            } else {
              source_ = value;
            }
            onChanged();
          } else {
            if (sourceCase_ == 8) {
              clickhouseSourceBuilder_.mergeFrom(value);
            }
            clickhouseSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 8;
          return this;
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        public Builder clearClickhouseSource() {
          if (clickhouseSourceBuilder_ == null) {
            if (sourceCase_ == 8) {
              sourceCase_ = 0;
              source_ = null;
              onChanged();
            }
          } else {
            if (sourceCase_ == 8) {
              sourceCase_ = 0;
              source_ = null;
            }
            clickhouseSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder getClickhouseSourceBuilder() {
          return getClickhouseSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder getClickhouseSourceOrBuilder() {
          if ((sourceCase_ == 8) && (clickhouseSourceBuilder_ != null)) {
            return clickhouseSourceBuilder_.getMessageOrBuilder();
          } else {
            if (sourceCase_ == 8) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * ClickHouse source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.ClickhouseSource clickhouse_source = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder> 
            getClickhouseSourceFieldBuilder() {
          if (clickhouseSourceBuilder_ == null) {
            if (!(sourceCase_ == 8)) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.getDefaultInstance();
            }
            clickhouseSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSourceOrBuilder>(
                    (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.ClickhouseSource) source_,
                    getParentForChildren(),
                    isClean());
            source_ = null;
          }
          sourceCase_ = 8;
          onChanged();;
          return clickhouseSourceBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder> mongodbSourceBuilder_;
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         * @return Whether the mongodbSource field is set.
         */
        @java.lang.Override
        public boolean hasMongodbSource() {
          return sourceCase_ == 9;
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         * @return The mongodbSource.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource getMongodbSource() {
          if (mongodbSourceBuilder_ == null) {
            if (sourceCase_ == 9) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
          } else {
            if (sourceCase_ == 9) {
              return mongodbSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        public Builder setMongodbSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource value) {
          if (mongodbSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            source_ = value;
            onChanged();
          } else {
            mongodbSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 9;
          return this;
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        public Builder setMongodbSource(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder builderForValue) {
          if (mongodbSourceBuilder_ == null) {
            source_ = builderForValue.build();
            onChanged();
          } else {
            mongodbSourceBuilder_.setMessage(builderForValue.build());
          }
          sourceCase_ = 9;
          return this;
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        public Builder mergeMongodbSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource value) {
          if (mongodbSourceBuilder_ == null) {
            if (sourceCase_ == 9 &&
                source_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance()) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.newBuilder((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_)
                  .mergeFrom(value).buildPartial();
            } else {
              source_ = value;
            }
            onChanged();
          } else {
            if (sourceCase_ == 9) {
              mongodbSourceBuilder_.mergeFrom(value);
            }
            mongodbSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 9;
          return this;
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        public Builder clearMongodbSource() {
          if (mongodbSourceBuilder_ == null) {
            if (sourceCase_ == 9) {
              sourceCase_ = 0;
              source_ = null;
              onChanged();
            }
          } else {
            if (sourceCase_ == 9) {
              sourceCase_ = 0;
              source_ = null;
            }
            mongodbSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder getMongodbSourceBuilder() {
          return getMongodbSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder getMongodbSourceOrBuilder() {
          if ((sourceCase_ == 9) && (mongodbSourceBuilder_ != null)) {
            return mongodbSourceBuilder_.getMessageOrBuilder();
          } else {
            if (sourceCase_ == 9) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * MongoDB source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.MongodbSource mongodb_source = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder> 
            getMongodbSourceFieldBuilder() {
          if (mongodbSourceBuilder_ == null) {
            if (!(sourceCase_ == 9)) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.getDefaultInstance();
            }
            mongodbSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSourceOrBuilder>(
                    (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.MongodbSource) source_,
                    getParentForChildren(),
                    isClean());
            source_ = null;
          }
          sourceCase_ = 9;
          onChanged();;
          return mongodbSourceBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder> postgresqlSourceBuilder_;
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         * @return Whether the postgresqlSource field is set.
         */
        @java.lang.Override
        public boolean hasPostgresqlSource() {
          return sourceCase_ == 10;
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         * @return The postgresqlSource.
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource getPostgresqlSource() {
          if (postgresqlSourceBuilder_ == null) {
            if (sourceCase_ == 10) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
          } else {
            if (sourceCase_ == 10) {
              return postgresqlSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        public Builder setPostgresqlSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource value) {
          if (postgresqlSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            source_ = value;
            onChanged();
          } else {
            postgresqlSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 10;
          return this;
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        public Builder setPostgresqlSource(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder builderForValue) {
          if (postgresqlSourceBuilder_ == null) {
            source_ = builderForValue.build();
            onChanged();
          } else {
            postgresqlSourceBuilder_.setMessage(builderForValue.build());
          }
          sourceCase_ = 10;
          return this;
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        public Builder mergePostgresqlSource(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource value) {
          if (postgresqlSourceBuilder_ == null) {
            if (sourceCase_ == 10 &&
                source_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance()) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.newBuilder((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_)
                  .mergeFrom(value).buildPartial();
            } else {
              source_ = value;
            }
            onChanged();
          } else {
            if (sourceCase_ == 10) {
              postgresqlSourceBuilder_.mergeFrom(value);
            }
            postgresqlSourceBuilder_.setMessage(value);
          }
          sourceCase_ = 10;
          return this;
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        public Builder clearPostgresqlSource() {
          if (postgresqlSourceBuilder_ == null) {
            if (sourceCase_ == 10) {
              sourceCase_ = 0;
              source_ = null;
              onChanged();
            }
          } else {
            if (sourceCase_ == 10) {
              sourceCase_ = 0;
              source_ = null;
            }
            postgresqlSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder getPostgresqlSourceBuilder() {
          return getPostgresqlSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder getPostgresqlSourceOrBuilder() {
          if ((sourceCase_ == 10) && (postgresqlSourceBuilder_ != null)) {
            return postgresqlSourceBuilder_.getMessageOrBuilder();
          } else {
            if (sourceCase_ == 10) {
              return (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_;
            }
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * PostgreSQL source for the dictionary.
         * </pre>
         *
         * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary.PostgresqlSource postgresql_source = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder> 
            getPostgresqlSourceFieldBuilder() {
          if (postgresqlSourceBuilder_ == null) {
            if (!(sourceCase_ == 10)) {
              source_ = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.getDefaultInstance();
            }
            postgresqlSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSourceOrBuilder>(
                    (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.PostgresqlSource) source_,
                    getParentForChildren(),
                    isClean());
            source_ = null;
          }
          sourceCase_ = 10;
          onChanged();;
          return postgresqlSourceBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ExternalDictionary>
          PARSER = new com.google.protobuf.AbstractParser<ExternalDictionary>() {
        @java.lang.Override
        public ExternalDictionary parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ExternalDictionary(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ExternalDictionary> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExternalDictionary> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GraphiteRollupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name for the specified combination of settings for Graphite rollup.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name for the specified combination of settings for Graphite rollup.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern> 
          getPatternsList();
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern getPatterns(int index);
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      int getPatternsCount();
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder> 
          getPatternsOrBuilderList();
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder getPatternsOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Rollup settings for the GraphiteMergeTree table engine.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup}
     */
    public static final class GraphiteRollup extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup)
        GraphiteRollupOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GraphiteRollup.newBuilder() to construct.
      private GraphiteRollup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GraphiteRollup() {
        name_ = "";
        patterns_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new GraphiteRollup();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GraphiteRollup(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  patterns_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern>();
                  mutable_bitField0_ |= 0x00000001;
                }
                patterns_.add(
                    input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            patterns_ = java.util.Collections.unmodifiableList(patterns_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder.class);
      }

      public interface PatternOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Pattern for metric names.
         * </pre>
         *
         * <code>string regexp = 1;</code>
         * @return The regexp.
         */
        java.lang.String getRegexp();
        /**
         * <pre>
         * Pattern for metric names.
         * </pre>
         *
         * <code>string regexp = 1;</code>
         * @return The bytes for regexp.
         */
        com.google.protobuf.ByteString
            getRegexpBytes();

        /**
         * <pre>
         * Name of the aggregating function to apply to data of the age specified in [retention].
         * </pre>
         *
         * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
         * @return The function.
         */
        java.lang.String getFunction();
        /**
         * <pre>
         * Name of the aggregating function to apply to data of the age specified in [retention].
         * </pre>
         *
         * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for function.
         */
        com.google.protobuf.ByteString
            getFunctionBytes();

        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention> 
            getRetentionList();
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention getRetention(int index);
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        int getRetentionCount();
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder> 
            getRetentionOrBuilderList();
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder getRetentionOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern}
       */
      public static final class Pattern extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern)
          PatternOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Pattern.newBuilder() to construct.
        private Pattern(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Pattern() {
          regexp_ = "";
          function_ = "";
          retention_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Pattern();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Pattern(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  regexp_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  function_ = s;
                  break;
                }
                case 26: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    retention_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  retention_.add(
                      input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.parser(), extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              retention_ = java.util.Collections.unmodifiableList(retention_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder.class);
        }

        public interface RetentionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Minimum age of the data in seconds.
           * </pre>
           *
           * <code>int64 age = 1 [(.yandex.cloud.value) = "&gt;=0"];</code>
           * @return The age.
           */
          long getAge();

          /**
           * <pre>
           * Precision of determining the age of the data, in seconds.
           * </pre>
           *
           * <code>int64 precision = 2 [(.yandex.cloud.value) = "&gt;0"];</code>
           * @return The precision.
           */
          long getPrecision();
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention}
         */
        public static final class Retention extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention)
            RetentionOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use Retention.newBuilder() to construct.
          private Retention(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private Retention() {
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new Retention();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private Retention(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {

                    age_ = input.readInt64();
                    break;
                  }
                  case 16: {

                    precision_ = input.readInt64();
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder.class);
          }

          public static final int AGE_FIELD_NUMBER = 1;
          private long age_;
          /**
           * <pre>
           * Minimum age of the data in seconds.
           * </pre>
           *
           * <code>int64 age = 1 [(.yandex.cloud.value) = "&gt;=0"];</code>
           * @return The age.
           */
          @java.lang.Override
          public long getAge() {
            return age_;
          }

          public static final int PRECISION_FIELD_NUMBER = 2;
          private long precision_;
          /**
           * <pre>
           * Precision of determining the age of the data, in seconds.
           * </pre>
           *
           * <code>int64 precision = 2 [(.yandex.cloud.value) = "&gt;0"];</code>
           * @return The precision.
           */
          @java.lang.Override
          public long getPrecision() {
            return precision_;
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (age_ != 0L) {
              output.writeInt64(1, age_);
            }
            if (precision_ != 0L) {
              output.writeInt64(2, precision_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (age_ != 0L) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(1, age_);
            }
            if (precision_ != 0L) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(2, precision_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention)) {
              return super.equals(obj);
            }
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention) obj;

            if (getAge()
                != other.getAge()) return false;
            if (getPrecision()
                != other.getPrecision()) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + AGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getAge());
            hash = (37 * hash) + PRECISION_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getPrecision());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention)
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder.class);
            }

            // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              age_ = 0L;

              precision_ = 0L;

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention getDefaultInstanceForType() {
              return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention build() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention buildPartial() {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention(this);
              result.age_ = age_;
              result.precision_ = precision_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention) {
                return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention other) {
              if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.getDefaultInstance()) return this;
              if (other.getAge() != 0L) {
                setAge(other.getAge());
              }
              if (other.getPrecision() != 0L) {
                setPrecision(other.getPrecision());
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private long age_ ;
            /**
             * <pre>
             * Minimum age of the data in seconds.
             * </pre>
             *
             * <code>int64 age = 1 [(.yandex.cloud.value) = "&gt;=0"];</code>
             * @return The age.
             */
            @java.lang.Override
            public long getAge() {
              return age_;
            }
            /**
             * <pre>
             * Minimum age of the data in seconds.
             * </pre>
             *
             * <code>int64 age = 1 [(.yandex.cloud.value) = "&gt;=0"];</code>
             * @param value The age to set.
             * @return This builder for chaining.
             */
            public Builder setAge(long value) {
              
              age_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Minimum age of the data in seconds.
             * </pre>
             *
             * <code>int64 age = 1 [(.yandex.cloud.value) = "&gt;=0"];</code>
             * @return This builder for chaining.
             */
            public Builder clearAge() {
              
              age_ = 0L;
              onChanged();
              return this;
            }

            private long precision_ ;
            /**
             * <pre>
             * Precision of determining the age of the data, in seconds.
             * </pre>
             *
             * <code>int64 precision = 2 [(.yandex.cloud.value) = "&gt;0"];</code>
             * @return The precision.
             */
            @java.lang.Override
            public long getPrecision() {
              return precision_;
            }
            /**
             * <pre>
             * Precision of determining the age of the data, in seconds.
             * </pre>
             *
             * <code>int64 precision = 2 [(.yandex.cloud.value) = "&gt;0"];</code>
             * @param value The precision to set.
             * @return This builder for chaining.
             */
            public Builder setPrecision(long value) {
              
              precision_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Precision of determining the age of the data, in seconds.
             * </pre>
             *
             * <code>int64 precision = 2 [(.yandex.cloud.value) = "&gt;0"];</code>
             * @return This builder for chaining.
             */
            public Builder clearPrecision() {
              
              precision_ = 0L;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention)
          private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention();
          }

          public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<Retention>
              PARSER = new com.google.protobuf.AbstractParser<Retention>() {
            @java.lang.Override
            public Retention parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Retention(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<Retention> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<Retention> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public static final int REGEXP_FIELD_NUMBER = 1;
        private volatile java.lang.Object regexp_;
        /**
         * <pre>
         * Pattern for metric names.
         * </pre>
         *
         * <code>string regexp = 1;</code>
         * @return The regexp.
         */
        @java.lang.Override
        public java.lang.String getRegexp() {
          java.lang.Object ref = regexp_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            regexp_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Pattern for metric names.
         * </pre>
         *
         * <code>string regexp = 1;</code>
         * @return The bytes for regexp.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getRegexpBytes() {
          java.lang.Object ref = regexp_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            regexp_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int FUNCTION_FIELD_NUMBER = 2;
        private volatile java.lang.Object function_;
        /**
         * <pre>
         * Name of the aggregating function to apply to data of the age specified in [retention].
         * </pre>
         *
         * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
         * @return The function.
         */
        @java.lang.Override
        public java.lang.String getFunction() {
          java.lang.Object ref = function_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            function_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the aggregating function to apply to data of the age specified in [retention].
         * </pre>
         *
         * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for function.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getFunctionBytes() {
          java.lang.Object ref = function_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            function_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int RETENTION_FIELD_NUMBER = 3;
        private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention> retention_;
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention> getRetentionList() {
          return retention_;
        }
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder> 
            getRetentionOrBuilderList() {
          return retention_;
        }
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public int getRetentionCount() {
          return retention_.size();
        }
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention getRetention(int index) {
          return retention_.get(index);
        }
        /**
         * <pre>
         * Age of data to use for thinning.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder getRetentionOrBuilder(
            int index) {
          return retention_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(regexp_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, regexp_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(function_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, function_);
          }
          for (int i = 0; i < retention_.size(); i++) {
            output.writeMessage(3, retention_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(regexp_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, regexp_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(function_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, function_);
          }
          for (int i = 0; i < retention_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, retention_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern)) {
            return super.equals(obj);
          }
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern) obj;

          if (!getRegexp()
              .equals(other.getRegexp())) return false;
          if (!getFunction()
              .equals(other.getFunction())) return false;
          if (!getRetentionList()
              .equals(other.getRetentionList())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + REGEXP_FIELD_NUMBER;
          hash = (53 * hash) + getRegexp().hashCode();
          hash = (37 * hash) + FUNCTION_FIELD_NUMBER;
          hash = (53 * hash) + getFunction().hashCode();
          if (getRetentionCount() > 0) {
            hash = (37 * hash) + RETENTION_FIELD_NUMBER;
            hash = (53 * hash) + getRetentionList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern)
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder.class);
          }

          // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getRetentionFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            regexp_ = "";

            function_ = "";

            if (retentionBuilder_ == null) {
              retention_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              retentionBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern getDefaultInstanceForType() {
            return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern build() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern buildPartial() {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern(this);
            int from_bitField0_ = bitField0_;
            result.regexp_ = regexp_;
            result.function_ = function_;
            if (retentionBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                retention_ = java.util.Collections.unmodifiableList(retention_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.retention_ = retention_;
            } else {
              result.retention_ = retentionBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern) {
              return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern other) {
            if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.getDefaultInstance()) return this;
            if (!other.getRegexp().isEmpty()) {
              regexp_ = other.regexp_;
              onChanged();
            }
            if (!other.getFunction().isEmpty()) {
              function_ = other.function_;
              onChanged();
            }
            if (retentionBuilder_ == null) {
              if (!other.retention_.isEmpty()) {
                if (retention_.isEmpty()) {
                  retention_ = other.retention_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureRetentionIsMutable();
                  retention_.addAll(other.retention_);
                }
                onChanged();
              }
            } else {
              if (!other.retention_.isEmpty()) {
                if (retentionBuilder_.isEmpty()) {
                  retentionBuilder_.dispose();
                  retentionBuilder_ = null;
                  retention_ = other.retention_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  retentionBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getRetentionFieldBuilder() : null;
                } else {
                  retentionBuilder_.addAllMessages(other.retention_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.lang.Object regexp_ = "";
          /**
           * <pre>
           * Pattern for metric names.
           * </pre>
           *
           * <code>string regexp = 1;</code>
           * @return The regexp.
           */
          public java.lang.String getRegexp() {
            java.lang.Object ref = regexp_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              regexp_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Pattern for metric names.
           * </pre>
           *
           * <code>string regexp = 1;</code>
           * @return The bytes for regexp.
           */
          public com.google.protobuf.ByteString
              getRegexpBytes() {
            java.lang.Object ref = regexp_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              regexp_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Pattern for metric names.
           * </pre>
           *
           * <code>string regexp = 1;</code>
           * @param value The regexp to set.
           * @return This builder for chaining.
           */
          public Builder setRegexp(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            regexp_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Pattern for metric names.
           * </pre>
           *
           * <code>string regexp = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearRegexp() {
            
            regexp_ = getDefaultInstance().getRegexp();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Pattern for metric names.
           * </pre>
           *
           * <code>string regexp = 1;</code>
           * @param value The bytes for regexp to set.
           * @return This builder for chaining.
           */
          public Builder setRegexpBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            regexp_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object function_ = "";
          /**
           * <pre>
           * Name of the aggregating function to apply to data of the age specified in [retention].
           * </pre>
           *
           * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
           * @return The function.
           */
          public java.lang.String getFunction() {
            java.lang.Object ref = function_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              function_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the aggregating function to apply to data of the age specified in [retention].
           * </pre>
           *
           * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
           * @return The bytes for function.
           */
          public com.google.protobuf.ByteString
              getFunctionBytes() {
            java.lang.Object ref = function_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              function_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the aggregating function to apply to data of the age specified in [retention].
           * </pre>
           *
           * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The function to set.
           * @return This builder for chaining.
           */
          public Builder setFunction(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            function_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the aggregating function to apply to data of the age specified in [retention].
           * </pre>
           *
           * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearFunction() {
            
            function_ = getDefaultInstance().getFunction();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the aggregating function to apply to data of the age specified in [retention].
           * </pre>
           *
           * <code>string function = 2 [(.yandex.cloud.required) = true];</code>
           * @param value The bytes for function to set.
           * @return This builder for chaining.
           */
          public Builder setFunctionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            function_ = value;
            onChanged();
            return this;
          }

          private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention> retention_ =
            java.util.Collections.emptyList();
          private void ensureRetentionIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              retention_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention>(retention_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder> retentionBuilder_;

          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention> getRetentionList() {
            if (retentionBuilder_ == null) {
              return java.util.Collections.unmodifiableList(retention_);
            } else {
              return retentionBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public int getRetentionCount() {
            if (retentionBuilder_ == null) {
              return retention_.size();
            } else {
              return retentionBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention getRetention(int index) {
            if (retentionBuilder_ == null) {
              return retention_.get(index);
            } else {
              return retentionBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder setRetention(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention value) {
            if (retentionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureRetentionIsMutable();
              retention_.set(index, value);
              onChanged();
            } else {
              retentionBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder setRetention(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder builderForValue) {
            if (retentionBuilder_ == null) {
              ensureRetentionIsMutable();
              retention_.set(index, builderForValue.build());
              onChanged();
            } else {
              retentionBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addRetention(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention value) {
            if (retentionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureRetentionIsMutable();
              retention_.add(value);
              onChanged();
            } else {
              retentionBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addRetention(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention value) {
            if (retentionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureRetentionIsMutable();
              retention_.add(index, value);
              onChanged();
            } else {
              retentionBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addRetention(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder builderForValue) {
            if (retentionBuilder_ == null) {
              ensureRetentionIsMutable();
              retention_.add(builderForValue.build());
              onChanged();
            } else {
              retentionBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addRetention(
              int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder builderForValue) {
            if (retentionBuilder_ == null) {
              ensureRetentionIsMutable();
              retention_.add(index, builderForValue.build());
              onChanged();
            } else {
              retentionBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder addAllRetention(
              java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention> values) {
            if (retentionBuilder_ == null) {
              ensureRetentionIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, retention_);
              onChanged();
            } else {
              retentionBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder clearRetention() {
            if (retentionBuilder_ == null) {
              retention_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              retentionBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public Builder removeRetention(int index) {
            if (retentionBuilder_ == null) {
              ensureRetentionIsMutable();
              retention_.remove(index);
              onChanged();
            } else {
              retentionBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder getRetentionBuilder(
              int index) {
            return getRetentionFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder getRetentionOrBuilder(
              int index) {
            if (retentionBuilder_ == null) {
              return retention_.get(index);  } else {
              return retentionBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder> 
               getRetentionOrBuilderList() {
            if (retentionBuilder_ != null) {
              return retentionBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(retention_);
            }
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder addRetentionBuilder() {
            return getRetentionFieldBuilder().addBuilder(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.getDefaultInstance());
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder addRetentionBuilder(
              int index) {
            return getRetentionFieldBuilder().addBuilder(
                index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.getDefaultInstance());
          }
          /**
           * <pre>
           * Age of data to use for thinning.
           * </pre>
           *
           * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern.Retention retention = 3 [(.yandex.cloud.size) = "&gt;0"];</code>
           */
          public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder> 
               getRetentionBuilderList() {
            return getRetentionFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder> 
              getRetentionFieldBuilder() {
            if (retentionBuilder_ == null) {
              retentionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Retention.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.RetentionOrBuilder>(
                      retention_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              retention_ = null;
            }
            return retentionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern)
        private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern();
        }

        public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Pattern>
            PARSER = new com.google.protobuf.AbstractParser<Pattern>() {
          @java.lang.Override
          public Pattern parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Pattern(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Pattern> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Pattern> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name for the specified combination of settings for Graphite rollup.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Name for the specified combination of settings for Graphite rollup.
       * </pre>
       *
       * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PATTERNS_FIELD_NUMBER = 2;
      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern> patterns_;
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      @java.lang.Override
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern> getPatternsList() {
        return patterns_;
      }
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      @java.lang.Override
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder> 
          getPatternsOrBuilderList() {
        return patterns_;
      }
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      @java.lang.Override
      public int getPatternsCount() {
        return patterns_.size();
      }
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern getPatterns(int index) {
        return patterns_.get(index);
      }
      /**
       * <pre>
       * Pattern to use for the rollup.
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder getPatternsOrBuilder(
          int index) {
        return patterns_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        for (int i = 0; i < patterns_.size(); i++) {
          output.writeMessage(2, patterns_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        for (int i = 0; i < patterns_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, patterns_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup)) {
          return super.equals(obj);
        }
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!getPatternsList()
            .equals(other.getPatternsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (getPatternsCount() > 0) {
          hash = (37 * hash) + PATTERNS_FIELD_NUMBER;
          hash = (53 * hash) + getPatternsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Rollup settings for the GraphiteMergeTree table engine.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup)
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder.class);
        }

        // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getPatternsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          if (patternsBuilder_ == null) {
            patterns_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            patternsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup getDefaultInstanceForType() {
          return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup build() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup buildPartial() {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup(this);
          int from_bitField0_ = bitField0_;
          result.name_ = name_;
          if (patternsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              patterns_ = java.util.Collections.unmodifiableList(patterns_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.patterns_ = patterns_;
          } else {
            result.patterns_ = patternsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup) {
            return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup other) {
          if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (patternsBuilder_ == null) {
            if (!other.patterns_.isEmpty()) {
              if (patterns_.isEmpty()) {
                patterns_ = other.patterns_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensurePatternsIsMutable();
                patterns_.addAll(other.patterns_);
              }
              onChanged();
            }
          } else {
            if (!other.patterns_.isEmpty()) {
              if (patternsBuilder_.isEmpty()) {
                patternsBuilder_.dispose();
                patternsBuilder_ = null;
                patterns_ = other.patterns_;
                bitField0_ = (bitField0_ & ~0x00000001);
                patternsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getPatternsFieldBuilder() : null;
              } else {
                patternsBuilder_.addAllMessages(other.patterns_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name for the specified combination of settings for Graphite rollup.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name for the specified combination of settings for Graphite rollup.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name for the specified combination of settings for Graphite rollup.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name for the specified combination of settings for Graphite rollup.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name for the specified combination of settings for Graphite rollup.
         * </pre>
         *
         * <code>string name = 1 [(.yandex.cloud.required) = true];</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern> patterns_ =
          java.util.Collections.emptyList();
        private void ensurePatternsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            patterns_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern>(patterns_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder> patternsBuilder_;

        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern> getPatternsList() {
          if (patternsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(patterns_);
          } else {
            return patternsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public int getPatternsCount() {
          if (patternsBuilder_ == null) {
            return patterns_.size();
          } else {
            return patternsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern getPatterns(int index) {
          if (patternsBuilder_ == null) {
            return patterns_.get(index);
          } else {
            return patternsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder setPatterns(
            int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern value) {
          if (patternsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePatternsIsMutable();
            patterns_.set(index, value);
            onChanged();
          } else {
            patternsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder setPatterns(
            int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder builderForValue) {
          if (patternsBuilder_ == null) {
            ensurePatternsIsMutable();
            patterns_.set(index, builderForValue.build());
            onChanged();
          } else {
            patternsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder addPatterns(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern value) {
          if (patternsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePatternsIsMutable();
            patterns_.add(value);
            onChanged();
          } else {
            patternsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder addPatterns(
            int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern value) {
          if (patternsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePatternsIsMutable();
            patterns_.add(index, value);
            onChanged();
          } else {
            patternsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder addPatterns(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder builderForValue) {
          if (patternsBuilder_ == null) {
            ensurePatternsIsMutable();
            patterns_.add(builderForValue.build());
            onChanged();
          } else {
            patternsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder addPatterns(
            int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder builderForValue) {
          if (patternsBuilder_ == null) {
            ensurePatternsIsMutable();
            patterns_.add(index, builderForValue.build());
            onChanged();
          } else {
            patternsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder addAllPatterns(
            java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern> values) {
          if (patternsBuilder_ == null) {
            ensurePatternsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, patterns_);
            onChanged();
          } else {
            patternsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder clearPatterns() {
          if (patternsBuilder_ == null) {
            patterns_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            patternsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public Builder removePatterns(int index) {
          if (patternsBuilder_ == null) {
            ensurePatternsIsMutable();
            patterns_.remove(index);
            onChanged();
          } else {
            patternsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder getPatternsBuilder(
            int index) {
          return getPatternsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder getPatternsOrBuilder(
            int index) {
          if (patternsBuilder_ == null) {
            return patterns_.get(index);  } else {
            return patternsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder> 
             getPatternsOrBuilderList() {
          if (patternsBuilder_ != null) {
            return patternsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(patterns_);
          }
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder addPatternsBuilder() {
          return getPatternsFieldBuilder().addBuilder(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.getDefaultInstance());
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder addPatternsBuilder(
            int index) {
          return getPatternsFieldBuilder().addBuilder(
              index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.getDefaultInstance());
        }
        /**
         * <pre>
         * Pattern to use for the rollup.
         * </pre>
         *
         * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup.Pattern patterns = 2 [(.yandex.cloud.size) = "&gt;0"];</code>
         */
        public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder> 
             getPatternsBuilderList() {
          return getPatternsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder> 
            getPatternsFieldBuilder() {
          if (patternsBuilder_ == null) {
            patternsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Pattern.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.PatternOrBuilder>(
                    patterns_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            patterns_ = null;
          }
          return patternsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup)
      private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup();
      }

      public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<GraphiteRollup>
          PARSER = new com.google.protobuf.AbstractParser<GraphiteRollup>() {
        @java.lang.Override
        public GraphiteRollup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphiteRollup(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GraphiteRollup> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GraphiteRollup> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LOG_LEVEL_FIELD_NUMBER = 1;
    private int logLevel_;
    /**
     * <pre>
     * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
     * @return The enum numeric value on the wire for logLevel.
     */
    @java.lang.Override public int getLogLevelValue() {
      return logLevel_;
    }
    /**
     * <pre>
     * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
     * @return The logLevel.
     */
    @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel getLogLevel() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.valueOf(logLevel_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.UNRECOGNIZED : result;
    }

    public static final int MERGE_TREE_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree mergeTree_;
    /**
     * <pre>
     * Settings for the MergeTree engine.
     * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
     * @return Whether the mergeTree field is set.
     */
    @java.lang.Override
    public boolean hasMergeTree() {
      return mergeTree_ != null;
    }
    /**
     * <pre>
     * Settings for the MergeTree engine.
     * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
     * @return The mergeTree.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree getMergeTree() {
      return mergeTree_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.getDefaultInstance() : mergeTree_;
    }
    /**
     * <pre>
     * Settings for the MergeTree engine.
     * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder getMergeTreeOrBuilder() {
      return getMergeTree();
    }

    public static final int COMPRESSION_FIELD_NUMBER = 3;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression> compression_;
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression> getCompressionList() {
      return compression_;
    }
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder> 
        getCompressionOrBuilderList() {
      return compression_;
    }
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    @java.lang.Override
    public int getCompressionCount() {
      return compression_.size();
    }
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression getCompression(int index) {
      return compression_.get(index);
    }
    /**
     * <pre>
     * Compression settings for the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder getCompressionOrBuilder(
        int index) {
      return compression_.get(index);
    }

    public static final int DICTIONARIES_FIELD_NUMBER = 4;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary> dictionaries_;
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary> getDictionariesList() {
      return dictionaries_;
    }
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder> 
        getDictionariesOrBuilderList() {
      return dictionaries_;
    }
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    @java.lang.Override
    public int getDictionariesCount() {
      return dictionaries_.size();
    }
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary getDictionaries(int index) {
      return dictionaries_.get(index);
    }
    /**
     * <pre>
     * Configuration of external dictionaries to be used by the ClickHouse cluster.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder getDictionariesOrBuilder(
        int index) {
      return dictionaries_.get(index);
    }

    public static final int GRAPHITE_ROLLUP_FIELD_NUMBER = 5;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup> graphiteRollup_;
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup> getGraphiteRollupList() {
      return graphiteRollup_;
    }
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder> 
        getGraphiteRollupOrBuilderList() {
      return graphiteRollup_;
    }
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    @java.lang.Override
    public int getGraphiteRollupCount() {
      return graphiteRollup_.size();
    }
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup getGraphiteRollup(int index) {
      return graphiteRollup_.get(index);
    }
    /**
     * <pre>
     * Settings for thinning Graphite data.
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
     * </pre>
     *
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder getGraphiteRollupOrBuilder(
        int index) {
      return graphiteRollup_.get(index);
    }

    public static final int KAFKA_FIELD_NUMBER = 35;
    private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka kafka_;
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
     * @return Whether the kafka field is set.
     */
    @java.lang.Override
    public boolean hasKafka() {
      return kafka_ != null;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
     * @return The kafka.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getKafka() {
      return kafka_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance() : kafka_;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder getKafkaOrBuilder() {
      return getKafka();
    }

    public static final int KAFKA_TOPICS_FIELD_NUMBER = 36;
    private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic> kafkaTopics_;
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic> getKafkaTopicsList() {
      return kafkaTopics_;
    }
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder> 
        getKafkaTopicsOrBuilderList() {
      return kafkaTopics_;
    }
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    @java.lang.Override
    public int getKafkaTopicsCount() {
      return kafkaTopics_.size();
    }
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic getKafkaTopics(int index) {
      return kafkaTopics_.get(index);
    }
    /**
     * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder getKafkaTopicsOrBuilder(
        int index) {
      return kafkaTopics_.get(index);
    }

    public static final int RABBITMQ_FIELD_NUMBER = 37;
    private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq rabbitmq_;
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
     * @return Whether the rabbitmq field is set.
     */
    @java.lang.Override
    public boolean hasRabbitmq() {
      return rabbitmq_ != null;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
     * @return The rabbitmq.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq getRabbitmq() {
      return rabbitmq_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.getDefaultInstance() : rabbitmq_;
    }
    /**
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder getRabbitmqOrBuilder() {
      return getRabbitmq();
    }

    public static final int MAX_CONNECTIONS_FIELD_NUMBER = 6;
    private com.google.protobuf.Int64Value maxConnections_;
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return Whether the maxConnections field is set.
     */
    @java.lang.Override
    public boolean hasMaxConnections() {
      return maxConnections_ != null;
    }
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return The maxConnections.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMaxConnections() {
      return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
    }
    /**
     * <pre>
     * Maximum number of inbound connections.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
      return getMaxConnections();
    }

    public static final int MAX_CONCURRENT_QUERIES_FIELD_NUMBER = 7;
    private com.google.protobuf.Int64Value maxConcurrentQueries_;
    /**
     * <pre>
     * Maximum number of simultaneously processed requests.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return Whether the maxConcurrentQueries field is set.
     */
    @java.lang.Override
    public boolean hasMaxConcurrentQueries() {
      return maxConcurrentQueries_ != null;
    }
    /**
     * <pre>
     * Maximum number of simultaneously processed requests.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
     * @return The maxConcurrentQueries.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMaxConcurrentQueries() {
      return maxConcurrentQueries_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConcurrentQueries_;
    }
    /**
     * <pre>
     * Maximum number of simultaneously processed requests.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMaxConcurrentQueriesOrBuilder() {
      return getMaxConcurrentQueries();
    }

    public static final int KEEP_ALIVE_TIMEOUT_FIELD_NUMBER = 8;
    private com.google.protobuf.Int64Value keepAliveTimeout_;
    /**
     * <pre>
     * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
     * @return Whether the keepAliveTimeout field is set.
     */
    @java.lang.Override
    public boolean hasKeepAliveTimeout() {
      return keepAliveTimeout_ != null;
    }
    /**
     * <pre>
     * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
     * @return The keepAliveTimeout.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getKeepAliveTimeout() {
      return keepAliveTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : keepAliveTimeout_;
    }
    /**
     * <pre>
     * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getKeepAliveTimeoutOrBuilder() {
      return getKeepAliveTimeout();
    }

    public static final int UNCOMPRESSED_CACHE_SIZE_FIELD_NUMBER = 9;
    private com.google.protobuf.Int64Value uncompressedCacheSize_;
    /**
     * <pre>
     * Cache size (in bytes) for uncompressed data used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
     * @return Whether the uncompressedCacheSize field is set.
     */
    @java.lang.Override
    public boolean hasUncompressedCacheSize() {
      return uncompressedCacheSize_ != null;
    }
    /**
     * <pre>
     * Cache size (in bytes) for uncompressed data used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
     * @return The uncompressedCacheSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getUncompressedCacheSize() {
      return uncompressedCacheSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : uncompressedCacheSize_;
    }
    /**
     * <pre>
     * Cache size (in bytes) for uncompressed data used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getUncompressedCacheSizeOrBuilder() {
      return getUncompressedCacheSize();
    }

    public static final int MARK_CACHE_SIZE_FIELD_NUMBER = 10;
    private com.google.protobuf.Int64Value markCacheSize_;
    /**
     * <pre>
     * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the markCacheSize field is set.
     */
    @java.lang.Override
    public boolean hasMarkCacheSize() {
      return markCacheSize_ != null;
    }
    /**
     * <pre>
     * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The markCacheSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMarkCacheSize() {
      return markCacheSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : markCacheSize_;
    }
    /**
     * <pre>
     * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMarkCacheSizeOrBuilder() {
      return getMarkCacheSize();
    }

    public static final int MAX_TABLE_SIZE_TO_DROP_FIELD_NUMBER = 11;
    private com.google.protobuf.Int64Value maxTableSizeToDrop_;
    /**
     * <pre>
     * Maximum size of the table that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
     * @return Whether the maxTableSizeToDrop field is set.
     */
    @java.lang.Override
    public boolean hasMaxTableSizeToDrop() {
      return maxTableSizeToDrop_ != null;
    }
    /**
     * <pre>
     * Maximum size of the table that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
     * @return The maxTableSizeToDrop.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMaxTableSizeToDrop() {
      return maxTableSizeToDrop_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxTableSizeToDrop_;
    }
    /**
     * <pre>
     * Maximum size of the table that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMaxTableSizeToDropOrBuilder() {
      return getMaxTableSizeToDrop();
    }

    public static final int MAX_PARTITION_SIZE_TO_DROP_FIELD_NUMBER = 13;
    private com.google.protobuf.Int64Value maxPartitionSizeToDrop_;
    /**
     * <pre>
     * Maximum size of the partition that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
     * @return Whether the maxPartitionSizeToDrop field is set.
     */
    @java.lang.Override
    public boolean hasMaxPartitionSizeToDrop() {
      return maxPartitionSizeToDrop_ != null;
    }
    /**
     * <pre>
     * Maximum size of the partition that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
     * @return The maxPartitionSizeToDrop.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMaxPartitionSizeToDrop() {
      return maxPartitionSizeToDrop_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPartitionSizeToDrop_;
    }
    /**
     * <pre>
     * Maximum size of the partition that can be deleted using a DROP query.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMaxPartitionSizeToDropOrBuilder() {
      return getMaxPartitionSizeToDrop();
    }

    public static final int BUILTIN_DICTIONARIES_RELOAD_INTERVAL_FIELD_NUMBER = 12;
    private com.google.protobuf.Int64Value builtinDictionariesReloadInterval_;
    /**
     * <pre>
     * The setting is deprecated and has no effect.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
     * @deprecated
     * @return Whether the builtinDictionariesReloadInterval field is set.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean hasBuiltinDictionariesReloadInterval() {
      return builtinDictionariesReloadInterval_ != null;
    }
    /**
     * <pre>
     * The setting is deprecated and has no effect.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
     * @deprecated
     * @return The builtinDictionariesReloadInterval.
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.Int64Value getBuiltinDictionariesReloadInterval() {
      return builtinDictionariesReloadInterval_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : builtinDictionariesReloadInterval_;
    }
    /**
     * <pre>
     * The setting is deprecated and has no effect.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
     */
    @java.lang.Override
    @java.lang.Deprecated public com.google.protobuf.Int64ValueOrBuilder getBuiltinDictionariesReloadIntervalOrBuilder() {
      return getBuiltinDictionariesReloadInterval();
    }

    public static final int TIMEZONE_FIELD_NUMBER = 14;
    private volatile java.lang.Object timezone_;
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>string timezone = 14;</code>
     * @return The timezone.
     */
    @java.lang.Override
    public java.lang.String getTimezone() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timezone_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
     * </pre>
     *
     * <code>string timezone = 14;</code>
     * @return The bytes for timezone.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimezoneBytes() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timezone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GEOBASE_ENABLED_FIELD_NUMBER = 66;
    private com.google.protobuf.BoolValue geobaseEnabled_;
    /**
     * <pre>
     * Enable or disable geobase.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
     * @return Whether the geobaseEnabled field is set.
     */
    @java.lang.Override
    public boolean hasGeobaseEnabled() {
      return geobaseEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable geobase.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
     * @return The geobaseEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getGeobaseEnabled() {
      return geobaseEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : geobaseEnabled_;
    }
    /**
     * <pre>
     * Enable or disable geobase.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getGeobaseEnabledOrBuilder() {
      return getGeobaseEnabled();
    }

    public static final int GEOBASE_URI_FIELD_NUMBER = 15;
    private volatile java.lang.Object geobaseUri_;
    /**
     * <pre>
     * Address of the archive with the user geobase in Object Storage.
     * </pre>
     *
     * <code>string geobase_uri = 15;</code>
     * @return The geobaseUri.
     */
    @java.lang.Override
    public java.lang.String getGeobaseUri() {
      java.lang.Object ref = geobaseUri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        geobaseUri_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Address of the archive with the user geobase in Object Storage.
     * </pre>
     *
     * <code>string geobase_uri = 15;</code>
     * @return The bytes for geobaseUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGeobaseUriBytes() {
      java.lang.Object ref = geobaseUri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        geobaseUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUERY_LOG_RETENTION_SIZE_FIELD_NUMBER = 16;
    private com.google.protobuf.Int64Value queryLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
     * @return Whether the queryLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasQueryLogRetentionSize() {
      return queryLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
     * @return The queryLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getQueryLogRetentionSize() {
      return queryLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getQueryLogRetentionSizeOrBuilder() {
      return getQueryLogRetentionSize();
    }

    public static final int QUERY_LOG_RETENTION_TIME_FIELD_NUMBER = 17;
    private com.google.protobuf.Int64Value queryLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
     * query_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
     * @return Whether the queryLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasQueryLogRetentionTime() {
      return queryLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
     * query_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
     * @return The queryLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getQueryLogRetentionTime() {
      return queryLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
     * query_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getQueryLogRetentionTimeOrBuilder() {
      return getQueryLogRetentionTime();
    }

    public static final int QUERY_THREAD_LOG_ENABLED_FIELD_NUMBER = 18;
    private com.google.protobuf.BoolValue queryThreadLogEnabled_;
    /**
     * <pre>
     * Whether query_thread_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
     * @return Whether the queryThreadLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasQueryThreadLogEnabled() {
      return queryThreadLogEnabled_ != null;
    }
    /**
     * <pre>
     * Whether query_thread_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
     * @return The queryThreadLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getQueryThreadLogEnabled() {
      return queryThreadLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : queryThreadLogEnabled_;
    }
    /**
     * <pre>
     * Whether query_thread_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getQueryThreadLogEnabledOrBuilder() {
      return getQueryThreadLogEnabled();
    }

    public static final int QUERY_THREAD_LOG_RETENTION_SIZE_FIELD_NUMBER = 19;
    private com.google.protobuf.Int64Value queryThreadLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_thread_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
     * @return Whether the queryThreadLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasQueryThreadLogRetentionSize() {
      return queryThreadLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_thread_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
     * @return The queryThreadLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getQueryThreadLogRetentionSize() {
      return queryThreadLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryThreadLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
     * query_thread_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getQueryThreadLogRetentionSizeOrBuilder() {
      return getQueryThreadLogRetentionSize();
    }

    public static final int QUERY_THREAD_LOG_RETENTION_TIME_FIELD_NUMBER = 20;
    private com.google.protobuf.Int64Value queryThreadLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
     * query_thread_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
     * @return Whether the queryThreadLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasQueryThreadLogRetentionTime() {
      return queryThreadLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
     * query_thread_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
     * @return The queryThreadLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getQueryThreadLogRetentionTime() {
      return queryThreadLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryThreadLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
     * query_thread_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getQueryThreadLogRetentionTimeOrBuilder() {
      return getQueryThreadLogRetentionTime();
    }

    public static final int PART_LOG_RETENTION_SIZE_FIELD_NUMBER = 21;
    private com.google.protobuf.Int64Value partLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
     * part_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
     * @return Whether the partLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasPartLogRetentionSize() {
      return partLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
     * part_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
     * @return The partLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getPartLogRetentionSize() {
      return partLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
     * part_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getPartLogRetentionSizeOrBuilder() {
      return getPartLogRetentionSize();
    }

    public static final int PART_LOG_RETENTION_TIME_FIELD_NUMBER = 22;
    private com.google.protobuf.Int64Value partLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
     * part_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
     * @return Whether the partLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasPartLogRetentionTime() {
      return partLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
     * part_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
     * @return The partLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getPartLogRetentionTime() {
      return partLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
     * part_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getPartLogRetentionTimeOrBuilder() {
      return getPartLogRetentionTime();
    }

    public static final int METRIC_LOG_ENABLED_FIELD_NUMBER = 23;
    private com.google.protobuf.BoolValue metricLogEnabled_;
    /**
     * <pre>
     * Whether metric_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
     * @return Whether the metricLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasMetricLogEnabled() {
      return metricLogEnabled_ != null;
    }
    /**
     * <pre>
     * Whether metric_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
     * @return The metricLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getMetricLogEnabled() {
      return metricLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : metricLogEnabled_;
    }
    /**
     * <pre>
     * Whether metric_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getMetricLogEnabledOrBuilder() {
      return getMetricLogEnabled();
    }

    public static final int METRIC_LOG_RETENTION_SIZE_FIELD_NUMBER = 24;
    private com.google.protobuf.Int64Value metricLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
     * metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
     * @return Whether the metricLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasMetricLogRetentionSize() {
      return metricLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
     * metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
     * @return The metricLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMetricLogRetentionSize() {
      return metricLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : metricLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
     * metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMetricLogRetentionSizeOrBuilder() {
      return getMetricLogRetentionSize();
    }

    public static final int METRIC_LOG_RETENTION_TIME_FIELD_NUMBER = 25;
    private com.google.protobuf.Int64Value metricLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
     * metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
     * @return Whether the metricLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasMetricLogRetentionTime() {
      return metricLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
     * metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
     * @return The metricLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getMetricLogRetentionTime() {
      return metricLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : metricLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
     * metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getMetricLogRetentionTimeOrBuilder() {
      return getMetricLogRetentionTime();
    }

    public static final int TRACE_LOG_ENABLED_FIELD_NUMBER = 26;
    private com.google.protobuf.BoolValue traceLogEnabled_;
    /**
     * <pre>
     * Whether trace_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
     * @return Whether the traceLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasTraceLogEnabled() {
      return traceLogEnabled_ != null;
    }
    /**
     * <pre>
     * Whether trace_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
     * @return The traceLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getTraceLogEnabled() {
      return traceLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : traceLogEnabled_;
    }
    /**
     * <pre>
     * Whether trace_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getTraceLogEnabledOrBuilder() {
      return getTraceLogEnabled();
    }

    public static final int TRACE_LOG_RETENTION_SIZE_FIELD_NUMBER = 27;
    private com.google.protobuf.Int64Value traceLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
     * trace_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
     * @return Whether the traceLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasTraceLogRetentionSize() {
      return traceLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
     * trace_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
     * @return The traceLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getTraceLogRetentionSize() {
      return traceLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : traceLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
     * trace_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getTraceLogRetentionSizeOrBuilder() {
      return getTraceLogRetentionSize();
    }

    public static final int TRACE_LOG_RETENTION_TIME_FIELD_NUMBER = 28;
    private com.google.protobuf.Int64Value traceLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
     * trace_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
     * @return Whether the traceLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasTraceLogRetentionTime() {
      return traceLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
     * trace_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
     * @return The traceLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getTraceLogRetentionTime() {
      return traceLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : traceLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
     * trace_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getTraceLogRetentionTimeOrBuilder() {
      return getTraceLogRetentionTime();
    }

    public static final int TEXT_LOG_ENABLED_FIELD_NUMBER = 29;
    private com.google.protobuf.BoolValue textLogEnabled_;
    /**
     * <pre>
     * Whether text_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
     * @return Whether the textLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasTextLogEnabled() {
      return textLogEnabled_ != null;
    }
    /**
     * <pre>
     * Whether text_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
     * @return The textLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getTextLogEnabled() {
      return textLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textLogEnabled_;
    }
    /**
     * <pre>
     * Whether text_log system table is enabled.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getTextLogEnabledOrBuilder() {
      return getTextLogEnabled();
    }

    public static final int TEXT_LOG_RETENTION_SIZE_FIELD_NUMBER = 30;
    private com.google.protobuf.Int64Value textLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
     * text_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
     * @return Whether the textLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasTextLogRetentionSize() {
      return textLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
     * text_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
     * @return The textLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getTextLogRetentionSize() {
      return textLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : textLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
     * text_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getTextLogRetentionSizeOrBuilder() {
      return getTextLogRetentionSize();
    }

    public static final int TEXT_LOG_RETENTION_TIME_FIELD_NUMBER = 31;
    private com.google.protobuf.Int64Value textLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
     * text_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
     * @return Whether the textLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasTextLogRetentionTime() {
      return textLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
     * text_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
     * @return The textLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getTextLogRetentionTime() {
      return textLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : textLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
     * text_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getTextLogRetentionTimeOrBuilder() {
      return getTextLogRetentionTime();
    }

    public static final int TEXT_LOG_LEVEL_FIELD_NUMBER = 32;
    private int textLogLevel_;
    /**
     * <pre>
     * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
     * @return The enum numeric value on the wire for textLogLevel.
     */
    @java.lang.Override public int getTextLogLevelValue() {
      return textLogLevel_;
    }
    /**
     * <pre>
     * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
     * @return The textLogLevel.
     */
    @java.lang.Override public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel getTextLogLevel() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.valueOf(textLogLevel_);
      return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.UNRECOGNIZED : result;
    }

    public static final int OPENTELEMETRY_SPAN_LOG_ENABLED_FIELD_NUMBER = 42;
    private com.google.protobuf.BoolValue opentelemetrySpanLogEnabled_;
    /**
     * <pre>
     * Enable or disable opentelemetry_span_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
     * @return Whether the opentelemetrySpanLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasOpentelemetrySpanLogEnabled() {
      return opentelemetrySpanLogEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable opentelemetry_span_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
     * @return The opentelemetrySpanLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getOpentelemetrySpanLogEnabled() {
      return opentelemetrySpanLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : opentelemetrySpanLogEnabled_;
    }
    /**
     * <pre>
     * Enable or disable opentelemetry_span_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getOpentelemetrySpanLogEnabledOrBuilder() {
      return getOpentelemetrySpanLogEnabled();
    }

    public static final int OPENTELEMETRY_SPAN_LOG_RETENTION_SIZE_FIELD_NUMBER = 55;
    private com.google.protobuf.Int64Value opentelemetrySpanLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of opentelemetry_span_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the opentelemetrySpanLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasOpentelemetrySpanLogRetentionSize() {
      return opentelemetrySpanLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of opentelemetry_span_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The opentelemetrySpanLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getOpentelemetrySpanLogRetentionSize() {
      return opentelemetrySpanLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : opentelemetrySpanLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of opentelemetry_span_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getOpentelemetrySpanLogRetentionSizeOrBuilder() {
      return getOpentelemetrySpanLogRetentionSize();
    }

    public static final int OPENTELEMETRY_SPAN_LOG_RETENTION_TIME_FIELD_NUMBER = 56;
    private com.google.protobuf.Int64Value opentelemetrySpanLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
     * automatic removal of opentelemetry_span_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the opentelemetrySpanLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasOpentelemetrySpanLogRetentionTime() {
      return opentelemetrySpanLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
     * automatic removal of opentelemetry_span_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The opentelemetrySpanLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getOpentelemetrySpanLogRetentionTime() {
      return opentelemetrySpanLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : opentelemetrySpanLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
     * automatic removal of opentelemetry_span_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getOpentelemetrySpanLogRetentionTimeOrBuilder() {
      return getOpentelemetrySpanLogRetentionTime();
    }

    public static final int QUERY_VIEWS_LOG_ENABLED_FIELD_NUMBER = 49;
    private com.google.protobuf.BoolValue queryViewsLogEnabled_;
    /**
     * <pre>
     * Enable or disable query_views_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
     * @return Whether the queryViewsLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasQueryViewsLogEnabled() {
      return queryViewsLogEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable query_views_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
     * @return The queryViewsLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getQueryViewsLogEnabled() {
      return queryViewsLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : queryViewsLogEnabled_;
    }
    /**
     * <pre>
     * Enable or disable query_views_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getQueryViewsLogEnabledOrBuilder() {
      return getQueryViewsLogEnabled();
    }

    public static final int QUERY_VIEWS_LOG_RETENTION_SIZE_FIELD_NUMBER = 50;
    private com.google.protobuf.Int64Value queryViewsLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of query_views_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the queryViewsLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasQueryViewsLogRetentionSize() {
      return queryViewsLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of query_views_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The queryViewsLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getQueryViewsLogRetentionSize() {
      return queryViewsLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryViewsLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of query_views_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getQueryViewsLogRetentionSizeOrBuilder() {
      return getQueryViewsLogRetentionSize();
    }

    public static final int QUERY_VIEWS_LOG_RETENTION_TIME_FIELD_NUMBER = 51;
    private com.google.protobuf.Int64Value queryViewsLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that query_views_log records will be retained before removal. If set to 0,
     * automatic removal of query_views_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the queryViewsLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasQueryViewsLogRetentionTime() {
      return queryViewsLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that query_views_log records will be retained before removal. If set to 0,
     * automatic removal of query_views_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The queryViewsLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getQueryViewsLogRetentionTime() {
      return queryViewsLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryViewsLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that query_views_log records will be retained before removal. If set to 0,
     * automatic removal of query_views_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getQueryViewsLogRetentionTimeOrBuilder() {
      return getQueryViewsLogRetentionTime();
    }

    public static final int ASYNCHRONOUS_METRIC_LOG_ENABLED_FIELD_NUMBER = 52;
    private com.google.protobuf.BoolValue asynchronousMetricLogEnabled_;
    /**
     * <pre>
     * Enable or disable asynchronous_metric_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
     * @return Whether the asynchronousMetricLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasAsynchronousMetricLogEnabled() {
      return asynchronousMetricLogEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable asynchronous_metric_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
     * @return The asynchronousMetricLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getAsynchronousMetricLogEnabled() {
      return asynchronousMetricLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : asynchronousMetricLogEnabled_;
    }
    /**
     * <pre>
     * Enable or disable asynchronous_metric_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getAsynchronousMetricLogEnabledOrBuilder() {
      return getAsynchronousMetricLogEnabled();
    }

    public static final int ASYNCHRONOUS_METRIC_LOG_RETENTION_SIZE_FIELD_NUMBER = 53;
    private com.google.protobuf.Int64Value asynchronousMetricLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousMetricLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasAsynchronousMetricLogRetentionSize() {
      return asynchronousMetricLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousMetricLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getAsynchronousMetricLogRetentionSize() {
      return asynchronousMetricLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousMetricLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_metric_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getAsynchronousMetricLogRetentionSizeOrBuilder() {
      return getAsynchronousMetricLogRetentionSize();
    }

    public static final int ASYNCHRONOUS_METRIC_LOG_RETENTION_TIME_FIELD_NUMBER = 54;
    private com.google.protobuf.Int64Value asynchronousMetricLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousMetricLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasAsynchronousMetricLogRetentionTime() {
      return asynchronousMetricLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousMetricLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getAsynchronousMetricLogRetentionTime() {
      return asynchronousMetricLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousMetricLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_metric_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getAsynchronousMetricLogRetentionTimeOrBuilder() {
      return getAsynchronousMetricLogRetentionTime();
    }

    public static final int SESSION_LOG_ENABLED_FIELD_NUMBER = 57;
    private com.google.protobuf.BoolValue sessionLogEnabled_;
    /**
     * <pre>
     * Enable or disable session_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
     * @return Whether the sessionLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasSessionLogEnabled() {
      return sessionLogEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable session_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
     * @return The sessionLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getSessionLogEnabled() {
      return sessionLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : sessionLogEnabled_;
    }
    /**
     * <pre>
     * Enable or disable session_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getSessionLogEnabledOrBuilder() {
      return getSessionLogEnabled();
    }

    public static final int SESSION_LOG_RETENTION_SIZE_FIELD_NUMBER = 58;
    private com.google.protobuf.Int64Value sessionLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of session_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the sessionLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasSessionLogRetentionSize() {
      return sessionLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of session_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The sessionLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getSessionLogRetentionSize() {
      return sessionLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sessionLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of session_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getSessionLogRetentionSizeOrBuilder() {
      return getSessionLogRetentionSize();
    }

    public static final int SESSION_LOG_RETENTION_TIME_FIELD_NUMBER = 59;
    private com.google.protobuf.Int64Value sessionLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that session_log records will be retained before removal. If set to 0,
     * automatic removal of session_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the sessionLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasSessionLogRetentionTime() {
      return sessionLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that session_log records will be retained before removal. If set to 0,
     * automatic removal of session_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The sessionLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getSessionLogRetentionTime() {
      return sessionLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sessionLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that session_log records will be retained before removal. If set to 0,
     * automatic removal of session_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getSessionLogRetentionTimeOrBuilder() {
      return getSessionLogRetentionTime();
    }

    public static final int ZOOKEEPER_LOG_ENABLED_FIELD_NUMBER = 60;
    private com.google.protobuf.BoolValue zookeeperLogEnabled_;
    /**
     * <pre>
     * Enable or disable zookeeper_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
     * @return Whether the zookeeperLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasZookeeperLogEnabled() {
      return zookeeperLogEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable zookeeper_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
     * @return The zookeeperLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getZookeeperLogEnabled() {
      return zookeeperLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : zookeeperLogEnabled_;
    }
    /**
     * <pre>
     * Enable or disable zookeeper_log system table. Default value: false.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getZookeeperLogEnabledOrBuilder() {
      return getZookeeperLogEnabled();
    }

    public static final int ZOOKEEPER_LOG_RETENTION_SIZE_FIELD_NUMBER = 61;
    private com.google.protobuf.Int64Value zookeeperLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of zookeeper_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the zookeeperLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasZookeeperLogRetentionSize() {
      return zookeeperLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of zookeeper_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The zookeeperLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getZookeeperLogRetentionSize() {
      return zookeeperLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : zookeeperLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of zookeeper_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getZookeeperLogRetentionSizeOrBuilder() {
      return getZookeeperLogRetentionSize();
    }

    public static final int ZOOKEEPER_LOG_RETENTION_TIME_FIELD_NUMBER = 62;
    private com.google.protobuf.Int64Value zookeeperLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
     * automatic removal of zookeeper_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the zookeeperLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasZookeeperLogRetentionTime() {
      return zookeeperLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
     * automatic removal of zookeeper_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The zookeeperLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getZookeeperLogRetentionTime() {
      return zookeeperLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : zookeeperLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
     * automatic removal of zookeeper_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getZookeeperLogRetentionTimeOrBuilder() {
      return getZookeeperLogRetentionTime();
    }

    public static final int ASYNCHRONOUS_INSERT_LOG_ENABLED_FIELD_NUMBER = 63;
    private com.google.protobuf.BoolValue asynchronousInsertLogEnabled_;
    /**
     * <pre>
     * Enable or disable asynchronous_insert_log system table. Default value: false.
     * Minimal required ClickHouse version: 22.10.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
     * @return Whether the asynchronousInsertLogEnabled field is set.
     */
    @java.lang.Override
    public boolean hasAsynchronousInsertLogEnabled() {
      return asynchronousInsertLogEnabled_ != null;
    }
    /**
     * <pre>
     * Enable or disable asynchronous_insert_log system table. Default value: false.
     * Minimal required ClickHouse version: 22.10.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
     * @return The asynchronousInsertLogEnabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getAsynchronousInsertLogEnabled() {
      return asynchronousInsertLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : asynchronousInsertLogEnabled_;
    }
    /**
     * <pre>
     * Enable or disable asynchronous_insert_log system table. Default value: false.
     * Minimal required ClickHouse version: 22.10.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getAsynchronousInsertLogEnabledOrBuilder() {
      return getAsynchronousInsertLogEnabled();
    }

    public static final int ASYNCHRONOUS_INSERT_LOG_RETENTION_SIZE_FIELD_NUMBER = 64;
    private com.google.protobuf.Int64Value asynchronousInsertLogRetentionSize_;
    /**
     * <pre>
     * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_insert_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousInsertLogRetentionSize field is set.
     */
    @java.lang.Override
    public boolean hasAsynchronousInsertLogRetentionSize() {
      return asynchronousInsertLogRetentionSize_ != null;
    }
    /**
     * <pre>
     * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_insert_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousInsertLogRetentionSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getAsynchronousInsertLogRetentionSize() {
      return asynchronousInsertLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousInsertLogRetentionSize_;
    }
    /**
     * <pre>
     * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
     * automatic removal of asynchronous_insert_log data based on size is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getAsynchronousInsertLogRetentionSizeOrBuilder() {
      return getAsynchronousInsertLogRetentionSize();
    }

    public static final int ASYNCHRONOUS_INSERT_LOG_RETENTION_TIME_FIELD_NUMBER = 65;
    private com.google.protobuf.Int64Value asynchronousInsertLogRetentionTime_;
    /**
     * <pre>
     * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_insert_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return Whether the asynchronousInsertLogRetentionTime field is set.
     */
    @java.lang.Override
    public boolean hasAsynchronousInsertLogRetentionTime() {
      return asynchronousInsertLogRetentionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_insert_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
     * @return The asynchronousInsertLogRetentionTime.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getAsynchronousInsertLogRetentionTime() {
      return asynchronousInsertLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousInsertLogRetentionTime_;
    }
    /**
     * <pre>
     * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
     * automatic removal of asynchronous_insert_log data based on time is disabled.
     * </pre>
     *
     * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getAsynchronousInsertLogRetentionTimeOrBuilder() {
      return getAsynchronousInsertLogRetentionTime();
    }

    public static final int BACKGROUND_POOL_SIZE_FIELD_NUMBER = 33;
    private com.google.protobuf.Int64Value backgroundPoolSize_;
    /**
     * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundPoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundPoolSize() {
      return backgroundPoolSize_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundPoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundPoolSize() {
      return backgroundPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundPoolSize_;
    }
    /**
     * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundPoolSizeOrBuilder() {
      return getBackgroundPoolSize();
    }

    public static final int BACKGROUND_MERGES_MUTATIONS_CONCURRENCY_RATIO_FIELD_NUMBER = 48;
    private com.google.protobuf.Int64Value backgroundMergesMutationsConcurrencyRatio_;
    /**
     * <pre>
     * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
     * Default: 2
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundMergesMutationsConcurrencyRatio field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundMergesMutationsConcurrencyRatio() {
      return backgroundMergesMutationsConcurrencyRatio_ != null;
    }
    /**
     * <pre>
     * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
     * Default: 2
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundMergesMutationsConcurrencyRatio.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundMergesMutationsConcurrencyRatio() {
      return backgroundMergesMutationsConcurrencyRatio_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMergesMutationsConcurrencyRatio_;
    }
    /**
     * <pre>
     * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
     * Default: 2
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundMergesMutationsConcurrencyRatioOrBuilder() {
      return getBackgroundMergesMutationsConcurrencyRatio();
    }

    public static final int BACKGROUND_SCHEDULE_POOL_SIZE_FIELD_NUMBER = 34;
    private com.google.protobuf.Int64Value backgroundSchedulePoolSize_;
    /**
     * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundSchedulePoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundSchedulePoolSize() {
      return backgroundSchedulePoolSize_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundSchedulePoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundSchedulePoolSize() {
      return backgroundSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundSchedulePoolSize_;
    }
    /**
     * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundSchedulePoolSizeOrBuilder() {
      return getBackgroundSchedulePoolSize();
    }

    public static final int BACKGROUND_FETCHES_POOL_SIZE_FIELD_NUMBER = 38;
    private com.google.protobuf.Int64Value backgroundFetchesPoolSize_;
    /**
     * <pre>
     * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundFetchesPoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundFetchesPoolSize() {
      return backgroundFetchesPoolSize_ != null;
    }
    /**
     * <pre>
     * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundFetchesPoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundFetchesPoolSize() {
      return backgroundFetchesPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundFetchesPoolSize_;
    }
    /**
     * <pre>
     * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundFetchesPoolSizeOrBuilder() {
      return getBackgroundFetchesPoolSize();
    }

    public static final int BACKGROUND_MOVE_POOL_SIZE_FIELD_NUMBER = 39;
    private com.google.protobuf.Int64Value backgroundMovePoolSize_;
    /**
     * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundMovePoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundMovePoolSize() {
      return backgroundMovePoolSize_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundMovePoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundMovePoolSize() {
      return backgroundMovePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMovePoolSize_;
    }
    /**
     * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundMovePoolSizeOrBuilder() {
      return getBackgroundMovePoolSize();
    }

    public static final int BACKGROUND_DISTRIBUTED_SCHEDULE_POOL_SIZE_FIELD_NUMBER = 40;
    private com.google.protobuf.Int64Value backgroundDistributedSchedulePoolSize_;
    /**
     * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundDistributedSchedulePoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundDistributedSchedulePoolSize() {
      return backgroundDistributedSchedulePoolSize_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundDistributedSchedulePoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundDistributedSchedulePoolSize() {
      return backgroundDistributedSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundDistributedSchedulePoolSize_;
    }
    /**
     * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundDistributedSchedulePoolSizeOrBuilder() {
      return getBackgroundDistributedSchedulePoolSize();
    }

    public static final int BACKGROUND_BUFFER_FLUSH_SCHEDULE_POOL_SIZE_FIELD_NUMBER = 41;
    private com.google.protobuf.Int64Value backgroundBufferFlushSchedulePoolSize_;
    /**
     * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundBufferFlushSchedulePoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundBufferFlushSchedulePoolSize() {
      return backgroundBufferFlushSchedulePoolSize_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundBufferFlushSchedulePoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundBufferFlushSchedulePoolSize() {
      return backgroundBufferFlushSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundBufferFlushSchedulePoolSize_;
    }
    /**
     * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundBufferFlushSchedulePoolSizeOrBuilder() {
      return getBackgroundBufferFlushSchedulePoolSize();
    }

    public static final int BACKGROUND_MESSAGE_BROKER_SCHEDULE_POOL_SIZE_FIELD_NUMBER = 46;
    private com.google.protobuf.Int64Value backgroundMessageBrokerSchedulePoolSize_;
    /**
     * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundMessageBrokerSchedulePoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundMessageBrokerSchedulePoolSize() {
      return backgroundMessageBrokerSchedulePoolSize_ != null;
    }
    /**
     * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundMessageBrokerSchedulePoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundMessageBrokerSchedulePoolSize() {
      return backgroundMessageBrokerSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMessageBrokerSchedulePoolSize_;
    }
    /**
     * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundMessageBrokerSchedulePoolSizeOrBuilder() {
      return getBackgroundMessageBrokerSchedulePoolSize();
    }

    public static final int BACKGROUND_COMMON_POOL_SIZE_FIELD_NUMBER = 47;
    private com.google.protobuf.Int64Value backgroundCommonPoolSize_;
    /**
     * <pre>
     * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
     * Default: 8
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return Whether the backgroundCommonPoolSize field is set.
     */
    @java.lang.Override
    public boolean hasBackgroundCommonPoolSize() {
      return backgroundCommonPoolSize_ != null;
    }
    /**
     * <pre>
     * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
     * Default: 8
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
     * @return The backgroundCommonPoolSize.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getBackgroundCommonPoolSize() {
      return backgroundCommonPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundCommonPoolSize_;
    }
    /**
     * <pre>
     * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
     * Default: 8
     * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
     * </pre>
     *
     * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getBackgroundCommonPoolSizeOrBuilder() {
      return getBackgroundCommonPoolSize();
    }

    public static final int DEFAULT_DATABASE_FIELD_NUMBER = 43;
    private com.google.protobuf.StringValue defaultDatabase_;
    /**
     * <pre>
     * The default database.
     * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
     * </pre>
     *
     * <code>.google.protobuf.StringValue default_database = 43;</code>
     * @return Whether the defaultDatabase field is set.
     */
    @java.lang.Override
    public boolean hasDefaultDatabase() {
      return defaultDatabase_ != null;
    }
    /**
     * <pre>
     * The default database.
     * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
     * </pre>
     *
     * <code>.google.protobuf.StringValue default_database = 43;</code>
     * @return The defaultDatabase.
     */
    @java.lang.Override
    public com.google.protobuf.StringValue getDefaultDatabase() {
      return defaultDatabase_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : defaultDatabase_;
    }
    /**
     * <pre>
     * The default database.
     * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
     * </pre>
     *
     * <code>.google.protobuf.StringValue default_database = 43;</code>
     */
    @java.lang.Override
    public com.google.protobuf.StringValueOrBuilder getDefaultDatabaseOrBuilder() {
      return getDefaultDatabase();
    }

    public static final int TOTAL_MEMORY_PROFILER_STEP_FIELD_NUMBER = 44;
    private com.google.protobuf.Int64Value totalMemoryProfilerStep_;
    /**
     * <pre>
     * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
     * @return Whether the totalMemoryProfilerStep field is set.
     */
    @java.lang.Override
    public boolean hasTotalMemoryProfilerStep() {
      return totalMemoryProfilerStep_ != null;
    }
    /**
     * <pre>
     * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
     * @return The totalMemoryProfilerStep.
     */
    @java.lang.Override
    public com.google.protobuf.Int64Value getTotalMemoryProfilerStep() {
      return totalMemoryProfilerStep_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : totalMemoryProfilerStep_;
    }
    /**
     * <pre>
     * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
     * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
     * </pre>
     *
     * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Int64ValueOrBuilder getTotalMemoryProfilerStepOrBuilder() {
      return getTotalMemoryProfilerStep();
    }

    public static final int TOTAL_MEMORY_TRACKER_SAMPLE_PROBABILITY_FIELD_NUMBER = 45;
    private com.google.protobuf.DoubleValue totalMemoryTrackerSampleProbability_;
    /**
     * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
     * @return Whether the totalMemoryTrackerSampleProbability field is set.
     */
    @java.lang.Override
    public boolean hasTotalMemoryTrackerSampleProbability() {
      return totalMemoryTrackerSampleProbability_ != null;
    }
    /**
     * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
     * @return The totalMemoryTrackerSampleProbability.
     */
    @java.lang.Override
    public com.google.protobuf.DoubleValue getTotalMemoryTrackerSampleProbability() {
      return totalMemoryTrackerSampleProbability_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : totalMemoryTrackerSampleProbability_;
    }
    /**
     * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DoubleValueOrBuilder getTotalMemoryTrackerSampleProbabilityOrBuilder() {
      return getTotalMemoryTrackerSampleProbability();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (logLevel_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, logLevel_);
      }
      if (mergeTree_ != null) {
        output.writeMessage(2, getMergeTree());
      }
      for (int i = 0; i < compression_.size(); i++) {
        output.writeMessage(3, compression_.get(i));
      }
      for (int i = 0; i < dictionaries_.size(); i++) {
        output.writeMessage(4, dictionaries_.get(i));
      }
      for (int i = 0; i < graphiteRollup_.size(); i++) {
        output.writeMessage(5, graphiteRollup_.get(i));
      }
      if (maxConnections_ != null) {
        output.writeMessage(6, getMaxConnections());
      }
      if (maxConcurrentQueries_ != null) {
        output.writeMessage(7, getMaxConcurrentQueries());
      }
      if (keepAliveTimeout_ != null) {
        output.writeMessage(8, getKeepAliveTimeout());
      }
      if (uncompressedCacheSize_ != null) {
        output.writeMessage(9, getUncompressedCacheSize());
      }
      if (markCacheSize_ != null) {
        output.writeMessage(10, getMarkCacheSize());
      }
      if (maxTableSizeToDrop_ != null) {
        output.writeMessage(11, getMaxTableSizeToDrop());
      }
      if (builtinDictionariesReloadInterval_ != null) {
        output.writeMessage(12, getBuiltinDictionariesReloadInterval());
      }
      if (maxPartitionSizeToDrop_ != null) {
        output.writeMessage(13, getMaxPartitionSizeToDrop());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, timezone_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(geobaseUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, geobaseUri_);
      }
      if (queryLogRetentionSize_ != null) {
        output.writeMessage(16, getQueryLogRetentionSize());
      }
      if (queryLogRetentionTime_ != null) {
        output.writeMessage(17, getQueryLogRetentionTime());
      }
      if (queryThreadLogEnabled_ != null) {
        output.writeMessage(18, getQueryThreadLogEnabled());
      }
      if (queryThreadLogRetentionSize_ != null) {
        output.writeMessage(19, getQueryThreadLogRetentionSize());
      }
      if (queryThreadLogRetentionTime_ != null) {
        output.writeMessage(20, getQueryThreadLogRetentionTime());
      }
      if (partLogRetentionSize_ != null) {
        output.writeMessage(21, getPartLogRetentionSize());
      }
      if (partLogRetentionTime_ != null) {
        output.writeMessage(22, getPartLogRetentionTime());
      }
      if (metricLogEnabled_ != null) {
        output.writeMessage(23, getMetricLogEnabled());
      }
      if (metricLogRetentionSize_ != null) {
        output.writeMessage(24, getMetricLogRetentionSize());
      }
      if (metricLogRetentionTime_ != null) {
        output.writeMessage(25, getMetricLogRetentionTime());
      }
      if (traceLogEnabled_ != null) {
        output.writeMessage(26, getTraceLogEnabled());
      }
      if (traceLogRetentionSize_ != null) {
        output.writeMessage(27, getTraceLogRetentionSize());
      }
      if (traceLogRetentionTime_ != null) {
        output.writeMessage(28, getTraceLogRetentionTime());
      }
      if (textLogEnabled_ != null) {
        output.writeMessage(29, getTextLogEnabled());
      }
      if (textLogRetentionSize_ != null) {
        output.writeMessage(30, getTextLogRetentionSize());
      }
      if (textLogRetentionTime_ != null) {
        output.writeMessage(31, getTextLogRetentionTime());
      }
      if (textLogLevel_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        output.writeEnum(32, textLogLevel_);
      }
      if (backgroundPoolSize_ != null) {
        output.writeMessage(33, getBackgroundPoolSize());
      }
      if (backgroundSchedulePoolSize_ != null) {
        output.writeMessage(34, getBackgroundSchedulePoolSize());
      }
      if (kafka_ != null) {
        output.writeMessage(35, getKafka());
      }
      for (int i = 0; i < kafkaTopics_.size(); i++) {
        output.writeMessage(36, kafkaTopics_.get(i));
      }
      if (rabbitmq_ != null) {
        output.writeMessage(37, getRabbitmq());
      }
      if (backgroundFetchesPoolSize_ != null) {
        output.writeMessage(38, getBackgroundFetchesPoolSize());
      }
      if (backgroundMovePoolSize_ != null) {
        output.writeMessage(39, getBackgroundMovePoolSize());
      }
      if (backgroundDistributedSchedulePoolSize_ != null) {
        output.writeMessage(40, getBackgroundDistributedSchedulePoolSize());
      }
      if (backgroundBufferFlushSchedulePoolSize_ != null) {
        output.writeMessage(41, getBackgroundBufferFlushSchedulePoolSize());
      }
      if (opentelemetrySpanLogEnabled_ != null) {
        output.writeMessage(42, getOpentelemetrySpanLogEnabled());
      }
      if (defaultDatabase_ != null) {
        output.writeMessage(43, getDefaultDatabase());
      }
      if (totalMemoryProfilerStep_ != null) {
        output.writeMessage(44, getTotalMemoryProfilerStep());
      }
      if (totalMemoryTrackerSampleProbability_ != null) {
        output.writeMessage(45, getTotalMemoryTrackerSampleProbability());
      }
      if (backgroundMessageBrokerSchedulePoolSize_ != null) {
        output.writeMessage(46, getBackgroundMessageBrokerSchedulePoolSize());
      }
      if (backgroundCommonPoolSize_ != null) {
        output.writeMessage(47, getBackgroundCommonPoolSize());
      }
      if (backgroundMergesMutationsConcurrencyRatio_ != null) {
        output.writeMessage(48, getBackgroundMergesMutationsConcurrencyRatio());
      }
      if (queryViewsLogEnabled_ != null) {
        output.writeMessage(49, getQueryViewsLogEnabled());
      }
      if (queryViewsLogRetentionSize_ != null) {
        output.writeMessage(50, getQueryViewsLogRetentionSize());
      }
      if (queryViewsLogRetentionTime_ != null) {
        output.writeMessage(51, getQueryViewsLogRetentionTime());
      }
      if (asynchronousMetricLogEnabled_ != null) {
        output.writeMessage(52, getAsynchronousMetricLogEnabled());
      }
      if (asynchronousMetricLogRetentionSize_ != null) {
        output.writeMessage(53, getAsynchronousMetricLogRetentionSize());
      }
      if (asynchronousMetricLogRetentionTime_ != null) {
        output.writeMessage(54, getAsynchronousMetricLogRetentionTime());
      }
      if (opentelemetrySpanLogRetentionSize_ != null) {
        output.writeMessage(55, getOpentelemetrySpanLogRetentionSize());
      }
      if (opentelemetrySpanLogRetentionTime_ != null) {
        output.writeMessage(56, getOpentelemetrySpanLogRetentionTime());
      }
      if (sessionLogEnabled_ != null) {
        output.writeMessage(57, getSessionLogEnabled());
      }
      if (sessionLogRetentionSize_ != null) {
        output.writeMessage(58, getSessionLogRetentionSize());
      }
      if (sessionLogRetentionTime_ != null) {
        output.writeMessage(59, getSessionLogRetentionTime());
      }
      if (zookeeperLogEnabled_ != null) {
        output.writeMessage(60, getZookeeperLogEnabled());
      }
      if (zookeeperLogRetentionSize_ != null) {
        output.writeMessage(61, getZookeeperLogRetentionSize());
      }
      if (zookeeperLogRetentionTime_ != null) {
        output.writeMessage(62, getZookeeperLogRetentionTime());
      }
      if (asynchronousInsertLogEnabled_ != null) {
        output.writeMessage(63, getAsynchronousInsertLogEnabled());
      }
      if (asynchronousInsertLogRetentionSize_ != null) {
        output.writeMessage(64, getAsynchronousInsertLogRetentionSize());
      }
      if (asynchronousInsertLogRetentionTime_ != null) {
        output.writeMessage(65, getAsynchronousInsertLogRetentionTime());
      }
      if (geobaseEnabled_ != null) {
        output.writeMessage(66, getGeobaseEnabled());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (logLevel_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, logLevel_);
      }
      if (mergeTree_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMergeTree());
      }
      for (int i = 0; i < compression_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, compression_.get(i));
      }
      for (int i = 0; i < dictionaries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, dictionaries_.get(i));
      }
      for (int i = 0; i < graphiteRollup_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, graphiteRollup_.get(i));
      }
      if (maxConnections_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMaxConnections());
      }
      if (maxConcurrentQueries_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMaxConcurrentQueries());
      }
      if (keepAliveTimeout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getKeepAliveTimeout());
      }
      if (uncompressedCacheSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getUncompressedCacheSize());
      }
      if (markCacheSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getMarkCacheSize());
      }
      if (maxTableSizeToDrop_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getMaxTableSizeToDrop());
      }
      if (builtinDictionariesReloadInterval_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getBuiltinDictionariesReloadInterval());
      }
      if (maxPartitionSizeToDrop_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getMaxPartitionSizeToDrop());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, timezone_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(geobaseUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, geobaseUri_);
      }
      if (queryLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getQueryLogRetentionSize());
      }
      if (queryLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getQueryLogRetentionTime());
      }
      if (queryThreadLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getQueryThreadLogEnabled());
      }
      if (queryThreadLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getQueryThreadLogRetentionSize());
      }
      if (queryThreadLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getQueryThreadLogRetentionTime());
      }
      if (partLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getPartLogRetentionSize());
      }
      if (partLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getPartLogRetentionTime());
      }
      if (metricLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getMetricLogEnabled());
      }
      if (metricLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getMetricLogRetentionSize());
      }
      if (metricLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, getMetricLogRetentionTime());
      }
      if (traceLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, getTraceLogEnabled());
      }
      if (traceLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, getTraceLogRetentionSize());
      }
      if (traceLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, getTraceLogRetentionTime());
      }
      if (textLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, getTextLogEnabled());
      }
      if (textLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, getTextLogRetentionSize());
      }
      if (textLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, getTextLogRetentionTime());
      }
      if (textLogLevel_ != yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.LOG_LEVEL_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(32, textLogLevel_);
      }
      if (backgroundPoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, getBackgroundPoolSize());
      }
      if (backgroundSchedulePoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getBackgroundSchedulePoolSize());
      }
      if (kafka_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(35, getKafka());
      }
      for (int i = 0; i < kafkaTopics_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, kafkaTopics_.get(i));
      }
      if (rabbitmq_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(37, getRabbitmq());
      }
      if (backgroundFetchesPoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, getBackgroundFetchesPoolSize());
      }
      if (backgroundMovePoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(39, getBackgroundMovePoolSize());
      }
      if (backgroundDistributedSchedulePoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(40, getBackgroundDistributedSchedulePoolSize());
      }
      if (backgroundBufferFlushSchedulePoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, getBackgroundBufferFlushSchedulePoolSize());
      }
      if (opentelemetrySpanLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, getOpentelemetrySpanLogEnabled());
      }
      if (defaultDatabase_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(43, getDefaultDatabase());
      }
      if (totalMemoryProfilerStep_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(44, getTotalMemoryProfilerStep());
      }
      if (totalMemoryTrackerSampleProbability_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, getTotalMemoryTrackerSampleProbability());
      }
      if (backgroundMessageBrokerSchedulePoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(46, getBackgroundMessageBrokerSchedulePoolSize());
      }
      if (backgroundCommonPoolSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, getBackgroundCommonPoolSize());
      }
      if (backgroundMergesMutationsConcurrencyRatio_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, getBackgroundMergesMutationsConcurrencyRatio());
      }
      if (queryViewsLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getQueryViewsLogEnabled());
      }
      if (queryViewsLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, getQueryViewsLogRetentionSize());
      }
      if (queryViewsLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, getQueryViewsLogRetentionTime());
      }
      if (asynchronousMetricLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, getAsynchronousMetricLogEnabled());
      }
      if (asynchronousMetricLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, getAsynchronousMetricLogRetentionSize());
      }
      if (asynchronousMetricLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(54, getAsynchronousMetricLogRetentionTime());
      }
      if (opentelemetrySpanLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, getOpentelemetrySpanLogRetentionSize());
      }
      if (opentelemetrySpanLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, getOpentelemetrySpanLogRetentionTime());
      }
      if (sessionLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(57, getSessionLogEnabled());
      }
      if (sessionLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, getSessionLogRetentionSize());
      }
      if (sessionLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(59, getSessionLogRetentionTime());
      }
      if (zookeeperLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(60, getZookeeperLogEnabled());
      }
      if (zookeeperLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(61, getZookeeperLogRetentionSize());
      }
      if (zookeeperLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, getZookeeperLogRetentionTime());
      }
      if (asynchronousInsertLogEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, getAsynchronousInsertLogEnabled());
      }
      if (asynchronousInsertLogRetentionSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(64, getAsynchronousInsertLogRetentionSize());
      }
      if (asynchronousInsertLogRetentionTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(65, getAsynchronousInsertLogRetentionTime());
      }
      if (geobaseEnabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(66, getGeobaseEnabled());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig) obj;

      if (logLevel_ != other.logLevel_) return false;
      if (hasMergeTree() != other.hasMergeTree()) return false;
      if (hasMergeTree()) {
        if (!getMergeTree()
            .equals(other.getMergeTree())) return false;
      }
      if (!getCompressionList()
          .equals(other.getCompressionList())) return false;
      if (!getDictionariesList()
          .equals(other.getDictionariesList())) return false;
      if (!getGraphiteRollupList()
          .equals(other.getGraphiteRollupList())) return false;
      if (hasKafka() != other.hasKafka()) return false;
      if (hasKafka()) {
        if (!getKafka()
            .equals(other.getKafka())) return false;
      }
      if (!getKafkaTopicsList()
          .equals(other.getKafkaTopicsList())) return false;
      if (hasRabbitmq() != other.hasRabbitmq()) return false;
      if (hasRabbitmq()) {
        if (!getRabbitmq()
            .equals(other.getRabbitmq())) return false;
      }
      if (hasMaxConnections() != other.hasMaxConnections()) return false;
      if (hasMaxConnections()) {
        if (!getMaxConnections()
            .equals(other.getMaxConnections())) return false;
      }
      if (hasMaxConcurrentQueries() != other.hasMaxConcurrentQueries()) return false;
      if (hasMaxConcurrentQueries()) {
        if (!getMaxConcurrentQueries()
            .equals(other.getMaxConcurrentQueries())) return false;
      }
      if (hasKeepAliveTimeout() != other.hasKeepAliveTimeout()) return false;
      if (hasKeepAliveTimeout()) {
        if (!getKeepAliveTimeout()
            .equals(other.getKeepAliveTimeout())) return false;
      }
      if (hasUncompressedCacheSize() != other.hasUncompressedCacheSize()) return false;
      if (hasUncompressedCacheSize()) {
        if (!getUncompressedCacheSize()
            .equals(other.getUncompressedCacheSize())) return false;
      }
      if (hasMarkCacheSize() != other.hasMarkCacheSize()) return false;
      if (hasMarkCacheSize()) {
        if (!getMarkCacheSize()
            .equals(other.getMarkCacheSize())) return false;
      }
      if (hasMaxTableSizeToDrop() != other.hasMaxTableSizeToDrop()) return false;
      if (hasMaxTableSizeToDrop()) {
        if (!getMaxTableSizeToDrop()
            .equals(other.getMaxTableSizeToDrop())) return false;
      }
      if (hasMaxPartitionSizeToDrop() != other.hasMaxPartitionSizeToDrop()) return false;
      if (hasMaxPartitionSizeToDrop()) {
        if (!getMaxPartitionSizeToDrop()
            .equals(other.getMaxPartitionSizeToDrop())) return false;
      }
      if (hasBuiltinDictionariesReloadInterval() != other.hasBuiltinDictionariesReloadInterval()) return false;
      if (hasBuiltinDictionariesReloadInterval()) {
        if (!getBuiltinDictionariesReloadInterval()
            .equals(other.getBuiltinDictionariesReloadInterval())) return false;
      }
      if (!getTimezone()
          .equals(other.getTimezone())) return false;
      if (hasGeobaseEnabled() != other.hasGeobaseEnabled()) return false;
      if (hasGeobaseEnabled()) {
        if (!getGeobaseEnabled()
            .equals(other.getGeobaseEnabled())) return false;
      }
      if (!getGeobaseUri()
          .equals(other.getGeobaseUri())) return false;
      if (hasQueryLogRetentionSize() != other.hasQueryLogRetentionSize()) return false;
      if (hasQueryLogRetentionSize()) {
        if (!getQueryLogRetentionSize()
            .equals(other.getQueryLogRetentionSize())) return false;
      }
      if (hasQueryLogRetentionTime() != other.hasQueryLogRetentionTime()) return false;
      if (hasQueryLogRetentionTime()) {
        if (!getQueryLogRetentionTime()
            .equals(other.getQueryLogRetentionTime())) return false;
      }
      if (hasQueryThreadLogEnabled() != other.hasQueryThreadLogEnabled()) return false;
      if (hasQueryThreadLogEnabled()) {
        if (!getQueryThreadLogEnabled()
            .equals(other.getQueryThreadLogEnabled())) return false;
      }
      if (hasQueryThreadLogRetentionSize() != other.hasQueryThreadLogRetentionSize()) return false;
      if (hasQueryThreadLogRetentionSize()) {
        if (!getQueryThreadLogRetentionSize()
            .equals(other.getQueryThreadLogRetentionSize())) return false;
      }
      if (hasQueryThreadLogRetentionTime() != other.hasQueryThreadLogRetentionTime()) return false;
      if (hasQueryThreadLogRetentionTime()) {
        if (!getQueryThreadLogRetentionTime()
            .equals(other.getQueryThreadLogRetentionTime())) return false;
      }
      if (hasPartLogRetentionSize() != other.hasPartLogRetentionSize()) return false;
      if (hasPartLogRetentionSize()) {
        if (!getPartLogRetentionSize()
            .equals(other.getPartLogRetentionSize())) return false;
      }
      if (hasPartLogRetentionTime() != other.hasPartLogRetentionTime()) return false;
      if (hasPartLogRetentionTime()) {
        if (!getPartLogRetentionTime()
            .equals(other.getPartLogRetentionTime())) return false;
      }
      if (hasMetricLogEnabled() != other.hasMetricLogEnabled()) return false;
      if (hasMetricLogEnabled()) {
        if (!getMetricLogEnabled()
            .equals(other.getMetricLogEnabled())) return false;
      }
      if (hasMetricLogRetentionSize() != other.hasMetricLogRetentionSize()) return false;
      if (hasMetricLogRetentionSize()) {
        if (!getMetricLogRetentionSize()
            .equals(other.getMetricLogRetentionSize())) return false;
      }
      if (hasMetricLogRetentionTime() != other.hasMetricLogRetentionTime()) return false;
      if (hasMetricLogRetentionTime()) {
        if (!getMetricLogRetentionTime()
            .equals(other.getMetricLogRetentionTime())) return false;
      }
      if (hasTraceLogEnabled() != other.hasTraceLogEnabled()) return false;
      if (hasTraceLogEnabled()) {
        if (!getTraceLogEnabled()
            .equals(other.getTraceLogEnabled())) return false;
      }
      if (hasTraceLogRetentionSize() != other.hasTraceLogRetentionSize()) return false;
      if (hasTraceLogRetentionSize()) {
        if (!getTraceLogRetentionSize()
            .equals(other.getTraceLogRetentionSize())) return false;
      }
      if (hasTraceLogRetentionTime() != other.hasTraceLogRetentionTime()) return false;
      if (hasTraceLogRetentionTime()) {
        if (!getTraceLogRetentionTime()
            .equals(other.getTraceLogRetentionTime())) return false;
      }
      if (hasTextLogEnabled() != other.hasTextLogEnabled()) return false;
      if (hasTextLogEnabled()) {
        if (!getTextLogEnabled()
            .equals(other.getTextLogEnabled())) return false;
      }
      if (hasTextLogRetentionSize() != other.hasTextLogRetentionSize()) return false;
      if (hasTextLogRetentionSize()) {
        if (!getTextLogRetentionSize()
            .equals(other.getTextLogRetentionSize())) return false;
      }
      if (hasTextLogRetentionTime() != other.hasTextLogRetentionTime()) return false;
      if (hasTextLogRetentionTime()) {
        if (!getTextLogRetentionTime()
            .equals(other.getTextLogRetentionTime())) return false;
      }
      if (textLogLevel_ != other.textLogLevel_) return false;
      if (hasOpentelemetrySpanLogEnabled() != other.hasOpentelemetrySpanLogEnabled()) return false;
      if (hasOpentelemetrySpanLogEnabled()) {
        if (!getOpentelemetrySpanLogEnabled()
            .equals(other.getOpentelemetrySpanLogEnabled())) return false;
      }
      if (hasOpentelemetrySpanLogRetentionSize() != other.hasOpentelemetrySpanLogRetentionSize()) return false;
      if (hasOpentelemetrySpanLogRetentionSize()) {
        if (!getOpentelemetrySpanLogRetentionSize()
            .equals(other.getOpentelemetrySpanLogRetentionSize())) return false;
      }
      if (hasOpentelemetrySpanLogRetentionTime() != other.hasOpentelemetrySpanLogRetentionTime()) return false;
      if (hasOpentelemetrySpanLogRetentionTime()) {
        if (!getOpentelemetrySpanLogRetentionTime()
            .equals(other.getOpentelemetrySpanLogRetentionTime())) return false;
      }
      if (hasQueryViewsLogEnabled() != other.hasQueryViewsLogEnabled()) return false;
      if (hasQueryViewsLogEnabled()) {
        if (!getQueryViewsLogEnabled()
            .equals(other.getQueryViewsLogEnabled())) return false;
      }
      if (hasQueryViewsLogRetentionSize() != other.hasQueryViewsLogRetentionSize()) return false;
      if (hasQueryViewsLogRetentionSize()) {
        if (!getQueryViewsLogRetentionSize()
            .equals(other.getQueryViewsLogRetentionSize())) return false;
      }
      if (hasQueryViewsLogRetentionTime() != other.hasQueryViewsLogRetentionTime()) return false;
      if (hasQueryViewsLogRetentionTime()) {
        if (!getQueryViewsLogRetentionTime()
            .equals(other.getQueryViewsLogRetentionTime())) return false;
      }
      if (hasAsynchronousMetricLogEnabled() != other.hasAsynchronousMetricLogEnabled()) return false;
      if (hasAsynchronousMetricLogEnabled()) {
        if (!getAsynchronousMetricLogEnabled()
            .equals(other.getAsynchronousMetricLogEnabled())) return false;
      }
      if (hasAsynchronousMetricLogRetentionSize() != other.hasAsynchronousMetricLogRetentionSize()) return false;
      if (hasAsynchronousMetricLogRetentionSize()) {
        if (!getAsynchronousMetricLogRetentionSize()
            .equals(other.getAsynchronousMetricLogRetentionSize())) return false;
      }
      if (hasAsynchronousMetricLogRetentionTime() != other.hasAsynchronousMetricLogRetentionTime()) return false;
      if (hasAsynchronousMetricLogRetentionTime()) {
        if (!getAsynchronousMetricLogRetentionTime()
            .equals(other.getAsynchronousMetricLogRetentionTime())) return false;
      }
      if (hasSessionLogEnabled() != other.hasSessionLogEnabled()) return false;
      if (hasSessionLogEnabled()) {
        if (!getSessionLogEnabled()
            .equals(other.getSessionLogEnabled())) return false;
      }
      if (hasSessionLogRetentionSize() != other.hasSessionLogRetentionSize()) return false;
      if (hasSessionLogRetentionSize()) {
        if (!getSessionLogRetentionSize()
            .equals(other.getSessionLogRetentionSize())) return false;
      }
      if (hasSessionLogRetentionTime() != other.hasSessionLogRetentionTime()) return false;
      if (hasSessionLogRetentionTime()) {
        if (!getSessionLogRetentionTime()
            .equals(other.getSessionLogRetentionTime())) return false;
      }
      if (hasZookeeperLogEnabled() != other.hasZookeeperLogEnabled()) return false;
      if (hasZookeeperLogEnabled()) {
        if (!getZookeeperLogEnabled()
            .equals(other.getZookeeperLogEnabled())) return false;
      }
      if (hasZookeeperLogRetentionSize() != other.hasZookeeperLogRetentionSize()) return false;
      if (hasZookeeperLogRetentionSize()) {
        if (!getZookeeperLogRetentionSize()
            .equals(other.getZookeeperLogRetentionSize())) return false;
      }
      if (hasZookeeperLogRetentionTime() != other.hasZookeeperLogRetentionTime()) return false;
      if (hasZookeeperLogRetentionTime()) {
        if (!getZookeeperLogRetentionTime()
            .equals(other.getZookeeperLogRetentionTime())) return false;
      }
      if (hasAsynchronousInsertLogEnabled() != other.hasAsynchronousInsertLogEnabled()) return false;
      if (hasAsynchronousInsertLogEnabled()) {
        if (!getAsynchronousInsertLogEnabled()
            .equals(other.getAsynchronousInsertLogEnabled())) return false;
      }
      if (hasAsynchronousInsertLogRetentionSize() != other.hasAsynchronousInsertLogRetentionSize()) return false;
      if (hasAsynchronousInsertLogRetentionSize()) {
        if (!getAsynchronousInsertLogRetentionSize()
            .equals(other.getAsynchronousInsertLogRetentionSize())) return false;
      }
      if (hasAsynchronousInsertLogRetentionTime() != other.hasAsynchronousInsertLogRetentionTime()) return false;
      if (hasAsynchronousInsertLogRetentionTime()) {
        if (!getAsynchronousInsertLogRetentionTime()
            .equals(other.getAsynchronousInsertLogRetentionTime())) return false;
      }
      if (hasBackgroundPoolSize() != other.hasBackgroundPoolSize()) return false;
      if (hasBackgroundPoolSize()) {
        if (!getBackgroundPoolSize()
            .equals(other.getBackgroundPoolSize())) return false;
      }
      if (hasBackgroundMergesMutationsConcurrencyRatio() != other.hasBackgroundMergesMutationsConcurrencyRatio()) return false;
      if (hasBackgroundMergesMutationsConcurrencyRatio()) {
        if (!getBackgroundMergesMutationsConcurrencyRatio()
            .equals(other.getBackgroundMergesMutationsConcurrencyRatio())) return false;
      }
      if (hasBackgroundSchedulePoolSize() != other.hasBackgroundSchedulePoolSize()) return false;
      if (hasBackgroundSchedulePoolSize()) {
        if (!getBackgroundSchedulePoolSize()
            .equals(other.getBackgroundSchedulePoolSize())) return false;
      }
      if (hasBackgroundFetchesPoolSize() != other.hasBackgroundFetchesPoolSize()) return false;
      if (hasBackgroundFetchesPoolSize()) {
        if (!getBackgroundFetchesPoolSize()
            .equals(other.getBackgroundFetchesPoolSize())) return false;
      }
      if (hasBackgroundMovePoolSize() != other.hasBackgroundMovePoolSize()) return false;
      if (hasBackgroundMovePoolSize()) {
        if (!getBackgroundMovePoolSize()
            .equals(other.getBackgroundMovePoolSize())) return false;
      }
      if (hasBackgroundDistributedSchedulePoolSize() != other.hasBackgroundDistributedSchedulePoolSize()) return false;
      if (hasBackgroundDistributedSchedulePoolSize()) {
        if (!getBackgroundDistributedSchedulePoolSize()
            .equals(other.getBackgroundDistributedSchedulePoolSize())) return false;
      }
      if (hasBackgroundBufferFlushSchedulePoolSize() != other.hasBackgroundBufferFlushSchedulePoolSize()) return false;
      if (hasBackgroundBufferFlushSchedulePoolSize()) {
        if (!getBackgroundBufferFlushSchedulePoolSize()
            .equals(other.getBackgroundBufferFlushSchedulePoolSize())) return false;
      }
      if (hasBackgroundMessageBrokerSchedulePoolSize() != other.hasBackgroundMessageBrokerSchedulePoolSize()) return false;
      if (hasBackgroundMessageBrokerSchedulePoolSize()) {
        if (!getBackgroundMessageBrokerSchedulePoolSize()
            .equals(other.getBackgroundMessageBrokerSchedulePoolSize())) return false;
      }
      if (hasBackgroundCommonPoolSize() != other.hasBackgroundCommonPoolSize()) return false;
      if (hasBackgroundCommonPoolSize()) {
        if (!getBackgroundCommonPoolSize()
            .equals(other.getBackgroundCommonPoolSize())) return false;
      }
      if (hasDefaultDatabase() != other.hasDefaultDatabase()) return false;
      if (hasDefaultDatabase()) {
        if (!getDefaultDatabase()
            .equals(other.getDefaultDatabase())) return false;
      }
      if (hasTotalMemoryProfilerStep() != other.hasTotalMemoryProfilerStep()) return false;
      if (hasTotalMemoryProfilerStep()) {
        if (!getTotalMemoryProfilerStep()
            .equals(other.getTotalMemoryProfilerStep())) return false;
      }
      if (hasTotalMemoryTrackerSampleProbability() != other.hasTotalMemoryTrackerSampleProbability()) return false;
      if (hasTotalMemoryTrackerSampleProbability()) {
        if (!getTotalMemoryTrackerSampleProbability()
            .equals(other.getTotalMemoryTrackerSampleProbability())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOG_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + logLevel_;
      if (hasMergeTree()) {
        hash = (37 * hash) + MERGE_TREE_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTree().hashCode();
      }
      if (getCompressionCount() > 0) {
        hash = (37 * hash) + COMPRESSION_FIELD_NUMBER;
        hash = (53 * hash) + getCompressionList().hashCode();
      }
      if (getDictionariesCount() > 0) {
        hash = (37 * hash) + DICTIONARIES_FIELD_NUMBER;
        hash = (53 * hash) + getDictionariesList().hashCode();
      }
      if (getGraphiteRollupCount() > 0) {
        hash = (37 * hash) + GRAPHITE_ROLLUP_FIELD_NUMBER;
        hash = (53 * hash) + getGraphiteRollupList().hashCode();
      }
      if (hasKafka()) {
        hash = (37 * hash) + KAFKA_FIELD_NUMBER;
        hash = (53 * hash) + getKafka().hashCode();
      }
      if (getKafkaTopicsCount() > 0) {
        hash = (37 * hash) + KAFKA_TOPICS_FIELD_NUMBER;
        hash = (53 * hash) + getKafkaTopicsList().hashCode();
      }
      if (hasRabbitmq()) {
        hash = (37 * hash) + RABBITMQ_FIELD_NUMBER;
        hash = (53 * hash) + getRabbitmq().hashCode();
      }
      if (hasMaxConnections()) {
        hash = (37 * hash) + MAX_CONNECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConnections().hashCode();
      }
      if (hasMaxConcurrentQueries()) {
        hash = (37 * hash) + MAX_CONCURRENT_QUERIES_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConcurrentQueries().hashCode();
      }
      if (hasKeepAliveTimeout()) {
        hash = (37 * hash) + KEEP_ALIVE_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getKeepAliveTimeout().hashCode();
      }
      if (hasUncompressedCacheSize()) {
        hash = (37 * hash) + UNCOMPRESSED_CACHE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getUncompressedCacheSize().hashCode();
      }
      if (hasMarkCacheSize()) {
        hash = (37 * hash) + MARK_CACHE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMarkCacheSize().hashCode();
      }
      if (hasMaxTableSizeToDrop()) {
        hash = (37 * hash) + MAX_TABLE_SIZE_TO_DROP_FIELD_NUMBER;
        hash = (53 * hash) + getMaxTableSizeToDrop().hashCode();
      }
      if (hasMaxPartitionSizeToDrop()) {
        hash = (37 * hash) + MAX_PARTITION_SIZE_TO_DROP_FIELD_NUMBER;
        hash = (53 * hash) + getMaxPartitionSizeToDrop().hashCode();
      }
      if (hasBuiltinDictionariesReloadInterval()) {
        hash = (37 * hash) + BUILTIN_DICTIONARIES_RELOAD_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getBuiltinDictionariesReloadInterval().hashCode();
      }
      hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
      hash = (53 * hash) + getTimezone().hashCode();
      if (hasGeobaseEnabled()) {
        hash = (37 * hash) + GEOBASE_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getGeobaseEnabled().hashCode();
      }
      hash = (37 * hash) + GEOBASE_URI_FIELD_NUMBER;
      hash = (53 * hash) + getGeobaseUri().hashCode();
      if (hasQueryLogRetentionSize()) {
        hash = (37 * hash) + QUERY_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getQueryLogRetentionSize().hashCode();
      }
      if (hasQueryLogRetentionTime()) {
        hash = (37 * hash) + QUERY_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getQueryLogRetentionTime().hashCode();
      }
      if (hasQueryThreadLogEnabled()) {
        hash = (37 * hash) + QUERY_THREAD_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getQueryThreadLogEnabled().hashCode();
      }
      if (hasQueryThreadLogRetentionSize()) {
        hash = (37 * hash) + QUERY_THREAD_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getQueryThreadLogRetentionSize().hashCode();
      }
      if (hasQueryThreadLogRetentionTime()) {
        hash = (37 * hash) + QUERY_THREAD_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getQueryThreadLogRetentionTime().hashCode();
      }
      if (hasPartLogRetentionSize()) {
        hash = (37 * hash) + PART_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getPartLogRetentionSize().hashCode();
      }
      if (hasPartLogRetentionTime()) {
        hash = (37 * hash) + PART_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getPartLogRetentionTime().hashCode();
      }
      if (hasMetricLogEnabled()) {
        hash = (37 * hash) + METRIC_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getMetricLogEnabled().hashCode();
      }
      if (hasMetricLogRetentionSize()) {
        hash = (37 * hash) + METRIC_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMetricLogRetentionSize().hashCode();
      }
      if (hasMetricLogRetentionTime()) {
        hash = (37 * hash) + METRIC_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getMetricLogRetentionTime().hashCode();
      }
      if (hasTraceLogEnabled()) {
        hash = (37 * hash) + TRACE_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getTraceLogEnabled().hashCode();
      }
      if (hasTraceLogRetentionSize()) {
        hash = (37 * hash) + TRACE_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getTraceLogRetentionSize().hashCode();
      }
      if (hasTraceLogRetentionTime()) {
        hash = (37 * hash) + TRACE_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTraceLogRetentionTime().hashCode();
      }
      if (hasTextLogEnabled()) {
        hash = (37 * hash) + TEXT_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getTextLogEnabled().hashCode();
      }
      if (hasTextLogRetentionSize()) {
        hash = (37 * hash) + TEXT_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getTextLogRetentionSize().hashCode();
      }
      if (hasTextLogRetentionTime()) {
        hash = (37 * hash) + TEXT_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTextLogRetentionTime().hashCode();
      }
      hash = (37 * hash) + TEXT_LOG_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + textLogLevel_;
      if (hasOpentelemetrySpanLogEnabled()) {
        hash = (37 * hash) + OPENTELEMETRY_SPAN_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getOpentelemetrySpanLogEnabled().hashCode();
      }
      if (hasOpentelemetrySpanLogRetentionSize()) {
        hash = (37 * hash) + OPENTELEMETRY_SPAN_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getOpentelemetrySpanLogRetentionSize().hashCode();
      }
      if (hasOpentelemetrySpanLogRetentionTime()) {
        hash = (37 * hash) + OPENTELEMETRY_SPAN_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getOpentelemetrySpanLogRetentionTime().hashCode();
      }
      if (hasQueryViewsLogEnabled()) {
        hash = (37 * hash) + QUERY_VIEWS_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getQueryViewsLogEnabled().hashCode();
      }
      if (hasQueryViewsLogRetentionSize()) {
        hash = (37 * hash) + QUERY_VIEWS_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getQueryViewsLogRetentionSize().hashCode();
      }
      if (hasQueryViewsLogRetentionTime()) {
        hash = (37 * hash) + QUERY_VIEWS_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getQueryViewsLogRetentionTime().hashCode();
      }
      if (hasAsynchronousMetricLogEnabled()) {
        hash = (37 * hash) + ASYNCHRONOUS_METRIC_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getAsynchronousMetricLogEnabled().hashCode();
      }
      if (hasAsynchronousMetricLogRetentionSize()) {
        hash = (37 * hash) + ASYNCHRONOUS_METRIC_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getAsynchronousMetricLogRetentionSize().hashCode();
      }
      if (hasAsynchronousMetricLogRetentionTime()) {
        hash = (37 * hash) + ASYNCHRONOUS_METRIC_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getAsynchronousMetricLogRetentionTime().hashCode();
      }
      if (hasSessionLogEnabled()) {
        hash = (37 * hash) + SESSION_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getSessionLogEnabled().hashCode();
      }
      if (hasSessionLogRetentionSize()) {
        hash = (37 * hash) + SESSION_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSessionLogRetentionSize().hashCode();
      }
      if (hasSessionLogRetentionTime()) {
        hash = (37 * hash) + SESSION_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getSessionLogRetentionTime().hashCode();
      }
      if (hasZookeeperLogEnabled()) {
        hash = (37 * hash) + ZOOKEEPER_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getZookeeperLogEnabled().hashCode();
      }
      if (hasZookeeperLogRetentionSize()) {
        hash = (37 * hash) + ZOOKEEPER_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getZookeeperLogRetentionSize().hashCode();
      }
      if (hasZookeeperLogRetentionTime()) {
        hash = (37 * hash) + ZOOKEEPER_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getZookeeperLogRetentionTime().hashCode();
      }
      if (hasAsynchronousInsertLogEnabled()) {
        hash = (37 * hash) + ASYNCHRONOUS_INSERT_LOG_ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getAsynchronousInsertLogEnabled().hashCode();
      }
      if (hasAsynchronousInsertLogRetentionSize()) {
        hash = (37 * hash) + ASYNCHRONOUS_INSERT_LOG_RETENTION_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getAsynchronousInsertLogRetentionSize().hashCode();
      }
      if (hasAsynchronousInsertLogRetentionTime()) {
        hash = (37 * hash) + ASYNCHRONOUS_INSERT_LOG_RETENTION_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getAsynchronousInsertLogRetentionTime().hashCode();
      }
      if (hasBackgroundPoolSize()) {
        hash = (37 * hash) + BACKGROUND_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundPoolSize().hashCode();
      }
      if (hasBackgroundMergesMutationsConcurrencyRatio()) {
        hash = (37 * hash) + BACKGROUND_MERGES_MUTATIONS_CONCURRENCY_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundMergesMutationsConcurrencyRatio().hashCode();
      }
      if (hasBackgroundSchedulePoolSize()) {
        hash = (37 * hash) + BACKGROUND_SCHEDULE_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundSchedulePoolSize().hashCode();
      }
      if (hasBackgroundFetchesPoolSize()) {
        hash = (37 * hash) + BACKGROUND_FETCHES_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundFetchesPoolSize().hashCode();
      }
      if (hasBackgroundMovePoolSize()) {
        hash = (37 * hash) + BACKGROUND_MOVE_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundMovePoolSize().hashCode();
      }
      if (hasBackgroundDistributedSchedulePoolSize()) {
        hash = (37 * hash) + BACKGROUND_DISTRIBUTED_SCHEDULE_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundDistributedSchedulePoolSize().hashCode();
      }
      if (hasBackgroundBufferFlushSchedulePoolSize()) {
        hash = (37 * hash) + BACKGROUND_BUFFER_FLUSH_SCHEDULE_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundBufferFlushSchedulePoolSize().hashCode();
      }
      if (hasBackgroundMessageBrokerSchedulePoolSize()) {
        hash = (37 * hash) + BACKGROUND_MESSAGE_BROKER_SCHEDULE_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundMessageBrokerSchedulePoolSize().hashCode();
      }
      if (hasBackgroundCommonPoolSize()) {
        hash = (37 * hash) + BACKGROUND_COMMON_POOL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundCommonPoolSize().hashCode();
      }
      if (hasDefaultDatabase()) {
        hash = (37 * hash) + DEFAULT_DATABASE_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultDatabase().hashCode();
      }
      if (hasTotalMemoryProfilerStep()) {
        hash = (37 * hash) + TOTAL_MEMORY_PROFILER_STEP_FIELD_NUMBER;
        hash = (53 * hash) + getTotalMemoryProfilerStep().hashCode();
      }
      if (hasTotalMemoryTrackerSampleProbability()) {
        hash = (37 * hash) + TOTAL_MEMORY_TRACKER_SAMPLE_PROBABILITY_FIELD_NUMBER;
        hash = (53 * hash) + getTotalMemoryTrackerSampleProbability().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClickHouse configuration options. Detailed description for each set of options
     * is available in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/).
     * Any options not listed here are not supported.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig)
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCompressionFieldBuilder();
          getDictionariesFieldBuilder();
          getGraphiteRollupFieldBuilder();
          getKafkaTopicsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        logLevel_ = 0;

        if (mergeTreeBuilder_ == null) {
          mergeTree_ = null;
        } else {
          mergeTree_ = null;
          mergeTreeBuilder_ = null;
        }
        if (compressionBuilder_ == null) {
          compression_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          compressionBuilder_.clear();
        }
        if (dictionariesBuilder_ == null) {
          dictionaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dictionariesBuilder_.clear();
        }
        if (graphiteRollupBuilder_ == null) {
          graphiteRollup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          graphiteRollupBuilder_.clear();
        }
        if (kafkaBuilder_ == null) {
          kafka_ = null;
        } else {
          kafka_ = null;
          kafkaBuilder_ = null;
        }
        if (kafkaTopicsBuilder_ == null) {
          kafkaTopics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          kafkaTopicsBuilder_.clear();
        }
        if (rabbitmqBuilder_ == null) {
          rabbitmq_ = null;
        } else {
          rabbitmq_ = null;
          rabbitmqBuilder_ = null;
        }
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }
        if (maxConcurrentQueriesBuilder_ == null) {
          maxConcurrentQueries_ = null;
        } else {
          maxConcurrentQueries_ = null;
          maxConcurrentQueriesBuilder_ = null;
        }
        if (keepAliveTimeoutBuilder_ == null) {
          keepAliveTimeout_ = null;
        } else {
          keepAliveTimeout_ = null;
          keepAliveTimeoutBuilder_ = null;
        }
        if (uncompressedCacheSizeBuilder_ == null) {
          uncompressedCacheSize_ = null;
        } else {
          uncompressedCacheSize_ = null;
          uncompressedCacheSizeBuilder_ = null;
        }
        if (markCacheSizeBuilder_ == null) {
          markCacheSize_ = null;
        } else {
          markCacheSize_ = null;
          markCacheSizeBuilder_ = null;
        }
        if (maxTableSizeToDropBuilder_ == null) {
          maxTableSizeToDrop_ = null;
        } else {
          maxTableSizeToDrop_ = null;
          maxTableSizeToDropBuilder_ = null;
        }
        if (maxPartitionSizeToDropBuilder_ == null) {
          maxPartitionSizeToDrop_ = null;
        } else {
          maxPartitionSizeToDrop_ = null;
          maxPartitionSizeToDropBuilder_ = null;
        }
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          builtinDictionariesReloadInterval_ = null;
        } else {
          builtinDictionariesReloadInterval_ = null;
          builtinDictionariesReloadIntervalBuilder_ = null;
        }
        timezone_ = "";

        if (geobaseEnabledBuilder_ == null) {
          geobaseEnabled_ = null;
        } else {
          geobaseEnabled_ = null;
          geobaseEnabledBuilder_ = null;
        }
        geobaseUri_ = "";

        if (queryLogRetentionSizeBuilder_ == null) {
          queryLogRetentionSize_ = null;
        } else {
          queryLogRetentionSize_ = null;
          queryLogRetentionSizeBuilder_ = null;
        }
        if (queryLogRetentionTimeBuilder_ == null) {
          queryLogRetentionTime_ = null;
        } else {
          queryLogRetentionTime_ = null;
          queryLogRetentionTimeBuilder_ = null;
        }
        if (queryThreadLogEnabledBuilder_ == null) {
          queryThreadLogEnabled_ = null;
        } else {
          queryThreadLogEnabled_ = null;
          queryThreadLogEnabledBuilder_ = null;
        }
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          queryThreadLogRetentionSize_ = null;
        } else {
          queryThreadLogRetentionSize_ = null;
          queryThreadLogRetentionSizeBuilder_ = null;
        }
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          queryThreadLogRetentionTime_ = null;
        } else {
          queryThreadLogRetentionTime_ = null;
          queryThreadLogRetentionTimeBuilder_ = null;
        }
        if (partLogRetentionSizeBuilder_ == null) {
          partLogRetentionSize_ = null;
        } else {
          partLogRetentionSize_ = null;
          partLogRetentionSizeBuilder_ = null;
        }
        if (partLogRetentionTimeBuilder_ == null) {
          partLogRetentionTime_ = null;
        } else {
          partLogRetentionTime_ = null;
          partLogRetentionTimeBuilder_ = null;
        }
        if (metricLogEnabledBuilder_ == null) {
          metricLogEnabled_ = null;
        } else {
          metricLogEnabled_ = null;
          metricLogEnabledBuilder_ = null;
        }
        if (metricLogRetentionSizeBuilder_ == null) {
          metricLogRetentionSize_ = null;
        } else {
          metricLogRetentionSize_ = null;
          metricLogRetentionSizeBuilder_ = null;
        }
        if (metricLogRetentionTimeBuilder_ == null) {
          metricLogRetentionTime_ = null;
        } else {
          metricLogRetentionTime_ = null;
          metricLogRetentionTimeBuilder_ = null;
        }
        if (traceLogEnabledBuilder_ == null) {
          traceLogEnabled_ = null;
        } else {
          traceLogEnabled_ = null;
          traceLogEnabledBuilder_ = null;
        }
        if (traceLogRetentionSizeBuilder_ == null) {
          traceLogRetentionSize_ = null;
        } else {
          traceLogRetentionSize_ = null;
          traceLogRetentionSizeBuilder_ = null;
        }
        if (traceLogRetentionTimeBuilder_ == null) {
          traceLogRetentionTime_ = null;
        } else {
          traceLogRetentionTime_ = null;
          traceLogRetentionTimeBuilder_ = null;
        }
        if (textLogEnabledBuilder_ == null) {
          textLogEnabled_ = null;
        } else {
          textLogEnabled_ = null;
          textLogEnabledBuilder_ = null;
        }
        if (textLogRetentionSizeBuilder_ == null) {
          textLogRetentionSize_ = null;
        } else {
          textLogRetentionSize_ = null;
          textLogRetentionSizeBuilder_ = null;
        }
        if (textLogRetentionTimeBuilder_ == null) {
          textLogRetentionTime_ = null;
        } else {
          textLogRetentionTime_ = null;
          textLogRetentionTimeBuilder_ = null;
        }
        textLogLevel_ = 0;

        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          opentelemetrySpanLogEnabled_ = null;
        } else {
          opentelemetrySpanLogEnabled_ = null;
          opentelemetrySpanLogEnabledBuilder_ = null;
        }
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          opentelemetrySpanLogRetentionSize_ = null;
        } else {
          opentelemetrySpanLogRetentionSize_ = null;
          opentelemetrySpanLogRetentionSizeBuilder_ = null;
        }
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          opentelemetrySpanLogRetentionTime_ = null;
        } else {
          opentelemetrySpanLogRetentionTime_ = null;
          opentelemetrySpanLogRetentionTimeBuilder_ = null;
        }
        if (queryViewsLogEnabledBuilder_ == null) {
          queryViewsLogEnabled_ = null;
        } else {
          queryViewsLogEnabled_ = null;
          queryViewsLogEnabledBuilder_ = null;
        }
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          queryViewsLogRetentionSize_ = null;
        } else {
          queryViewsLogRetentionSize_ = null;
          queryViewsLogRetentionSizeBuilder_ = null;
        }
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          queryViewsLogRetentionTime_ = null;
        } else {
          queryViewsLogRetentionTime_ = null;
          queryViewsLogRetentionTimeBuilder_ = null;
        }
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          asynchronousMetricLogEnabled_ = null;
        } else {
          asynchronousMetricLogEnabled_ = null;
          asynchronousMetricLogEnabledBuilder_ = null;
        }
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          asynchronousMetricLogRetentionSize_ = null;
        } else {
          asynchronousMetricLogRetentionSize_ = null;
          asynchronousMetricLogRetentionSizeBuilder_ = null;
        }
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          asynchronousMetricLogRetentionTime_ = null;
        } else {
          asynchronousMetricLogRetentionTime_ = null;
          asynchronousMetricLogRetentionTimeBuilder_ = null;
        }
        if (sessionLogEnabledBuilder_ == null) {
          sessionLogEnabled_ = null;
        } else {
          sessionLogEnabled_ = null;
          sessionLogEnabledBuilder_ = null;
        }
        if (sessionLogRetentionSizeBuilder_ == null) {
          sessionLogRetentionSize_ = null;
        } else {
          sessionLogRetentionSize_ = null;
          sessionLogRetentionSizeBuilder_ = null;
        }
        if (sessionLogRetentionTimeBuilder_ == null) {
          sessionLogRetentionTime_ = null;
        } else {
          sessionLogRetentionTime_ = null;
          sessionLogRetentionTimeBuilder_ = null;
        }
        if (zookeeperLogEnabledBuilder_ == null) {
          zookeeperLogEnabled_ = null;
        } else {
          zookeeperLogEnabled_ = null;
          zookeeperLogEnabledBuilder_ = null;
        }
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          zookeeperLogRetentionSize_ = null;
        } else {
          zookeeperLogRetentionSize_ = null;
          zookeeperLogRetentionSizeBuilder_ = null;
        }
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          zookeeperLogRetentionTime_ = null;
        } else {
          zookeeperLogRetentionTime_ = null;
          zookeeperLogRetentionTimeBuilder_ = null;
        }
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          asynchronousInsertLogEnabled_ = null;
        } else {
          asynchronousInsertLogEnabled_ = null;
          asynchronousInsertLogEnabledBuilder_ = null;
        }
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          asynchronousInsertLogRetentionSize_ = null;
        } else {
          asynchronousInsertLogRetentionSize_ = null;
          asynchronousInsertLogRetentionSizeBuilder_ = null;
        }
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          asynchronousInsertLogRetentionTime_ = null;
        } else {
          asynchronousInsertLogRetentionTime_ = null;
          asynchronousInsertLogRetentionTimeBuilder_ = null;
        }
        if (backgroundPoolSizeBuilder_ == null) {
          backgroundPoolSize_ = null;
        } else {
          backgroundPoolSize_ = null;
          backgroundPoolSizeBuilder_ = null;
        }
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          backgroundMergesMutationsConcurrencyRatio_ = null;
        } else {
          backgroundMergesMutationsConcurrencyRatio_ = null;
          backgroundMergesMutationsConcurrencyRatioBuilder_ = null;
        }
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          backgroundSchedulePoolSize_ = null;
        } else {
          backgroundSchedulePoolSize_ = null;
          backgroundSchedulePoolSizeBuilder_ = null;
        }
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          backgroundFetchesPoolSize_ = null;
        } else {
          backgroundFetchesPoolSize_ = null;
          backgroundFetchesPoolSizeBuilder_ = null;
        }
        if (backgroundMovePoolSizeBuilder_ == null) {
          backgroundMovePoolSize_ = null;
        } else {
          backgroundMovePoolSize_ = null;
          backgroundMovePoolSizeBuilder_ = null;
        }
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          backgroundDistributedSchedulePoolSize_ = null;
        } else {
          backgroundDistributedSchedulePoolSize_ = null;
          backgroundDistributedSchedulePoolSizeBuilder_ = null;
        }
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          backgroundBufferFlushSchedulePoolSize_ = null;
        } else {
          backgroundBufferFlushSchedulePoolSize_ = null;
          backgroundBufferFlushSchedulePoolSizeBuilder_ = null;
        }
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          backgroundMessageBrokerSchedulePoolSize_ = null;
        } else {
          backgroundMessageBrokerSchedulePoolSize_ = null;
          backgroundMessageBrokerSchedulePoolSizeBuilder_ = null;
        }
        if (backgroundCommonPoolSizeBuilder_ == null) {
          backgroundCommonPoolSize_ = null;
        } else {
          backgroundCommonPoolSize_ = null;
          backgroundCommonPoolSizeBuilder_ = null;
        }
        if (defaultDatabaseBuilder_ == null) {
          defaultDatabase_ = null;
        } else {
          defaultDatabase_ = null;
          defaultDatabaseBuilder_ = null;
        }
        if (totalMemoryProfilerStepBuilder_ == null) {
          totalMemoryProfilerStep_ = null;
        } else {
          totalMemoryProfilerStep_ = null;
          totalMemoryProfilerStepBuilder_ = null;
        }
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          totalMemoryTrackerSampleProbability_ = null;
        } else {
          totalMemoryTrackerSampleProbability_ = null;
          totalMemoryTrackerSampleProbabilityBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig build() {
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig(this);
        int from_bitField0_ = bitField0_;
        result.logLevel_ = logLevel_;
        if (mergeTreeBuilder_ == null) {
          result.mergeTree_ = mergeTree_;
        } else {
          result.mergeTree_ = mergeTreeBuilder_.build();
        }
        if (compressionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            compression_ = java.util.Collections.unmodifiableList(compression_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.compression_ = compression_;
        } else {
          result.compression_ = compressionBuilder_.build();
        }
        if (dictionariesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            dictionaries_ = java.util.Collections.unmodifiableList(dictionaries_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.dictionaries_ = dictionaries_;
        } else {
          result.dictionaries_ = dictionariesBuilder_.build();
        }
        if (graphiteRollupBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            graphiteRollup_ = java.util.Collections.unmodifiableList(graphiteRollup_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.graphiteRollup_ = graphiteRollup_;
        } else {
          result.graphiteRollup_ = graphiteRollupBuilder_.build();
        }
        if (kafkaBuilder_ == null) {
          result.kafka_ = kafka_;
        } else {
          result.kafka_ = kafkaBuilder_.build();
        }
        if (kafkaTopicsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            kafkaTopics_ = java.util.Collections.unmodifiableList(kafkaTopics_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.kafkaTopics_ = kafkaTopics_;
        } else {
          result.kafkaTopics_ = kafkaTopicsBuilder_.build();
        }
        if (rabbitmqBuilder_ == null) {
          result.rabbitmq_ = rabbitmq_;
        } else {
          result.rabbitmq_ = rabbitmqBuilder_.build();
        }
        if (maxConnectionsBuilder_ == null) {
          result.maxConnections_ = maxConnections_;
        } else {
          result.maxConnections_ = maxConnectionsBuilder_.build();
        }
        if (maxConcurrentQueriesBuilder_ == null) {
          result.maxConcurrentQueries_ = maxConcurrentQueries_;
        } else {
          result.maxConcurrentQueries_ = maxConcurrentQueriesBuilder_.build();
        }
        if (keepAliveTimeoutBuilder_ == null) {
          result.keepAliveTimeout_ = keepAliveTimeout_;
        } else {
          result.keepAliveTimeout_ = keepAliveTimeoutBuilder_.build();
        }
        if (uncompressedCacheSizeBuilder_ == null) {
          result.uncompressedCacheSize_ = uncompressedCacheSize_;
        } else {
          result.uncompressedCacheSize_ = uncompressedCacheSizeBuilder_.build();
        }
        if (markCacheSizeBuilder_ == null) {
          result.markCacheSize_ = markCacheSize_;
        } else {
          result.markCacheSize_ = markCacheSizeBuilder_.build();
        }
        if (maxTableSizeToDropBuilder_ == null) {
          result.maxTableSizeToDrop_ = maxTableSizeToDrop_;
        } else {
          result.maxTableSizeToDrop_ = maxTableSizeToDropBuilder_.build();
        }
        if (maxPartitionSizeToDropBuilder_ == null) {
          result.maxPartitionSizeToDrop_ = maxPartitionSizeToDrop_;
        } else {
          result.maxPartitionSizeToDrop_ = maxPartitionSizeToDropBuilder_.build();
        }
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          result.builtinDictionariesReloadInterval_ = builtinDictionariesReloadInterval_;
        } else {
          result.builtinDictionariesReloadInterval_ = builtinDictionariesReloadIntervalBuilder_.build();
        }
        result.timezone_ = timezone_;
        if (geobaseEnabledBuilder_ == null) {
          result.geobaseEnabled_ = geobaseEnabled_;
        } else {
          result.geobaseEnabled_ = geobaseEnabledBuilder_.build();
        }
        result.geobaseUri_ = geobaseUri_;
        if (queryLogRetentionSizeBuilder_ == null) {
          result.queryLogRetentionSize_ = queryLogRetentionSize_;
        } else {
          result.queryLogRetentionSize_ = queryLogRetentionSizeBuilder_.build();
        }
        if (queryLogRetentionTimeBuilder_ == null) {
          result.queryLogRetentionTime_ = queryLogRetentionTime_;
        } else {
          result.queryLogRetentionTime_ = queryLogRetentionTimeBuilder_.build();
        }
        if (queryThreadLogEnabledBuilder_ == null) {
          result.queryThreadLogEnabled_ = queryThreadLogEnabled_;
        } else {
          result.queryThreadLogEnabled_ = queryThreadLogEnabledBuilder_.build();
        }
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          result.queryThreadLogRetentionSize_ = queryThreadLogRetentionSize_;
        } else {
          result.queryThreadLogRetentionSize_ = queryThreadLogRetentionSizeBuilder_.build();
        }
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          result.queryThreadLogRetentionTime_ = queryThreadLogRetentionTime_;
        } else {
          result.queryThreadLogRetentionTime_ = queryThreadLogRetentionTimeBuilder_.build();
        }
        if (partLogRetentionSizeBuilder_ == null) {
          result.partLogRetentionSize_ = partLogRetentionSize_;
        } else {
          result.partLogRetentionSize_ = partLogRetentionSizeBuilder_.build();
        }
        if (partLogRetentionTimeBuilder_ == null) {
          result.partLogRetentionTime_ = partLogRetentionTime_;
        } else {
          result.partLogRetentionTime_ = partLogRetentionTimeBuilder_.build();
        }
        if (metricLogEnabledBuilder_ == null) {
          result.metricLogEnabled_ = metricLogEnabled_;
        } else {
          result.metricLogEnabled_ = metricLogEnabledBuilder_.build();
        }
        if (metricLogRetentionSizeBuilder_ == null) {
          result.metricLogRetentionSize_ = metricLogRetentionSize_;
        } else {
          result.metricLogRetentionSize_ = metricLogRetentionSizeBuilder_.build();
        }
        if (metricLogRetentionTimeBuilder_ == null) {
          result.metricLogRetentionTime_ = metricLogRetentionTime_;
        } else {
          result.metricLogRetentionTime_ = metricLogRetentionTimeBuilder_.build();
        }
        if (traceLogEnabledBuilder_ == null) {
          result.traceLogEnabled_ = traceLogEnabled_;
        } else {
          result.traceLogEnabled_ = traceLogEnabledBuilder_.build();
        }
        if (traceLogRetentionSizeBuilder_ == null) {
          result.traceLogRetentionSize_ = traceLogRetentionSize_;
        } else {
          result.traceLogRetentionSize_ = traceLogRetentionSizeBuilder_.build();
        }
        if (traceLogRetentionTimeBuilder_ == null) {
          result.traceLogRetentionTime_ = traceLogRetentionTime_;
        } else {
          result.traceLogRetentionTime_ = traceLogRetentionTimeBuilder_.build();
        }
        if (textLogEnabledBuilder_ == null) {
          result.textLogEnabled_ = textLogEnabled_;
        } else {
          result.textLogEnabled_ = textLogEnabledBuilder_.build();
        }
        if (textLogRetentionSizeBuilder_ == null) {
          result.textLogRetentionSize_ = textLogRetentionSize_;
        } else {
          result.textLogRetentionSize_ = textLogRetentionSizeBuilder_.build();
        }
        if (textLogRetentionTimeBuilder_ == null) {
          result.textLogRetentionTime_ = textLogRetentionTime_;
        } else {
          result.textLogRetentionTime_ = textLogRetentionTimeBuilder_.build();
        }
        result.textLogLevel_ = textLogLevel_;
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          result.opentelemetrySpanLogEnabled_ = opentelemetrySpanLogEnabled_;
        } else {
          result.opentelemetrySpanLogEnabled_ = opentelemetrySpanLogEnabledBuilder_.build();
        }
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          result.opentelemetrySpanLogRetentionSize_ = opentelemetrySpanLogRetentionSize_;
        } else {
          result.opentelemetrySpanLogRetentionSize_ = opentelemetrySpanLogRetentionSizeBuilder_.build();
        }
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          result.opentelemetrySpanLogRetentionTime_ = opentelemetrySpanLogRetentionTime_;
        } else {
          result.opentelemetrySpanLogRetentionTime_ = opentelemetrySpanLogRetentionTimeBuilder_.build();
        }
        if (queryViewsLogEnabledBuilder_ == null) {
          result.queryViewsLogEnabled_ = queryViewsLogEnabled_;
        } else {
          result.queryViewsLogEnabled_ = queryViewsLogEnabledBuilder_.build();
        }
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          result.queryViewsLogRetentionSize_ = queryViewsLogRetentionSize_;
        } else {
          result.queryViewsLogRetentionSize_ = queryViewsLogRetentionSizeBuilder_.build();
        }
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          result.queryViewsLogRetentionTime_ = queryViewsLogRetentionTime_;
        } else {
          result.queryViewsLogRetentionTime_ = queryViewsLogRetentionTimeBuilder_.build();
        }
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          result.asynchronousMetricLogEnabled_ = asynchronousMetricLogEnabled_;
        } else {
          result.asynchronousMetricLogEnabled_ = asynchronousMetricLogEnabledBuilder_.build();
        }
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          result.asynchronousMetricLogRetentionSize_ = asynchronousMetricLogRetentionSize_;
        } else {
          result.asynchronousMetricLogRetentionSize_ = asynchronousMetricLogRetentionSizeBuilder_.build();
        }
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          result.asynchronousMetricLogRetentionTime_ = asynchronousMetricLogRetentionTime_;
        } else {
          result.asynchronousMetricLogRetentionTime_ = asynchronousMetricLogRetentionTimeBuilder_.build();
        }
        if (sessionLogEnabledBuilder_ == null) {
          result.sessionLogEnabled_ = sessionLogEnabled_;
        } else {
          result.sessionLogEnabled_ = sessionLogEnabledBuilder_.build();
        }
        if (sessionLogRetentionSizeBuilder_ == null) {
          result.sessionLogRetentionSize_ = sessionLogRetentionSize_;
        } else {
          result.sessionLogRetentionSize_ = sessionLogRetentionSizeBuilder_.build();
        }
        if (sessionLogRetentionTimeBuilder_ == null) {
          result.sessionLogRetentionTime_ = sessionLogRetentionTime_;
        } else {
          result.sessionLogRetentionTime_ = sessionLogRetentionTimeBuilder_.build();
        }
        if (zookeeperLogEnabledBuilder_ == null) {
          result.zookeeperLogEnabled_ = zookeeperLogEnabled_;
        } else {
          result.zookeeperLogEnabled_ = zookeeperLogEnabledBuilder_.build();
        }
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          result.zookeeperLogRetentionSize_ = zookeeperLogRetentionSize_;
        } else {
          result.zookeeperLogRetentionSize_ = zookeeperLogRetentionSizeBuilder_.build();
        }
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          result.zookeeperLogRetentionTime_ = zookeeperLogRetentionTime_;
        } else {
          result.zookeeperLogRetentionTime_ = zookeeperLogRetentionTimeBuilder_.build();
        }
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          result.asynchronousInsertLogEnabled_ = asynchronousInsertLogEnabled_;
        } else {
          result.asynchronousInsertLogEnabled_ = asynchronousInsertLogEnabledBuilder_.build();
        }
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          result.asynchronousInsertLogRetentionSize_ = asynchronousInsertLogRetentionSize_;
        } else {
          result.asynchronousInsertLogRetentionSize_ = asynchronousInsertLogRetentionSizeBuilder_.build();
        }
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          result.asynchronousInsertLogRetentionTime_ = asynchronousInsertLogRetentionTime_;
        } else {
          result.asynchronousInsertLogRetentionTime_ = asynchronousInsertLogRetentionTimeBuilder_.build();
        }
        if (backgroundPoolSizeBuilder_ == null) {
          result.backgroundPoolSize_ = backgroundPoolSize_;
        } else {
          result.backgroundPoolSize_ = backgroundPoolSizeBuilder_.build();
        }
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          result.backgroundMergesMutationsConcurrencyRatio_ = backgroundMergesMutationsConcurrencyRatio_;
        } else {
          result.backgroundMergesMutationsConcurrencyRatio_ = backgroundMergesMutationsConcurrencyRatioBuilder_.build();
        }
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          result.backgroundSchedulePoolSize_ = backgroundSchedulePoolSize_;
        } else {
          result.backgroundSchedulePoolSize_ = backgroundSchedulePoolSizeBuilder_.build();
        }
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          result.backgroundFetchesPoolSize_ = backgroundFetchesPoolSize_;
        } else {
          result.backgroundFetchesPoolSize_ = backgroundFetchesPoolSizeBuilder_.build();
        }
        if (backgroundMovePoolSizeBuilder_ == null) {
          result.backgroundMovePoolSize_ = backgroundMovePoolSize_;
        } else {
          result.backgroundMovePoolSize_ = backgroundMovePoolSizeBuilder_.build();
        }
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          result.backgroundDistributedSchedulePoolSize_ = backgroundDistributedSchedulePoolSize_;
        } else {
          result.backgroundDistributedSchedulePoolSize_ = backgroundDistributedSchedulePoolSizeBuilder_.build();
        }
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          result.backgroundBufferFlushSchedulePoolSize_ = backgroundBufferFlushSchedulePoolSize_;
        } else {
          result.backgroundBufferFlushSchedulePoolSize_ = backgroundBufferFlushSchedulePoolSizeBuilder_.build();
        }
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          result.backgroundMessageBrokerSchedulePoolSize_ = backgroundMessageBrokerSchedulePoolSize_;
        } else {
          result.backgroundMessageBrokerSchedulePoolSize_ = backgroundMessageBrokerSchedulePoolSizeBuilder_.build();
        }
        if (backgroundCommonPoolSizeBuilder_ == null) {
          result.backgroundCommonPoolSize_ = backgroundCommonPoolSize_;
        } else {
          result.backgroundCommonPoolSize_ = backgroundCommonPoolSizeBuilder_.build();
        }
        if (defaultDatabaseBuilder_ == null) {
          result.defaultDatabase_ = defaultDatabase_;
        } else {
          result.defaultDatabase_ = defaultDatabaseBuilder_.build();
        }
        if (totalMemoryProfilerStepBuilder_ == null) {
          result.totalMemoryProfilerStep_ = totalMemoryProfilerStep_;
        } else {
          result.totalMemoryProfilerStep_ = totalMemoryProfilerStepBuilder_.build();
        }
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          result.totalMemoryTrackerSampleProbability_ = totalMemoryTrackerSampleProbability_;
        } else {
          result.totalMemoryTrackerSampleProbability_ = totalMemoryTrackerSampleProbabilityBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance()) return this;
        if (other.logLevel_ != 0) {
          setLogLevelValue(other.getLogLevelValue());
        }
        if (other.hasMergeTree()) {
          mergeMergeTree(other.getMergeTree());
        }
        if (compressionBuilder_ == null) {
          if (!other.compression_.isEmpty()) {
            if (compression_.isEmpty()) {
              compression_ = other.compression_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCompressionIsMutable();
              compression_.addAll(other.compression_);
            }
            onChanged();
          }
        } else {
          if (!other.compression_.isEmpty()) {
            if (compressionBuilder_.isEmpty()) {
              compressionBuilder_.dispose();
              compressionBuilder_ = null;
              compression_ = other.compression_;
              bitField0_ = (bitField0_ & ~0x00000001);
              compressionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCompressionFieldBuilder() : null;
            } else {
              compressionBuilder_.addAllMessages(other.compression_);
            }
          }
        }
        if (dictionariesBuilder_ == null) {
          if (!other.dictionaries_.isEmpty()) {
            if (dictionaries_.isEmpty()) {
              dictionaries_ = other.dictionaries_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDictionariesIsMutable();
              dictionaries_.addAll(other.dictionaries_);
            }
            onChanged();
          }
        } else {
          if (!other.dictionaries_.isEmpty()) {
            if (dictionariesBuilder_.isEmpty()) {
              dictionariesBuilder_.dispose();
              dictionariesBuilder_ = null;
              dictionaries_ = other.dictionaries_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dictionariesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDictionariesFieldBuilder() : null;
            } else {
              dictionariesBuilder_.addAllMessages(other.dictionaries_);
            }
          }
        }
        if (graphiteRollupBuilder_ == null) {
          if (!other.graphiteRollup_.isEmpty()) {
            if (graphiteRollup_.isEmpty()) {
              graphiteRollup_ = other.graphiteRollup_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGraphiteRollupIsMutable();
              graphiteRollup_.addAll(other.graphiteRollup_);
            }
            onChanged();
          }
        } else {
          if (!other.graphiteRollup_.isEmpty()) {
            if (graphiteRollupBuilder_.isEmpty()) {
              graphiteRollupBuilder_.dispose();
              graphiteRollupBuilder_ = null;
              graphiteRollup_ = other.graphiteRollup_;
              bitField0_ = (bitField0_ & ~0x00000004);
              graphiteRollupBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGraphiteRollupFieldBuilder() : null;
            } else {
              graphiteRollupBuilder_.addAllMessages(other.graphiteRollup_);
            }
          }
        }
        if (other.hasKafka()) {
          mergeKafka(other.getKafka());
        }
        if (kafkaTopicsBuilder_ == null) {
          if (!other.kafkaTopics_.isEmpty()) {
            if (kafkaTopics_.isEmpty()) {
              kafkaTopics_ = other.kafkaTopics_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureKafkaTopicsIsMutable();
              kafkaTopics_.addAll(other.kafkaTopics_);
            }
            onChanged();
          }
        } else {
          if (!other.kafkaTopics_.isEmpty()) {
            if (kafkaTopicsBuilder_.isEmpty()) {
              kafkaTopicsBuilder_.dispose();
              kafkaTopicsBuilder_ = null;
              kafkaTopics_ = other.kafkaTopics_;
              bitField0_ = (bitField0_ & ~0x00000008);
              kafkaTopicsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKafkaTopicsFieldBuilder() : null;
            } else {
              kafkaTopicsBuilder_.addAllMessages(other.kafkaTopics_);
            }
          }
        }
        if (other.hasRabbitmq()) {
          mergeRabbitmq(other.getRabbitmq());
        }
        if (other.hasMaxConnections()) {
          mergeMaxConnections(other.getMaxConnections());
        }
        if (other.hasMaxConcurrentQueries()) {
          mergeMaxConcurrentQueries(other.getMaxConcurrentQueries());
        }
        if (other.hasKeepAliveTimeout()) {
          mergeKeepAliveTimeout(other.getKeepAliveTimeout());
        }
        if (other.hasUncompressedCacheSize()) {
          mergeUncompressedCacheSize(other.getUncompressedCacheSize());
        }
        if (other.hasMarkCacheSize()) {
          mergeMarkCacheSize(other.getMarkCacheSize());
        }
        if (other.hasMaxTableSizeToDrop()) {
          mergeMaxTableSizeToDrop(other.getMaxTableSizeToDrop());
        }
        if (other.hasMaxPartitionSizeToDrop()) {
          mergeMaxPartitionSizeToDrop(other.getMaxPartitionSizeToDrop());
        }
        if (other.hasBuiltinDictionariesReloadInterval()) {
          mergeBuiltinDictionariesReloadInterval(other.getBuiltinDictionariesReloadInterval());
        }
        if (!other.getTimezone().isEmpty()) {
          timezone_ = other.timezone_;
          onChanged();
        }
        if (other.hasGeobaseEnabled()) {
          mergeGeobaseEnabled(other.getGeobaseEnabled());
        }
        if (!other.getGeobaseUri().isEmpty()) {
          geobaseUri_ = other.geobaseUri_;
          onChanged();
        }
        if (other.hasQueryLogRetentionSize()) {
          mergeQueryLogRetentionSize(other.getQueryLogRetentionSize());
        }
        if (other.hasQueryLogRetentionTime()) {
          mergeQueryLogRetentionTime(other.getQueryLogRetentionTime());
        }
        if (other.hasQueryThreadLogEnabled()) {
          mergeQueryThreadLogEnabled(other.getQueryThreadLogEnabled());
        }
        if (other.hasQueryThreadLogRetentionSize()) {
          mergeQueryThreadLogRetentionSize(other.getQueryThreadLogRetentionSize());
        }
        if (other.hasQueryThreadLogRetentionTime()) {
          mergeQueryThreadLogRetentionTime(other.getQueryThreadLogRetentionTime());
        }
        if (other.hasPartLogRetentionSize()) {
          mergePartLogRetentionSize(other.getPartLogRetentionSize());
        }
        if (other.hasPartLogRetentionTime()) {
          mergePartLogRetentionTime(other.getPartLogRetentionTime());
        }
        if (other.hasMetricLogEnabled()) {
          mergeMetricLogEnabled(other.getMetricLogEnabled());
        }
        if (other.hasMetricLogRetentionSize()) {
          mergeMetricLogRetentionSize(other.getMetricLogRetentionSize());
        }
        if (other.hasMetricLogRetentionTime()) {
          mergeMetricLogRetentionTime(other.getMetricLogRetentionTime());
        }
        if (other.hasTraceLogEnabled()) {
          mergeTraceLogEnabled(other.getTraceLogEnabled());
        }
        if (other.hasTraceLogRetentionSize()) {
          mergeTraceLogRetentionSize(other.getTraceLogRetentionSize());
        }
        if (other.hasTraceLogRetentionTime()) {
          mergeTraceLogRetentionTime(other.getTraceLogRetentionTime());
        }
        if (other.hasTextLogEnabled()) {
          mergeTextLogEnabled(other.getTextLogEnabled());
        }
        if (other.hasTextLogRetentionSize()) {
          mergeTextLogRetentionSize(other.getTextLogRetentionSize());
        }
        if (other.hasTextLogRetentionTime()) {
          mergeTextLogRetentionTime(other.getTextLogRetentionTime());
        }
        if (other.textLogLevel_ != 0) {
          setTextLogLevelValue(other.getTextLogLevelValue());
        }
        if (other.hasOpentelemetrySpanLogEnabled()) {
          mergeOpentelemetrySpanLogEnabled(other.getOpentelemetrySpanLogEnabled());
        }
        if (other.hasOpentelemetrySpanLogRetentionSize()) {
          mergeOpentelemetrySpanLogRetentionSize(other.getOpentelemetrySpanLogRetentionSize());
        }
        if (other.hasOpentelemetrySpanLogRetentionTime()) {
          mergeOpentelemetrySpanLogRetentionTime(other.getOpentelemetrySpanLogRetentionTime());
        }
        if (other.hasQueryViewsLogEnabled()) {
          mergeQueryViewsLogEnabled(other.getQueryViewsLogEnabled());
        }
        if (other.hasQueryViewsLogRetentionSize()) {
          mergeQueryViewsLogRetentionSize(other.getQueryViewsLogRetentionSize());
        }
        if (other.hasQueryViewsLogRetentionTime()) {
          mergeQueryViewsLogRetentionTime(other.getQueryViewsLogRetentionTime());
        }
        if (other.hasAsynchronousMetricLogEnabled()) {
          mergeAsynchronousMetricLogEnabled(other.getAsynchronousMetricLogEnabled());
        }
        if (other.hasAsynchronousMetricLogRetentionSize()) {
          mergeAsynchronousMetricLogRetentionSize(other.getAsynchronousMetricLogRetentionSize());
        }
        if (other.hasAsynchronousMetricLogRetentionTime()) {
          mergeAsynchronousMetricLogRetentionTime(other.getAsynchronousMetricLogRetentionTime());
        }
        if (other.hasSessionLogEnabled()) {
          mergeSessionLogEnabled(other.getSessionLogEnabled());
        }
        if (other.hasSessionLogRetentionSize()) {
          mergeSessionLogRetentionSize(other.getSessionLogRetentionSize());
        }
        if (other.hasSessionLogRetentionTime()) {
          mergeSessionLogRetentionTime(other.getSessionLogRetentionTime());
        }
        if (other.hasZookeeperLogEnabled()) {
          mergeZookeeperLogEnabled(other.getZookeeperLogEnabled());
        }
        if (other.hasZookeeperLogRetentionSize()) {
          mergeZookeeperLogRetentionSize(other.getZookeeperLogRetentionSize());
        }
        if (other.hasZookeeperLogRetentionTime()) {
          mergeZookeeperLogRetentionTime(other.getZookeeperLogRetentionTime());
        }
        if (other.hasAsynchronousInsertLogEnabled()) {
          mergeAsynchronousInsertLogEnabled(other.getAsynchronousInsertLogEnabled());
        }
        if (other.hasAsynchronousInsertLogRetentionSize()) {
          mergeAsynchronousInsertLogRetentionSize(other.getAsynchronousInsertLogRetentionSize());
        }
        if (other.hasAsynchronousInsertLogRetentionTime()) {
          mergeAsynchronousInsertLogRetentionTime(other.getAsynchronousInsertLogRetentionTime());
        }
        if (other.hasBackgroundPoolSize()) {
          mergeBackgroundPoolSize(other.getBackgroundPoolSize());
        }
        if (other.hasBackgroundMergesMutationsConcurrencyRatio()) {
          mergeBackgroundMergesMutationsConcurrencyRatio(other.getBackgroundMergesMutationsConcurrencyRatio());
        }
        if (other.hasBackgroundSchedulePoolSize()) {
          mergeBackgroundSchedulePoolSize(other.getBackgroundSchedulePoolSize());
        }
        if (other.hasBackgroundFetchesPoolSize()) {
          mergeBackgroundFetchesPoolSize(other.getBackgroundFetchesPoolSize());
        }
        if (other.hasBackgroundMovePoolSize()) {
          mergeBackgroundMovePoolSize(other.getBackgroundMovePoolSize());
        }
        if (other.hasBackgroundDistributedSchedulePoolSize()) {
          mergeBackgroundDistributedSchedulePoolSize(other.getBackgroundDistributedSchedulePoolSize());
        }
        if (other.hasBackgroundBufferFlushSchedulePoolSize()) {
          mergeBackgroundBufferFlushSchedulePoolSize(other.getBackgroundBufferFlushSchedulePoolSize());
        }
        if (other.hasBackgroundMessageBrokerSchedulePoolSize()) {
          mergeBackgroundMessageBrokerSchedulePoolSize(other.getBackgroundMessageBrokerSchedulePoolSize());
        }
        if (other.hasBackgroundCommonPoolSize()) {
          mergeBackgroundCommonPoolSize(other.getBackgroundCommonPoolSize());
        }
        if (other.hasDefaultDatabase()) {
          mergeDefaultDatabase(other.getDefaultDatabase());
        }
        if (other.hasTotalMemoryProfilerStep()) {
          mergeTotalMemoryProfilerStep(other.getTotalMemoryProfilerStep());
        }
        if (other.hasTotalMemoryTrackerSampleProbability()) {
          mergeTotalMemoryTrackerSampleProbability(other.getTotalMemoryTrackerSampleProbability());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int logLevel_ = 0;
      /**
       * <pre>
       * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
       * @return The enum numeric value on the wire for logLevel.
       */
      @java.lang.Override public int getLogLevelValue() {
        return logLevel_;
      }
      /**
       * <pre>
       * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
       * @param value The enum numeric value on the wire for logLevel to set.
       * @return This builder for chaining.
       */
      public Builder setLogLevelValue(int value) {
        
        logLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
       * @return The logLevel.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel getLogLevel() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.valueOf(logLevel_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
       * @param value The logLevel to set.
       * @return This builder for chaining.
       */
      public Builder setLogLevel(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        logLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for the ClickHouse cluster. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel log_level = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogLevel() {
        
        logLevel_ = 0;
        onChanged();
        return this;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree mergeTree_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder> mergeTreeBuilder_;
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       * @return Whether the mergeTree field is set.
       */
      public boolean hasMergeTree() {
        return mergeTreeBuilder_ != null || mergeTree_ != null;
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       * @return The mergeTree.
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree getMergeTree() {
        if (mergeTreeBuilder_ == null) {
          return mergeTree_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.getDefaultInstance() : mergeTree_;
        } else {
          return mergeTreeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      public Builder setMergeTree(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree value) {
        if (mergeTreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mergeTree_ = value;
          onChanged();
        } else {
          mergeTreeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      public Builder setMergeTree(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder builderForValue) {
        if (mergeTreeBuilder_ == null) {
          mergeTree_ = builderForValue.build();
          onChanged();
        } else {
          mergeTreeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      public Builder mergeMergeTree(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree value) {
        if (mergeTreeBuilder_ == null) {
          if (mergeTree_ != null) {
            mergeTree_ =
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.newBuilder(mergeTree_).mergeFrom(value).buildPartial();
          } else {
            mergeTree_ = value;
          }
          onChanged();
        } else {
          mergeTreeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      public Builder clearMergeTree() {
        if (mergeTreeBuilder_ == null) {
          mergeTree_ = null;
          onChanged();
        } else {
          mergeTree_ = null;
          mergeTreeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder getMergeTreeBuilder() {
        
        onChanged();
        return getMergeTreeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder getMergeTreeOrBuilder() {
        if (mergeTreeBuilder_ != null) {
          return mergeTreeBuilder_.getMessageOrBuilder();
        } else {
          return mergeTree_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.getDefaultInstance() : mergeTree_;
        }
      }
      /**
       * <pre>
       * Settings for the MergeTree engine.
       * See description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#merge_tree).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.MergeTree merge_tree = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder> 
          getMergeTreeFieldBuilder() {
        if (mergeTreeBuilder_ == null) {
          mergeTreeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTree.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.MergeTreeOrBuilder>(
                  getMergeTree(),
                  getParentForChildren(),
                  isClean());
          mergeTree_ = null;
        }
        return mergeTreeBuilder_;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression> compression_ =
        java.util.Collections.emptyList();
      private void ensureCompressionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          compression_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression>(compression_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder> compressionBuilder_;

      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression> getCompressionList() {
        if (compressionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(compression_);
        } else {
          return compressionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public int getCompressionCount() {
        if (compressionBuilder_ == null) {
          return compression_.size();
        } else {
          return compressionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression getCompression(int index) {
        if (compressionBuilder_ == null) {
          return compression_.get(index);
        } else {
          return compressionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder setCompression(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression value) {
        if (compressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompressionIsMutable();
          compression_.set(index, value);
          onChanged();
        } else {
          compressionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder setCompression(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder builderForValue) {
        if (compressionBuilder_ == null) {
          ensureCompressionIsMutable();
          compression_.set(index, builderForValue.build());
          onChanged();
        } else {
          compressionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder addCompression(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression value) {
        if (compressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompressionIsMutable();
          compression_.add(value);
          onChanged();
        } else {
          compressionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder addCompression(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression value) {
        if (compressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompressionIsMutable();
          compression_.add(index, value);
          onChanged();
        } else {
          compressionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder addCompression(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder builderForValue) {
        if (compressionBuilder_ == null) {
          ensureCompressionIsMutable();
          compression_.add(builderForValue.build());
          onChanged();
        } else {
          compressionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder addCompression(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder builderForValue) {
        if (compressionBuilder_ == null) {
          ensureCompressionIsMutable();
          compression_.add(index, builderForValue.build());
          onChanged();
        } else {
          compressionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder addAllCompression(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression> values) {
        if (compressionBuilder_ == null) {
          ensureCompressionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, compression_);
          onChanged();
        } else {
          compressionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder clearCompression() {
        if (compressionBuilder_ == null) {
          compression_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          compressionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public Builder removeCompression(int index) {
        if (compressionBuilder_ == null) {
          ensureCompressionIsMutable();
          compression_.remove(index);
          onChanged();
        } else {
          compressionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder getCompressionBuilder(
          int index) {
        return getCompressionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder getCompressionOrBuilder(
          int index) {
        if (compressionBuilder_ == null) {
          return compression_.get(index);  } else {
          return compressionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder> 
           getCompressionOrBuilderList() {
        if (compressionBuilder_ != null) {
          return compressionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(compression_);
        }
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder addCompressionBuilder() {
        return getCompressionFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.getDefaultInstance());
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder addCompressionBuilder(
          int index) {
        return getCompressionFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.getDefaultInstance());
      }
      /**
       * <pre>
       * Compression settings for the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#compression).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Compression compression = 3;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder> 
           getCompressionBuilderList() {
        return getCompressionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder> 
          getCompressionFieldBuilder() {
        if (compressionBuilder_ == null) {
          compressionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Compression.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.CompressionOrBuilder>(
                  compression_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          compression_ = null;
        }
        return compressionBuilder_;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary> dictionaries_ =
        java.util.Collections.emptyList();
      private void ensureDictionariesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dictionaries_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary>(dictionaries_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder> dictionariesBuilder_;

      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary> getDictionariesList() {
        if (dictionariesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dictionaries_);
        } else {
          return dictionariesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public int getDictionariesCount() {
        if (dictionariesBuilder_ == null) {
          return dictionaries_.size();
        } else {
          return dictionariesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary getDictionaries(int index) {
        if (dictionariesBuilder_ == null) {
          return dictionaries_.get(index);
        } else {
          return dictionariesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder setDictionaries(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary value) {
        if (dictionariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictionariesIsMutable();
          dictionaries_.set(index, value);
          onChanged();
        } else {
          dictionariesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder setDictionaries(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder builderForValue) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.set(index, builderForValue.build());
          onChanged();
        } else {
          dictionariesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder addDictionaries(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary value) {
        if (dictionariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictionariesIsMutable();
          dictionaries_.add(value);
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder addDictionaries(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary value) {
        if (dictionariesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDictionariesIsMutable();
          dictionaries_.add(index, value);
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder addDictionaries(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder builderForValue) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.add(builderForValue.build());
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder addDictionaries(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder builderForValue) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.add(index, builderForValue.build());
          onChanged();
        } else {
          dictionariesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder addAllDictionaries(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary> values) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dictionaries_);
          onChanged();
        } else {
          dictionariesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder clearDictionaries() {
        if (dictionariesBuilder_ == null) {
          dictionaries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dictionariesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public Builder removeDictionaries(int index) {
        if (dictionariesBuilder_ == null) {
          ensureDictionariesIsMutable();
          dictionaries_.remove(index);
          onChanged();
        } else {
          dictionariesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder getDictionariesBuilder(
          int index) {
        return getDictionariesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder getDictionariesOrBuilder(
          int index) {
        if (dictionariesBuilder_ == null) {
          return dictionaries_.get(index);  } else {
          return dictionariesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder> 
           getDictionariesOrBuilderList() {
        if (dictionariesBuilder_ != null) {
          return dictionariesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dictionaries_);
        }
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder addDictionariesBuilder() {
        return getDictionariesFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.getDefaultInstance());
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder addDictionariesBuilder(
          int index) {
        return getDictionariesFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.getDefaultInstance());
      }
      /**
       * <pre>
       * Configuration of external dictionaries to be used by the ClickHouse cluster.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/query_language/dicts/external_dicts/).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.ExternalDictionary dictionaries = 4;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder> 
           getDictionariesBuilderList() {
        return getDictionariesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder> 
          getDictionariesFieldBuilder() {
        if (dictionariesBuilder_ == null) {
          dictionariesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionary.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.ExternalDictionaryOrBuilder>(
                  dictionaries_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          dictionaries_ = null;
        }
        return dictionariesBuilder_;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup> graphiteRollup_ =
        java.util.Collections.emptyList();
      private void ensureGraphiteRollupIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          graphiteRollup_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup>(graphiteRollup_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder> graphiteRollupBuilder_;

      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup> getGraphiteRollupList() {
        if (graphiteRollupBuilder_ == null) {
          return java.util.Collections.unmodifiableList(graphiteRollup_);
        } else {
          return graphiteRollupBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public int getGraphiteRollupCount() {
        if (graphiteRollupBuilder_ == null) {
          return graphiteRollup_.size();
        } else {
          return graphiteRollupBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup getGraphiteRollup(int index) {
        if (graphiteRollupBuilder_ == null) {
          return graphiteRollup_.get(index);
        } else {
          return graphiteRollupBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder setGraphiteRollup(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup value) {
        if (graphiteRollupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.set(index, value);
          onChanged();
        } else {
          graphiteRollupBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder setGraphiteRollup(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder builderForValue) {
        if (graphiteRollupBuilder_ == null) {
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.set(index, builderForValue.build());
          onChanged();
        } else {
          graphiteRollupBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder addGraphiteRollup(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup value) {
        if (graphiteRollupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.add(value);
          onChanged();
        } else {
          graphiteRollupBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder addGraphiteRollup(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup value) {
        if (graphiteRollupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.add(index, value);
          onChanged();
        } else {
          graphiteRollupBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder addGraphiteRollup(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder builderForValue) {
        if (graphiteRollupBuilder_ == null) {
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.add(builderForValue.build());
          onChanged();
        } else {
          graphiteRollupBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder addGraphiteRollup(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder builderForValue) {
        if (graphiteRollupBuilder_ == null) {
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.add(index, builderForValue.build());
          onChanged();
        } else {
          graphiteRollupBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder addAllGraphiteRollup(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup> values) {
        if (graphiteRollupBuilder_ == null) {
          ensureGraphiteRollupIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphiteRollup_);
          onChanged();
        } else {
          graphiteRollupBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder clearGraphiteRollup() {
        if (graphiteRollupBuilder_ == null) {
          graphiteRollup_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          graphiteRollupBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public Builder removeGraphiteRollup(int index) {
        if (graphiteRollupBuilder_ == null) {
          ensureGraphiteRollupIsMutable();
          graphiteRollup_.remove(index);
          onChanged();
        } else {
          graphiteRollupBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder getGraphiteRollupBuilder(
          int index) {
        return getGraphiteRollupFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder getGraphiteRollupOrBuilder(
          int index) {
        if (graphiteRollupBuilder_ == null) {
          return graphiteRollup_.get(index);  } else {
          return graphiteRollupBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder> 
           getGraphiteRollupOrBuilderList() {
        if (graphiteRollupBuilder_ != null) {
          return graphiteRollupBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(graphiteRollup_);
        }
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder addGraphiteRollupBuilder() {
        return getGraphiteRollupFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.getDefaultInstance());
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder addGraphiteRollupBuilder(
          int index) {
        return getGraphiteRollupFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.getDefaultInstance());
      }
      /**
       * <pre>
       * Settings for thinning Graphite data.
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server_settings/settings/#server_settings-graphite_rollup).
       * </pre>
       *
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.GraphiteRollup graphite_rollup = 5;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder> 
           getGraphiteRollupBuilderList() {
        return getGraphiteRollupFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder> 
          getGraphiteRollupFieldBuilder() {
        if (graphiteRollupBuilder_ == null) {
          graphiteRollupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollup.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.GraphiteRollupOrBuilder>(
                  graphiteRollup_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          graphiteRollup_ = null;
        }
        return graphiteRollupBuilder_;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka kafka_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder> kafkaBuilder_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       * @return Whether the kafka field is set.
       */
      public boolean hasKafka() {
        return kafkaBuilder_ != null || kafka_ != null;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       * @return The kafka.
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka getKafka() {
        if (kafkaBuilder_ == null) {
          return kafka_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance() : kafka_;
        } else {
          return kafkaBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      public Builder setKafka(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka value) {
        if (kafkaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          kafka_ = value;
          onChanged();
        } else {
          kafkaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      public Builder setKafka(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder builderForValue) {
        if (kafkaBuilder_ == null) {
          kafka_ = builderForValue.build();
          onChanged();
        } else {
          kafkaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      public Builder mergeKafka(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka value) {
        if (kafkaBuilder_ == null) {
          if (kafka_ != null) {
            kafka_ =
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.newBuilder(kafka_).mergeFrom(value).buildPartial();
          } else {
            kafka_ = value;
          }
          onChanged();
        } else {
          kafkaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      public Builder clearKafka() {
        if (kafkaBuilder_ == null) {
          kafka_ = null;
          onChanged();
        } else {
          kafka_ = null;
          kafkaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder getKafkaBuilder() {
        
        onChanged();
        return getKafkaFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder getKafkaOrBuilder() {
        if (kafkaBuilder_ != null) {
          return kafkaBuilder_.getMessageOrBuilder();
        } else {
          return kafka_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.getDefaultInstance() : kafka_;
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Kafka kafka = 35;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder> 
          getKafkaFieldBuilder() {
        if (kafkaBuilder_ == null) {
          kafkaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Kafka.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaOrBuilder>(
                  getKafka(),
                  getParentForChildren(),
                  isClean());
          kafka_ = null;
        }
        return kafkaBuilder_;
      }

      private java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic> kafkaTopics_ =
        java.util.Collections.emptyList();
      private void ensureKafkaTopicsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          kafkaTopics_ = new java.util.ArrayList<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic>(kafkaTopics_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder> kafkaTopicsBuilder_;

      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic> getKafkaTopicsList() {
        if (kafkaTopicsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kafkaTopics_);
        } else {
          return kafkaTopicsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public int getKafkaTopicsCount() {
        if (kafkaTopicsBuilder_ == null) {
          return kafkaTopics_.size();
        } else {
          return kafkaTopicsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic getKafkaTopics(int index) {
        if (kafkaTopicsBuilder_ == null) {
          return kafkaTopics_.get(index);
        } else {
          return kafkaTopicsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder setKafkaTopics(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic value) {
        if (kafkaTopicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.set(index, value);
          onChanged();
        } else {
          kafkaTopicsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder setKafkaTopics(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder builderForValue) {
        if (kafkaTopicsBuilder_ == null) {
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.set(index, builderForValue.build());
          onChanged();
        } else {
          kafkaTopicsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder addKafkaTopics(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic value) {
        if (kafkaTopicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.add(value);
          onChanged();
        } else {
          kafkaTopicsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder addKafkaTopics(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic value) {
        if (kafkaTopicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.add(index, value);
          onChanged();
        } else {
          kafkaTopicsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder addKafkaTopics(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder builderForValue) {
        if (kafkaTopicsBuilder_ == null) {
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.add(builderForValue.build());
          onChanged();
        } else {
          kafkaTopicsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder addKafkaTopics(
          int index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder builderForValue) {
        if (kafkaTopicsBuilder_ == null) {
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.add(index, builderForValue.build());
          onChanged();
        } else {
          kafkaTopicsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder addAllKafkaTopics(
          java.lang.Iterable<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic> values) {
        if (kafkaTopicsBuilder_ == null) {
          ensureKafkaTopicsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kafkaTopics_);
          onChanged();
        } else {
          kafkaTopicsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder clearKafkaTopics() {
        if (kafkaTopicsBuilder_ == null) {
          kafkaTopics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          kafkaTopicsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public Builder removeKafkaTopics(int index) {
        if (kafkaTopicsBuilder_ == null) {
          ensureKafkaTopicsIsMutable();
          kafkaTopics_.remove(index);
          onChanged();
        } else {
          kafkaTopicsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder getKafkaTopicsBuilder(
          int index) {
        return getKafkaTopicsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder getKafkaTopicsOrBuilder(
          int index) {
        if (kafkaTopicsBuilder_ == null) {
          return kafkaTopics_.get(index);  } else {
          return kafkaTopicsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public java.util.List<? extends yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder> 
           getKafkaTopicsOrBuilderList() {
        if (kafkaTopicsBuilder_ != null) {
          return kafkaTopicsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kafkaTopics_);
        }
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder addKafkaTopicsBuilder() {
        return getKafkaTopicsFieldBuilder().addBuilder(
            yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.getDefaultInstance());
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder addKafkaTopicsBuilder(
          int index) {
        return getKafkaTopicsFieldBuilder().addBuilder(
            index, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.getDefaultInstance());
      }
      /**
       * <code>repeated .yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.KafkaTopic kafka_topics = 36;</code>
       */
      public java.util.List<yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder> 
           getKafkaTopicsBuilderList() {
        return getKafkaTopicsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder> 
          getKafkaTopicsFieldBuilder() {
        if (kafkaTopicsBuilder_ == null) {
          kafkaTopicsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopic.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.KafkaTopicOrBuilder>(
                  kafkaTopics_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          kafkaTopics_ = null;
        }
        return kafkaTopicsBuilder_;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq rabbitmq_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder> rabbitmqBuilder_;
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       * @return Whether the rabbitmq field is set.
       */
      public boolean hasRabbitmq() {
        return rabbitmqBuilder_ != null || rabbitmq_ != null;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       * @return The rabbitmq.
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq getRabbitmq() {
        if (rabbitmqBuilder_ == null) {
          return rabbitmq_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.getDefaultInstance() : rabbitmq_;
        } else {
          return rabbitmqBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      public Builder setRabbitmq(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq value) {
        if (rabbitmqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rabbitmq_ = value;
          onChanged();
        } else {
          rabbitmqBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      public Builder setRabbitmq(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder builderForValue) {
        if (rabbitmqBuilder_ == null) {
          rabbitmq_ = builderForValue.build();
          onChanged();
        } else {
          rabbitmqBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      public Builder mergeRabbitmq(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq value) {
        if (rabbitmqBuilder_ == null) {
          if (rabbitmq_ != null) {
            rabbitmq_ =
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.newBuilder(rabbitmq_).mergeFrom(value).buildPartial();
          } else {
            rabbitmq_ = value;
          }
          onChanged();
        } else {
          rabbitmqBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      public Builder clearRabbitmq() {
        if (rabbitmqBuilder_ == null) {
          rabbitmq_ = null;
          onChanged();
        } else {
          rabbitmq_ = null;
          rabbitmqBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder getRabbitmqBuilder() {
        
        onChanged();
        return getRabbitmqFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder getRabbitmqOrBuilder() {
        if (rabbitmqBuilder_ != null) {
          return rabbitmqBuilder_.getMessageOrBuilder();
        } else {
          return rabbitmq_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.getDefaultInstance() : rabbitmq_;
        }
      }
      /**
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.Rabbitmq rabbitmq = 37;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder> 
          getRabbitmqFieldBuilder() {
        if (rabbitmqBuilder_ == null) {
          rabbitmqBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Rabbitmq.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.RabbitmqOrBuilder>(
                  getRabbitmq(),
                  getParentForChildren(),
                  isClean());
          rabbitmq_ = null;
        }
        return rabbitmqBuilder_;
      }

      private com.google.protobuf.Int64Value maxConnections_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConnectionsBuilder_;
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       * @return Whether the maxConnections field is set.
       */
      public boolean hasMaxConnections() {
        return maxConnectionsBuilder_ != null || maxConnections_ != null;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       * @return The maxConnections.
       */
      public com.google.protobuf.Int64Value getMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          return maxConnections_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        } else {
          return maxConnectionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder setMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConnections_ = value;
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder setMaxConnections(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = builderForValue.build();
          onChanged();
        } else {
          maxConnectionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder mergeMaxConnections(com.google.protobuf.Int64Value value) {
        if (maxConnectionsBuilder_ == null) {
          if (maxConnections_ != null) {
            maxConnections_ =
              com.google.protobuf.Int64Value.newBuilder(maxConnections_).mergeFrom(value).buildPartial();
          } else {
            maxConnections_ = value;
          }
          onChanged();
        } else {
          maxConnectionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder clearMaxConnections() {
        if (maxConnectionsBuilder_ == null) {
          maxConnections_ = null;
          onChanged();
        } else {
          maxConnections_ = null;
          maxConnectionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConnectionsBuilder() {
        
        onChanged();
        return getMaxConnectionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConnectionsOrBuilder() {
        if (maxConnectionsBuilder_ != null) {
          return maxConnectionsBuilder_.getMessageOrBuilder();
        } else {
          return maxConnections_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConnections_;
        }
      }
      /**
       * <pre>
       * Maximum number of inbound connections.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_connections = 6 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConnectionsFieldBuilder() {
        if (maxConnectionsBuilder_ == null) {
          maxConnectionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConnections(),
                  getParentForChildren(),
                  isClean());
          maxConnections_ = null;
        }
        return maxConnectionsBuilder_;
      }

      private com.google.protobuf.Int64Value maxConcurrentQueries_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxConcurrentQueriesBuilder_;
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       * @return Whether the maxConcurrentQueries field is set.
       */
      public boolean hasMaxConcurrentQueries() {
        return maxConcurrentQueriesBuilder_ != null || maxConcurrentQueries_ != null;
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       * @return The maxConcurrentQueries.
       */
      public com.google.protobuf.Int64Value getMaxConcurrentQueries() {
        if (maxConcurrentQueriesBuilder_ == null) {
          return maxConcurrentQueries_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxConcurrentQueries_;
        } else {
          return maxConcurrentQueriesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder setMaxConcurrentQueries(com.google.protobuf.Int64Value value) {
        if (maxConcurrentQueriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConcurrentQueries_ = value;
          onChanged();
        } else {
          maxConcurrentQueriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder setMaxConcurrentQueries(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxConcurrentQueriesBuilder_ == null) {
          maxConcurrentQueries_ = builderForValue.build();
          onChanged();
        } else {
          maxConcurrentQueriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder mergeMaxConcurrentQueries(com.google.protobuf.Int64Value value) {
        if (maxConcurrentQueriesBuilder_ == null) {
          if (maxConcurrentQueries_ != null) {
            maxConcurrentQueries_ =
              com.google.protobuf.Int64Value.newBuilder(maxConcurrentQueries_).mergeFrom(value).buildPartial();
          } else {
            maxConcurrentQueries_ = value;
          }
          onChanged();
        } else {
          maxConcurrentQueriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public Builder clearMaxConcurrentQueries() {
        if (maxConcurrentQueriesBuilder_ == null) {
          maxConcurrentQueries_ = null;
          onChanged();
        } else {
          maxConcurrentQueries_ = null;
          maxConcurrentQueriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxConcurrentQueriesBuilder() {
        
        onChanged();
        return getMaxConcurrentQueriesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxConcurrentQueriesOrBuilder() {
        if (maxConcurrentQueriesBuilder_ != null) {
          return maxConcurrentQueriesBuilder_.getMessageOrBuilder();
        } else {
          return maxConcurrentQueries_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxConcurrentQueries_;
        }
      }
      /**
       * <pre>
       * Maximum number of simultaneously processed requests.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_concurrent_queries = 7 [(.yandex.cloud.value) = "&gt;=10"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxConcurrentQueriesFieldBuilder() {
        if (maxConcurrentQueriesBuilder_ == null) {
          maxConcurrentQueriesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxConcurrentQueries(),
                  getParentForChildren(),
                  isClean());
          maxConcurrentQueries_ = null;
        }
        return maxConcurrentQueriesBuilder_;
      }

      private com.google.protobuf.Int64Value keepAliveTimeout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> keepAliveTimeoutBuilder_;
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       * @return Whether the keepAliveTimeout field is set.
       */
      public boolean hasKeepAliveTimeout() {
        return keepAliveTimeoutBuilder_ != null || keepAliveTimeout_ != null;
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       * @return The keepAliveTimeout.
       */
      public com.google.protobuf.Int64Value getKeepAliveTimeout() {
        if (keepAliveTimeoutBuilder_ == null) {
          return keepAliveTimeout_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : keepAliveTimeout_;
        } else {
          return keepAliveTimeoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      public Builder setKeepAliveTimeout(com.google.protobuf.Int64Value value) {
        if (keepAliveTimeoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keepAliveTimeout_ = value;
          onChanged();
        } else {
          keepAliveTimeoutBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      public Builder setKeepAliveTimeout(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (keepAliveTimeoutBuilder_ == null) {
          keepAliveTimeout_ = builderForValue.build();
          onChanged();
        } else {
          keepAliveTimeoutBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      public Builder mergeKeepAliveTimeout(com.google.protobuf.Int64Value value) {
        if (keepAliveTimeoutBuilder_ == null) {
          if (keepAliveTimeout_ != null) {
            keepAliveTimeout_ =
              com.google.protobuf.Int64Value.newBuilder(keepAliveTimeout_).mergeFrom(value).buildPartial();
          } else {
            keepAliveTimeout_ = value;
          }
          onChanged();
        } else {
          keepAliveTimeoutBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      public Builder clearKeepAliveTimeout() {
        if (keepAliveTimeoutBuilder_ == null) {
          keepAliveTimeout_ = null;
          onChanged();
        } else {
          keepAliveTimeout_ = null;
          keepAliveTimeoutBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      public com.google.protobuf.Int64Value.Builder getKeepAliveTimeoutBuilder() {
        
        onChanged();
        return getKeepAliveTimeoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getKeepAliveTimeoutOrBuilder() {
        if (keepAliveTimeoutBuilder_ != null) {
          return keepAliveTimeoutBuilder_.getMessageOrBuilder();
        } else {
          return keepAliveTimeout_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : keepAliveTimeout_;
        }
      }
      /**
       * <pre>
       * Number of milliseconds that ClickHouse waits for incoming requests before closing the connection.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value keep_alive_timeout = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getKeepAliveTimeoutFieldBuilder() {
        if (keepAliveTimeoutBuilder_ == null) {
          keepAliveTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getKeepAliveTimeout(),
                  getParentForChildren(),
                  isClean());
          keepAliveTimeout_ = null;
        }
        return keepAliveTimeoutBuilder_;
      }

      private com.google.protobuf.Int64Value uncompressedCacheSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> uncompressedCacheSizeBuilder_;
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       * @return Whether the uncompressedCacheSize field is set.
       */
      public boolean hasUncompressedCacheSize() {
        return uncompressedCacheSizeBuilder_ != null || uncompressedCacheSize_ != null;
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       * @return The uncompressedCacheSize.
       */
      public com.google.protobuf.Int64Value getUncompressedCacheSize() {
        if (uncompressedCacheSizeBuilder_ == null) {
          return uncompressedCacheSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : uncompressedCacheSize_;
        } else {
          return uncompressedCacheSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      public Builder setUncompressedCacheSize(com.google.protobuf.Int64Value value) {
        if (uncompressedCacheSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uncompressedCacheSize_ = value;
          onChanged();
        } else {
          uncompressedCacheSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      public Builder setUncompressedCacheSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (uncompressedCacheSizeBuilder_ == null) {
          uncompressedCacheSize_ = builderForValue.build();
          onChanged();
        } else {
          uncompressedCacheSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      public Builder mergeUncompressedCacheSize(com.google.protobuf.Int64Value value) {
        if (uncompressedCacheSizeBuilder_ == null) {
          if (uncompressedCacheSize_ != null) {
            uncompressedCacheSize_ =
              com.google.protobuf.Int64Value.newBuilder(uncompressedCacheSize_).mergeFrom(value).buildPartial();
          } else {
            uncompressedCacheSize_ = value;
          }
          onChanged();
        } else {
          uncompressedCacheSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      public Builder clearUncompressedCacheSize() {
        if (uncompressedCacheSizeBuilder_ == null) {
          uncompressedCacheSize_ = null;
          onChanged();
        } else {
          uncompressedCacheSize_ = null;
          uncompressedCacheSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      public com.google.protobuf.Int64Value.Builder getUncompressedCacheSizeBuilder() {
        
        onChanged();
        return getUncompressedCacheSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getUncompressedCacheSizeOrBuilder() {
        if (uncompressedCacheSizeBuilder_ != null) {
          return uncompressedCacheSizeBuilder_.getMessageOrBuilder();
        } else {
          return uncompressedCacheSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : uncompressedCacheSize_;
        }
      }
      /**
       * <pre>
       * Cache size (in bytes) for uncompressed data used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value uncompressed_cache_size = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getUncompressedCacheSizeFieldBuilder() {
        if (uncompressedCacheSizeBuilder_ == null) {
          uncompressedCacheSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getUncompressedCacheSize(),
                  getParentForChildren(),
                  isClean());
          uncompressedCacheSize_ = null;
        }
        return uncompressedCacheSizeBuilder_;
      }

      private com.google.protobuf.Int64Value markCacheSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> markCacheSizeBuilder_;
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the markCacheSize field is set.
       */
      public boolean hasMarkCacheSize() {
        return markCacheSizeBuilder_ != null || markCacheSize_ != null;
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The markCacheSize.
       */
      public com.google.protobuf.Int64Value getMarkCacheSize() {
        if (markCacheSizeBuilder_ == null) {
          return markCacheSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : markCacheSize_;
        } else {
          return markCacheSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMarkCacheSize(com.google.protobuf.Int64Value value) {
        if (markCacheSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          markCacheSize_ = value;
          onChanged();
        } else {
          markCacheSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setMarkCacheSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (markCacheSizeBuilder_ == null) {
          markCacheSize_ = builderForValue.build();
          onChanged();
        } else {
          markCacheSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeMarkCacheSize(com.google.protobuf.Int64Value value) {
        if (markCacheSizeBuilder_ == null) {
          if (markCacheSize_ != null) {
            markCacheSize_ =
              com.google.protobuf.Int64Value.newBuilder(markCacheSize_).mergeFrom(value).buildPartial();
          } else {
            markCacheSize_ = value;
          }
          onChanged();
        } else {
          markCacheSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearMarkCacheSize() {
        if (markCacheSizeBuilder_ == null) {
          markCacheSize_ = null;
          onChanged();
        } else {
          markCacheSize_ = null;
          markCacheSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getMarkCacheSizeBuilder() {
        
        onChanged();
        return getMarkCacheSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMarkCacheSizeOrBuilder() {
        if (markCacheSizeBuilder_ != null) {
          return markCacheSizeBuilder_.getMessageOrBuilder();
        } else {
          return markCacheSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : markCacheSize_;
        }
      }
      /**
       * <pre>
       * Approximate size (in bytes) of the cache of "marks" used by MergeTree tables.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value mark_cache_size = 10 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMarkCacheSizeFieldBuilder() {
        if (markCacheSizeBuilder_ == null) {
          markCacheSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMarkCacheSize(),
                  getParentForChildren(),
                  isClean());
          markCacheSize_ = null;
        }
        return markCacheSizeBuilder_;
      }

      private com.google.protobuf.Int64Value maxTableSizeToDrop_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxTableSizeToDropBuilder_;
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       * @return Whether the maxTableSizeToDrop field is set.
       */
      public boolean hasMaxTableSizeToDrop() {
        return maxTableSizeToDropBuilder_ != null || maxTableSizeToDrop_ != null;
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       * @return The maxTableSizeToDrop.
       */
      public com.google.protobuf.Int64Value getMaxTableSizeToDrop() {
        if (maxTableSizeToDropBuilder_ == null) {
          return maxTableSizeToDrop_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxTableSizeToDrop_;
        } else {
          return maxTableSizeToDropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      public Builder setMaxTableSizeToDrop(com.google.protobuf.Int64Value value) {
        if (maxTableSizeToDropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxTableSizeToDrop_ = value;
          onChanged();
        } else {
          maxTableSizeToDropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      public Builder setMaxTableSizeToDrop(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxTableSizeToDropBuilder_ == null) {
          maxTableSizeToDrop_ = builderForValue.build();
          onChanged();
        } else {
          maxTableSizeToDropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      public Builder mergeMaxTableSizeToDrop(com.google.protobuf.Int64Value value) {
        if (maxTableSizeToDropBuilder_ == null) {
          if (maxTableSizeToDrop_ != null) {
            maxTableSizeToDrop_ =
              com.google.protobuf.Int64Value.newBuilder(maxTableSizeToDrop_).mergeFrom(value).buildPartial();
          } else {
            maxTableSizeToDrop_ = value;
          }
          onChanged();
        } else {
          maxTableSizeToDropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      public Builder clearMaxTableSizeToDrop() {
        if (maxTableSizeToDropBuilder_ == null) {
          maxTableSizeToDrop_ = null;
          onChanged();
        } else {
          maxTableSizeToDrop_ = null;
          maxTableSizeToDropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxTableSizeToDropBuilder() {
        
        onChanged();
        return getMaxTableSizeToDropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxTableSizeToDropOrBuilder() {
        if (maxTableSizeToDropBuilder_ != null) {
          return maxTableSizeToDropBuilder_.getMessageOrBuilder();
        } else {
          return maxTableSizeToDrop_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxTableSizeToDrop_;
        }
      }
      /**
       * <pre>
       * Maximum size of the table that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_table_size_to_drop = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxTableSizeToDropFieldBuilder() {
        if (maxTableSizeToDropBuilder_ == null) {
          maxTableSizeToDropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxTableSizeToDrop(),
                  getParentForChildren(),
                  isClean());
          maxTableSizeToDrop_ = null;
        }
        return maxTableSizeToDropBuilder_;
      }

      private com.google.protobuf.Int64Value maxPartitionSizeToDrop_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> maxPartitionSizeToDropBuilder_;
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       * @return Whether the maxPartitionSizeToDrop field is set.
       */
      public boolean hasMaxPartitionSizeToDrop() {
        return maxPartitionSizeToDropBuilder_ != null || maxPartitionSizeToDrop_ != null;
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       * @return The maxPartitionSizeToDrop.
       */
      public com.google.protobuf.Int64Value getMaxPartitionSizeToDrop() {
        if (maxPartitionSizeToDropBuilder_ == null) {
          return maxPartitionSizeToDrop_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : maxPartitionSizeToDrop_;
        } else {
          return maxPartitionSizeToDropBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      public Builder setMaxPartitionSizeToDrop(com.google.protobuf.Int64Value value) {
        if (maxPartitionSizeToDropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxPartitionSizeToDrop_ = value;
          onChanged();
        } else {
          maxPartitionSizeToDropBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      public Builder setMaxPartitionSizeToDrop(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (maxPartitionSizeToDropBuilder_ == null) {
          maxPartitionSizeToDrop_ = builderForValue.build();
          onChanged();
        } else {
          maxPartitionSizeToDropBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      public Builder mergeMaxPartitionSizeToDrop(com.google.protobuf.Int64Value value) {
        if (maxPartitionSizeToDropBuilder_ == null) {
          if (maxPartitionSizeToDrop_ != null) {
            maxPartitionSizeToDrop_ =
              com.google.protobuf.Int64Value.newBuilder(maxPartitionSizeToDrop_).mergeFrom(value).buildPartial();
          } else {
            maxPartitionSizeToDrop_ = value;
          }
          onChanged();
        } else {
          maxPartitionSizeToDropBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      public Builder clearMaxPartitionSizeToDrop() {
        if (maxPartitionSizeToDropBuilder_ == null) {
          maxPartitionSizeToDrop_ = null;
          onChanged();
        } else {
          maxPartitionSizeToDrop_ = null;
          maxPartitionSizeToDropBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMaxPartitionSizeToDropBuilder() {
        
        onChanged();
        return getMaxPartitionSizeToDropFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMaxPartitionSizeToDropOrBuilder() {
        if (maxPartitionSizeToDropBuilder_ != null) {
          return maxPartitionSizeToDropBuilder_.getMessageOrBuilder();
        } else {
          return maxPartitionSizeToDrop_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : maxPartitionSizeToDrop_;
        }
      }
      /**
       * <pre>
       * Maximum size of the partition that can be deleted using a DROP query.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value max_partition_size_to_drop = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMaxPartitionSizeToDropFieldBuilder() {
        if (maxPartitionSizeToDropBuilder_ == null) {
          maxPartitionSizeToDropBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMaxPartitionSizeToDrop(),
                  getParentForChildren(),
                  isClean());
          maxPartitionSizeToDrop_ = null;
        }
        return maxPartitionSizeToDropBuilder_;
      }

      private com.google.protobuf.Int64Value builtinDictionariesReloadInterval_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> builtinDictionariesReloadIntervalBuilder_;
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       * @deprecated
       * @return Whether the builtinDictionariesReloadInterval field is set.
       */
      @java.lang.Deprecated public boolean hasBuiltinDictionariesReloadInterval() {
        return builtinDictionariesReloadIntervalBuilder_ != null || builtinDictionariesReloadInterval_ != null;
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       * @deprecated
       * @return The builtinDictionariesReloadInterval.
       */
      @java.lang.Deprecated public com.google.protobuf.Int64Value getBuiltinDictionariesReloadInterval() {
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          return builtinDictionariesReloadInterval_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : builtinDictionariesReloadInterval_;
        } else {
          return builtinDictionariesReloadIntervalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setBuiltinDictionariesReloadInterval(com.google.protobuf.Int64Value value) {
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          builtinDictionariesReloadInterval_ = value;
          onChanged();
        } else {
          builtinDictionariesReloadIntervalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder setBuiltinDictionariesReloadInterval(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          builtinDictionariesReloadInterval_ = builderForValue.build();
          onChanged();
        } else {
          builtinDictionariesReloadIntervalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder mergeBuiltinDictionariesReloadInterval(com.google.protobuf.Int64Value value) {
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          if (builtinDictionariesReloadInterval_ != null) {
            builtinDictionariesReloadInterval_ =
              com.google.protobuf.Int64Value.newBuilder(builtinDictionariesReloadInterval_).mergeFrom(value).buildPartial();
          } else {
            builtinDictionariesReloadInterval_ = value;
          }
          onChanged();
        } else {
          builtinDictionariesReloadIntervalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public Builder clearBuiltinDictionariesReloadInterval() {
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          builtinDictionariesReloadInterval_ = null;
          onChanged();
        } else {
          builtinDictionariesReloadInterval_ = null;
          builtinDictionariesReloadIntervalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public com.google.protobuf.Int64Value.Builder getBuiltinDictionariesReloadIntervalBuilder() {
        
        onChanged();
        return getBuiltinDictionariesReloadIntervalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      @java.lang.Deprecated public com.google.protobuf.Int64ValueOrBuilder getBuiltinDictionariesReloadIntervalOrBuilder() {
        if (builtinDictionariesReloadIntervalBuilder_ != null) {
          return builtinDictionariesReloadIntervalBuilder_.getMessageOrBuilder();
        } else {
          return builtinDictionariesReloadInterval_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : builtinDictionariesReloadInterval_;
        }
      }
      /**
       * <pre>
       * The setting is deprecated and has no effect.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value builtin_dictionaries_reload_interval = 12 [deprecated = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBuiltinDictionariesReloadIntervalFieldBuilder() {
        if (builtinDictionariesReloadIntervalBuilder_ == null) {
          builtinDictionariesReloadIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBuiltinDictionariesReloadInterval(),
                  getParentForChildren(),
                  isClean());
          builtinDictionariesReloadInterval_ = null;
        }
        return builtinDictionariesReloadIntervalBuilder_;
      }

      private java.lang.Object timezone_ = "";
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>string timezone = 14;</code>
       * @return The timezone.
       */
      public java.lang.String getTimezone() {
        java.lang.Object ref = timezone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timezone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>string timezone = 14;</code>
       * @return The bytes for timezone.
       */
      public com.google.protobuf.ByteString
          getTimezoneBytes() {
        java.lang.Object ref = timezone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timezone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>string timezone = 14;</code>
       * @param value The timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timezone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>string timezone = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimezone() {
        
        timezone_ = getDefaultInstance().getTimezone();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The server's time zone to be used in DateTime fields conversions. Specified as an IANA identifier.
       * </pre>
       *
       * <code>string timezone = 14;</code>
       * @param value The bytes for timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timezone_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue geobaseEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> geobaseEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       * @return Whether the geobaseEnabled field is set.
       */
      public boolean hasGeobaseEnabled() {
        return geobaseEnabledBuilder_ != null || geobaseEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       * @return The geobaseEnabled.
       */
      public com.google.protobuf.BoolValue getGeobaseEnabled() {
        if (geobaseEnabledBuilder_ == null) {
          return geobaseEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : geobaseEnabled_;
        } else {
          return geobaseEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      public Builder setGeobaseEnabled(com.google.protobuf.BoolValue value) {
        if (geobaseEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geobaseEnabled_ = value;
          onChanged();
        } else {
          geobaseEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      public Builder setGeobaseEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (geobaseEnabledBuilder_ == null) {
          geobaseEnabled_ = builderForValue.build();
          onChanged();
        } else {
          geobaseEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      public Builder mergeGeobaseEnabled(com.google.protobuf.BoolValue value) {
        if (geobaseEnabledBuilder_ == null) {
          if (geobaseEnabled_ != null) {
            geobaseEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(geobaseEnabled_).mergeFrom(value).buildPartial();
          } else {
            geobaseEnabled_ = value;
          }
          onChanged();
        } else {
          geobaseEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      public Builder clearGeobaseEnabled() {
        if (geobaseEnabledBuilder_ == null) {
          geobaseEnabled_ = null;
          onChanged();
        } else {
          geobaseEnabled_ = null;
          geobaseEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      public com.google.protobuf.BoolValue.Builder getGeobaseEnabledBuilder() {
        
        onChanged();
        return getGeobaseEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getGeobaseEnabledOrBuilder() {
        if (geobaseEnabledBuilder_ != null) {
          return geobaseEnabledBuilder_.getMessageOrBuilder();
        } else {
          return geobaseEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : geobaseEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable geobase.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue geobase_enabled = 66;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getGeobaseEnabledFieldBuilder() {
        if (geobaseEnabledBuilder_ == null) {
          geobaseEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getGeobaseEnabled(),
                  getParentForChildren(),
                  isClean());
          geobaseEnabled_ = null;
        }
        return geobaseEnabledBuilder_;
      }

      private java.lang.Object geobaseUri_ = "";
      /**
       * <pre>
       * Address of the archive with the user geobase in Object Storage.
       * </pre>
       *
       * <code>string geobase_uri = 15;</code>
       * @return The geobaseUri.
       */
      public java.lang.String getGeobaseUri() {
        java.lang.Object ref = geobaseUri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          geobaseUri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Address of the archive with the user geobase in Object Storage.
       * </pre>
       *
       * <code>string geobase_uri = 15;</code>
       * @return The bytes for geobaseUri.
       */
      public com.google.protobuf.ByteString
          getGeobaseUriBytes() {
        java.lang.Object ref = geobaseUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          geobaseUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Address of the archive with the user geobase in Object Storage.
       * </pre>
       *
       * <code>string geobase_uri = 15;</code>
       * @param value The geobaseUri to set.
       * @return This builder for chaining.
       */
      public Builder setGeobaseUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        geobaseUri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Address of the archive with the user geobase in Object Storage.
       * </pre>
       *
       * <code>string geobase_uri = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeobaseUri() {
        
        geobaseUri_ = getDefaultInstance().getGeobaseUri();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Address of the archive with the user geobase in Object Storage.
       * </pre>
       *
       * <code>string geobase_uri = 15;</code>
       * @param value The bytes for geobaseUri to set.
       * @return This builder for chaining.
       */
      public Builder setGeobaseUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        geobaseUri_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Int64Value queryLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queryLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       * @return Whether the queryLogRetentionSize field is set.
       */
      public boolean hasQueryLogRetentionSize() {
        return queryLogRetentionSizeBuilder_ != null || queryLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       * @return The queryLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getQueryLogRetentionSize() {
        if (queryLogRetentionSizeBuilder_ == null) {
          return queryLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryLogRetentionSize_;
        } else {
          return queryLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      public Builder setQueryLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (queryLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryLogRetentionSize_ = value;
          onChanged();
        } else {
          queryLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      public Builder setQueryLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queryLogRetentionSizeBuilder_ == null) {
          queryLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          queryLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      public Builder mergeQueryLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (queryLogRetentionSizeBuilder_ == null) {
          if (queryLogRetentionSize_ != null) {
            queryLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(queryLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            queryLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          queryLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      public Builder clearQueryLogRetentionSize() {
        if (queryLogRetentionSizeBuilder_ == null) {
          queryLogRetentionSize_ = null;
          onChanged();
        } else {
          queryLogRetentionSize_ = null;
          queryLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueryLogRetentionSizeBuilder() {
        
        onChanged();
        return getQueryLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueryLogRetentionSizeOrBuilder() {
        if (queryLogRetentionSizeBuilder_ != null) {
          return queryLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return queryLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queryLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that query_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_size = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueryLogRetentionSizeFieldBuilder() {
        if (queryLogRetentionSizeBuilder_ == null) {
          queryLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueryLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          queryLogRetentionSize_ = null;
        }
        return queryLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value queryLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queryLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       * @return Whether the queryLogRetentionTime field is set.
       */
      public boolean hasQueryLogRetentionTime() {
        return queryLogRetentionTimeBuilder_ != null || queryLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       * @return The queryLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getQueryLogRetentionTime() {
        if (queryLogRetentionTimeBuilder_ == null) {
          return queryLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryLogRetentionTime_;
        } else {
          return queryLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      public Builder setQueryLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (queryLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryLogRetentionTime_ = value;
          onChanged();
        } else {
          queryLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      public Builder setQueryLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queryLogRetentionTimeBuilder_ == null) {
          queryLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          queryLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      public Builder mergeQueryLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (queryLogRetentionTimeBuilder_ == null) {
          if (queryLogRetentionTime_ != null) {
            queryLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(queryLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            queryLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          queryLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      public Builder clearQueryLogRetentionTime() {
        if (queryLogRetentionTimeBuilder_ == null) {
          queryLogRetentionTime_ = null;
          onChanged();
        } else {
          queryLogRetentionTime_ = null;
          queryLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueryLogRetentionTimeBuilder() {
        
        onChanged();
        return getQueryLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueryLogRetentionTimeOrBuilder() {
        if (queryLogRetentionTimeBuilder_ != null) {
          return queryLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return queryLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queryLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that query_log records will be retained before removal. If set to 0, automatic removal of
       * query_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_log_retention_time = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueryLogRetentionTimeFieldBuilder() {
        if (queryLogRetentionTimeBuilder_ == null) {
          queryLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueryLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          queryLogRetentionTime_ = null;
        }
        return queryLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue queryThreadLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> queryThreadLogEnabledBuilder_;
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       * @return Whether the queryThreadLogEnabled field is set.
       */
      public boolean hasQueryThreadLogEnabled() {
        return queryThreadLogEnabledBuilder_ != null || queryThreadLogEnabled_ != null;
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       * @return The queryThreadLogEnabled.
       */
      public com.google.protobuf.BoolValue getQueryThreadLogEnabled() {
        if (queryThreadLogEnabledBuilder_ == null) {
          return queryThreadLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : queryThreadLogEnabled_;
        } else {
          return queryThreadLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      public Builder setQueryThreadLogEnabled(com.google.protobuf.BoolValue value) {
        if (queryThreadLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryThreadLogEnabled_ = value;
          onChanged();
        } else {
          queryThreadLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      public Builder setQueryThreadLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (queryThreadLogEnabledBuilder_ == null) {
          queryThreadLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          queryThreadLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      public Builder mergeQueryThreadLogEnabled(com.google.protobuf.BoolValue value) {
        if (queryThreadLogEnabledBuilder_ == null) {
          if (queryThreadLogEnabled_ != null) {
            queryThreadLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(queryThreadLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            queryThreadLogEnabled_ = value;
          }
          onChanged();
        } else {
          queryThreadLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      public Builder clearQueryThreadLogEnabled() {
        if (queryThreadLogEnabledBuilder_ == null) {
          queryThreadLogEnabled_ = null;
          onChanged();
        } else {
          queryThreadLogEnabled_ = null;
          queryThreadLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      public com.google.protobuf.BoolValue.Builder getQueryThreadLogEnabledBuilder() {
        
        onChanged();
        return getQueryThreadLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getQueryThreadLogEnabledOrBuilder() {
        if (queryThreadLogEnabledBuilder_ != null) {
          return queryThreadLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return queryThreadLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : queryThreadLogEnabled_;
        }
      }
      /**
       * <pre>
       * Whether query_thread_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_thread_log_enabled = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getQueryThreadLogEnabledFieldBuilder() {
        if (queryThreadLogEnabledBuilder_ == null) {
          queryThreadLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getQueryThreadLogEnabled(),
                  getParentForChildren(),
                  isClean());
          queryThreadLogEnabled_ = null;
        }
        return queryThreadLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value queryThreadLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queryThreadLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       * @return Whether the queryThreadLogRetentionSize field is set.
       */
      public boolean hasQueryThreadLogRetentionSize() {
        return queryThreadLogRetentionSizeBuilder_ != null || queryThreadLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       * @return The queryThreadLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getQueryThreadLogRetentionSize() {
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          return queryThreadLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryThreadLogRetentionSize_;
        } else {
          return queryThreadLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      public Builder setQueryThreadLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryThreadLogRetentionSize_ = value;
          onChanged();
        } else {
          queryThreadLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      public Builder setQueryThreadLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          queryThreadLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          queryThreadLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      public Builder mergeQueryThreadLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          if (queryThreadLogRetentionSize_ != null) {
            queryThreadLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(queryThreadLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            queryThreadLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          queryThreadLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      public Builder clearQueryThreadLogRetentionSize() {
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          queryThreadLogRetentionSize_ = null;
          onChanged();
        } else {
          queryThreadLogRetentionSize_ = null;
          queryThreadLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueryThreadLogRetentionSizeBuilder() {
        
        onChanged();
        return getQueryThreadLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueryThreadLogRetentionSizeOrBuilder() {
        if (queryThreadLogRetentionSizeBuilder_ != null) {
          return queryThreadLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return queryThreadLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queryThreadLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that query_thread_log can grow to before old data will be removed. If set to 0, automatic removal of
       * query_thread_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_size = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueryThreadLogRetentionSizeFieldBuilder() {
        if (queryThreadLogRetentionSizeBuilder_ == null) {
          queryThreadLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueryThreadLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          queryThreadLogRetentionSize_ = null;
        }
        return queryThreadLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value queryThreadLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queryThreadLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       * @return Whether the queryThreadLogRetentionTime field is set.
       */
      public boolean hasQueryThreadLogRetentionTime() {
        return queryThreadLogRetentionTimeBuilder_ != null || queryThreadLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       * @return The queryThreadLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getQueryThreadLogRetentionTime() {
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          return queryThreadLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryThreadLogRetentionTime_;
        } else {
          return queryThreadLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      public Builder setQueryThreadLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryThreadLogRetentionTime_ = value;
          onChanged();
        } else {
          queryThreadLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      public Builder setQueryThreadLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          queryThreadLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          queryThreadLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      public Builder mergeQueryThreadLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          if (queryThreadLogRetentionTime_ != null) {
            queryThreadLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(queryThreadLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            queryThreadLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          queryThreadLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      public Builder clearQueryThreadLogRetentionTime() {
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          queryThreadLogRetentionTime_ = null;
          onChanged();
        } else {
          queryThreadLogRetentionTime_ = null;
          queryThreadLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueryThreadLogRetentionTimeBuilder() {
        
        onChanged();
        return getQueryThreadLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueryThreadLogRetentionTimeOrBuilder() {
        if (queryThreadLogRetentionTimeBuilder_ != null) {
          return queryThreadLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return queryThreadLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queryThreadLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that query_thread_log records will be retained before removal. If set to 0, automatic removal of
       * query_thread_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_thread_log_retention_time = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueryThreadLogRetentionTimeFieldBuilder() {
        if (queryThreadLogRetentionTimeBuilder_ == null) {
          queryThreadLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueryThreadLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          queryThreadLogRetentionTime_ = null;
        }
        return queryThreadLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.Int64Value partLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> partLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       * @return Whether the partLogRetentionSize field is set.
       */
      public boolean hasPartLogRetentionSize() {
        return partLogRetentionSizeBuilder_ != null || partLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       * @return The partLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getPartLogRetentionSize() {
        if (partLogRetentionSizeBuilder_ == null) {
          return partLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partLogRetentionSize_;
        } else {
          return partLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      public Builder setPartLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (partLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          partLogRetentionSize_ = value;
          onChanged();
        } else {
          partLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      public Builder setPartLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (partLogRetentionSizeBuilder_ == null) {
          partLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          partLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      public Builder mergePartLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (partLogRetentionSizeBuilder_ == null) {
          if (partLogRetentionSize_ != null) {
            partLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(partLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            partLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          partLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      public Builder clearPartLogRetentionSize() {
        if (partLogRetentionSizeBuilder_ == null) {
          partLogRetentionSize_ = null;
          onChanged();
        } else {
          partLogRetentionSize_ = null;
          partLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      public com.google.protobuf.Int64Value.Builder getPartLogRetentionSizeBuilder() {
        
        onChanged();
        return getPartLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getPartLogRetentionSizeOrBuilder() {
        if (partLogRetentionSizeBuilder_ != null) {
          return partLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return partLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : partLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that part_log can grow to before old data will be removed. If set to 0, automatic removal of
       * part_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_size = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getPartLogRetentionSizeFieldBuilder() {
        if (partLogRetentionSizeBuilder_ == null) {
          partLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getPartLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          partLogRetentionSize_ = null;
        }
        return partLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value partLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> partLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       * @return Whether the partLogRetentionTime field is set.
       */
      public boolean hasPartLogRetentionTime() {
        return partLogRetentionTimeBuilder_ != null || partLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       * @return The partLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getPartLogRetentionTime() {
        if (partLogRetentionTimeBuilder_ == null) {
          return partLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : partLogRetentionTime_;
        } else {
          return partLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      public Builder setPartLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (partLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          partLogRetentionTime_ = value;
          onChanged();
        } else {
          partLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      public Builder setPartLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (partLogRetentionTimeBuilder_ == null) {
          partLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          partLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      public Builder mergePartLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (partLogRetentionTimeBuilder_ == null) {
          if (partLogRetentionTime_ != null) {
            partLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(partLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            partLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          partLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      public Builder clearPartLogRetentionTime() {
        if (partLogRetentionTimeBuilder_ == null) {
          partLogRetentionTime_ = null;
          onChanged();
        } else {
          partLogRetentionTime_ = null;
          partLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      public com.google.protobuf.Int64Value.Builder getPartLogRetentionTimeBuilder() {
        
        onChanged();
        return getPartLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getPartLogRetentionTimeOrBuilder() {
        if (partLogRetentionTimeBuilder_ != null) {
          return partLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return partLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : partLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that part_log records will be retained before removal. If set to 0, automatic removal of
       * part_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value part_log_retention_time = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getPartLogRetentionTimeFieldBuilder() {
        if (partLogRetentionTimeBuilder_ == null) {
          partLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getPartLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          partLogRetentionTime_ = null;
        }
        return partLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue metricLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> metricLogEnabledBuilder_;
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       * @return Whether the metricLogEnabled field is set.
       */
      public boolean hasMetricLogEnabled() {
        return metricLogEnabledBuilder_ != null || metricLogEnabled_ != null;
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       * @return The metricLogEnabled.
       */
      public com.google.protobuf.BoolValue getMetricLogEnabled() {
        if (metricLogEnabledBuilder_ == null) {
          return metricLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : metricLogEnabled_;
        } else {
          return metricLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      public Builder setMetricLogEnabled(com.google.protobuf.BoolValue value) {
        if (metricLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metricLogEnabled_ = value;
          onChanged();
        } else {
          metricLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      public Builder setMetricLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (metricLogEnabledBuilder_ == null) {
          metricLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          metricLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      public Builder mergeMetricLogEnabled(com.google.protobuf.BoolValue value) {
        if (metricLogEnabledBuilder_ == null) {
          if (metricLogEnabled_ != null) {
            metricLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(metricLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            metricLogEnabled_ = value;
          }
          onChanged();
        } else {
          metricLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      public Builder clearMetricLogEnabled() {
        if (metricLogEnabledBuilder_ == null) {
          metricLogEnabled_ = null;
          onChanged();
        } else {
          metricLogEnabled_ = null;
          metricLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      public com.google.protobuf.BoolValue.Builder getMetricLogEnabledBuilder() {
        
        onChanged();
        return getMetricLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getMetricLogEnabledOrBuilder() {
        if (metricLogEnabledBuilder_ != null) {
          return metricLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return metricLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : metricLogEnabled_;
        }
      }
      /**
       * <pre>
       * Whether metric_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue metric_log_enabled = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getMetricLogEnabledFieldBuilder() {
        if (metricLogEnabledBuilder_ == null) {
          metricLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getMetricLogEnabled(),
                  getParentForChildren(),
                  isClean());
          metricLogEnabled_ = null;
        }
        return metricLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value metricLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> metricLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       * @return Whether the metricLogRetentionSize field is set.
       */
      public boolean hasMetricLogRetentionSize() {
        return metricLogRetentionSizeBuilder_ != null || metricLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       * @return The metricLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getMetricLogRetentionSize() {
        if (metricLogRetentionSizeBuilder_ == null) {
          return metricLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : metricLogRetentionSize_;
        } else {
          return metricLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      public Builder setMetricLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (metricLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metricLogRetentionSize_ = value;
          onChanged();
        } else {
          metricLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      public Builder setMetricLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (metricLogRetentionSizeBuilder_ == null) {
          metricLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          metricLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      public Builder mergeMetricLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (metricLogRetentionSizeBuilder_ == null) {
          if (metricLogRetentionSize_ != null) {
            metricLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(metricLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            metricLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          metricLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      public Builder clearMetricLogRetentionSize() {
        if (metricLogRetentionSizeBuilder_ == null) {
          metricLogRetentionSize_ = null;
          onChanged();
        } else {
          metricLogRetentionSize_ = null;
          metricLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMetricLogRetentionSizeBuilder() {
        
        onChanged();
        return getMetricLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMetricLogRetentionSizeOrBuilder() {
        if (metricLogRetentionSizeBuilder_ != null) {
          return metricLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return metricLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : metricLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that metric_log can grow to before old data will be removed. If set to 0, automatic removal of
       * metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_size = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMetricLogRetentionSizeFieldBuilder() {
        if (metricLogRetentionSizeBuilder_ == null) {
          metricLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMetricLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          metricLogRetentionSize_ = null;
        }
        return metricLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value metricLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> metricLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       * @return Whether the metricLogRetentionTime field is set.
       */
      public boolean hasMetricLogRetentionTime() {
        return metricLogRetentionTimeBuilder_ != null || metricLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       * @return The metricLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getMetricLogRetentionTime() {
        if (metricLogRetentionTimeBuilder_ == null) {
          return metricLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : metricLogRetentionTime_;
        } else {
          return metricLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      public Builder setMetricLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (metricLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metricLogRetentionTime_ = value;
          onChanged();
        } else {
          metricLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      public Builder setMetricLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (metricLogRetentionTimeBuilder_ == null) {
          metricLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          metricLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      public Builder mergeMetricLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (metricLogRetentionTimeBuilder_ == null) {
          if (metricLogRetentionTime_ != null) {
            metricLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(metricLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            metricLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          metricLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      public Builder clearMetricLogRetentionTime() {
        if (metricLogRetentionTimeBuilder_ == null) {
          metricLogRetentionTime_ = null;
          onChanged();
        } else {
          metricLogRetentionTime_ = null;
          metricLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      public com.google.protobuf.Int64Value.Builder getMetricLogRetentionTimeBuilder() {
        
        onChanged();
        return getMetricLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getMetricLogRetentionTimeOrBuilder() {
        if (metricLogRetentionTimeBuilder_ != null) {
          return metricLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return metricLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : metricLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that metric_log records will be retained before removal. If set to 0, automatic removal of
       * metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value metric_log_retention_time = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getMetricLogRetentionTimeFieldBuilder() {
        if (metricLogRetentionTimeBuilder_ == null) {
          metricLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getMetricLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          metricLogRetentionTime_ = null;
        }
        return metricLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue traceLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> traceLogEnabledBuilder_;
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       * @return Whether the traceLogEnabled field is set.
       */
      public boolean hasTraceLogEnabled() {
        return traceLogEnabledBuilder_ != null || traceLogEnabled_ != null;
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       * @return The traceLogEnabled.
       */
      public com.google.protobuf.BoolValue getTraceLogEnabled() {
        if (traceLogEnabledBuilder_ == null) {
          return traceLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : traceLogEnabled_;
        } else {
          return traceLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      public Builder setTraceLogEnabled(com.google.protobuf.BoolValue value) {
        if (traceLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceLogEnabled_ = value;
          onChanged();
        } else {
          traceLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      public Builder setTraceLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (traceLogEnabledBuilder_ == null) {
          traceLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          traceLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      public Builder mergeTraceLogEnabled(com.google.protobuf.BoolValue value) {
        if (traceLogEnabledBuilder_ == null) {
          if (traceLogEnabled_ != null) {
            traceLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(traceLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            traceLogEnabled_ = value;
          }
          onChanged();
        } else {
          traceLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      public Builder clearTraceLogEnabled() {
        if (traceLogEnabledBuilder_ == null) {
          traceLogEnabled_ = null;
          onChanged();
        } else {
          traceLogEnabled_ = null;
          traceLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      public com.google.protobuf.BoolValue.Builder getTraceLogEnabledBuilder() {
        
        onChanged();
        return getTraceLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getTraceLogEnabledOrBuilder() {
        if (traceLogEnabledBuilder_ != null) {
          return traceLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return traceLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : traceLogEnabled_;
        }
      }
      /**
       * <pre>
       * Whether trace_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_log_enabled = 26;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getTraceLogEnabledFieldBuilder() {
        if (traceLogEnabledBuilder_ == null) {
          traceLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getTraceLogEnabled(),
                  getParentForChildren(),
                  isClean());
          traceLogEnabled_ = null;
        }
        return traceLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value traceLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> traceLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       * @return Whether the traceLogRetentionSize field is set.
       */
      public boolean hasTraceLogRetentionSize() {
        return traceLogRetentionSizeBuilder_ != null || traceLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       * @return The traceLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getTraceLogRetentionSize() {
        if (traceLogRetentionSizeBuilder_ == null) {
          return traceLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : traceLogRetentionSize_;
        } else {
          return traceLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      public Builder setTraceLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (traceLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceLogRetentionSize_ = value;
          onChanged();
        } else {
          traceLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      public Builder setTraceLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (traceLogRetentionSizeBuilder_ == null) {
          traceLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          traceLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      public Builder mergeTraceLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (traceLogRetentionSizeBuilder_ == null) {
          if (traceLogRetentionSize_ != null) {
            traceLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(traceLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            traceLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          traceLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      public Builder clearTraceLogRetentionSize() {
        if (traceLogRetentionSizeBuilder_ == null) {
          traceLogRetentionSize_ = null;
          onChanged();
        } else {
          traceLogRetentionSize_ = null;
          traceLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTraceLogRetentionSizeBuilder() {
        
        onChanged();
        return getTraceLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTraceLogRetentionSizeOrBuilder() {
        if (traceLogRetentionSizeBuilder_ != null) {
          return traceLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return traceLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : traceLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that trace_log can grow to before old data will be removed. If set to 0, automatic removal of
       * trace_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_size = 27;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTraceLogRetentionSizeFieldBuilder() {
        if (traceLogRetentionSizeBuilder_ == null) {
          traceLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTraceLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          traceLogRetentionSize_ = null;
        }
        return traceLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value traceLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> traceLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       * @return Whether the traceLogRetentionTime field is set.
       */
      public boolean hasTraceLogRetentionTime() {
        return traceLogRetentionTimeBuilder_ != null || traceLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       * @return The traceLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getTraceLogRetentionTime() {
        if (traceLogRetentionTimeBuilder_ == null) {
          return traceLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : traceLogRetentionTime_;
        } else {
          return traceLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      public Builder setTraceLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (traceLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceLogRetentionTime_ = value;
          onChanged();
        } else {
          traceLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      public Builder setTraceLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (traceLogRetentionTimeBuilder_ == null) {
          traceLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          traceLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      public Builder mergeTraceLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (traceLogRetentionTimeBuilder_ == null) {
          if (traceLogRetentionTime_ != null) {
            traceLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(traceLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            traceLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          traceLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      public Builder clearTraceLogRetentionTime() {
        if (traceLogRetentionTimeBuilder_ == null) {
          traceLogRetentionTime_ = null;
          onChanged();
        } else {
          traceLogRetentionTime_ = null;
          traceLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTraceLogRetentionTimeBuilder() {
        
        onChanged();
        return getTraceLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTraceLogRetentionTimeOrBuilder() {
        if (traceLogRetentionTimeBuilder_ != null) {
          return traceLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return traceLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : traceLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that trace_log records will be retained before removal. If set to 0, automatic removal of
       * trace_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value trace_log_retention_time = 28;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTraceLogRetentionTimeFieldBuilder() {
        if (traceLogRetentionTimeBuilder_ == null) {
          traceLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTraceLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          traceLogRetentionTime_ = null;
        }
        return traceLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue textLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> textLogEnabledBuilder_;
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       * @return Whether the textLogEnabled field is set.
       */
      public boolean hasTextLogEnabled() {
        return textLogEnabledBuilder_ != null || textLogEnabled_ != null;
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       * @return The textLogEnabled.
       */
      public com.google.protobuf.BoolValue getTextLogEnabled() {
        if (textLogEnabledBuilder_ == null) {
          return textLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textLogEnabled_;
        } else {
          return textLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      public Builder setTextLogEnabled(com.google.protobuf.BoolValue value) {
        if (textLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          textLogEnabled_ = value;
          onChanged();
        } else {
          textLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      public Builder setTextLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (textLogEnabledBuilder_ == null) {
          textLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          textLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      public Builder mergeTextLogEnabled(com.google.protobuf.BoolValue value) {
        if (textLogEnabledBuilder_ == null) {
          if (textLogEnabled_ != null) {
            textLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(textLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            textLogEnabled_ = value;
          }
          onChanged();
        } else {
          textLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      public Builder clearTextLogEnabled() {
        if (textLogEnabledBuilder_ == null) {
          textLogEnabled_ = null;
          onChanged();
        } else {
          textLogEnabled_ = null;
          textLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      public com.google.protobuf.BoolValue.Builder getTextLogEnabledBuilder() {
        
        onChanged();
        return getTextLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getTextLogEnabledOrBuilder() {
        if (textLogEnabledBuilder_ != null) {
          return textLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return textLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : textLogEnabled_;
        }
      }
      /**
       * <pre>
       * Whether text_log system table is enabled.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue text_log_enabled = 29;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getTextLogEnabledFieldBuilder() {
        if (textLogEnabledBuilder_ == null) {
          textLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getTextLogEnabled(),
                  getParentForChildren(),
                  isClean());
          textLogEnabled_ = null;
        }
        return textLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value textLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> textLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       * @return Whether the textLogRetentionSize field is set.
       */
      public boolean hasTextLogRetentionSize() {
        return textLogRetentionSizeBuilder_ != null || textLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       * @return The textLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getTextLogRetentionSize() {
        if (textLogRetentionSizeBuilder_ == null) {
          return textLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : textLogRetentionSize_;
        } else {
          return textLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      public Builder setTextLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (textLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          textLogRetentionSize_ = value;
          onChanged();
        } else {
          textLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      public Builder setTextLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (textLogRetentionSizeBuilder_ == null) {
          textLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          textLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      public Builder mergeTextLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (textLogRetentionSizeBuilder_ == null) {
          if (textLogRetentionSize_ != null) {
            textLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(textLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            textLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          textLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      public Builder clearTextLogRetentionSize() {
        if (textLogRetentionSizeBuilder_ == null) {
          textLogRetentionSize_ = null;
          onChanged();
        } else {
          textLogRetentionSize_ = null;
          textLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTextLogRetentionSizeBuilder() {
        
        onChanged();
        return getTextLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTextLogRetentionSizeOrBuilder() {
        if (textLogRetentionSizeBuilder_ != null) {
          return textLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return textLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : textLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that text_log can grow to before old data will be removed. If set to 0, automatic removal of
       * text_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_size = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTextLogRetentionSizeFieldBuilder() {
        if (textLogRetentionSizeBuilder_ == null) {
          textLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTextLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          textLogRetentionSize_ = null;
        }
        return textLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value textLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> textLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       * @return Whether the textLogRetentionTime field is set.
       */
      public boolean hasTextLogRetentionTime() {
        return textLogRetentionTimeBuilder_ != null || textLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       * @return The textLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getTextLogRetentionTime() {
        if (textLogRetentionTimeBuilder_ == null) {
          return textLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : textLogRetentionTime_;
        } else {
          return textLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      public Builder setTextLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (textLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          textLogRetentionTime_ = value;
          onChanged();
        } else {
          textLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      public Builder setTextLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (textLogRetentionTimeBuilder_ == null) {
          textLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          textLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      public Builder mergeTextLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (textLogRetentionTimeBuilder_ == null) {
          if (textLogRetentionTime_ != null) {
            textLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(textLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            textLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          textLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      public Builder clearTextLogRetentionTime() {
        if (textLogRetentionTimeBuilder_ == null) {
          textLogRetentionTime_ = null;
          onChanged();
        } else {
          textLogRetentionTime_ = null;
          textLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTextLogRetentionTimeBuilder() {
        
        onChanged();
        return getTextLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTextLogRetentionTimeOrBuilder() {
        if (textLogRetentionTimeBuilder_ != null) {
          return textLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return textLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : textLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that text_log records will be retained before removal. If set to 0, automatic removal of
       * text_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value text_log_retention_time = 31;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTextLogRetentionTimeFieldBuilder() {
        if (textLogRetentionTimeBuilder_ == null) {
          textLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTextLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          textLogRetentionTime_ = null;
        }
        return textLogRetentionTimeBuilder_;
      }

      private int textLogLevel_ = 0;
      /**
       * <pre>
       * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
       * @return The enum numeric value on the wire for textLogLevel.
       */
      @java.lang.Override public int getTextLogLevelValue() {
        return textLogLevel_;
      }
      /**
       * <pre>
       * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
       * @param value The enum numeric value on the wire for textLogLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTextLogLevelValue(int value) {
        
        textLogLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
       * @return The textLogLevel.
       */
      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel getTextLogLevel() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel result = yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.valueOf(textLogLevel_);
        return result == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
       * @param value The textLogLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTextLogLevel(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.LogLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        textLogLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Logging level for text_log system table. Possible values: TRACE, DEBUG, INFORMATION, WARNING, ERROR.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig.LogLevel text_log_level = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearTextLogLevel() {
        
        textLogLevel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue opentelemetrySpanLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> opentelemetrySpanLogEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       * @return Whether the opentelemetrySpanLogEnabled field is set.
       */
      public boolean hasOpentelemetrySpanLogEnabled() {
        return opentelemetrySpanLogEnabledBuilder_ != null || opentelemetrySpanLogEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       * @return The opentelemetrySpanLogEnabled.
       */
      public com.google.protobuf.BoolValue getOpentelemetrySpanLogEnabled() {
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          return opentelemetrySpanLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : opentelemetrySpanLogEnabled_;
        } else {
          return opentelemetrySpanLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      public Builder setOpentelemetrySpanLogEnabled(com.google.protobuf.BoolValue value) {
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opentelemetrySpanLogEnabled_ = value;
          onChanged();
        } else {
          opentelemetrySpanLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      public Builder setOpentelemetrySpanLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          opentelemetrySpanLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          opentelemetrySpanLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      public Builder mergeOpentelemetrySpanLogEnabled(com.google.protobuf.BoolValue value) {
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          if (opentelemetrySpanLogEnabled_ != null) {
            opentelemetrySpanLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(opentelemetrySpanLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            opentelemetrySpanLogEnabled_ = value;
          }
          onChanged();
        } else {
          opentelemetrySpanLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      public Builder clearOpentelemetrySpanLogEnabled() {
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          opentelemetrySpanLogEnabled_ = null;
          onChanged();
        } else {
          opentelemetrySpanLogEnabled_ = null;
          opentelemetrySpanLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      public com.google.protobuf.BoolValue.Builder getOpentelemetrySpanLogEnabledBuilder() {
        
        onChanged();
        return getOpentelemetrySpanLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getOpentelemetrySpanLogEnabledOrBuilder() {
        if (opentelemetrySpanLogEnabledBuilder_ != null) {
          return opentelemetrySpanLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return opentelemetrySpanLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : opentelemetrySpanLogEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable opentelemetry_span_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue opentelemetry_span_log_enabled = 42;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getOpentelemetrySpanLogEnabledFieldBuilder() {
        if (opentelemetrySpanLogEnabledBuilder_ == null) {
          opentelemetrySpanLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getOpentelemetrySpanLogEnabled(),
                  getParentForChildren(),
                  isClean());
          opentelemetrySpanLogEnabled_ = null;
        }
        return opentelemetrySpanLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value opentelemetrySpanLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> opentelemetrySpanLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the opentelemetrySpanLogRetentionSize field is set.
       */
      public boolean hasOpentelemetrySpanLogRetentionSize() {
        return opentelemetrySpanLogRetentionSizeBuilder_ != null || opentelemetrySpanLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The opentelemetrySpanLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getOpentelemetrySpanLogRetentionSize() {
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          return opentelemetrySpanLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : opentelemetrySpanLogRetentionSize_;
        } else {
          return opentelemetrySpanLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setOpentelemetrySpanLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opentelemetrySpanLogRetentionSize_ = value;
          onChanged();
        } else {
          opentelemetrySpanLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setOpentelemetrySpanLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          opentelemetrySpanLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          opentelemetrySpanLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeOpentelemetrySpanLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          if (opentelemetrySpanLogRetentionSize_ != null) {
            opentelemetrySpanLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(opentelemetrySpanLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            opentelemetrySpanLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          opentelemetrySpanLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearOpentelemetrySpanLogRetentionSize() {
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          opentelemetrySpanLogRetentionSize_ = null;
          onChanged();
        } else {
          opentelemetrySpanLogRetentionSize_ = null;
          opentelemetrySpanLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getOpentelemetrySpanLogRetentionSizeBuilder() {
        
        onChanged();
        return getOpentelemetrySpanLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getOpentelemetrySpanLogRetentionSizeOrBuilder() {
        if (opentelemetrySpanLogRetentionSizeBuilder_ != null) {
          return opentelemetrySpanLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return opentelemetrySpanLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : opentelemetrySpanLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that opentelemetry_span_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of opentelemetry_span_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_size = 55 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getOpentelemetrySpanLogRetentionSizeFieldBuilder() {
        if (opentelemetrySpanLogRetentionSizeBuilder_ == null) {
          opentelemetrySpanLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getOpentelemetrySpanLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          opentelemetrySpanLogRetentionSize_ = null;
        }
        return opentelemetrySpanLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value opentelemetrySpanLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> opentelemetrySpanLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the opentelemetrySpanLogRetentionTime field is set.
       */
      public boolean hasOpentelemetrySpanLogRetentionTime() {
        return opentelemetrySpanLogRetentionTimeBuilder_ != null || opentelemetrySpanLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The opentelemetrySpanLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getOpentelemetrySpanLogRetentionTime() {
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          return opentelemetrySpanLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : opentelemetrySpanLogRetentionTime_;
        } else {
          return opentelemetrySpanLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setOpentelemetrySpanLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          opentelemetrySpanLogRetentionTime_ = value;
          onChanged();
        } else {
          opentelemetrySpanLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setOpentelemetrySpanLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          opentelemetrySpanLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          opentelemetrySpanLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeOpentelemetrySpanLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          if (opentelemetrySpanLogRetentionTime_ != null) {
            opentelemetrySpanLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(opentelemetrySpanLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            opentelemetrySpanLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          opentelemetrySpanLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearOpentelemetrySpanLogRetentionTime() {
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          opentelemetrySpanLogRetentionTime_ = null;
          onChanged();
        } else {
          opentelemetrySpanLogRetentionTime_ = null;
          opentelemetrySpanLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getOpentelemetrySpanLogRetentionTimeBuilder() {
        
        onChanged();
        return getOpentelemetrySpanLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getOpentelemetrySpanLogRetentionTimeOrBuilder() {
        if (opentelemetrySpanLogRetentionTimeBuilder_ != null) {
          return opentelemetrySpanLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return opentelemetrySpanLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : opentelemetrySpanLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that opentelemetry_span_log records will be retained before removal. If set to 0,
       * automatic removal of opentelemetry_span_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value opentelemetry_span_log_retention_time = 56 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getOpentelemetrySpanLogRetentionTimeFieldBuilder() {
        if (opentelemetrySpanLogRetentionTimeBuilder_ == null) {
          opentelemetrySpanLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getOpentelemetrySpanLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          opentelemetrySpanLogRetentionTime_ = null;
        }
        return opentelemetrySpanLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue queryViewsLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> queryViewsLogEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       * @return Whether the queryViewsLogEnabled field is set.
       */
      public boolean hasQueryViewsLogEnabled() {
        return queryViewsLogEnabledBuilder_ != null || queryViewsLogEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       * @return The queryViewsLogEnabled.
       */
      public com.google.protobuf.BoolValue getQueryViewsLogEnabled() {
        if (queryViewsLogEnabledBuilder_ == null) {
          return queryViewsLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : queryViewsLogEnabled_;
        } else {
          return queryViewsLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      public Builder setQueryViewsLogEnabled(com.google.protobuf.BoolValue value) {
        if (queryViewsLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryViewsLogEnabled_ = value;
          onChanged();
        } else {
          queryViewsLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      public Builder setQueryViewsLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (queryViewsLogEnabledBuilder_ == null) {
          queryViewsLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          queryViewsLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      public Builder mergeQueryViewsLogEnabled(com.google.protobuf.BoolValue value) {
        if (queryViewsLogEnabledBuilder_ == null) {
          if (queryViewsLogEnabled_ != null) {
            queryViewsLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(queryViewsLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            queryViewsLogEnabled_ = value;
          }
          onChanged();
        } else {
          queryViewsLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      public Builder clearQueryViewsLogEnabled() {
        if (queryViewsLogEnabledBuilder_ == null) {
          queryViewsLogEnabled_ = null;
          onChanged();
        } else {
          queryViewsLogEnabled_ = null;
          queryViewsLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      public com.google.protobuf.BoolValue.Builder getQueryViewsLogEnabledBuilder() {
        
        onChanged();
        return getQueryViewsLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getQueryViewsLogEnabledOrBuilder() {
        if (queryViewsLogEnabledBuilder_ != null) {
          return queryViewsLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return queryViewsLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : queryViewsLogEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable query_views_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue query_views_log_enabled = 49;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getQueryViewsLogEnabledFieldBuilder() {
        if (queryViewsLogEnabledBuilder_ == null) {
          queryViewsLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getQueryViewsLogEnabled(),
                  getParentForChildren(),
                  isClean());
          queryViewsLogEnabled_ = null;
        }
        return queryViewsLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value queryViewsLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queryViewsLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the queryViewsLogRetentionSize field is set.
       */
      public boolean hasQueryViewsLogRetentionSize() {
        return queryViewsLogRetentionSizeBuilder_ != null || queryViewsLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The queryViewsLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getQueryViewsLogRetentionSize() {
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          return queryViewsLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryViewsLogRetentionSize_;
        } else {
          return queryViewsLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setQueryViewsLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryViewsLogRetentionSize_ = value;
          onChanged();
        } else {
          queryViewsLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setQueryViewsLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          queryViewsLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          queryViewsLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeQueryViewsLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          if (queryViewsLogRetentionSize_ != null) {
            queryViewsLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(queryViewsLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            queryViewsLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          queryViewsLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearQueryViewsLogRetentionSize() {
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          queryViewsLogRetentionSize_ = null;
          onChanged();
        } else {
          queryViewsLogRetentionSize_ = null;
          queryViewsLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueryViewsLogRetentionSizeBuilder() {
        
        onChanged();
        return getQueryViewsLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueryViewsLogRetentionSizeOrBuilder() {
        if (queryViewsLogRetentionSizeBuilder_ != null) {
          return queryViewsLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return queryViewsLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queryViewsLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that query_views_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of query_views_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_size = 50 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueryViewsLogRetentionSizeFieldBuilder() {
        if (queryViewsLogRetentionSizeBuilder_ == null) {
          queryViewsLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueryViewsLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          queryViewsLogRetentionSize_ = null;
        }
        return queryViewsLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value queryViewsLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> queryViewsLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the queryViewsLogRetentionTime field is set.
       */
      public boolean hasQueryViewsLogRetentionTime() {
        return queryViewsLogRetentionTimeBuilder_ != null || queryViewsLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The queryViewsLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getQueryViewsLogRetentionTime() {
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          return queryViewsLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : queryViewsLogRetentionTime_;
        } else {
          return queryViewsLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setQueryViewsLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          queryViewsLogRetentionTime_ = value;
          onChanged();
        } else {
          queryViewsLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setQueryViewsLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          queryViewsLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          queryViewsLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeQueryViewsLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          if (queryViewsLogRetentionTime_ != null) {
            queryViewsLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(queryViewsLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            queryViewsLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          queryViewsLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearQueryViewsLogRetentionTime() {
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          queryViewsLogRetentionTime_ = null;
          onChanged();
        } else {
          queryViewsLogRetentionTime_ = null;
          queryViewsLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getQueryViewsLogRetentionTimeBuilder() {
        
        onChanged();
        return getQueryViewsLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getQueryViewsLogRetentionTimeOrBuilder() {
        if (queryViewsLogRetentionTimeBuilder_ != null) {
          return queryViewsLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return queryViewsLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : queryViewsLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that query_views_log records will be retained before removal. If set to 0,
       * automatic removal of query_views_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value query_views_log_retention_time = 51 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getQueryViewsLogRetentionTimeFieldBuilder() {
        if (queryViewsLogRetentionTimeBuilder_ == null) {
          queryViewsLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getQueryViewsLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          queryViewsLogRetentionTime_ = null;
        }
        return queryViewsLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue asynchronousMetricLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> asynchronousMetricLogEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       * @return Whether the asynchronousMetricLogEnabled field is set.
       */
      public boolean hasAsynchronousMetricLogEnabled() {
        return asynchronousMetricLogEnabledBuilder_ != null || asynchronousMetricLogEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       * @return The asynchronousMetricLogEnabled.
       */
      public com.google.protobuf.BoolValue getAsynchronousMetricLogEnabled() {
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          return asynchronousMetricLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : asynchronousMetricLogEnabled_;
        } else {
          return asynchronousMetricLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      public Builder setAsynchronousMetricLogEnabled(com.google.protobuf.BoolValue value) {
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          asynchronousMetricLogEnabled_ = value;
          onChanged();
        } else {
          asynchronousMetricLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      public Builder setAsynchronousMetricLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          asynchronousMetricLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          asynchronousMetricLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      public Builder mergeAsynchronousMetricLogEnabled(com.google.protobuf.BoolValue value) {
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          if (asynchronousMetricLogEnabled_ != null) {
            asynchronousMetricLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(asynchronousMetricLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            asynchronousMetricLogEnabled_ = value;
          }
          onChanged();
        } else {
          asynchronousMetricLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      public Builder clearAsynchronousMetricLogEnabled() {
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          asynchronousMetricLogEnabled_ = null;
          onChanged();
        } else {
          asynchronousMetricLogEnabled_ = null;
          asynchronousMetricLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      public com.google.protobuf.BoolValue.Builder getAsynchronousMetricLogEnabledBuilder() {
        
        onChanged();
        return getAsynchronousMetricLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getAsynchronousMetricLogEnabledOrBuilder() {
        if (asynchronousMetricLogEnabledBuilder_ != null) {
          return asynchronousMetricLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return asynchronousMetricLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : asynchronousMetricLogEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable asynchronous_metric_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_metric_log_enabled = 52;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getAsynchronousMetricLogEnabledFieldBuilder() {
        if (asynchronousMetricLogEnabledBuilder_ == null) {
          asynchronousMetricLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getAsynchronousMetricLogEnabled(),
                  getParentForChildren(),
                  isClean());
          asynchronousMetricLogEnabled_ = null;
        }
        return asynchronousMetricLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value asynchronousMetricLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> asynchronousMetricLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the asynchronousMetricLogRetentionSize field is set.
       */
      public boolean hasAsynchronousMetricLogRetentionSize() {
        return asynchronousMetricLogRetentionSizeBuilder_ != null || asynchronousMetricLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The asynchronousMetricLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getAsynchronousMetricLogRetentionSize() {
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          return asynchronousMetricLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousMetricLogRetentionSize_;
        } else {
          return asynchronousMetricLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousMetricLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          asynchronousMetricLogRetentionSize_ = value;
          onChanged();
        } else {
          asynchronousMetricLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousMetricLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          asynchronousMetricLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          asynchronousMetricLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeAsynchronousMetricLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          if (asynchronousMetricLogRetentionSize_ != null) {
            asynchronousMetricLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(asynchronousMetricLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            asynchronousMetricLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          asynchronousMetricLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearAsynchronousMetricLogRetentionSize() {
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          asynchronousMetricLogRetentionSize_ = null;
          onChanged();
        } else {
          asynchronousMetricLogRetentionSize_ = null;
          asynchronousMetricLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getAsynchronousMetricLogRetentionSizeBuilder() {
        
        onChanged();
        return getAsynchronousMetricLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getAsynchronousMetricLogRetentionSizeOrBuilder() {
        if (asynchronousMetricLogRetentionSizeBuilder_ != null) {
          return asynchronousMetricLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return asynchronousMetricLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousMetricLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that asynchronous_metric_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_metric_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_size = 53 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getAsynchronousMetricLogRetentionSizeFieldBuilder() {
        if (asynchronousMetricLogRetentionSizeBuilder_ == null) {
          asynchronousMetricLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getAsynchronousMetricLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          asynchronousMetricLogRetentionSize_ = null;
        }
        return asynchronousMetricLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value asynchronousMetricLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> asynchronousMetricLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the asynchronousMetricLogRetentionTime field is set.
       */
      public boolean hasAsynchronousMetricLogRetentionTime() {
        return asynchronousMetricLogRetentionTimeBuilder_ != null || asynchronousMetricLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The asynchronousMetricLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getAsynchronousMetricLogRetentionTime() {
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          return asynchronousMetricLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousMetricLogRetentionTime_;
        } else {
          return asynchronousMetricLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousMetricLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          asynchronousMetricLogRetentionTime_ = value;
          onChanged();
        } else {
          asynchronousMetricLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousMetricLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          asynchronousMetricLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          asynchronousMetricLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeAsynchronousMetricLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          if (asynchronousMetricLogRetentionTime_ != null) {
            asynchronousMetricLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(asynchronousMetricLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            asynchronousMetricLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          asynchronousMetricLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearAsynchronousMetricLogRetentionTime() {
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          asynchronousMetricLogRetentionTime_ = null;
          onChanged();
        } else {
          asynchronousMetricLogRetentionTime_ = null;
          asynchronousMetricLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getAsynchronousMetricLogRetentionTimeBuilder() {
        
        onChanged();
        return getAsynchronousMetricLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getAsynchronousMetricLogRetentionTimeOrBuilder() {
        if (asynchronousMetricLogRetentionTimeBuilder_ != null) {
          return asynchronousMetricLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return asynchronousMetricLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousMetricLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that asynchronous_metric_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_metric_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_metric_log_retention_time = 54 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getAsynchronousMetricLogRetentionTimeFieldBuilder() {
        if (asynchronousMetricLogRetentionTimeBuilder_ == null) {
          asynchronousMetricLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getAsynchronousMetricLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          asynchronousMetricLogRetentionTime_ = null;
        }
        return asynchronousMetricLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue sessionLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> sessionLogEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       * @return Whether the sessionLogEnabled field is set.
       */
      public boolean hasSessionLogEnabled() {
        return sessionLogEnabledBuilder_ != null || sessionLogEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       * @return The sessionLogEnabled.
       */
      public com.google.protobuf.BoolValue getSessionLogEnabled() {
        if (sessionLogEnabledBuilder_ == null) {
          return sessionLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : sessionLogEnabled_;
        } else {
          return sessionLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      public Builder setSessionLogEnabled(com.google.protobuf.BoolValue value) {
        if (sessionLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sessionLogEnabled_ = value;
          onChanged();
        } else {
          sessionLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      public Builder setSessionLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (sessionLogEnabledBuilder_ == null) {
          sessionLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          sessionLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      public Builder mergeSessionLogEnabled(com.google.protobuf.BoolValue value) {
        if (sessionLogEnabledBuilder_ == null) {
          if (sessionLogEnabled_ != null) {
            sessionLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(sessionLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            sessionLogEnabled_ = value;
          }
          onChanged();
        } else {
          sessionLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      public Builder clearSessionLogEnabled() {
        if (sessionLogEnabledBuilder_ == null) {
          sessionLogEnabled_ = null;
          onChanged();
        } else {
          sessionLogEnabled_ = null;
          sessionLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      public com.google.protobuf.BoolValue.Builder getSessionLogEnabledBuilder() {
        
        onChanged();
        return getSessionLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getSessionLogEnabledOrBuilder() {
        if (sessionLogEnabledBuilder_ != null) {
          return sessionLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return sessionLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : sessionLogEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable session_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue session_log_enabled = 57;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getSessionLogEnabledFieldBuilder() {
        if (sessionLogEnabledBuilder_ == null) {
          sessionLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getSessionLogEnabled(),
                  getParentForChildren(),
                  isClean());
          sessionLogEnabled_ = null;
        }
        return sessionLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value sessionLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> sessionLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the sessionLogRetentionSize field is set.
       */
      public boolean hasSessionLogRetentionSize() {
        return sessionLogRetentionSizeBuilder_ != null || sessionLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The sessionLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getSessionLogRetentionSize() {
        if (sessionLogRetentionSizeBuilder_ == null) {
          return sessionLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sessionLogRetentionSize_;
        } else {
          return sessionLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setSessionLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (sessionLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sessionLogRetentionSize_ = value;
          onChanged();
        } else {
          sessionLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setSessionLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (sessionLogRetentionSizeBuilder_ == null) {
          sessionLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          sessionLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeSessionLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (sessionLogRetentionSizeBuilder_ == null) {
          if (sessionLogRetentionSize_ != null) {
            sessionLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(sessionLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            sessionLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          sessionLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearSessionLogRetentionSize() {
        if (sessionLogRetentionSizeBuilder_ == null) {
          sessionLogRetentionSize_ = null;
          onChanged();
        } else {
          sessionLogRetentionSize_ = null;
          sessionLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getSessionLogRetentionSizeBuilder() {
        
        onChanged();
        return getSessionLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getSessionLogRetentionSizeOrBuilder() {
        if (sessionLogRetentionSizeBuilder_ != null) {
          return sessionLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return sessionLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : sessionLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that session_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of session_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_size = 58 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getSessionLogRetentionSizeFieldBuilder() {
        if (sessionLogRetentionSizeBuilder_ == null) {
          sessionLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getSessionLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          sessionLogRetentionSize_ = null;
        }
        return sessionLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value sessionLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> sessionLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the sessionLogRetentionTime field is set.
       */
      public boolean hasSessionLogRetentionTime() {
        return sessionLogRetentionTimeBuilder_ != null || sessionLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The sessionLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getSessionLogRetentionTime() {
        if (sessionLogRetentionTimeBuilder_ == null) {
          return sessionLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : sessionLogRetentionTime_;
        } else {
          return sessionLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setSessionLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (sessionLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sessionLogRetentionTime_ = value;
          onChanged();
        } else {
          sessionLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setSessionLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (sessionLogRetentionTimeBuilder_ == null) {
          sessionLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          sessionLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeSessionLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (sessionLogRetentionTimeBuilder_ == null) {
          if (sessionLogRetentionTime_ != null) {
            sessionLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(sessionLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            sessionLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          sessionLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearSessionLogRetentionTime() {
        if (sessionLogRetentionTimeBuilder_ == null) {
          sessionLogRetentionTime_ = null;
          onChanged();
        } else {
          sessionLogRetentionTime_ = null;
          sessionLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getSessionLogRetentionTimeBuilder() {
        
        onChanged();
        return getSessionLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getSessionLogRetentionTimeOrBuilder() {
        if (sessionLogRetentionTimeBuilder_ != null) {
          return sessionLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return sessionLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : sessionLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that session_log records will be retained before removal. If set to 0,
       * automatic removal of session_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value session_log_retention_time = 59 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getSessionLogRetentionTimeFieldBuilder() {
        if (sessionLogRetentionTimeBuilder_ == null) {
          sessionLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getSessionLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          sessionLogRetentionTime_ = null;
        }
        return sessionLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue zookeeperLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> zookeeperLogEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       * @return Whether the zookeeperLogEnabled field is set.
       */
      public boolean hasZookeeperLogEnabled() {
        return zookeeperLogEnabledBuilder_ != null || zookeeperLogEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       * @return The zookeeperLogEnabled.
       */
      public com.google.protobuf.BoolValue getZookeeperLogEnabled() {
        if (zookeeperLogEnabledBuilder_ == null) {
          return zookeeperLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : zookeeperLogEnabled_;
        } else {
          return zookeeperLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      public Builder setZookeeperLogEnabled(com.google.protobuf.BoolValue value) {
        if (zookeeperLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          zookeeperLogEnabled_ = value;
          onChanged();
        } else {
          zookeeperLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      public Builder setZookeeperLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (zookeeperLogEnabledBuilder_ == null) {
          zookeeperLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          zookeeperLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      public Builder mergeZookeeperLogEnabled(com.google.protobuf.BoolValue value) {
        if (zookeeperLogEnabledBuilder_ == null) {
          if (zookeeperLogEnabled_ != null) {
            zookeeperLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(zookeeperLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            zookeeperLogEnabled_ = value;
          }
          onChanged();
        } else {
          zookeeperLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      public Builder clearZookeeperLogEnabled() {
        if (zookeeperLogEnabledBuilder_ == null) {
          zookeeperLogEnabled_ = null;
          onChanged();
        } else {
          zookeeperLogEnabled_ = null;
          zookeeperLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      public com.google.protobuf.BoolValue.Builder getZookeeperLogEnabledBuilder() {
        
        onChanged();
        return getZookeeperLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getZookeeperLogEnabledOrBuilder() {
        if (zookeeperLogEnabledBuilder_ != null) {
          return zookeeperLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return zookeeperLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : zookeeperLogEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable zookeeper_log system table. Default value: false.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue zookeeper_log_enabled = 60;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getZookeeperLogEnabledFieldBuilder() {
        if (zookeeperLogEnabledBuilder_ == null) {
          zookeeperLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getZookeeperLogEnabled(),
                  getParentForChildren(),
                  isClean());
          zookeeperLogEnabled_ = null;
        }
        return zookeeperLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value zookeeperLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> zookeeperLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the zookeeperLogRetentionSize field is set.
       */
      public boolean hasZookeeperLogRetentionSize() {
        return zookeeperLogRetentionSizeBuilder_ != null || zookeeperLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The zookeeperLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getZookeeperLogRetentionSize() {
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          return zookeeperLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : zookeeperLogRetentionSize_;
        } else {
          return zookeeperLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setZookeeperLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          zookeeperLogRetentionSize_ = value;
          onChanged();
        } else {
          zookeeperLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setZookeeperLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          zookeeperLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          zookeeperLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeZookeeperLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          if (zookeeperLogRetentionSize_ != null) {
            zookeeperLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(zookeeperLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            zookeeperLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          zookeeperLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearZookeeperLogRetentionSize() {
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          zookeeperLogRetentionSize_ = null;
          onChanged();
        } else {
          zookeeperLogRetentionSize_ = null;
          zookeeperLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getZookeeperLogRetentionSizeBuilder() {
        
        onChanged();
        return getZookeeperLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getZookeeperLogRetentionSizeOrBuilder() {
        if (zookeeperLogRetentionSizeBuilder_ != null) {
          return zookeeperLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return zookeeperLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : zookeeperLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that zookeeper_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of zookeeper_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_size = 61 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getZookeeperLogRetentionSizeFieldBuilder() {
        if (zookeeperLogRetentionSizeBuilder_ == null) {
          zookeeperLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getZookeeperLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          zookeeperLogRetentionSize_ = null;
        }
        return zookeeperLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value zookeeperLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> zookeeperLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the zookeeperLogRetentionTime field is set.
       */
      public boolean hasZookeeperLogRetentionTime() {
        return zookeeperLogRetentionTimeBuilder_ != null || zookeeperLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The zookeeperLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getZookeeperLogRetentionTime() {
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          return zookeeperLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : zookeeperLogRetentionTime_;
        } else {
          return zookeeperLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setZookeeperLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          zookeeperLogRetentionTime_ = value;
          onChanged();
        } else {
          zookeeperLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setZookeeperLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          zookeeperLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          zookeeperLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeZookeeperLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          if (zookeeperLogRetentionTime_ != null) {
            zookeeperLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(zookeeperLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            zookeeperLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          zookeeperLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearZookeeperLogRetentionTime() {
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          zookeeperLogRetentionTime_ = null;
          onChanged();
        } else {
          zookeeperLogRetentionTime_ = null;
          zookeeperLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getZookeeperLogRetentionTimeBuilder() {
        
        onChanged();
        return getZookeeperLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getZookeeperLogRetentionTimeOrBuilder() {
        if (zookeeperLogRetentionTimeBuilder_ != null) {
          return zookeeperLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return zookeeperLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : zookeeperLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that zookeeper_log records will be retained before removal. If set to 0,
       * automatic removal of zookeeper_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value zookeeper_log_retention_time = 62 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getZookeeperLogRetentionTimeFieldBuilder() {
        if (zookeeperLogRetentionTimeBuilder_ == null) {
          zookeeperLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getZookeeperLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          zookeeperLogRetentionTime_ = null;
        }
        return zookeeperLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.BoolValue asynchronousInsertLogEnabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> asynchronousInsertLogEnabledBuilder_;
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       * @return Whether the asynchronousInsertLogEnabled field is set.
       */
      public boolean hasAsynchronousInsertLogEnabled() {
        return asynchronousInsertLogEnabledBuilder_ != null || asynchronousInsertLogEnabled_ != null;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       * @return The asynchronousInsertLogEnabled.
       */
      public com.google.protobuf.BoolValue getAsynchronousInsertLogEnabled() {
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          return asynchronousInsertLogEnabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : asynchronousInsertLogEnabled_;
        } else {
          return asynchronousInsertLogEnabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      public Builder setAsynchronousInsertLogEnabled(com.google.protobuf.BoolValue value) {
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          asynchronousInsertLogEnabled_ = value;
          onChanged();
        } else {
          asynchronousInsertLogEnabledBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      public Builder setAsynchronousInsertLogEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          asynchronousInsertLogEnabled_ = builderForValue.build();
          onChanged();
        } else {
          asynchronousInsertLogEnabledBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      public Builder mergeAsynchronousInsertLogEnabled(com.google.protobuf.BoolValue value) {
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          if (asynchronousInsertLogEnabled_ != null) {
            asynchronousInsertLogEnabled_ =
              com.google.protobuf.BoolValue.newBuilder(asynchronousInsertLogEnabled_).mergeFrom(value).buildPartial();
          } else {
            asynchronousInsertLogEnabled_ = value;
          }
          onChanged();
        } else {
          asynchronousInsertLogEnabledBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      public Builder clearAsynchronousInsertLogEnabled() {
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          asynchronousInsertLogEnabled_ = null;
          onChanged();
        } else {
          asynchronousInsertLogEnabled_ = null;
          asynchronousInsertLogEnabledBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      public com.google.protobuf.BoolValue.Builder getAsynchronousInsertLogEnabledBuilder() {
        
        onChanged();
        return getAsynchronousInsertLogEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getAsynchronousInsertLogEnabledOrBuilder() {
        if (asynchronousInsertLogEnabledBuilder_ != null) {
          return asynchronousInsertLogEnabledBuilder_.getMessageOrBuilder();
        } else {
          return asynchronousInsertLogEnabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : asynchronousInsertLogEnabled_;
        }
      }
      /**
       * <pre>
       * Enable or disable asynchronous_insert_log system table. Default value: false.
       * Minimal required ClickHouse version: 22.10.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue asynchronous_insert_log_enabled = 63;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getAsynchronousInsertLogEnabledFieldBuilder() {
        if (asynchronousInsertLogEnabledBuilder_ == null) {
          asynchronousInsertLogEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getAsynchronousInsertLogEnabled(),
                  getParentForChildren(),
                  isClean());
          asynchronousInsertLogEnabled_ = null;
        }
        return asynchronousInsertLogEnabledBuilder_;
      }

      private com.google.protobuf.Int64Value asynchronousInsertLogRetentionSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> asynchronousInsertLogRetentionSizeBuilder_;
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the asynchronousInsertLogRetentionSize field is set.
       */
      public boolean hasAsynchronousInsertLogRetentionSize() {
        return asynchronousInsertLogRetentionSizeBuilder_ != null || asynchronousInsertLogRetentionSize_ != null;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The asynchronousInsertLogRetentionSize.
       */
      public com.google.protobuf.Int64Value getAsynchronousInsertLogRetentionSize() {
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          return asynchronousInsertLogRetentionSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousInsertLogRetentionSize_;
        } else {
          return asynchronousInsertLogRetentionSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousInsertLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          asynchronousInsertLogRetentionSize_ = value;
          onChanged();
        } else {
          asynchronousInsertLogRetentionSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousInsertLogRetentionSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          asynchronousInsertLogRetentionSize_ = builderForValue.build();
          onChanged();
        } else {
          asynchronousInsertLogRetentionSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeAsynchronousInsertLogRetentionSize(com.google.protobuf.Int64Value value) {
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          if (asynchronousInsertLogRetentionSize_ != null) {
            asynchronousInsertLogRetentionSize_ =
              com.google.protobuf.Int64Value.newBuilder(asynchronousInsertLogRetentionSize_).mergeFrom(value).buildPartial();
          } else {
            asynchronousInsertLogRetentionSize_ = value;
          }
          onChanged();
        } else {
          asynchronousInsertLogRetentionSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearAsynchronousInsertLogRetentionSize() {
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          asynchronousInsertLogRetentionSize_ = null;
          onChanged();
        } else {
          asynchronousInsertLogRetentionSize_ = null;
          asynchronousInsertLogRetentionSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getAsynchronousInsertLogRetentionSizeBuilder() {
        
        onChanged();
        return getAsynchronousInsertLogRetentionSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getAsynchronousInsertLogRetentionSizeOrBuilder() {
        if (asynchronousInsertLogRetentionSizeBuilder_ != null) {
          return asynchronousInsertLogRetentionSizeBuilder_.getMessageOrBuilder();
        } else {
          return asynchronousInsertLogRetentionSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousInsertLogRetentionSize_;
        }
      }
      /**
       * <pre>
       * The maximum size that asynchronous_insert_log can grow to before old data will be removed. If set to 0 (default),
       * automatic removal of asynchronous_insert_log data based on size is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_size = 64 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getAsynchronousInsertLogRetentionSizeFieldBuilder() {
        if (asynchronousInsertLogRetentionSizeBuilder_ == null) {
          asynchronousInsertLogRetentionSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getAsynchronousInsertLogRetentionSize(),
                  getParentForChildren(),
                  isClean());
          asynchronousInsertLogRetentionSize_ = null;
        }
        return asynchronousInsertLogRetentionSizeBuilder_;
      }

      private com.google.protobuf.Int64Value asynchronousInsertLogRetentionTime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> asynchronousInsertLogRetentionTimeBuilder_;
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return Whether the asynchronousInsertLogRetentionTime field is set.
       */
      public boolean hasAsynchronousInsertLogRetentionTime() {
        return asynchronousInsertLogRetentionTimeBuilder_ != null || asynchronousInsertLogRetentionTime_ != null;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       * @return The asynchronousInsertLogRetentionTime.
       */
      public com.google.protobuf.Int64Value getAsynchronousInsertLogRetentionTime() {
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          return asynchronousInsertLogRetentionTime_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousInsertLogRetentionTime_;
        } else {
          return asynchronousInsertLogRetentionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousInsertLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          asynchronousInsertLogRetentionTime_ = value;
          onChanged();
        } else {
          asynchronousInsertLogRetentionTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder setAsynchronousInsertLogRetentionTime(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          asynchronousInsertLogRetentionTime_ = builderForValue.build();
          onChanged();
        } else {
          asynchronousInsertLogRetentionTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder mergeAsynchronousInsertLogRetentionTime(com.google.protobuf.Int64Value value) {
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          if (asynchronousInsertLogRetentionTime_ != null) {
            asynchronousInsertLogRetentionTime_ =
              com.google.protobuf.Int64Value.newBuilder(asynchronousInsertLogRetentionTime_).mergeFrom(value).buildPartial();
          } else {
            asynchronousInsertLogRetentionTime_ = value;
          }
          onChanged();
        } else {
          asynchronousInsertLogRetentionTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public Builder clearAsynchronousInsertLogRetentionTime() {
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          asynchronousInsertLogRetentionTime_ = null;
          onChanged();
        } else {
          asynchronousInsertLogRetentionTime_ = null;
          asynchronousInsertLogRetentionTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getAsynchronousInsertLogRetentionTimeBuilder() {
        
        onChanged();
        return getAsynchronousInsertLogRetentionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getAsynchronousInsertLogRetentionTimeOrBuilder() {
        if (asynchronousInsertLogRetentionTimeBuilder_ != null) {
          return asynchronousInsertLogRetentionTimeBuilder_.getMessageOrBuilder();
        } else {
          return asynchronousInsertLogRetentionTime_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : asynchronousInsertLogRetentionTime_;
        }
      }
      /**
       * <pre>
       * The maximum time that asynchronous_insert_log records will be retained before removal. If set to 0,
       * automatic removal of asynchronous_insert_log data based on time is disabled.
       * </pre>
       *
       * <code>.google.protobuf.Int64Value asynchronous_insert_log_retention_time = 65 [(.yandex.cloud.value) = "&gt;=0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getAsynchronousInsertLogRetentionTimeFieldBuilder() {
        if (asynchronousInsertLogRetentionTimeBuilder_ == null) {
          asynchronousInsertLogRetentionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getAsynchronousInsertLogRetentionTime(),
                  getParentForChildren(),
                  isClean());
          asynchronousInsertLogRetentionTime_ = null;
        }
        return asynchronousInsertLogRetentionTimeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundPoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundPoolSizeBuilder_;
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundPoolSize field is set.
       */
      public boolean hasBackgroundPoolSize() {
        return backgroundPoolSizeBuilder_ != null || backgroundPoolSize_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundPoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundPoolSize() {
        if (backgroundPoolSizeBuilder_ == null) {
          return backgroundPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundPoolSize_;
        } else {
          return backgroundPoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundPoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundPoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundPoolSize_ = value;
          onChanged();
        } else {
          backgroundPoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundPoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundPoolSizeBuilder_ == null) {
          backgroundPoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundPoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundPoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundPoolSizeBuilder_ == null) {
          if (backgroundPoolSize_ != null) {
            backgroundPoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundPoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundPoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundPoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundPoolSize() {
        if (backgroundPoolSizeBuilder_ == null) {
          backgroundPoolSize_ = null;
          onChanged();
        } else {
          backgroundPoolSize_ = null;
          backgroundPoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundPoolSizeBuilder() {
        
        onChanged();
        return getBackgroundPoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundPoolSizeOrBuilder() {
        if (backgroundPoolSizeBuilder_ != null) {
          return backgroundPoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundPoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundPoolSize_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_pool_size = 33 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundPoolSizeFieldBuilder() {
        if (backgroundPoolSizeBuilder_ == null) {
          backgroundPoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundPoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundPoolSize_ = null;
        }
        return backgroundPoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundMergesMutationsConcurrencyRatio_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundMergesMutationsConcurrencyRatioBuilder_;
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundMergesMutationsConcurrencyRatio field is set.
       */
      public boolean hasBackgroundMergesMutationsConcurrencyRatio() {
        return backgroundMergesMutationsConcurrencyRatioBuilder_ != null || backgroundMergesMutationsConcurrencyRatio_ != null;
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundMergesMutationsConcurrencyRatio.
       */
      public com.google.protobuf.Int64Value getBackgroundMergesMutationsConcurrencyRatio() {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          return backgroundMergesMutationsConcurrencyRatio_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMergesMutationsConcurrencyRatio_;
        } else {
          return backgroundMergesMutationsConcurrencyRatioBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundMergesMutationsConcurrencyRatio(com.google.protobuf.Int64Value value) {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundMergesMutationsConcurrencyRatio_ = value;
          onChanged();
        } else {
          backgroundMergesMutationsConcurrencyRatioBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundMergesMutationsConcurrencyRatio(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          backgroundMergesMutationsConcurrencyRatio_ = builderForValue.build();
          onChanged();
        } else {
          backgroundMergesMutationsConcurrencyRatioBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundMergesMutationsConcurrencyRatio(com.google.protobuf.Int64Value value) {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          if (backgroundMergesMutationsConcurrencyRatio_ != null) {
            backgroundMergesMutationsConcurrencyRatio_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundMergesMutationsConcurrencyRatio_).mergeFrom(value).buildPartial();
          } else {
            backgroundMergesMutationsConcurrencyRatio_ = value;
          }
          onChanged();
        } else {
          backgroundMergesMutationsConcurrencyRatioBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundMergesMutationsConcurrencyRatio() {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          backgroundMergesMutationsConcurrencyRatio_ = null;
          onChanged();
        } else {
          backgroundMergesMutationsConcurrencyRatio_ = null;
          backgroundMergesMutationsConcurrencyRatioBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundMergesMutationsConcurrencyRatioBuilder() {
        
        onChanged();
        return getBackgroundMergesMutationsConcurrencyRatioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundMergesMutationsConcurrencyRatioOrBuilder() {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ != null) {
          return backgroundMergesMutationsConcurrencyRatioBuilder_.getMessageOrBuilder();
        } else {
          return backgroundMergesMutationsConcurrencyRatio_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMergesMutationsConcurrencyRatio_;
        }
      }
      /**
       * <pre>
       * Sets a ratio between the number of threads and the number of background merges and mutations that can be executed concurrently. For example, if the ratio equals to 2 and background_pool_size is set to 16 then ClickHouse can execute 32 background merges concurrently. This is possible, because background operations could be suspended and postponed. This is needed to give small merges more execution priority. You can only increase this ratio at runtime. To lower it you have to restart the server. The same as for background_pool_size setting background_merges_mutations_concurrency_ratio could be applied from the default profile for backward compatibility.
       * Default: 2
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_merges_mutations_concurrency_ratio)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_merges_mutations_concurrency_ratio = 48 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundMergesMutationsConcurrencyRatioFieldBuilder() {
        if (backgroundMergesMutationsConcurrencyRatioBuilder_ == null) {
          backgroundMergesMutationsConcurrencyRatioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundMergesMutationsConcurrencyRatio(),
                  getParentForChildren(),
                  isClean());
          backgroundMergesMutationsConcurrencyRatio_ = null;
        }
        return backgroundMergesMutationsConcurrencyRatioBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundSchedulePoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundSchedulePoolSizeBuilder_;
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundSchedulePoolSize field is set.
       */
      public boolean hasBackgroundSchedulePoolSize() {
        return backgroundSchedulePoolSizeBuilder_ != null || backgroundSchedulePoolSize_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundSchedulePoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundSchedulePoolSize() {
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          return backgroundSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundSchedulePoolSize_;
        } else {
          return backgroundSchedulePoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundSchedulePoolSize_ = value;
          onChanged();
        } else {
          backgroundSchedulePoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundSchedulePoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          backgroundSchedulePoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundSchedulePoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          if (backgroundSchedulePoolSize_ != null) {
            backgroundSchedulePoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundSchedulePoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundSchedulePoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundSchedulePoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundSchedulePoolSize() {
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          backgroundSchedulePoolSize_ = null;
          onChanged();
        } else {
          backgroundSchedulePoolSize_ = null;
          backgroundSchedulePoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundSchedulePoolSizeBuilder() {
        
        onChanged();
        return getBackgroundSchedulePoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundSchedulePoolSizeOrBuilder() {
        if (backgroundSchedulePoolSizeBuilder_ != null) {
          return backgroundSchedulePoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundSchedulePoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundSchedulePoolSize_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_schedule_pool_size = 34 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundSchedulePoolSizeFieldBuilder() {
        if (backgroundSchedulePoolSizeBuilder_ == null) {
          backgroundSchedulePoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundSchedulePoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundSchedulePoolSize_ = null;
        }
        return backgroundSchedulePoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundFetchesPoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundFetchesPoolSizeBuilder_;
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundFetchesPoolSize field is set.
       */
      public boolean hasBackgroundFetchesPoolSize() {
        return backgroundFetchesPoolSizeBuilder_ != null || backgroundFetchesPoolSize_ != null;
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundFetchesPoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundFetchesPoolSize() {
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          return backgroundFetchesPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundFetchesPoolSize_;
        } else {
          return backgroundFetchesPoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundFetchesPoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundFetchesPoolSize_ = value;
          onChanged();
        } else {
          backgroundFetchesPoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundFetchesPoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          backgroundFetchesPoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundFetchesPoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundFetchesPoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          if (backgroundFetchesPoolSize_ != null) {
            backgroundFetchesPoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundFetchesPoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundFetchesPoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundFetchesPoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundFetchesPoolSize() {
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          backgroundFetchesPoolSize_ = null;
          onChanged();
        } else {
          backgroundFetchesPoolSize_ = null;
          backgroundFetchesPoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundFetchesPoolSizeBuilder() {
        
        onChanged();
        return getBackgroundFetchesPoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundFetchesPoolSizeOrBuilder() {
        if (backgroundFetchesPoolSizeBuilder_ != null) {
          return backgroundFetchesPoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundFetchesPoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundFetchesPoolSize_;
        }
      }
      /**
       * <pre>
       * Sets the number of threads performing background fetches for tables with **ReplicatedMergeTree** engines. Default value: 8.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#background_fetches_pool_size).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_fetches_pool_size = 38 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundFetchesPoolSizeFieldBuilder() {
        if (backgroundFetchesPoolSizeBuilder_ == null) {
          backgroundFetchesPoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundFetchesPoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundFetchesPoolSize_ = null;
        }
        return backgroundFetchesPoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundMovePoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundMovePoolSizeBuilder_;
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundMovePoolSize field is set.
       */
      public boolean hasBackgroundMovePoolSize() {
        return backgroundMovePoolSizeBuilder_ != null || backgroundMovePoolSize_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundMovePoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundMovePoolSize() {
        if (backgroundMovePoolSizeBuilder_ == null) {
          return backgroundMovePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMovePoolSize_;
        } else {
          return backgroundMovePoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundMovePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundMovePoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundMovePoolSize_ = value;
          onChanged();
        } else {
          backgroundMovePoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundMovePoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundMovePoolSizeBuilder_ == null) {
          backgroundMovePoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundMovePoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundMovePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundMovePoolSizeBuilder_ == null) {
          if (backgroundMovePoolSize_ != null) {
            backgroundMovePoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundMovePoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundMovePoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundMovePoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundMovePoolSize() {
        if (backgroundMovePoolSizeBuilder_ == null) {
          backgroundMovePoolSize_ = null;
          onChanged();
        } else {
          backgroundMovePoolSize_ = null;
          backgroundMovePoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundMovePoolSizeBuilder() {
        
        onChanged();
        return getBackgroundMovePoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundMovePoolSizeOrBuilder() {
        if (backgroundMovePoolSizeBuilder_ != null) {
          return backgroundMovePoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundMovePoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMovePoolSize_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_move_pool_size = 39 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundMovePoolSizeFieldBuilder() {
        if (backgroundMovePoolSizeBuilder_ == null) {
          backgroundMovePoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundMovePoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundMovePoolSize_ = null;
        }
        return backgroundMovePoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundDistributedSchedulePoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundDistributedSchedulePoolSizeBuilder_;
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundDistributedSchedulePoolSize field is set.
       */
      public boolean hasBackgroundDistributedSchedulePoolSize() {
        return backgroundDistributedSchedulePoolSizeBuilder_ != null || backgroundDistributedSchedulePoolSize_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundDistributedSchedulePoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundDistributedSchedulePoolSize() {
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          return backgroundDistributedSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundDistributedSchedulePoolSize_;
        } else {
          return backgroundDistributedSchedulePoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundDistributedSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundDistributedSchedulePoolSize_ = value;
          onChanged();
        } else {
          backgroundDistributedSchedulePoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundDistributedSchedulePoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          backgroundDistributedSchedulePoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundDistributedSchedulePoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundDistributedSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          if (backgroundDistributedSchedulePoolSize_ != null) {
            backgroundDistributedSchedulePoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundDistributedSchedulePoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundDistributedSchedulePoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundDistributedSchedulePoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundDistributedSchedulePoolSize() {
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          backgroundDistributedSchedulePoolSize_ = null;
          onChanged();
        } else {
          backgroundDistributedSchedulePoolSize_ = null;
          backgroundDistributedSchedulePoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundDistributedSchedulePoolSizeBuilder() {
        
        onChanged();
        return getBackgroundDistributedSchedulePoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundDistributedSchedulePoolSizeOrBuilder() {
        if (backgroundDistributedSchedulePoolSizeBuilder_ != null) {
          return backgroundDistributedSchedulePoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundDistributedSchedulePoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundDistributedSchedulePoolSize_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_distributed_schedule_pool_size = 40 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundDistributedSchedulePoolSizeFieldBuilder() {
        if (backgroundDistributedSchedulePoolSizeBuilder_ == null) {
          backgroundDistributedSchedulePoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundDistributedSchedulePoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundDistributedSchedulePoolSize_ = null;
        }
        return backgroundDistributedSchedulePoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundBufferFlushSchedulePoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundBufferFlushSchedulePoolSizeBuilder_;
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundBufferFlushSchedulePoolSize field is set.
       */
      public boolean hasBackgroundBufferFlushSchedulePoolSize() {
        return backgroundBufferFlushSchedulePoolSizeBuilder_ != null || backgroundBufferFlushSchedulePoolSize_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundBufferFlushSchedulePoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundBufferFlushSchedulePoolSize() {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          return backgroundBufferFlushSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundBufferFlushSchedulePoolSize_;
        } else {
          return backgroundBufferFlushSchedulePoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundBufferFlushSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundBufferFlushSchedulePoolSize_ = value;
          onChanged();
        } else {
          backgroundBufferFlushSchedulePoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundBufferFlushSchedulePoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          backgroundBufferFlushSchedulePoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundBufferFlushSchedulePoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundBufferFlushSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          if (backgroundBufferFlushSchedulePoolSize_ != null) {
            backgroundBufferFlushSchedulePoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundBufferFlushSchedulePoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundBufferFlushSchedulePoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundBufferFlushSchedulePoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundBufferFlushSchedulePoolSize() {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          backgroundBufferFlushSchedulePoolSize_ = null;
          onChanged();
        } else {
          backgroundBufferFlushSchedulePoolSize_ = null;
          backgroundBufferFlushSchedulePoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundBufferFlushSchedulePoolSizeBuilder() {
        
        onChanged();
        return getBackgroundBufferFlushSchedulePoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundBufferFlushSchedulePoolSizeOrBuilder() {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ != null) {
          return backgroundBufferFlushSchedulePoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundBufferFlushSchedulePoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundBufferFlushSchedulePoolSize_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_buffer_flush_schedule_pool_size = 41 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundBufferFlushSchedulePoolSizeFieldBuilder() {
        if (backgroundBufferFlushSchedulePoolSizeBuilder_ == null) {
          backgroundBufferFlushSchedulePoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundBufferFlushSchedulePoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundBufferFlushSchedulePoolSize_ = null;
        }
        return backgroundBufferFlushSchedulePoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundMessageBrokerSchedulePoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundMessageBrokerSchedulePoolSizeBuilder_;
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundMessageBrokerSchedulePoolSize field is set.
       */
      public boolean hasBackgroundMessageBrokerSchedulePoolSize() {
        return backgroundMessageBrokerSchedulePoolSizeBuilder_ != null || backgroundMessageBrokerSchedulePoolSize_ != null;
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundMessageBrokerSchedulePoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundMessageBrokerSchedulePoolSize() {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          return backgroundMessageBrokerSchedulePoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMessageBrokerSchedulePoolSize_;
        } else {
          return backgroundMessageBrokerSchedulePoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundMessageBrokerSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundMessageBrokerSchedulePoolSize_ = value;
          onChanged();
        } else {
          backgroundMessageBrokerSchedulePoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundMessageBrokerSchedulePoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          backgroundMessageBrokerSchedulePoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundMessageBrokerSchedulePoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundMessageBrokerSchedulePoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          if (backgroundMessageBrokerSchedulePoolSize_ != null) {
            backgroundMessageBrokerSchedulePoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundMessageBrokerSchedulePoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundMessageBrokerSchedulePoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundMessageBrokerSchedulePoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundMessageBrokerSchedulePoolSize() {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          backgroundMessageBrokerSchedulePoolSize_ = null;
          onChanged();
        } else {
          backgroundMessageBrokerSchedulePoolSize_ = null;
          backgroundMessageBrokerSchedulePoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundMessageBrokerSchedulePoolSizeBuilder() {
        
        onChanged();
        return getBackgroundMessageBrokerSchedulePoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundMessageBrokerSchedulePoolSizeOrBuilder() {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ != null) {
          return backgroundMessageBrokerSchedulePoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundMessageBrokerSchedulePoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundMessageBrokerSchedulePoolSize_;
        }
      }
      /**
       * <code>.google.protobuf.Int64Value background_message_broker_schedule_pool_size = 46 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundMessageBrokerSchedulePoolSizeFieldBuilder() {
        if (backgroundMessageBrokerSchedulePoolSizeBuilder_ == null) {
          backgroundMessageBrokerSchedulePoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundMessageBrokerSchedulePoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundMessageBrokerSchedulePoolSize_ = null;
        }
        return backgroundMessageBrokerSchedulePoolSizeBuilder_;
      }

      private com.google.protobuf.Int64Value backgroundCommonPoolSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> backgroundCommonPoolSizeBuilder_;
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return Whether the backgroundCommonPoolSize field is set.
       */
      public boolean hasBackgroundCommonPoolSize() {
        return backgroundCommonPoolSizeBuilder_ != null || backgroundCommonPoolSize_ != null;
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       * @return The backgroundCommonPoolSize.
       */
      public com.google.protobuf.Int64Value getBackgroundCommonPoolSize() {
        if (backgroundCommonPoolSizeBuilder_ == null) {
          return backgroundCommonPoolSize_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : backgroundCommonPoolSize_;
        } else {
          return backgroundCommonPoolSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundCommonPoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundCommonPoolSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundCommonPoolSize_ = value;
          onChanged();
        } else {
          backgroundCommonPoolSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder setBackgroundCommonPoolSize(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (backgroundCommonPoolSizeBuilder_ == null) {
          backgroundCommonPoolSize_ = builderForValue.build();
          onChanged();
        } else {
          backgroundCommonPoolSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder mergeBackgroundCommonPoolSize(com.google.protobuf.Int64Value value) {
        if (backgroundCommonPoolSizeBuilder_ == null) {
          if (backgroundCommonPoolSize_ != null) {
            backgroundCommonPoolSize_ =
              com.google.protobuf.Int64Value.newBuilder(backgroundCommonPoolSize_).mergeFrom(value).buildPartial();
          } else {
            backgroundCommonPoolSize_ = value;
          }
          onChanged();
        } else {
          backgroundCommonPoolSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public Builder clearBackgroundCommonPoolSize() {
        if (backgroundCommonPoolSizeBuilder_ == null) {
          backgroundCommonPoolSize_ = null;
          onChanged();
        } else {
          backgroundCommonPoolSize_ = null;
          backgroundCommonPoolSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64Value.Builder getBackgroundCommonPoolSizeBuilder() {
        
        onChanged();
        return getBackgroundCommonPoolSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getBackgroundCommonPoolSizeOrBuilder() {
        if (backgroundCommonPoolSizeBuilder_ != null) {
          return backgroundCommonPoolSizeBuilder_.getMessageOrBuilder();
        } else {
          return backgroundCommonPoolSize_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : backgroundCommonPoolSize_;
        }
      }
      /**
       * <pre>
       * The maximum number of threads that will be used for performing a variety of operations (mostly garbage collection) for *MergeTree-engine tables in a background.
       * Default: 8
       * See in-depth description in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings#background_common_pool_size)
       * </pre>
       *
       * <code>.google.protobuf.Int64Value background_common_pool_size = 47 [(.yandex.cloud.value) = "&gt;0"];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getBackgroundCommonPoolSizeFieldBuilder() {
        if (backgroundCommonPoolSizeBuilder_ == null) {
          backgroundCommonPoolSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getBackgroundCommonPoolSize(),
                  getParentForChildren(),
                  isClean());
          backgroundCommonPoolSize_ = null;
        }
        return backgroundCommonPoolSizeBuilder_;
      }

      private com.google.protobuf.StringValue defaultDatabase_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> defaultDatabaseBuilder_;
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       * @return Whether the defaultDatabase field is set.
       */
      public boolean hasDefaultDatabase() {
        return defaultDatabaseBuilder_ != null || defaultDatabase_ != null;
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       * @return The defaultDatabase.
       */
      public com.google.protobuf.StringValue getDefaultDatabase() {
        if (defaultDatabaseBuilder_ == null) {
          return defaultDatabase_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : defaultDatabase_;
        } else {
          return defaultDatabaseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      public Builder setDefaultDatabase(com.google.protobuf.StringValue value) {
        if (defaultDatabaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultDatabase_ = value;
          onChanged();
        } else {
          defaultDatabaseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      public Builder setDefaultDatabase(
          com.google.protobuf.StringValue.Builder builderForValue) {
        if (defaultDatabaseBuilder_ == null) {
          defaultDatabase_ = builderForValue.build();
          onChanged();
        } else {
          defaultDatabaseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      public Builder mergeDefaultDatabase(com.google.protobuf.StringValue value) {
        if (defaultDatabaseBuilder_ == null) {
          if (defaultDatabase_ != null) {
            defaultDatabase_ =
              com.google.protobuf.StringValue.newBuilder(defaultDatabase_).mergeFrom(value).buildPartial();
          } else {
            defaultDatabase_ = value;
          }
          onChanged();
        } else {
          defaultDatabaseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      public Builder clearDefaultDatabase() {
        if (defaultDatabaseBuilder_ == null) {
          defaultDatabase_ = null;
          onChanged();
        } else {
          defaultDatabase_ = null;
          defaultDatabaseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      public com.google.protobuf.StringValue.Builder getDefaultDatabaseBuilder() {
        
        onChanged();
        return getDefaultDatabaseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      public com.google.protobuf.StringValueOrBuilder getDefaultDatabaseOrBuilder() {
        if (defaultDatabaseBuilder_ != null) {
          return defaultDatabaseBuilder_.getMessageOrBuilder();
        } else {
          return defaultDatabase_ == null ?
              com.google.protobuf.StringValue.getDefaultInstance() : defaultDatabase_;
        }
      }
      /**
       * <pre>
       * The default database.
       * To get a list of cluster databases, see [Yandex Managed ClickHouse documentation](/docs/managed-clickhouse/operations/databases#list-db).
       * </pre>
       *
       * <code>.google.protobuf.StringValue default_database = 43;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
          getDefaultDatabaseFieldBuilder() {
        if (defaultDatabaseBuilder_ == null) {
          defaultDatabaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                  getDefaultDatabase(),
                  getParentForChildren(),
                  isClean());
          defaultDatabase_ = null;
        }
        return defaultDatabaseBuilder_;
      }

      private com.google.protobuf.Int64Value totalMemoryProfilerStep_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> totalMemoryProfilerStepBuilder_;
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       * @return Whether the totalMemoryProfilerStep field is set.
       */
      public boolean hasTotalMemoryProfilerStep() {
        return totalMemoryProfilerStepBuilder_ != null || totalMemoryProfilerStep_ != null;
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       * @return The totalMemoryProfilerStep.
       */
      public com.google.protobuf.Int64Value getTotalMemoryProfilerStep() {
        if (totalMemoryProfilerStepBuilder_ == null) {
          return totalMemoryProfilerStep_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : totalMemoryProfilerStep_;
        } else {
          return totalMemoryProfilerStepBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      public Builder setTotalMemoryProfilerStep(com.google.protobuf.Int64Value value) {
        if (totalMemoryProfilerStepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          totalMemoryProfilerStep_ = value;
          onChanged();
        } else {
          totalMemoryProfilerStepBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      public Builder setTotalMemoryProfilerStep(
          com.google.protobuf.Int64Value.Builder builderForValue) {
        if (totalMemoryProfilerStepBuilder_ == null) {
          totalMemoryProfilerStep_ = builderForValue.build();
          onChanged();
        } else {
          totalMemoryProfilerStepBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      public Builder mergeTotalMemoryProfilerStep(com.google.protobuf.Int64Value value) {
        if (totalMemoryProfilerStepBuilder_ == null) {
          if (totalMemoryProfilerStep_ != null) {
            totalMemoryProfilerStep_ =
              com.google.protobuf.Int64Value.newBuilder(totalMemoryProfilerStep_).mergeFrom(value).buildPartial();
          } else {
            totalMemoryProfilerStep_ = value;
          }
          onChanged();
        } else {
          totalMemoryProfilerStepBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      public Builder clearTotalMemoryProfilerStep() {
        if (totalMemoryProfilerStepBuilder_ == null) {
          totalMemoryProfilerStep_ = null;
          onChanged();
        } else {
          totalMemoryProfilerStep_ = null;
          totalMemoryProfilerStepBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      public com.google.protobuf.Int64Value.Builder getTotalMemoryProfilerStepBuilder() {
        
        onChanged();
        return getTotalMemoryProfilerStepFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      public com.google.protobuf.Int64ValueOrBuilder getTotalMemoryProfilerStepOrBuilder() {
        if (totalMemoryProfilerStepBuilder_ != null) {
          return totalMemoryProfilerStepBuilder_.getMessageOrBuilder();
        } else {
          return totalMemoryProfilerStep_ == null ?
              com.google.protobuf.Int64Value.getDefaultInstance() : totalMemoryProfilerStep_;
        }
      }
      /**
       * <pre>
       * Sets the memory size (in bytes) for a stack trace at every peak allocation step. Default value: **4194304**.
       * More info see in [ClickHouse documentation](https://clickhouse.com/docs/en/operations/server-configuration-parameters/settings/#total-memory-profiler-step).
       * </pre>
       *
       * <code>.google.protobuf.Int64Value total_memory_profiler_step = 44;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
          getTotalMemoryProfilerStepFieldBuilder() {
        if (totalMemoryProfilerStepBuilder_ == null) {
          totalMemoryProfilerStepBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                  getTotalMemoryProfilerStep(),
                  getParentForChildren(),
                  isClean());
          totalMemoryProfilerStep_ = null;
        }
        return totalMemoryProfilerStepBuilder_;
      }

      private com.google.protobuf.DoubleValue totalMemoryTrackerSampleProbability_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> totalMemoryTrackerSampleProbabilityBuilder_;
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       * @return Whether the totalMemoryTrackerSampleProbability field is set.
       */
      public boolean hasTotalMemoryTrackerSampleProbability() {
        return totalMemoryTrackerSampleProbabilityBuilder_ != null || totalMemoryTrackerSampleProbability_ != null;
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       * @return The totalMemoryTrackerSampleProbability.
       */
      public com.google.protobuf.DoubleValue getTotalMemoryTrackerSampleProbability() {
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          return totalMemoryTrackerSampleProbability_ == null ? com.google.protobuf.DoubleValue.getDefaultInstance() : totalMemoryTrackerSampleProbability_;
        } else {
          return totalMemoryTrackerSampleProbabilityBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      public Builder setTotalMemoryTrackerSampleProbability(com.google.protobuf.DoubleValue value) {
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          totalMemoryTrackerSampleProbability_ = value;
          onChanged();
        } else {
          totalMemoryTrackerSampleProbabilityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      public Builder setTotalMemoryTrackerSampleProbability(
          com.google.protobuf.DoubleValue.Builder builderForValue) {
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          totalMemoryTrackerSampleProbability_ = builderForValue.build();
          onChanged();
        } else {
          totalMemoryTrackerSampleProbabilityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      public Builder mergeTotalMemoryTrackerSampleProbability(com.google.protobuf.DoubleValue value) {
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          if (totalMemoryTrackerSampleProbability_ != null) {
            totalMemoryTrackerSampleProbability_ =
              com.google.protobuf.DoubleValue.newBuilder(totalMemoryTrackerSampleProbability_).mergeFrom(value).buildPartial();
          } else {
            totalMemoryTrackerSampleProbability_ = value;
          }
          onChanged();
        } else {
          totalMemoryTrackerSampleProbabilityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      public Builder clearTotalMemoryTrackerSampleProbability() {
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          totalMemoryTrackerSampleProbability_ = null;
          onChanged();
        } else {
          totalMemoryTrackerSampleProbability_ = null;
          totalMemoryTrackerSampleProbabilityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      public com.google.protobuf.DoubleValue.Builder getTotalMemoryTrackerSampleProbabilityBuilder() {
        
        onChanged();
        return getTotalMemoryTrackerSampleProbabilityFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      public com.google.protobuf.DoubleValueOrBuilder getTotalMemoryTrackerSampleProbabilityOrBuilder() {
        if (totalMemoryTrackerSampleProbabilityBuilder_ != null) {
          return totalMemoryTrackerSampleProbabilityBuilder_.getMessageOrBuilder();
        } else {
          return totalMemoryTrackerSampleProbability_ == null ?
              com.google.protobuf.DoubleValue.getDefaultInstance() : totalMemoryTrackerSampleProbability_;
        }
      }
      /**
       * <code>.google.protobuf.DoubleValue total_memory_tracker_sample_probability = 45;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder> 
          getTotalMemoryTrackerSampleProbabilityFieldBuilder() {
        if (totalMemoryTrackerSampleProbabilityBuilder_ == null) {
          totalMemoryTrackerSampleProbabilityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.DoubleValue, com.google.protobuf.DoubleValue.Builder, com.google.protobuf.DoubleValueOrBuilder>(
                  getTotalMemoryTrackerSampleProbability(),
                  getParentForChildren(),
                  isClean());
          totalMemoryTrackerSampleProbability_ = null;
        }
        return totalMemoryTrackerSampleProbabilityBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig)
    private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClickhouseConfig>
        PARSER = new com.google.protobuf.AbstractParser<ClickhouseConfig>() {
      @java.lang.Override
      public ClickhouseConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClickhouseConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClickhouseConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClickhouseConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClickhouseConfigSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective settings for a ClickHouse cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     * @return Whether the effectiveConfig field is set.
     */
    boolean hasEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a ClickHouse cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     * @return The effectiveConfig.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getEffectiveConfig();
    /**
     * <pre>
     * Effective settings for a ClickHouse cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getEffectiveConfigOrBuilder();

    /**
     * <pre>
     * User-defined settings for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
     * @return Whether the userConfig field is set.
     */
    boolean hasUserConfig();
    /**
     * <pre>
     * User-defined settings for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
     * @return The userConfig.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getUserConfig();
    /**
     * <pre>
     * User-defined settings for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getUserConfigOrBuilder();

    /**
     * <pre>
     * Default configuration for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
     * @return Whether the defaultConfig field is set.
     */
    boolean hasDefaultConfig();
    /**
     * <pre>
     * Default configuration for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
     * @return The defaultConfig.
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getDefaultConfig();
    /**
     * <pre>
     * Default configuration for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
     */
    yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getDefaultConfigOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet}
   */
  public static final class ClickhouseConfigSet extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet)
      ClickhouseConfigSetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClickhouseConfigSet.newBuilder() to construct.
    private ClickhouseConfigSet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClickhouseConfigSet() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClickhouseConfigSet();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClickhouseConfigSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder subBuilder = null;
              if (effectiveConfig_ != null) {
                subBuilder = effectiveConfig_.toBuilder();
              }
              effectiveConfig_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(effectiveConfig_);
                effectiveConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder subBuilder = null;
              if (userConfig_ != null) {
                subBuilder = userConfig_.toBuilder();
              }
              userConfig_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userConfig_);
                userConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder subBuilder = null;
              if (defaultConfig_ != null) {
                subBuilder = defaultConfig_.toBuilder();
              }
              defaultConfig_ = input.readMessage(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defaultConfig_);
                defaultConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.Builder.class);
    }

    public static final int EFFECTIVE_CONFIG_FIELD_NUMBER = 1;
    private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig effectiveConfig_;
    /**
     * <pre>
     * Effective settings for a ClickHouse cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     * @return Whether the effectiveConfig field is set.
     */
    @java.lang.Override
    public boolean hasEffectiveConfig() {
      return effectiveConfig_ != null;
    }
    /**
     * <pre>
     * Effective settings for a ClickHouse cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     * @return The effectiveConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getEffectiveConfig() {
      return effectiveConfig_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : effectiveConfig_;
    }
    /**
     * <pre>
     * Effective settings for a ClickHouse cluster (a combination of settings defined
     * in [user_config] and [default_config]).
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getEffectiveConfigOrBuilder() {
      return getEffectiveConfig();
    }

    public static final int USER_CONFIG_FIELD_NUMBER = 2;
    private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig userConfig_;
    /**
     * <pre>
     * User-defined settings for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
     * @return Whether the userConfig field is set.
     */
    @java.lang.Override
    public boolean hasUserConfig() {
      return userConfig_ != null;
    }
    /**
     * <pre>
     * User-defined settings for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
     * @return The userConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getUserConfig() {
      return userConfig_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : userConfig_;
    }
    /**
     * <pre>
     * User-defined settings for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getUserConfigOrBuilder() {
      return getUserConfig();
    }

    public static final int DEFAULT_CONFIG_FIELD_NUMBER = 3;
    private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig defaultConfig_;
    /**
     * <pre>
     * Default configuration for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
     * @return Whether the defaultConfig field is set.
     */
    @java.lang.Override
    public boolean hasDefaultConfig() {
      return defaultConfig_ != null;
    }
    /**
     * <pre>
     * Default configuration for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
     * @return The defaultConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getDefaultConfig() {
      return defaultConfig_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : defaultConfig_;
    }
    /**
     * <pre>
     * Default configuration for a ClickHouse cluster.
     * </pre>
     *
     * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getDefaultConfigOrBuilder() {
      return getDefaultConfig();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (effectiveConfig_ != null) {
        output.writeMessage(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        output.writeMessage(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        output.writeMessage(3, getDefaultConfig());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (effectiveConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEffectiveConfig());
      }
      if (userConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserConfig());
      }
      if (defaultConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefaultConfig());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet)) {
        return super.equals(obj);
      }
      yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet other = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet) obj;

      if (hasEffectiveConfig() != other.hasEffectiveConfig()) return false;
      if (hasEffectiveConfig()) {
        if (!getEffectiveConfig()
            .equals(other.getEffectiveConfig())) return false;
      }
      if (hasUserConfig() != other.hasUserConfig()) return false;
      if (hasUserConfig()) {
        if (!getUserConfig()
            .equals(other.getUserConfig())) return false;
      }
      if (hasDefaultConfig() != other.hasDefaultConfig()) return false;
      if (hasDefaultConfig()) {
        if (!getDefaultConfig()
            .equals(other.getDefaultConfig())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEffectiveConfig()) {
        hash = (37 * hash) + EFFECTIVE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getEffectiveConfig().hashCode();
      }
      if (hasUserConfig()) {
        hash = (37 * hash) + USER_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getUserConfig().hashCode();
      }
      if (hasDefaultConfig()) {
        hash = (37 * hash) + DEFAULT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultConfig().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet)
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.class, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.Builder.class);
      }

      // Construct using yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet getDefaultInstanceForType() {
        return yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet build() {
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet buildPartial() {
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet result = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet(this);
        if (effectiveConfigBuilder_ == null) {
          result.effectiveConfig_ = effectiveConfig_;
        } else {
          result.effectiveConfig_ = effectiveConfigBuilder_.build();
        }
        if (userConfigBuilder_ == null) {
          result.userConfig_ = userConfig_;
        } else {
          result.userConfig_ = userConfigBuilder_.build();
        }
        if (defaultConfigBuilder_ == null) {
          result.defaultConfig_ = defaultConfig_;
        } else {
          result.defaultConfig_ = defaultConfigBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet) {
          return mergeFrom((yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet other) {
        if (other == yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet.getDefaultInstance()) return this;
        if (other.hasEffectiveConfig()) {
          mergeEffectiveConfig(other.getEffectiveConfig());
        }
        if (other.hasUserConfig()) {
          mergeUserConfig(other.getUserConfig());
        }
        if (other.hasDefaultConfig()) {
          mergeDefaultConfig(other.getDefaultConfig());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig effectiveConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder> effectiveConfigBuilder_;
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       * @return Whether the effectiveConfig field is set.
       */
      public boolean hasEffectiveConfig() {
        return effectiveConfigBuilder_ != null || effectiveConfig_ != null;
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       * @return The effectiveConfig.
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          return effectiveConfig_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : effectiveConfig_;
        } else {
          return effectiveConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          effectiveConfig_ = value;
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder setEffectiveConfig(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder builderForValue) {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = builderForValue.build();
          onChanged();
        } else {
          effectiveConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder mergeEffectiveConfig(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig value) {
        if (effectiveConfigBuilder_ == null) {
          if (effectiveConfig_ != null) {
            effectiveConfig_ =
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.newBuilder(effectiveConfig_).mergeFrom(value).buildPartial();
          } else {
            effectiveConfig_ = value;
          }
          onChanged();
        } else {
          effectiveConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public Builder clearEffectiveConfig() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfig_ = null;
          onChanged();
        } else {
          effectiveConfig_ = null;
          effectiveConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder getEffectiveConfigBuilder() {
        
        onChanged();
        return getEffectiveConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getEffectiveConfigOrBuilder() {
        if (effectiveConfigBuilder_ != null) {
          return effectiveConfigBuilder_.getMessageOrBuilder();
        } else {
          return effectiveConfig_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : effectiveConfig_;
        }
      }
      /**
       * <pre>
       * Effective settings for a ClickHouse cluster (a combination of settings defined
       * in [user_config] and [default_config]).
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig effective_config = 1 [(.yandex.cloud.required) = true];</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder> 
          getEffectiveConfigFieldBuilder() {
        if (effectiveConfigBuilder_ == null) {
          effectiveConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder>(
                  getEffectiveConfig(),
                  getParentForChildren(),
                  isClean());
          effectiveConfig_ = null;
        }
        return effectiveConfigBuilder_;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig userConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder> userConfigBuilder_;
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       * @return Whether the userConfig field is set.
       */
      public boolean hasUserConfig() {
        return userConfigBuilder_ != null || userConfig_ != null;
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       * @return The userConfig.
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getUserConfig() {
        if (userConfigBuilder_ == null) {
          return userConfig_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : userConfig_;
        } else {
          return userConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      public Builder setUserConfig(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig value) {
        if (userConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userConfig_ = value;
          onChanged();
        } else {
          userConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      public Builder setUserConfig(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder builderForValue) {
        if (userConfigBuilder_ == null) {
          userConfig_ = builderForValue.build();
          onChanged();
        } else {
          userConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      public Builder mergeUserConfig(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig value) {
        if (userConfigBuilder_ == null) {
          if (userConfig_ != null) {
            userConfig_ =
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.newBuilder(userConfig_).mergeFrom(value).buildPartial();
          } else {
            userConfig_ = value;
          }
          onChanged();
        } else {
          userConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      public Builder clearUserConfig() {
        if (userConfigBuilder_ == null) {
          userConfig_ = null;
          onChanged();
        } else {
          userConfig_ = null;
          userConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder getUserConfigBuilder() {
        
        onChanged();
        return getUserConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getUserConfigOrBuilder() {
        if (userConfigBuilder_ != null) {
          return userConfigBuilder_.getMessageOrBuilder();
        } else {
          return userConfig_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : userConfig_;
        }
      }
      /**
       * <pre>
       * User-defined settings for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig user_config = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder> 
          getUserConfigFieldBuilder() {
        if (userConfigBuilder_ == null) {
          userConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder>(
                  getUserConfig(),
                  getParentForChildren(),
                  isClean());
          userConfig_ = null;
        }
        return userConfigBuilder_;
      }

      private yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig defaultConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder> defaultConfigBuilder_;
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       * @return Whether the defaultConfig field is set.
       */
      public boolean hasDefaultConfig() {
        return defaultConfigBuilder_ != null || defaultConfig_ != null;
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       * @return The defaultConfig.
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig getDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          return defaultConfig_ == null ? yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : defaultConfig_;
        } else {
          return defaultConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultConfig_ = value;
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      public Builder setDefaultConfig(
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder builderForValue) {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = builderForValue.build();
          onChanged();
        } else {
          defaultConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      public Builder mergeDefaultConfig(yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig value) {
        if (defaultConfigBuilder_ == null) {
          if (defaultConfig_ != null) {
            defaultConfig_ =
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.newBuilder(defaultConfig_).mergeFrom(value).buildPartial();
          } else {
            defaultConfig_ = value;
          }
          onChanged();
        } else {
          defaultConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      public Builder clearDefaultConfig() {
        if (defaultConfigBuilder_ == null) {
          defaultConfig_ = null;
          onChanged();
        } else {
          defaultConfig_ = null;
          defaultConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder getDefaultConfigBuilder() {
        
        onChanged();
        return getDefaultConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder getDefaultConfigOrBuilder() {
        if (defaultConfigBuilder_ != null) {
          return defaultConfigBuilder_.getMessageOrBuilder();
        } else {
          return defaultConfig_ == null ?
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.getDefaultInstance() : defaultConfig_;
        }
      }
      /**
       * <pre>
       * Default configuration for a ClickHouse cluster.
       * </pre>
       *
       * <code>.yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfig default_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder> 
          getDefaultConfigFieldBuilder() {
        if (defaultConfigBuilder_ == null) {
          defaultConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfig.Builder, yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigOrBuilder>(
                  getDefaultConfig(),
                  getParentForChildren(),
                  isClean());
          defaultConfig_ = null;
        }
        return defaultConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.mdb.clickhouse.v1.config.ClickhouseConfigSet)
    private static final yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet();
    }

    public static yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClickhouseConfigSet>
        PARSER = new com.google.protobuf.AbstractParser<ClickhouseConfigSet>() {
      @java.lang.Override
      public ClickhouseConfigSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClickhouseConfigSet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClickhouseConfigSet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClickhouseConfigSet> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.mdb.clickhouse.v1.config.Clickhouse.ClickhouseConfigSet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6yandex/cloud/mdb/clickhouse/v1/config/" +
      "clickhouse.proto\022%yandex.cloud.mdb.click" +
      "house.v1.config\032\036google/protobuf/wrapper" +
      "s.proto\032\035yandex/cloud/validation.proto\"\263" +
      "Z\n\020ClickhouseConfig\022S\n\tlog_level\030\001 \001(\0162@" +
      ".yandex.cloud.mdb.clickhouse.v1.config.C" +
      "lickhouseConfig.LogLevel\022U\n\nmerge_tree\030\002" +
      " \001(\0132A.yandex.cloud.mdb.clickhouse.v1.co" +
      "nfig.ClickhouseConfig.MergeTree\022X\n\013compr" +
      "ession\030\003 \003(\0132C.yandex.cloud.mdb.clickhou" +
      "se.v1.config.ClickhouseConfig.Compressio" +
      "n\022`\n\014dictionaries\030\004 \003(\0132J.yandex.cloud.m" +
      "db.clickhouse.v1.config.ClickhouseConfig" +
      ".ExternalDictionary\022_\n\017graphite_rollup\030\005" +
      " \003(\0132F.yandex.cloud.mdb.clickhouse.v1.co" +
      "nfig.ClickhouseConfig.GraphiteRollup\022L\n\005" +
      "kafka\030# \001(\0132=.yandex.cloud.mdb.clickhous" +
      "e.v1.config.ClickhouseConfig.Kafka\022X\n\014ka" +
      "fka_topics\030$ \003(\0132B.yandex.cloud.mdb.clic" +
      "khouse.v1.config.ClickhouseConfig.KafkaT" +
      "opic\022R\n\010rabbitmq\030% \001(\0132@.yandex.cloud.md" +
      "b.clickhouse.v1.config.ClickhouseConfig." +
      "Rabbitmq\022>\n\017max_connections\030\006 \001(\0132\033.goog" +
      "le.protobuf.Int64ValueB\010\372\3071\004>=10\022E\n\026max_" +
      "concurrent_queries\030\007 \001(\0132\033.google.protob" +
      "uf.Int64ValueB\010\372\3071\004>=10\0227\n\022keep_alive_ti" +
      "meout\030\010 \001(\0132\033.google.protobuf.Int64Value" +
      "\022<\n\027uncompressed_cache_size\030\t \001(\0132\033.goog" +
      "le.protobuf.Int64Value\022<\n\017mark_cache_siz" +
      "e\030\n \001(\0132\033.google.protobuf.Int64ValueB\006\372\307" +
      "1\002>0\022;\n\026max_table_size_to_drop\030\013 \001(\0132\033.g" +
      "oogle.protobuf.Int64Value\022?\n\032max_partiti" +
      "on_size_to_drop\030\r \001(\0132\033.google.protobuf." +
      "Int64Value\022M\n$builtin_dictionaries_reloa" +
      "d_interval\030\014 \001(\0132\033.google.protobuf.Int64" +
      "ValueB\002\030\001\022\020\n\010timezone\030\016 \001(\t\0223\n\017geobase_e" +
      "nabled\030B \001(\0132\032.google.protobuf.BoolValue" +
      "\022\023\n\013geobase_uri\030\017 \001(\t\022=\n\030query_log_reten" +
      "tion_size\030\020 \001(\0132\033.google.protobuf.Int64V" +
      "alue\022=\n\030query_log_retention_time\030\021 \001(\0132\033" +
      ".google.protobuf.Int64Value\022<\n\030query_thr" +
      "ead_log_enabled\030\022 \001(\0132\032.google.protobuf." +
      "BoolValue\022D\n\037query_thread_log_retention_" +
      "size\030\023 \001(\0132\033.google.protobuf.Int64Value\022" +
      "D\n\037query_thread_log_retention_time\030\024 \001(\013" +
      "2\033.google.protobuf.Int64Value\022<\n\027part_lo" +
      "g_retention_size\030\025 \001(\0132\033.google.protobuf" +
      ".Int64Value\022<\n\027part_log_retention_time\030\026" +
      " \001(\0132\033.google.protobuf.Int64Value\0226\n\022met" +
      "ric_log_enabled\030\027 \001(\0132\032.google.protobuf." +
      "BoolValue\022>\n\031metric_log_retention_size\030\030" +
      " \001(\0132\033.google.protobuf.Int64Value\022>\n\031met" +
      "ric_log_retention_time\030\031 \001(\0132\033.google.pr" +
      "otobuf.Int64Value\0225\n\021trace_log_enabled\030\032" +
      " \001(\0132\032.google.protobuf.BoolValue\022=\n\030trac" +
      "e_log_retention_size\030\033 \001(\0132\033.google.prot" +
      "obuf.Int64Value\022=\n\030trace_log_retention_t" +
      "ime\030\034 \001(\0132\033.google.protobuf.Int64Value\0224" +
      "\n\020text_log_enabled\030\035 \001(\0132\032.google.protob" +
      "uf.BoolValue\022<\n\027text_log_retention_size\030" +
      "\036 \001(\0132\033.google.protobuf.Int64Value\022<\n\027te" +
      "xt_log_retention_time\030\037 \001(\0132\033.google.pro" +
      "tobuf.Int64Value\022X\n\016text_log_level\030  \001(\016" +
      "2@.yandex.cloud.mdb.clickhouse.v1.config" +
      ".ClickhouseConfig.LogLevel\022B\n\036openteleme" +
      "try_span_log_enabled\030* \001(\0132\032.google.prot" +
      "obuf.BoolValue\022S\n%opentelemetry_span_log" +
      "_retention_size\0307 \001(\0132\033.google.protobuf." +
      "Int64ValueB\007\372\3071\003>=0\022S\n%opentelemetry_spa" +
      "n_log_retention_time\0308 \001(\0132\033.google.prot" +
      "obuf.Int64ValueB\007\372\3071\003>=0\022;\n\027query_views_" +
      "log_enabled\0301 \001(\0132\032.google.protobuf.Bool" +
      "Value\022L\n\036query_views_log_retention_size\030" +
      "2 \001(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003" +
      ">=0\022L\n\036query_views_log_retention_time\0303 " +
      "\001(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003>=" +
      "0\022C\n\037asynchronous_metric_log_enabled\0304 \001" +
      "(\0132\032.google.protobuf.BoolValue\022T\n&asynch" +
      "ronous_metric_log_retention_size\0305 \001(\0132\033" +
      ".google.protobuf.Int64ValueB\007\372\3071\003>=0\022T\n&" +
      "asynchronous_metric_log_retention_time\0306" +
      " \001(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003>" +
      "=0\0227\n\023session_log_enabled\0309 \001(\0132\032.google" +
      ".protobuf.BoolValue\022H\n\032session_log_reten" +
      "tion_size\030: \001(\0132\033.google.protobuf.Int64V" +
      "alueB\007\372\3071\003>=0\022H\n\032session_log_retention_t" +
      "ime\030; \001(\0132\033.google.protobuf.Int64ValueB\007" +
      "\372\3071\003>=0\0229\n\025zookeeper_log_enabled\030< \001(\0132\032" +
      ".google.protobuf.BoolValue\022J\n\034zookeeper_" +
      "log_retention_size\030= \001(\0132\033.google.protob" +
      "uf.Int64ValueB\007\372\3071\003>=0\022J\n\034zookeeper_log_" +
      "retention_time\030> \001(\0132\033.google.protobuf.I" +
      "nt64ValueB\007\372\3071\003>=0\022C\n\037asynchronous_inser" +
      "t_log_enabled\030? \001(\0132\032.google.protobuf.Bo" +
      "olValue\022T\n&asynchronous_insert_log_reten" +
      "tion_size\030@ \001(\0132\033.google.protobuf.Int64V" +
      "alueB\007\372\3071\003>=0\022T\n&asynchronous_insert_log" +
      "_retention_time\030A \001(\0132\033.google.protobuf." +
      "Int64ValueB\007\372\3071\003>=0\022A\n\024background_pool_s" +
      "ize\030! \001(\0132\033.google.protobuf.Int64ValueB\006" +
      "\372\3071\002>0\022Z\n-background_merges_mutations_co" +
      "ncurrency_ratio\0300 \001(\0132\033.google.protobuf." +
      "Int64ValueB\006\372\3071\002>0\022J\n\035background_schedul" +
      "e_pool_size\030\" \001(\0132\033.google.protobuf.Int6" +
      "4ValueB\006\372\3071\002>0\022I\n\034background_fetches_poo" +
      "l_size\030& \001(\0132\033.google.protobuf.Int64Valu" +
      "eB\006\372\3071\002>0\022F\n\031background_move_pool_size\030\'" +
      " \001(\0132\033.google.protobuf.Int64ValueB\006\372\3071\002>" +
      "0\022V\n)background_distributed_schedule_poo" +
      "l_size\030( \001(\0132\033.google.protobuf.Int64Valu" +
      "eB\006\372\3071\002>0\022W\n*background_buffer_flush_sch" +
      "edule_pool_size\030) \001(\0132\033.google.protobuf." +
      "Int64ValueB\006\372\3071\002>0\022Y\n,background_message" +
      "_broker_schedule_pool_size\030. \001(\0132\033.googl" +
      "e.protobuf.Int64ValueB\006\372\3071\002>0\022H\n\033backgro" +
      "und_common_pool_size\030/ \001(\0132\033.google.prot" +
      "obuf.Int64ValueB\006\372\3071\002>0\0226\n\020default_datab" +
      "ase\030+ \001(\0132\034.google.protobuf.StringValue\022" +
      "?\n\032total_memory_profiler_step\030, \001(\0132\033.go" +
      "ogle.protobuf.Int64Value\022M\n\'total_memory" +
      "_tracker_sample_probability\030- \001(\0132\034.goog" +
      "le.protobuf.DoubleValue\032\271\r\n\tMergeTree\022D\n" +
      "\037replicated_deduplication_window\030\001 \001(\0132\033" +
      ".google.protobuf.Int64Value\022L\n\'replicate" +
      "d_deduplication_window_seconds\030\002 \001(\0132\033.g" +
      "oogle.protobuf.Int64Value\022:\n\025parts_to_de" +
      "lay_insert\030\003 \001(\0132\033.google.protobuf.Int64" +
      "Value\022:\n\025parts_to_throw_insert\030\004 \001(\0132\033.g" +
      "oogle.protobuf.Int64Value\022C\n\036inactive_pa" +
      "rts_to_delay_insert\030\t \001(\0132\033.google.proto" +
      "buf.Int64Value\022C\n\036inactive_parts_to_thro" +
      "w_insert\030\n \001(\0132\033.google.protobuf.Int64Va" +
      "lue\022C\n\036max_replicated_merges_in_queue\030\005 " +
      "\001(\0132\033.google.protobuf.Int64Value\022^\n9numb" +
      "er_of_free_entries_in_pool_to_lower_max_" +
      "size_of_merge\030\006 \001(\0132\033.google.protobuf.In" +
      "t64Value\022L\n\'max_bytes_to_merge_at_min_sp" +
      "ace_in_pool\030\007 \001(\0132\033.google.protobuf.Int6" +
      "4Value\022L\n\'max_bytes_to_merge_at_max_spac" +
      "e_in_pool\030\010 \001(\0132\033.google.protobuf.Int64V" +
      "alue\022<\n\027min_bytes_for_wide_part\030\013 \001(\0132\033." +
      "google.protobuf.Int64Value\022;\n\026min_rows_f" +
      "or_wide_part\030\014 \001(\0132\033.google.protobuf.Int" +
      "64Value\0227\n\023ttl_only_drop_parts\030\r \001(\0132\032.g" +
      "oogle.protobuf.BoolValue\022I\n%allow_remote" +
      "_fs_zero_copy_replication\030\016 \001(\0132\032.google" +
      ".protobuf.BoolValue\022;\n\026merge_with_ttl_ti" +
      "meout\030\017 \001(\0132\033.google.protobuf.Int64Value" +
      "\022I\n$merge_with_recompression_ttl_timeout" +
      "\030\020 \001(\0132\033.google.protobuf.Int64Value\0227\n\022m" +
      "ax_parts_in_total\030\021 \001(\0132\033.google.protobu" +
      "f.Int64Value\022J\n%max_number_of_merges_wit" +
      "h_ttl_in_pool\030\022 \001(\0132\033.google.protobuf.In" +
      "t64Value\0229\n\024cleanup_delay_period\030\023 \001(\0132\033" +
      ".google.protobuf.Int64Value\022W\n2number_of" +
      "_free_entries_in_pool_to_execute_mutatio" +
      "n\030\024 \001(\0132\033.google.protobuf.Int64Value\022R\n$" +
      "max_avg_part_size_for_too_many_parts\030\025 \001" +
      "(\0132\033.google.protobuf.Int64ValueB\007\372\3071\003>=0" +
      "\022L\n\036min_age_to_force_merge_seconds\030\026 \001(\013" +
      "2\033.google.protobuf.Int64ValueB\007\372\3071\003>=0\022L" +
      "\n(min_age_to_force_merge_on_partition_on" +
      "ly\030\027 \001(\0132\032.google.protobuf.BoolValue\022E\n\030" +
      "merge_selecting_sleep_ms\030\030 \001(\0132\033.google." +
      "protobuf.Int64ValueB\006\372\3071\002>0\032\271\006\n\005Kafka\022i\n" +
      "\021security_protocol\030\001 \001(\0162N.yandex.cloud." +
      "mdb.clickhouse.v1.config.ClickhouseConfi" +
      "g.Kafka.SecurityProtocol\022c\n\016sasl_mechani" +
      "sm\030\002 \001(\0162K.yandex.cloud.mdb.clickhouse.v" +
      "1.config.ClickhouseConfig.Kafka.SaslMech" +
      "anism\022\025\n\rsasl_username\030\003 \001(\t\022\025\n\rsasl_pas" +
      "sword\030\004 \001(\t\022G\n#enable_ssl_certificate_ve" +
      "rification\030\005 \001(\0132\032.google.protobuf.BoolV" +
      "alue\022B\n\024max_poll_interval_ms\030\006 \001(\0132\033.goo" +
      "gle.protobuf.Int64ValueB\007\372\3071\003>=0\022@\n\022sess" +
      "ion_timeout_ms\030\007 \001(\0132\033.google.protobuf.I" +
      "nt64ValueB\007\372\3071\003>=0\"\267\001\n\020SecurityProtocol\022" +
      "!\n\035SECURITY_PROTOCOL_UNSPECIFIED\020\000\022\037\n\033SE" +
      "CURITY_PROTOCOL_PLAINTEXT\020\001\022\031\n\025SECURITY_" +
      "PROTOCOL_SSL\020\002\022$\n SECURITY_PROTOCOL_SASL" +
      "_PLAINTEXT\020\003\022\036\n\032SECURITY_PROTOCOL_SASL_S" +
      "SL\020\004\"\250\001\n\rSaslMechanism\022\036\n\032SASL_MECHANISM" +
      "_UNSPECIFIED\020\000\022\031\n\025SASL_MECHANISM_GSSAPI\020" +
      "\001\022\030\n\024SASL_MECHANISM_PLAIN\020\002\022 \n\034SASL_MECH" +
      "ANISM_SCRAM_SHA_256\020\003\022 \n\034SASL_MECHANISM_" +
      "SCRAM_SHA_512\020\004\032w\n\nKafkaTopic\022\022\n\004name\030\001 " +
      "\001(\tB\004\350\3071\001\022U\n\010settings\030\002 \001(\0132=.yandex.clo" +
      "ud.mdb.clickhouse.v1.config.ClickhouseCo" +
      "nfig.KafkaB\004\350\3071\001\032=\n\010Rabbitmq\022\020\n\010username" +
      "\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\r\n\005vhost\030\003 \001(\t\032" +
      "\220\002\n\013Compression\022Z\n\006method\030\001 \001(\0162J.yandex" +
      ".cloud.mdb.clickhouse.v1.config.Clickhou" +
      "seConfig.Compression.Method\022\036\n\rmin_part_" +
      "size\030\002 \001(\003B\007\372\3071\003>=1\022\033\n\023min_part_size_rat" +
      "io\030\003 \001(\001\0223\n\005level\030\004 \001(\0132\033.google.protobu" +
      "f.Int64ValueB\007\372\3071\003>=0\"3\n\006Method\022\026\n\022METHO" +
      "D_UNSPECIFIED\020\000\022\007\n\003LZ4\020\001\022\010\n\004ZSTD\020\002\032\261\032\n\022E" +
      "xternalDictionary\022\022\n\004name\030\001 \001(\tB\004\350\3071\001\022m\n" +
      "\tstructure\030\002 \001(\0132T.yandex.cloud.mdb.clic" +
      "khouse.v1.config.ClickhouseConfig.Extern" +
      "alDictionary.StructureB\004\350\3071\001\022g\n\006layout\030\003" +
      " \001(\0132Q.yandex.cloud.mdb.clickhouse.v1.co" +
      "nfig.ClickhouseConfig.ExternalDictionary" +
      ".LayoutB\004\350\3071\001\022\030\n\016fixed_lifetime\030\004 \001(\003H\000\022" +
      "j\n\016lifetime_range\030\005 \001(\0132P.yandex.cloud.m" +
      "db.clickhouse.v1.config.ClickhouseConfig" +
      ".ExternalDictionary.RangeH\000\022l\n\013http_sour" +
      "ce\030\006 \001(\0132U.yandex.cloud.mdb.clickhouse.v" +
      "1.config.ClickhouseConfig.ExternalDictio" +
      "nary.HttpSourceH\001\022n\n\014mysql_source\030\007 \001(\0132" +
      "V.yandex.cloud.mdb.clickhouse.v1.config." +
      "ClickhouseConfig.ExternalDictionary.Mysq" +
      "lSourceH\001\022x\n\021clickhouse_source\030\010 \001(\0132[.y" +
      "andex.cloud.mdb.clickhouse.v1.config.Cli" +
      "ckhouseConfig.ExternalDictionary.Clickho" +
      "useSourceH\001\022r\n\016mongodb_source\030\t \001(\0132X.ya" +
      "ndex.cloud.mdb.clickhouse.v1.config.Clic" +
      "khouseConfig.ExternalDictionary.MongodbS" +
      "ourceH\001\022x\n\021postgresql_source\030\n \001(\0132[.yan" +
      "dex.cloud.mdb.clickhouse.v1.config.Click" +
      "houseConfig.ExternalDictionary.Postgresq" +
      "lSourceH\001\0325\n\nHttpSource\022\021\n\003url\030\001 \001(\tB\004\350\307" +
      "1\001\022\024\n\006format\030\002 \001(\tB\004\350\3071\001\032\223\003\n\013MysqlSource" +
      "\022\020\n\002db\030\001 \001(\tB\004\350\3071\001\022\023\n\005table\030\002 \001(\tB\004\350\3071\001\022" +
      "\031\n\004port\030\003 \001(\003B\013\372\3071\0070-65535\022\014\n\004user\030\004 \001(\t" +
      "\022\020\n\010password\030\005 \001(\t\022x\n\010replicas\030\006 \003(\0132^.y" +
      "andex.cloud.mdb.clickhouse.v1.config.Cli" +
      "ckhouseConfig.ExternalDictionary.MysqlSo" +
      "urce.ReplicaB\006\202\3101\002>0\022\r\n\005where\030\007 \001(\t\022\030\n\020i" +
      "nvalidate_query\030\010 \001(\t\032\177\n\007Replica\022\033\n\004host" +
      "\030\001 \001(\tB\r\350\3071\001\212\3101\005<=253\022\034\n\010priority\030\002 \001(\003B" +
      "\n\350\3071\001\372\3071\002>0\022\031\n\004port\030\003 \001(\003B\013\372\3071\0070-65535\022\014" +
      "\n\004user\030\004 \001(\t\022\020\n\010password\030\005 \001(\t\032\246\001\n\020Click" +
      "houseSource\022\020\n\002db\030\001 \001(\tB\004\350\3071\001\022\023\n\005table\030\002" +
      " \001(\tB\004\350\3071\001\022\033\n\004host\030\003 \001(\tB\r\350\3071\001\212\3101\005<=253\022" +
      "\031\n\004port\030\004 \001(\003B\013\372\3071\0070-65535\022\022\n\004user\030\005 \001(\t" +
      "B\004\350\3071\001\022\020\n\010password\030\006 \001(\t\022\r\n\005where\030\007 \001(\t\032" +
      "\252\001\n\rMongodbSource\022\020\n\002db\030\001 \001(\tB\004\350\3071\001\022\030\n\nc" +
      "ollection\030\002 \001(\tB\004\350\3071\001\022\033\n\004host\030\003 \001(\tB\r\350\3071" +
      "\001\212\3101\005<=253\022\031\n\004port\030\004 \001(\003B\013\372\3071\0070-65535\022\022\n" +
      "\004user\030\005 \001(\tB\004\350\3071\001\022\020\n\010password\030\006 \001(\t\022\017\n\007o" +
      "ptions\030\007 \001(\t\032\213\003\n\020PostgresqlSource\022\020\n\002db\030" +
      "\001 \001(\tB\004\350\3071\001\022\023\n\005table\030\002 \001(\tB\004\350\3071\001\022\025\n\005host" +
      "s\030\003 \003(\tB\006\202\3101\002>0\022\031\n\004port\030\004 \001(\003B\013\372\3071\0070-655" +
      "35\022\022\n\004user\030\005 \001(\tB\004\350\3071\001\022\020\n\010password\030\006 \001(\t" +
      "\022\030\n\020invalidate_query\030\007 \001(\t\022u\n\010ssl_mode\030\010" +
      " \001(\0162c.yandex.cloud.mdb.clickhouse.v1.co" +
      "nfig.ClickhouseConfig.ExternalDictionary" +
      ".PostgresqlSource.SslMode\"g\n\007SslMode\022\030\n\024" +
      "SSL_MODE_UNSPECIFIED\020\000\022\013\n\007DISABLE\020\001\022\t\n\005A" +
      "LLOW\020\002\022\n\n\006PREFER\020\003\022\r\n\tVERIFY_CA\020\004\022\017\n\013VER" +
      "IFY_FULL\020\005\032\336\006\n\tStructure\022c\n\002id\030\001 \001(\0132W.y" +
      "andex.cloud.mdb.clickhouse.v1.config.Cli" +
      "ckhouseConfig.ExternalDictionary.Structu" +
      "re.Id\022e\n\003key\030\003 \001(\0132X.yandex.cloud.mdb.cl" +
      "ickhouse.v1.config.ClickhouseConfig.Exte" +
      "rnalDictionary.Structure.Key\022q\n\trange_mi" +
      "n\030\004 \001(\0132^.yandex.cloud.mdb.clickhouse.v1" +
      ".config.ClickhouseConfig.ExternalDiction" +
      "ary.Structure.Attribute\022q\n\trange_max\030\005 \001" +
      "(\0132^.yandex.cloud.mdb.clickhouse.v1.conf" +
      "ig.ClickhouseConfig.ExternalDictionary.S" +
      "tructure.Attribute\022z\n\nattributes\030\002 \003(\0132^" +
      ".yandex.cloud.mdb.clickhouse.v1.config.C" +
      "lickhouseConfig.ExternalDictionary.Struc" +
      "ture.AttributeB\006\202\3101\002>0\032\204\001\n\tAttribute\022\022\n\004" +
      "name\030\001 \001(\tB\004\350\3071\001\022\022\n\004type\030\002 \001(\tB\004\350\3071\001\022\022\n\n" +
      "null_value\030\003 \001(\t\022\022\n\nexpression\030\004 \001(\t\022\024\n\014" +
      "hierarchical\030\005 \001(\010\022\021\n\tinjective\030\006 \001(\010\032\030\n" +
      "\002Id\022\022\n\004name\030\001 \001(\tB\004\350\3071\001\032\201\001\n\003Key\022z\n\nattri" +
      "butes\030\001 \003(\0132^.yandex.cloud.mdb.clickhous" +
      "e.v1.config.ClickhouseConfig.ExternalDic" +
      "tionary.Structure.AttributeB\006\202\3101\002>0\032\213\002\n\006" +
      "Layout\022j\n\004type\030\001 \001(\0162V.yandex.cloud.mdb." +
      "clickhouse.v1.config.ClickhouseConfig.Ex" +
      "ternalDictionary.Layout.TypeB\004\350\3071\001\022\025\n\rsi" +
      "ze_in_cells\030\002 \001(\003\"~\n\004Type\022\024\n\020TYPE_UNSPEC" +
      "IFIED\020\000\022\010\n\004FLAT\020\001\022\n\n\006HASHED\020\002\022\026\n\022COMPLEX" +
      "_KEY_HASHED\020\003\022\020\n\014RANGE_HASHED\020\004\022\t\n\005CACHE" +
      "\020\005\022\025\n\021COMPLEX_KEY_CACHE\020\006\032!\n\005Range\022\013\n\003mi" +
      "n\030\001 \001(\003\022\013\n\003max\030\002 \001(\003B\020\n\010lifetime\022\004\300\3011\001B\016" +
      "\n\006source\022\004\300\3011\001\032\365\002\n\016GraphiteRollup\022\022\n\004nam" +
      "e\030\001 \001(\tB\004\350\3071\001\022h\n\010patterns\030\002 \003(\0132N.yandex" +
      ".cloud.mdb.clickhouse.v1.config.Clickhou" +
      "seConfig.GraphiteRollup.PatternB\006\202\3101\002>0\032" +
      "\344\001\n\007Pattern\022\016\n\006regexp\030\001 \001(\t\022\026\n\010function\030" +
      "\002 \001(\tB\004\350\3071\001\022s\n\tretention\030\003 \003(\0132X.yandex." +
      "cloud.mdb.clickhouse.v1.config.Clickhous" +
      "eConfig.GraphiteRollup.Pattern.Retention" +
      "B\006\202\3101\002>0\032<\n\tRetention\022\024\n\003age\030\001 \001(\003B\007\372\3071\003" +
      ">=0\022\031\n\tprecision\030\002 \001(\003B\006\372\3071\002>0\"d\n\010LogLev" +
      "el\022\031\n\025LOG_LEVEL_UNSPECIFIED\020\000\022\t\n\005TRACE\020\001" +
      "\022\t\n\005DEBUG\020\002\022\017\n\013INFORMATION\020\003\022\013\n\007WARNING\020" +
      "\004\022\t\n\005ERROR\020\005\"\215\002\n\023ClickhouseConfigSet\022W\n\020" +
      "effective_config\030\001 \001(\01327.yandex.cloud.md" +
      "b.clickhouse.v1.config.ClickhouseConfigB" +
      "\004\350\3071\001\022L\n\013user_config\030\002 \001(\01327.yandex.clou" +
      "d.mdb.clickhouse.v1.config.ClickhouseCon" +
      "fig\022O\n\016default_config\030\003 \001(\01327.yandex.clo" +
      "ud.mdb.clickhouse.v1.config.ClickhouseCo" +
      "nfigB\201\001\n)yandex.cloud.api.mdb.clickhouse" +
      ".v1.configZTgithub.com/yandex-cloud/go-g" +
      "enproto/yandex/cloud/mdb/clickhouse/v1/c" +
      "onfig;clickhouseb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.Validation.getDescriptor(),
        });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor,
        new java.lang.String[] { "LogLevel", "MergeTree", "Compression", "Dictionaries", "GraphiteRollup", "Kafka", "KafkaTopics", "Rabbitmq", "MaxConnections", "MaxConcurrentQueries", "KeepAliveTimeout", "UncompressedCacheSize", "MarkCacheSize", "MaxTableSizeToDrop", "MaxPartitionSizeToDrop", "BuiltinDictionariesReloadInterval", "Timezone", "GeobaseEnabled", "GeobaseUri", "QueryLogRetentionSize", "QueryLogRetentionTime", "QueryThreadLogEnabled", "QueryThreadLogRetentionSize", "QueryThreadLogRetentionTime", "PartLogRetentionSize", "PartLogRetentionTime", "MetricLogEnabled", "MetricLogRetentionSize", "MetricLogRetentionTime", "TraceLogEnabled", "TraceLogRetentionSize", "TraceLogRetentionTime", "TextLogEnabled", "TextLogRetentionSize", "TextLogRetentionTime", "TextLogLevel", "OpentelemetrySpanLogEnabled", "OpentelemetrySpanLogRetentionSize", "OpentelemetrySpanLogRetentionTime", "QueryViewsLogEnabled", "QueryViewsLogRetentionSize", "QueryViewsLogRetentionTime", "AsynchronousMetricLogEnabled", "AsynchronousMetricLogRetentionSize", "AsynchronousMetricLogRetentionTime", "SessionLogEnabled", "SessionLogRetentionSize", "SessionLogRetentionTime", "ZookeeperLogEnabled", "ZookeeperLogRetentionSize", "ZookeeperLogRetentionTime", "AsynchronousInsertLogEnabled", "AsynchronousInsertLogRetentionSize", "AsynchronousInsertLogRetentionTime", "BackgroundPoolSize", "BackgroundMergesMutationsConcurrencyRatio", "BackgroundSchedulePoolSize", "BackgroundFetchesPoolSize", "BackgroundMovePoolSize", "BackgroundDistributedSchedulePoolSize", "BackgroundBufferFlushSchedulePoolSize", "BackgroundMessageBrokerSchedulePoolSize", "BackgroundCommonPoolSize", "DefaultDatabase", "TotalMemoryProfilerStep", "TotalMemoryTrackerSampleProbability", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_MergeTree_descriptor,
        new java.lang.String[] { "ReplicatedDeduplicationWindow", "ReplicatedDeduplicationWindowSeconds", "PartsToDelayInsert", "PartsToThrowInsert", "InactivePartsToDelayInsert", "InactivePartsToThrowInsert", "MaxReplicatedMergesInQueue", "NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge", "MaxBytesToMergeAtMinSpaceInPool", "MaxBytesToMergeAtMaxSpaceInPool", "MinBytesForWidePart", "MinRowsForWidePart", "TtlOnlyDropParts", "AllowRemoteFsZeroCopyReplication", "MergeWithTtlTimeout", "MergeWithRecompressionTtlTimeout", "MaxPartsInTotal", "MaxNumberOfMergesWithTtlInPool", "CleanupDelayPeriod", "NumberOfFreeEntriesInPoolToExecuteMutation", "MaxAvgPartSizeForTooManyParts", "MinAgeToForceMergeSeconds", "MinAgeToForceMergeOnPartitionOnly", "MergeSelectingSleepMs", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Kafka_descriptor,
        new java.lang.String[] { "SecurityProtocol", "SaslMechanism", "SaslUsername", "SaslPassword", "EnableSslCertificateVerification", "MaxPollIntervalMs", "SessionTimeoutMs", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(2);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_KafkaTopic_descriptor,
        new java.lang.String[] { "Name", "Settings", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(3);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Rabbitmq_descriptor,
        new java.lang.String[] { "Username", "Password", "Vhost", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(4);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_Compression_descriptor,
        new java.lang.String[] { "Method", "MinPartSize", "MinPartSizeRatio", "Level", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(5);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor,
        new java.lang.String[] { "Name", "Structure", "Layout", "FixedLifetime", "LifetimeRange", "HttpSource", "MysqlSource", "ClickhouseSource", "MongodbSource", "PostgresqlSource", "Lifetime", "Source", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_HttpSource_descriptor,
        new java.lang.String[] { "Url", "Format", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor,
        new java.lang.String[] { "Db", "Table", "Port", "User", "Password", "Replicas", "Where", "InvalidateQuery", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MysqlSource_Replica_descriptor,
        new java.lang.String[] { "Host", "Priority", "Port", "User", "Password", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(2);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_ClickhouseSource_descriptor,
        new java.lang.String[] { "Db", "Table", "Host", "Port", "User", "Password", "Where", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(3);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_MongodbSource_descriptor,
        new java.lang.String[] { "Db", "Collection", "Host", "Port", "User", "Password", "Options", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(4);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_PostgresqlSource_descriptor,
        new java.lang.String[] { "Db", "Table", "Hosts", "Port", "User", "Password", "InvalidateQuery", "SslMode", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(5);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor,
        new java.lang.String[] { "Id", "Key", "RangeMin", "RangeMax", "Attributes", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Attribute_descriptor,
        new java.lang.String[] { "Name", "Type", "NullValue", "Expression", "Hierarchical", "Injective", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Id_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_descriptor.getNestedTypes().get(2);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Structure_Key_descriptor,
        new java.lang.String[] { "Attributes", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(6);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Layout_descriptor,
        new java.lang.String[] { "Type", "SizeInCells", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_descriptor.getNestedTypes().get(7);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_ExternalDictionary_Range_descriptor,
        new java.lang.String[] { "Min", "Max", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_descriptor.getNestedTypes().get(6);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor,
        new java.lang.String[] { "Name", "Patterns", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor,
        new java.lang.String[] { "Regexp", "Function", "Retention", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_descriptor =
      internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfig_GraphiteRollup_Pattern_Retention_descriptor,
        new java.lang.String[] { "Age", "Precision", });
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_mdb_clickhouse_v1_config_ClickhouseConfigSet_descriptor,
        new java.lang.String[] { "EffectiveConfig", "UserConfig", "DefaultConfig", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.exactlyOne);
    registry.add(yandex.cloud.api.Validation.length);
    registry.add(yandex.cloud.api.Validation.required);
    registry.add(yandex.cloud.api.Validation.size);
    registry.add(yandex.cloud.api.Validation.value);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
