// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/monitoring/v3/multi_source_chart_widget.proto

package yandex.cloud.api.monitoring.v3;

public final class MultiSourceChartWidgetOuterClass {
  private MultiSourceChartWidgetOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MultiSourceChartWidgetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Required. Chart ID.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Required. Chart ID.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target> 
        getTargetsList();
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target getTargets(int index);
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    int getTargetsCount();
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder> 
        getTargetsOrBuilderList();
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder getTargetsOrBuilder(
        int index);

    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource> 
        getDataSourcesList();
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource getDataSources(int index);
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    int getDataSourcesCount();
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder> 
        getDataSourcesOrBuilderList();
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder getDataSourcesOrBuilder(
        int index);

    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
     * @return Whether the visualizationSettings field is set.
     */
    boolean hasVisualizationSettings();
    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
     * @return The visualizationSettings.
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings getVisualizationSettings();
    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder getVisualizationSettingsOrBuilder();

    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides> 
        getSeriesOverridesList();
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides getSeriesOverrides(int index);
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    int getSeriesOverridesCount();
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder> 
        getSeriesOverridesOrBuilderList();
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder getSeriesOverridesOrBuilder(
        int index);

    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
     * @return Whether the nameHidingSettings field is set.
     */
    boolean hasNameHidingSettings();
    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
     * @return The nameHidingSettings.
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings getNameHidingSettings();
    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder getNameHidingSettingsOrBuilder();

    /**
     * <pre>
     * Chart description in dashboard (not enabled in UI).
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Chart description in dashboard (not enabled in UI).
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Chart widget title.
     * </pre>
     *
     * <code>string title = 8;</code>
     * @return The title.
     */
    java.lang.String getTitle();
    /**
     * <pre>
     * Chart widget title.
     * </pre>
     *
     * <code>string title = 8;</code>
     * @return The bytes for title.
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     * Enable legend under chart.
     * </pre>
     *
     * <code>bool display_legend = 9;</code>
     * @return The displayLegend.
     */
    boolean getDisplayLegend();

    /**
     * <pre>
     * Fixed time interval for chart.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
     * @return The enum numeric value on the wire for freeze.
     */
    int getFreezeValue();
    /**
     * <pre>
     * Fixed time interval for chart.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
     * @return The freeze.
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration getFreeze();

    /**
     * <pre>
     * Setting for repeat panel / repeat row
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
     * @return Whether the repeat field is set.
     */
    boolean hasRepeat();
    /**
     * <pre>
     * Setting for repeat panel / repeat row
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
     * @return The repeat.
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings getRepeat();
    /**
     * <pre>
     * Setting for repeat panel / repeat row
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
     */
    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder getRepeatOrBuilder();

    /**
     * <pre>
     * Threshold settings
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
     * @return Whether the thresholds field is set.
     */
    boolean hasThresholds();
    /**
     * <pre>
     * Threshold settings
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
     * @return The thresholds.
     */
    yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds getThresholds();
    /**
     * <pre>
     * Threshold settings
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
     */
    yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.ThresholdsOrBuilder getThresholdsOrBuilder();
  }
  /**
   * <pre>
   * Multi-source chart widget.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget}
   */
  public static final class MultiSourceChartWidget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget)
      MultiSourceChartWidgetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiSourceChartWidget.newBuilder() to construct.
    private MultiSourceChartWidget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiSourceChartWidget() {
      id_ = "";
      targets_ = java.util.Collections.emptyList();
      dataSources_ = java.util.Collections.emptyList();
      seriesOverrides_ = java.util.Collections.emptyList();
      description_ = "";
      title_ = "";
      freeze_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiSourceChartWidget();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiSourceChartWidget(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                targets_ = new java.util.ArrayList<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target>();
                mutable_bitField0_ |= 0x00000001;
              }
              targets_.add(
                  input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                dataSources_ = new java.util.ArrayList<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource>();
                mutable_bitField0_ |= 0x00000002;
              }
              dataSources_.add(
                  input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.parser(), extensionRegistry));
              break;
            }
            case 34: {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder subBuilder = null;
              if (visualizationSettings_ != null) {
                subBuilder = visualizationSettings_.toBuilder();
              }
              visualizationSettings_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(visualizationSettings_);
                visualizationSettings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                seriesOverrides_ = new java.util.ArrayList<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides>();
                mutable_bitField0_ |= 0x00000004;
              }
              seriesOverrides_.add(
                  input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.parser(), extensionRegistry));
              break;
            }
            case 50: {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder subBuilder = null;
              if (nameHidingSettings_ != null) {
                subBuilder = nameHidingSettings_.toBuilder();
              }
              nameHidingSettings_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nameHidingSettings_);
                nameHidingSettings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 72: {

              displayLegend_ = input.readBool();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              freeze_ = rawValue;
              break;
            }
            case 90: {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder subBuilder = null;
              if (repeat_ != null) {
                subBuilder = repeat_.toBuilder();
              }
              repeat_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(repeat_);
                repeat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.Builder subBuilder = null;
              if (thresholds_ != null) {
                subBuilder = thresholds_.toBuilder();
              }
              thresholds_ = input.readMessage(yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(thresholds_);
                thresholds_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          targets_ = java.util.Collections.unmodifiableList(targets_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          dataSources_ = java.util.Collections.unmodifiableList(dataSources_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          seriesOverrides_ = java.util.Collections.unmodifiableList(seriesOverrides_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType}
     */
    public enum ValuesType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>VALUES_TYPE_UNSPECIFIED = 0;</code>
       */
      VALUES_TYPE_UNSPECIFIED(0),
      /**
       * <code>VALUES_TYPE_ALL_ZEROS = 1;</code>
       */
      VALUES_TYPE_ALL_ZEROS(1),
      /**
       * <code>VALUES_TYPE_ALL_NULL = 2;</code>
       */
      VALUES_TYPE_ALL_NULL(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>VALUES_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int VALUES_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <code>VALUES_TYPE_ALL_ZEROS = 1;</code>
       */
      public static final int VALUES_TYPE_ALL_ZEROS_VALUE = 1;
      /**
       * <code>VALUES_TYPE_ALL_NULL = 2;</code>
       */
      public static final int VALUES_TYPE_ALL_NULL_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValuesType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ValuesType forNumber(int value) {
        switch (value) {
          case 0: return VALUES_TYPE_UNSPECIFIED;
          case 1: return VALUES_TYPE_ALL_ZEROS;
          case 2: return VALUES_TYPE_ALL_NULL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ValuesType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ValuesType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ValuesType>() {
              public ValuesType findValueByNumber(int number) {
                return ValuesType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.getDescriptor().getEnumTypes().get(0);
      }

      private static final ValuesType[] VALUES = values();

      public static ValuesType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ValuesType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType)
    }

    /**
     * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration}
     */
    public enum FreezeDuration
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FREEZE_DURATION_UNSPECIFIED = 0;</code>
       */
      FREEZE_DURATION_UNSPECIFIED(0),
      /**
       * <pre>
       * Last hour.
       * </pre>
       *
       * <code>FREEZE_DURATION_HOUR = 1;</code>
       */
      FREEZE_DURATION_HOUR(1),
      /**
       * <pre>
       * Last day = last 24 hours.
       * </pre>
       *
       * <code>FREEZE_DURATION_DAY = 2;</code>
       */
      FREEZE_DURATION_DAY(2),
      /**
       * <pre>
       * Last 7 days.
       * </pre>
       *
       * <code>FREEZE_DURATION_WEEK = 3;</code>
       */
      FREEZE_DURATION_WEEK(3),
      /**
       * <pre>
       * Last 31 days.
       * </pre>
       *
       * <code>FREEZE_DURATION_MONTH = 4;</code>
       */
      FREEZE_DURATION_MONTH(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>FREEZE_DURATION_UNSPECIFIED = 0;</code>
       */
      public static final int FREEZE_DURATION_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Last hour.
       * </pre>
       *
       * <code>FREEZE_DURATION_HOUR = 1;</code>
       */
      public static final int FREEZE_DURATION_HOUR_VALUE = 1;
      /**
       * <pre>
       * Last day = last 24 hours.
       * </pre>
       *
       * <code>FREEZE_DURATION_DAY = 2;</code>
       */
      public static final int FREEZE_DURATION_DAY_VALUE = 2;
      /**
       * <pre>
       * Last 7 days.
       * </pre>
       *
       * <code>FREEZE_DURATION_WEEK = 3;</code>
       */
      public static final int FREEZE_DURATION_WEEK_VALUE = 3;
      /**
       * <pre>
       * Last 31 days.
       * </pre>
       *
       * <code>FREEZE_DURATION_MONTH = 4;</code>
       */
      public static final int FREEZE_DURATION_MONTH_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FreezeDuration valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static FreezeDuration forNumber(int value) {
        switch (value) {
          case 0: return FREEZE_DURATION_UNSPECIFIED;
          case 1: return FREEZE_DURATION_HOUR;
          case 2: return FREEZE_DURATION_DAY;
          case 3: return FREEZE_DURATION_WEEK;
          case 4: return FREEZE_DURATION_MONTH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FreezeDuration>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FreezeDuration> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FreezeDuration>() {
              public FreezeDuration findValueByNumber(int number) {
                return FreezeDuration.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.getDescriptor().getEnumTypes().get(1);
      }

      private static final FreezeDuration[] VALUES = values();

      public static FreezeDuration valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FreezeDuration(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration)
    }

    public interface TargetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Monitoring target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
       * @return Whether the monitoringTarget field is set.
       */
      boolean hasMonitoringTarget();
      /**
       * <pre>
       * Monitoring target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
       * @return The monitoringTarget.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget getMonitoringTarget();
      /**
       * <pre>
       * Monitoring target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder getMonitoringTargetOrBuilder();

      /**
       * <pre>
       * Prometheus target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
       * @return Whether the prometheusTarget field is set.
       */
      boolean hasPrometheusTarget();
      /**
       * <pre>
       * Prometheus target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
       * @return The prometheusTarget.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget getPrometheusTarget();
      /**
       * <pre>
       * Prometheus target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder getPrometheusTargetOrBuilder();

      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.TargetCase getTargetCase();
    }
    /**
     * <pre>
     * Target settings.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target}
     */
    public static final class Target extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target)
        TargetOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Target.newBuilder() to construct.
      private Target(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Target() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Target();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Target(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder subBuilder = null;
                if (targetCase_ == 1) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_).toBuilder();
                }
                target_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_);
                  target_ = subBuilder.buildPartial();
                }
                targetCase_ = 1;
                break;
              }
              case 18: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder subBuilder = null;
                if (targetCase_ == 2) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_).toBuilder();
                }
                target_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_);
                  target_ = subBuilder.buildPartial();
                }
                targetCase_ = 2;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder.class);
      }

      public interface MonitoringTargetOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The dataSourceId.
         */
        java.lang.String getDataSourceId();
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The bytes for dataSourceId.
         */
        com.google.protobuf.ByteString
            getDataSourceIdBytes();

        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 2;</code>
         * @return The query.
         */
        java.lang.String getQuery();
        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 2;</code>
         * @return The bytes for query.
         */
        com.google.protobuf.ByteString
            getQueryBytes();

        /**
         * <pre>
         * Text mode.
         * </pre>
         *
         * <code>bool text_mode = 3;</code>
         * @return The textMode.
         */
        boolean getTextMode();

        /**
         * <pre>
         * Checks that target is visible or invisible.
         * </pre>
         *
         * <code>bool hidden = 4;</code>
         * @return The hidden.
         */
        boolean getHidden();

        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 5;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 5;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget}
       */
      public static final class MonitoringTarget extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget)
          MonitoringTargetOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MonitoringTarget.newBuilder() to construct.
        private MonitoringTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MonitoringTarget() {
          dataSourceId_ = "";
          query_ = "";
          name_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new MonitoringTarget();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private MonitoringTarget(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  dataSourceId_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  query_ = s;
                  break;
                }
                case 24: {

                  textMode_ = input.readBool();
                  break;
                }
                case 32: {

                  hidden_ = input.readBool();
                  break;
                }
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder.class);
        }

        public static final int DATA_SOURCE_ID_FIELD_NUMBER = 1;
        private volatile java.lang.Object dataSourceId_;
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The dataSourceId.
         */
        @java.lang.Override
        public java.lang.String getDataSourceId() {
          java.lang.Object ref = dataSourceId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            dataSourceId_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The bytes for dataSourceId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDataSourceIdBytes() {
          java.lang.Object ref = dataSourceId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataSourceId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int QUERY_FIELD_NUMBER = 2;
        private volatile java.lang.Object query_;
        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 2;</code>
         * @return The query.
         */
        @java.lang.Override
        public java.lang.String getQuery() {
          java.lang.Object ref = query_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            query_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 2;</code>
         * @return The bytes for query.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getQueryBytes() {
          java.lang.Object ref = query_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            query_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TEXT_MODE_FIELD_NUMBER = 3;
        private boolean textMode_;
        /**
         * <pre>
         * Text mode.
         * </pre>
         *
         * <code>bool text_mode = 3;</code>
         * @return The textMode.
         */
        @java.lang.Override
        public boolean getTextMode() {
          return textMode_;
        }

        public static final int HIDDEN_FIELD_NUMBER = 4;
        private boolean hidden_;
        /**
         * <pre>
         * Checks that target is visible or invisible.
         * </pre>
         *
         * <code>bool hidden = 4;</code>
         * @return The hidden.
         */
        @java.lang.Override
        public boolean getHidden() {
          return hidden_;
        }

        public static final int NAME_FIELD_NUMBER = 5;
        private volatile java.lang.Object name_;
        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 5;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 5;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataSourceId_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dataSourceId_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(query_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, query_);
          }
          if (textMode_ != false) {
            output.writeBool(3, textMode_);
          }
          if (hidden_ != false) {
            output.writeBool(4, hidden_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, name_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataSourceId_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dataSourceId_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(query_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, query_);
          }
          if (textMode_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(3, textMode_);
          }
          if (hidden_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(4, hidden_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, name_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) obj;

          if (!getDataSourceId()
              .equals(other.getDataSourceId())) return false;
          if (!getQuery()
              .equals(other.getQuery())) return false;
          if (getTextMode()
              != other.getTextMode()) return false;
          if (getHidden()
              != other.getHidden()) return false;
          if (!getName()
              .equals(other.getName())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + DATA_SOURCE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getDataSourceId().hashCode();
          hash = (37 * hash) + QUERY_FIELD_NUMBER;
          hash = (53 * hash) + getQuery().hashCode();
          hash = (37 * hash) + TEXT_MODE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getTextMode());
          hash = (37 * hash) + HIDDEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHidden());
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            dataSourceId_ = "";

            query_ = "";

            textMode_ = false;

            hidden_ = false;

            name_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget(this);
            result.dataSourceId_ = dataSourceId_;
            result.query_ = query_;
            result.textMode_ = textMode_;
            result.hidden_ = hidden_;
            result.name_ = name_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance()) return this;
            if (!other.getDataSourceId().isEmpty()) {
              dataSourceId_ = other.dataSourceId_;
              onChanged();
            }
            if (!other.getQuery().isEmpty()) {
              query_ = other.query_;
              onChanged();
            }
            if (other.getTextMode() != false) {
              setTextMode(other.getTextMode());
            }
            if (other.getHidden() != false) {
              setHidden(other.getHidden());
            }
            if (!other.getName().isEmpty()) {
              name_ = other.name_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object dataSourceId_ = "";
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @return The dataSourceId.
           */
          public java.lang.String getDataSourceId() {
            java.lang.Object ref = dataSourceId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              dataSourceId_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @return The bytes for dataSourceId.
           */
          public com.google.protobuf.ByteString
              getDataSourceIdBytes() {
            java.lang.Object ref = dataSourceId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              dataSourceId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @param value The dataSourceId to set.
           * @return This builder for chaining.
           */
          public Builder setDataSourceId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            dataSourceId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearDataSourceId() {
            
            dataSourceId_ = getDefaultInstance().getDataSourceId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @param value The bytes for dataSourceId to set.
           * @return This builder for chaining.
           */
          public Builder setDataSourceIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            dataSourceId_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object query_ = "";
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 2;</code>
           * @return The query.
           */
          public java.lang.String getQuery() {
            java.lang.Object ref = query_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              query_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 2;</code>
           * @return The bytes for query.
           */
          public com.google.protobuf.ByteString
              getQueryBytes() {
            java.lang.Object ref = query_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              query_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 2;</code>
           * @param value The query to set.
           * @return This builder for chaining.
           */
          public Builder setQuery(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            query_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearQuery() {
            
            query_ = getDefaultInstance().getQuery();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 2;</code>
           * @param value The bytes for query to set.
           * @return This builder for chaining.
           */
          public Builder setQueryBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            query_ = value;
            onChanged();
            return this;
          }

          private boolean textMode_ ;
          /**
           * <pre>
           * Text mode.
           * </pre>
           *
           * <code>bool text_mode = 3;</code>
           * @return The textMode.
           */
          @java.lang.Override
          public boolean getTextMode() {
            return textMode_;
          }
          /**
           * <pre>
           * Text mode.
           * </pre>
           *
           * <code>bool text_mode = 3;</code>
           * @param value The textMode to set.
           * @return This builder for chaining.
           */
          public Builder setTextMode(boolean value) {
            
            textMode_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Text mode.
           * </pre>
           *
           * <code>bool text_mode = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextMode() {
            
            textMode_ = false;
            onChanged();
            return this;
          }

          private boolean hidden_ ;
          /**
           * <pre>
           * Checks that target is visible or invisible.
           * </pre>
           *
           * <code>bool hidden = 4;</code>
           * @return The hidden.
           */
          @java.lang.Override
          public boolean getHidden() {
            return hidden_;
          }
          /**
           * <pre>
           * Checks that target is visible or invisible.
           * </pre>
           *
           * <code>bool hidden = 4;</code>
           * @param value The hidden to set.
           * @return This builder for chaining.
           */
          public Builder setHidden(boolean value) {
            
            hidden_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Checks that target is visible or invisible.
           * </pre>
           *
           * <code>bool hidden = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearHidden() {
            
            hidden_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 5;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 5;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 5;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 5;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            name_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MonitoringTarget>
            PARSER = new com.google.protobuf.AbstractParser<MonitoringTarget>() {
          @java.lang.Override
          public MonitoringTarget parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MonitoringTarget(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<MonitoringTarget> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MonitoringTarget> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface PrometheusTargetOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The dataSourceId.
         */
        java.lang.String getDataSourceId();
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The bytes for dataSourceId.
         */
        com.google.protobuf.ByteString
            getDataSourceIdBytes();

        /**
         * <pre>
         * Required. Workspace ID.
         * </pre>
         *
         * <code>string workspace_id = 2;</code>
         * @return The workspaceId.
         */
        java.lang.String getWorkspaceId();
        /**
         * <pre>
         * Required. Workspace ID.
         * </pre>
         *
         * <code>string workspace_id = 2;</code>
         * @return The bytes for workspaceId.
         */
        com.google.protobuf.ByteString
            getWorkspaceIdBytes();

        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 3;</code>
         * @return The query.
         */
        java.lang.String getQuery();
        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 3;</code>
         * @return The bytes for query.
         */
        com.google.protobuf.ByteString
            getQueryBytes();

        /**
         * <pre>
         * Text mode.
         * </pre>
         *
         * <code>bool text_mode = 4;</code>
         * @return The textMode.
         */
        boolean getTextMode();

        /**
         * <pre>
         * Checks that target is visible or invisible.
         * </pre>
         *
         * <code>bool hidden = 5;</code>
         * @return The hidden.
         */
        boolean getHidden();

        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 6;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 6;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * Minimal step as raw string.
         * </pre>
         *
         * <code>string step = 7;</code>
         * @return The step.
         */
        java.lang.String getStep();
        /**
         * <pre>
         * Minimal step as raw string.
         * </pre>
         *
         * <code>string step = 7;</code>
         * @return The bytes for step.
         */
        com.google.protobuf.ByteString
            getStepBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget}
       */
      public static final class PrometheusTarget extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget)
          PrometheusTargetOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use PrometheusTarget.newBuilder() to construct.
        private PrometheusTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private PrometheusTarget() {
          dataSourceId_ = "";
          workspaceId_ = "";
          query_ = "";
          name_ = "";
          step_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new PrometheusTarget();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private PrometheusTarget(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  dataSourceId_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  workspaceId_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  query_ = s;
                  break;
                }
                case 32: {

                  textMode_ = input.readBool();
                  break;
                }
                case 40: {

                  hidden_ = input.readBool();
                  break;
                }
                case 50: {
                  java.lang.String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 58: {
                  java.lang.String s = input.readStringRequireUtf8();

                  step_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder.class);
        }

        public static final int DATA_SOURCE_ID_FIELD_NUMBER = 1;
        private volatile java.lang.Object dataSourceId_;
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The dataSourceId.
         */
        @java.lang.Override
        public java.lang.String getDataSourceId() {
          java.lang.Object ref = dataSourceId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            dataSourceId_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string data_source_id = 1;</code>
         * @return The bytes for dataSourceId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDataSourceIdBytes() {
          java.lang.Object ref = dataSourceId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dataSourceId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int WORKSPACE_ID_FIELD_NUMBER = 2;
        private volatile java.lang.Object workspaceId_;
        /**
         * <pre>
         * Required. Workspace ID.
         * </pre>
         *
         * <code>string workspace_id = 2;</code>
         * @return The workspaceId.
         */
        @java.lang.Override
        public java.lang.String getWorkspaceId() {
          java.lang.Object ref = workspaceId_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            workspaceId_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Workspace ID.
         * </pre>
         *
         * <code>string workspace_id = 2;</code>
         * @return The bytes for workspaceId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getWorkspaceIdBytes() {
          java.lang.Object ref = workspaceId_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            workspaceId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int QUERY_FIELD_NUMBER = 3;
        private volatile java.lang.Object query_;
        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 3;</code>
         * @return The query.
         */
        @java.lang.Override
        public java.lang.String getQuery() {
          java.lang.Object ref = query_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            query_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Query.
         * </pre>
         *
         * <code>string query = 3;</code>
         * @return The bytes for query.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getQueryBytes() {
          java.lang.Object ref = query_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            query_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TEXT_MODE_FIELD_NUMBER = 4;
        private boolean textMode_;
        /**
         * <pre>
         * Text mode.
         * </pre>
         *
         * <code>bool text_mode = 4;</code>
         * @return The textMode.
         */
        @java.lang.Override
        public boolean getTextMode() {
          return textMode_;
        }

        public static final int HIDDEN_FIELD_NUMBER = 5;
        private boolean hidden_;
        /**
         * <pre>
         * Checks that target is visible or invisible.
         * </pre>
         *
         * <code>bool hidden = 5;</code>
         * @return The hidden.
         */
        @java.lang.Override
        public boolean getHidden() {
          return hidden_;
        }

        public static final int NAME_FIELD_NUMBER = 6;
        private volatile java.lang.Object name_;
        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 6;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Name of the query.
         * </pre>
         *
         * <code>string name = 6;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int STEP_FIELD_NUMBER = 7;
        private volatile java.lang.Object step_;
        /**
         * <pre>
         * Minimal step as raw string.
         * </pre>
         *
         * <code>string step = 7;</code>
         * @return The step.
         */
        @java.lang.Override
        public java.lang.String getStep() {
          java.lang.Object ref = step_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            step_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Minimal step as raw string.
         * </pre>
         *
         * <code>string step = 7;</code>
         * @return The bytes for step.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStepBytes() {
          java.lang.Object ref = step_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            step_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataSourceId_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dataSourceId_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workspaceId_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, workspaceId_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(query_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, query_);
          }
          if (textMode_ != false) {
            output.writeBool(4, textMode_);
          }
          if (hidden_ != false) {
            output.writeBool(5, hidden_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 6, name_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(step_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 7, step_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataSourceId_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dataSourceId_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(workspaceId_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, workspaceId_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(query_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, query_);
          }
          if (textMode_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(4, textMode_);
          }
          if (hidden_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(5, hidden_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, name_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(step_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, step_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) obj;

          if (!getDataSourceId()
              .equals(other.getDataSourceId())) return false;
          if (!getWorkspaceId()
              .equals(other.getWorkspaceId())) return false;
          if (!getQuery()
              .equals(other.getQuery())) return false;
          if (getTextMode()
              != other.getTextMode()) return false;
          if (getHidden()
              != other.getHidden()) return false;
          if (!getName()
              .equals(other.getName())) return false;
          if (!getStep()
              .equals(other.getStep())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + DATA_SOURCE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getDataSourceId().hashCode();
          hash = (37 * hash) + WORKSPACE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getWorkspaceId().hashCode();
          hash = (37 * hash) + QUERY_FIELD_NUMBER;
          hash = (53 * hash) + getQuery().hashCode();
          hash = (37 * hash) + TEXT_MODE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getTextMode());
          hash = (37 * hash) + HIDDEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHidden());
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
          hash = (37 * hash) + STEP_FIELD_NUMBER;
          hash = (53 * hash) + getStep().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            dataSourceId_ = "";

            workspaceId_ = "";

            query_ = "";

            textMode_ = false;

            hidden_ = false;

            name_ = "";

            step_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget(this);
            result.dataSourceId_ = dataSourceId_;
            result.workspaceId_ = workspaceId_;
            result.query_ = query_;
            result.textMode_ = textMode_;
            result.hidden_ = hidden_;
            result.name_ = name_;
            result.step_ = step_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance()) return this;
            if (!other.getDataSourceId().isEmpty()) {
              dataSourceId_ = other.dataSourceId_;
              onChanged();
            }
            if (!other.getWorkspaceId().isEmpty()) {
              workspaceId_ = other.workspaceId_;
              onChanged();
            }
            if (!other.getQuery().isEmpty()) {
              query_ = other.query_;
              onChanged();
            }
            if (other.getTextMode() != false) {
              setTextMode(other.getTextMode());
            }
            if (other.getHidden() != false) {
              setHidden(other.getHidden());
            }
            if (!other.getName().isEmpty()) {
              name_ = other.name_;
              onChanged();
            }
            if (!other.getStep().isEmpty()) {
              step_ = other.step_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object dataSourceId_ = "";
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @return The dataSourceId.
           */
          public java.lang.String getDataSourceId() {
            java.lang.Object ref = dataSourceId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              dataSourceId_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @return The bytes for dataSourceId.
           */
          public com.google.protobuf.ByteString
              getDataSourceIdBytes() {
            java.lang.Object ref = dataSourceId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              dataSourceId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @param value The dataSourceId to set.
           * @return This builder for chaining.
           */
          public Builder setDataSourceId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            dataSourceId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearDataSourceId() {
            
            dataSourceId_ = getDefaultInstance().getDataSourceId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string data_source_id = 1;</code>
           * @param value The bytes for dataSourceId to set.
           * @return This builder for chaining.
           */
          public Builder setDataSourceIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            dataSourceId_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object workspaceId_ = "";
          /**
           * <pre>
           * Required. Workspace ID.
           * </pre>
           *
           * <code>string workspace_id = 2;</code>
           * @return The workspaceId.
           */
          public java.lang.String getWorkspaceId() {
            java.lang.Object ref = workspaceId_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              workspaceId_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Workspace ID.
           * </pre>
           *
           * <code>string workspace_id = 2;</code>
           * @return The bytes for workspaceId.
           */
          public com.google.protobuf.ByteString
              getWorkspaceIdBytes() {
            java.lang.Object ref = workspaceId_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              workspaceId_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Workspace ID.
           * </pre>
           *
           * <code>string workspace_id = 2;</code>
           * @param value The workspaceId to set.
           * @return This builder for chaining.
           */
          public Builder setWorkspaceId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            workspaceId_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Workspace ID.
           * </pre>
           *
           * <code>string workspace_id = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearWorkspaceId() {
            
            workspaceId_ = getDefaultInstance().getWorkspaceId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Workspace ID.
           * </pre>
           *
           * <code>string workspace_id = 2;</code>
           * @param value The bytes for workspaceId to set.
           * @return This builder for chaining.
           */
          public Builder setWorkspaceIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            workspaceId_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object query_ = "";
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 3;</code>
           * @return The query.
           */
          public java.lang.String getQuery() {
            java.lang.Object ref = query_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              query_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 3;</code>
           * @return The bytes for query.
           */
          public com.google.protobuf.ByteString
              getQueryBytes() {
            java.lang.Object ref = query_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              query_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 3;</code>
           * @param value The query to set.
           * @return This builder for chaining.
           */
          public Builder setQuery(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            query_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearQuery() {
            
            query_ = getDefaultInstance().getQuery();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Query.
           * </pre>
           *
           * <code>string query = 3;</code>
           * @param value The bytes for query to set.
           * @return This builder for chaining.
           */
          public Builder setQueryBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            query_ = value;
            onChanged();
            return this;
          }

          private boolean textMode_ ;
          /**
           * <pre>
           * Text mode.
           * </pre>
           *
           * <code>bool text_mode = 4;</code>
           * @return The textMode.
           */
          @java.lang.Override
          public boolean getTextMode() {
            return textMode_;
          }
          /**
           * <pre>
           * Text mode.
           * </pre>
           *
           * <code>bool text_mode = 4;</code>
           * @param value The textMode to set.
           * @return This builder for chaining.
           */
          public Builder setTextMode(boolean value) {
            
            textMode_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Text mode.
           * </pre>
           *
           * <code>bool text_mode = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearTextMode() {
            
            textMode_ = false;
            onChanged();
            return this;
          }

          private boolean hidden_ ;
          /**
           * <pre>
           * Checks that target is visible or invisible.
           * </pre>
           *
           * <code>bool hidden = 5;</code>
           * @return The hidden.
           */
          @java.lang.Override
          public boolean getHidden() {
            return hidden_;
          }
          /**
           * <pre>
           * Checks that target is visible or invisible.
           * </pre>
           *
           * <code>bool hidden = 5;</code>
           * @param value The hidden to set.
           * @return This builder for chaining.
           */
          public Builder setHidden(boolean value) {
            
            hidden_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Checks that target is visible or invisible.
           * </pre>
           *
           * <code>bool hidden = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearHidden() {
            
            hidden_ = false;
            onChanged();
            return this;
          }

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 6;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 6;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 6;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Name of the query.
           * </pre>
           *
           * <code>string name = 6;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            name_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object step_ = "";
          /**
           * <pre>
           * Minimal step as raw string.
           * </pre>
           *
           * <code>string step = 7;</code>
           * @return The step.
           */
          public java.lang.String getStep() {
            java.lang.Object ref = step_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              step_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Minimal step as raw string.
           * </pre>
           *
           * <code>string step = 7;</code>
           * @return The bytes for step.
           */
          public com.google.protobuf.ByteString
              getStepBytes() {
            java.lang.Object ref = step_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              step_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Minimal step as raw string.
           * </pre>
           *
           * <code>string step = 7;</code>
           * @param value The step to set.
           * @return This builder for chaining.
           */
          public Builder setStep(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            step_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Minimal step as raw string.
           * </pre>
           *
           * <code>string step = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearStep() {
            
            step_ = getDefaultInstance().getStep();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Minimal step as raw string.
           * </pre>
           *
           * <code>string step = 7;</code>
           * @param value The bytes for step to set.
           * @return This builder for chaining.
           */
          public Builder setStepBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            step_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PrometheusTarget>
            PARSER = new com.google.protobuf.AbstractParser<PrometheusTarget>() {
          @java.lang.Override
          public PrometheusTarget parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PrometheusTarget(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<PrometheusTarget> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PrometheusTarget> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int targetCase_ = 0;
      private java.lang.Object target_;
      public enum TargetCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        MONITORING_TARGET(1),
        PROMETHEUS_TARGET(2),
        TARGET_NOT_SET(0);
        private final int value;
        private TargetCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TargetCase valueOf(int value) {
          return forNumber(value);
        }

        public static TargetCase forNumber(int value) {
          switch (value) {
            case 1: return MONITORING_TARGET;
            case 2: return PROMETHEUS_TARGET;
            case 0: return TARGET_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public TargetCase
      getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public static final int MONITORING_TARGET_FIELD_NUMBER = 1;
      /**
       * <pre>
       * Monitoring target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
       * @return Whether the monitoringTarget field is set.
       */
      @java.lang.Override
      public boolean hasMonitoringTarget() {
        return targetCase_ == 1;
      }
      /**
       * <pre>
       * Monitoring target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
       * @return The monitoringTarget.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget getMonitoringTarget() {
        if (targetCase_ == 1) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
      }
      /**
       * <pre>
       * Monitoring target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder getMonitoringTargetOrBuilder() {
        if (targetCase_ == 1) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
      }

      public static final int PROMETHEUS_TARGET_FIELD_NUMBER = 2;
      /**
       * <pre>
       * Prometheus target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
       * @return Whether the prometheusTarget field is set.
       */
      @java.lang.Override
      public boolean hasPrometheusTarget() {
        return targetCase_ == 2;
      }
      /**
       * <pre>
       * Prometheus target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
       * @return The prometheusTarget.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget getPrometheusTarget() {
        if (targetCase_ == 2) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
      }
      /**
       * <pre>
       * Prometheus target.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder getPrometheusTargetOrBuilder() {
        if (targetCase_ == 2) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (targetCase_ == 1) {
          output.writeMessage(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_);
        }
        if (targetCase_ == 2) {
          output.writeMessage(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (targetCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_);
        }
        if (targetCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target) obj;

        if (!getTargetCase().equals(other.getTargetCase())) return false;
        switch (targetCase_) {
          case 1:
            if (!getMonitoringTarget()
                .equals(other.getMonitoringTarget())) return false;
            break;
          case 2:
            if (!getPrometheusTarget()
                .equals(other.getPrometheusTarget())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (targetCase_) {
          case 1:
            hash = (37 * hash) + MONITORING_TARGET_FIELD_NUMBER;
            hash = (53 * hash) + getMonitoringTarget().hashCode();
            break;
          case 2:
            hash = (37 * hash) + PROMETHEUS_TARGET_FIELD_NUMBER;
            hash = (53 * hash) + getPrometheusTarget().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Target settings.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          targetCase_ = 0;
          target_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target(this);
          if (targetCase_ == 1) {
            if (monitoringTargetBuilder_ == null) {
              result.target_ = target_;
            } else {
              result.target_ = monitoringTargetBuilder_.build();
            }
          }
          if (targetCase_ == 2) {
            if (prometheusTargetBuilder_ == null) {
              result.target_ = target_;
            } else {
              result.target_ = prometheusTargetBuilder_.build();
            }
          }
          result.targetCase_ = targetCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.getDefaultInstance()) return this;
          switch (other.getTargetCase()) {
            case MONITORING_TARGET: {
              mergeMonitoringTarget(other.getMonitoringTarget());
              break;
            }
            case PROMETHEUS_TARGET: {
              mergePrometheusTarget(other.getPrometheusTarget());
              break;
            }
            case TARGET_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int targetCase_ = 0;
        private java.lang.Object target_;
        public TargetCase
            getTargetCase() {
          return TargetCase.forNumber(
              targetCase_);
        }

        public Builder clearTarget() {
          targetCase_ = 0;
          target_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder> monitoringTargetBuilder_;
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         * @return Whether the monitoringTarget field is set.
         */
        @java.lang.Override
        public boolean hasMonitoringTarget() {
          return targetCase_ == 1;
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         * @return The monitoringTarget.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget getMonitoringTarget() {
          if (monitoringTargetBuilder_ == null) {
            if (targetCase_ == 1) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
          } else {
            if (targetCase_ == 1) {
              return monitoringTargetBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        public Builder setMonitoringTarget(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget value) {
          if (monitoringTargetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            target_ = value;
            onChanged();
          } else {
            monitoringTargetBuilder_.setMessage(value);
          }
          targetCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        public Builder setMonitoringTarget(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder builderForValue) {
          if (monitoringTargetBuilder_ == null) {
            target_ = builderForValue.build();
            onChanged();
          } else {
            monitoringTargetBuilder_.setMessage(builderForValue.build());
          }
          targetCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        public Builder mergeMonitoringTarget(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget value) {
          if (monitoringTargetBuilder_ == null) {
            if (targetCase_ == 1 &&
                target_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance()) {
              target_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_)
                  .mergeFrom(value).buildPartial();
            } else {
              target_ = value;
            }
            onChanged();
          } else {
            if (targetCase_ == 1) {
              monitoringTargetBuilder_.mergeFrom(value);
            }
            monitoringTargetBuilder_.setMessage(value);
          }
          targetCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        public Builder clearMonitoringTarget() {
          if (monitoringTargetBuilder_ == null) {
            if (targetCase_ == 1) {
              targetCase_ = 0;
              target_ = null;
              onChanged();
            }
          } else {
            if (targetCase_ == 1) {
              targetCase_ = 0;
              target_ = null;
            }
            monitoringTargetBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder getMonitoringTargetBuilder() {
          return getMonitoringTargetFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder getMonitoringTargetOrBuilder() {
          if ((targetCase_ == 1) && (monitoringTargetBuilder_ != null)) {
            return monitoringTargetBuilder_.getMessageOrBuilder();
          } else {
            if (targetCase_ == 1) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Monitoring target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.MonitoringTarget monitoring_target = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder> 
            getMonitoringTargetFieldBuilder() {
          if (monitoringTargetBuilder_ == null) {
            if (!(targetCase_ == 1)) {
              target_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.getDefaultInstance();
            }
            monitoringTargetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTargetOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.MonitoringTarget) target_,
                    getParentForChildren(),
                    isClean());
            target_ = null;
          }
          targetCase_ = 1;
          onChanged();;
          return monitoringTargetBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder> prometheusTargetBuilder_;
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         * @return Whether the prometheusTarget field is set.
         */
        @java.lang.Override
        public boolean hasPrometheusTarget() {
          return targetCase_ == 2;
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         * @return The prometheusTarget.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget getPrometheusTarget() {
          if (prometheusTargetBuilder_ == null) {
            if (targetCase_ == 2) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
          } else {
            if (targetCase_ == 2) {
              return prometheusTargetBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        public Builder setPrometheusTarget(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget value) {
          if (prometheusTargetBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            target_ = value;
            onChanged();
          } else {
            prometheusTargetBuilder_.setMessage(value);
          }
          targetCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        public Builder setPrometheusTarget(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder builderForValue) {
          if (prometheusTargetBuilder_ == null) {
            target_ = builderForValue.build();
            onChanged();
          } else {
            prometheusTargetBuilder_.setMessage(builderForValue.build());
          }
          targetCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        public Builder mergePrometheusTarget(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget value) {
          if (prometheusTargetBuilder_ == null) {
            if (targetCase_ == 2 &&
                target_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance()) {
              target_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_)
                  .mergeFrom(value).buildPartial();
            } else {
              target_ = value;
            }
            onChanged();
          } else {
            if (targetCase_ == 2) {
              prometheusTargetBuilder_.mergeFrom(value);
            }
            prometheusTargetBuilder_.setMessage(value);
          }
          targetCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        public Builder clearPrometheusTarget() {
          if (prometheusTargetBuilder_ == null) {
            if (targetCase_ == 2) {
              targetCase_ = 0;
              target_ = null;
              onChanged();
            }
          } else {
            if (targetCase_ == 2) {
              targetCase_ = 0;
              target_ = null;
            }
            prometheusTargetBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder getPrometheusTargetBuilder() {
          return getPrometheusTargetFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder getPrometheusTargetOrBuilder() {
          if ((targetCase_ == 2) && (prometheusTargetBuilder_ != null)) {
            return prometheusTargetBuilder_.getMessageOrBuilder();
          } else {
            if (targetCase_ == 2) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Prometheus target.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target.PrometheusTarget prometheus_target = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder> 
            getPrometheusTargetFieldBuilder() {
          if (prometheusTargetBuilder_ == null) {
            if (!(targetCase_ == 2)) {
              target_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.getDefaultInstance();
            }
            prometheusTargetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTargetOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.PrometheusTarget) target_,
                    getParentForChildren(),
                    isClean());
            target_ = null;
          }
          targetCase_ = 2;
          onChanged();;
          return prometheusTargetBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Target>
          PARSER = new com.google.protobuf.AbstractParser<Target>() {
        @java.lang.Override
        public Target parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Target(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Target> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Target> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DataSourceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Monitoring data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
       * @return Whether the monitoringDataSource field is set.
       */
      boolean hasMonitoringDataSource();
      /**
       * <pre>
       * Monitoring data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
       * @return The monitoringDataSource.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource getMonitoringDataSource();
      /**
       * <pre>
       * Monitoring data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder getMonitoringDataSourceOrBuilder();

      /**
       * <pre>
       * Prometheus data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
       * @return Whether the prometheusDataSource field is set.
       */
      boolean hasPrometheusDataSource();
      /**
       * <pre>
       * Prometheus data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
       * @return The prometheusDataSource.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource getPrometheusDataSource();
      /**
       * <pre>
       * Prometheus data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder getPrometheusDataSourceOrBuilder();

      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.DataSourceCase getDataSourceCase();
    }
    /**
     * <pre>
     * Data source settings.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource}
     */
    public static final class DataSource extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource)
        DataSourceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DataSource.newBuilder() to construct.
      private DataSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DataSource() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DataSource();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DataSource(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder subBuilder = null;
                if (dataSourceCase_ == 1) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_).toBuilder();
                }
                dataSource_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_);
                  dataSource_ = subBuilder.buildPartial();
                }
                dataSourceCase_ = 1;
                break;
              }
              case 18: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder subBuilder = null;
                if (dataSourceCase_ == 2) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_).toBuilder();
                }
                dataSource_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_);
                  dataSource_ = subBuilder.buildPartial();
                }
                dataSourceCase_ = 2;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder.class);
      }

      public interface MonitoringDataSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The id.
         */
        java.lang.String getId();
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The bytes for id.
         */
        com.google.protobuf.ByteString
            getIdBytes();

        /**
         * <pre>
         * Required. Downsampling settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
         * @return Whether the downsampling field is set.
         */
        boolean hasDownsampling();
        /**
         * <pre>
         * Required. Downsampling settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
         * @return The downsampling.
         */
        yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling getDownsampling();
        /**
         * <pre>
         * Required. Downsampling settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
         */
        yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.DownsamplingOrBuilder getDownsamplingOrBuilder();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource}
       */
      public static final class MonitoringDataSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource)
          MonitoringDataSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MonitoringDataSource.newBuilder() to construct.
        private MonitoringDataSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MonitoringDataSource() {
          id_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new MonitoringDataSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private MonitoringDataSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  id_ = s;
                  break;
                }
                case 18: {
                  yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.Builder subBuilder = null;
                  if (downsampling_ != null) {
                    subBuilder = downsampling_.toBuilder();
                  }
                  downsampling_ = input.readMessage(yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(downsampling_);
                    downsampling_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder.class);
        }

        public static final int ID_FIELD_NUMBER = 1;
        private volatile java.lang.Object id_;
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The bytes for id.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int DOWNSAMPLING_FIELD_NUMBER = 2;
        private yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling downsampling_;
        /**
         * <pre>
         * Required. Downsampling settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
         * @return Whether the downsampling field is set.
         */
        @java.lang.Override
        public boolean hasDownsampling() {
          return downsampling_ != null;
        }
        /**
         * <pre>
         * Required. Downsampling settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
         * @return The downsampling.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling getDownsampling() {
          return downsampling_ == null ? yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.getDefaultInstance() : downsampling_;
        }
        /**
         * <pre>
         * Required. Downsampling settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.DownsamplingOrBuilder getDownsamplingOrBuilder() {
          return getDownsampling();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
          }
          if (downsampling_ != null) {
            output.writeMessage(2, getDownsampling());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
          }
          if (downsampling_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getDownsampling());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) obj;

          if (!getId()
              .equals(other.getId())) return false;
          if (hasDownsampling() != other.hasDownsampling()) return false;
          if (hasDownsampling()) {
            if (!getDownsampling()
                .equals(other.getDownsampling())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
          if (hasDownsampling()) {
            hash = (37 * hash) + DOWNSAMPLING_FIELD_NUMBER;
            hash = (53 * hash) + getDownsampling().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            id_ = "";

            if (downsamplingBuilder_ == null) {
              downsampling_ = null;
            } else {
              downsampling_ = null;
              downsamplingBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource(this);
            result.id_ = id_;
            if (downsamplingBuilder_ == null) {
              result.downsampling_ = downsampling_;
            } else {
              result.downsampling_ = downsamplingBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance()) return this;
            if (!other.getId().isEmpty()) {
              id_ = other.id_;
              onChanged();
            }
            if (other.hasDownsampling()) {
              mergeDownsampling(other.getDownsampling());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object id_ = "";
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @return The id.
           */
          public java.lang.String getId() {
            java.lang.Object ref = id_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              id_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @return The bytes for id.
           */
          public com.google.protobuf.ByteString
              getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              id_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @param value The id to set.
           * @return This builder for chaining.
           */
          public Builder setId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            id_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearId() {
            
            id_ = getDefaultInstance().getId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @param value The bytes for id to set.
           * @return This builder for chaining.
           */
          public Builder setIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            id_ = value;
            onChanged();
            return this;
          }

          private yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling downsampling_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling, yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.Builder, yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.DownsamplingOrBuilder> downsamplingBuilder_;
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           * @return Whether the downsampling field is set.
           */
          public boolean hasDownsampling() {
            return downsamplingBuilder_ != null || downsampling_ != null;
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           * @return The downsampling.
           */
          public yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling getDownsampling() {
            if (downsamplingBuilder_ == null) {
              return downsampling_ == null ? yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.getDefaultInstance() : downsampling_;
            } else {
              return downsamplingBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          public Builder setDownsampling(yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling value) {
            if (downsamplingBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              downsampling_ = value;
              onChanged();
            } else {
              downsamplingBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          public Builder setDownsampling(
              yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.Builder builderForValue) {
            if (downsamplingBuilder_ == null) {
              downsampling_ = builderForValue.build();
              onChanged();
            } else {
              downsamplingBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          public Builder mergeDownsampling(yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling value) {
            if (downsamplingBuilder_ == null) {
              if (downsampling_ != null) {
                downsampling_ =
                  yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.newBuilder(downsampling_).mergeFrom(value).buildPartial();
              } else {
                downsampling_ = value;
              }
              onChanged();
            } else {
              downsamplingBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          public Builder clearDownsampling() {
            if (downsamplingBuilder_ == null) {
              downsampling_ = null;
              onChanged();
            } else {
              downsampling_ = null;
              downsamplingBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          public yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.Builder getDownsamplingBuilder() {
            
            onChanged();
            return getDownsamplingFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          public yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.DownsamplingOrBuilder getDownsamplingOrBuilder() {
            if (downsamplingBuilder_ != null) {
              return downsamplingBuilder_.getMessageOrBuilder();
            } else {
              return downsampling_ == null ?
                  yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.getDefaultInstance() : downsampling_;
            }
          }
          /**
           * <pre>
           * Required. Downsampling settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.Downsampling downsampling = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling, yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.Builder, yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.DownsamplingOrBuilder> 
              getDownsamplingFieldBuilder() {
            if (downsamplingBuilder_ == null) {
              downsamplingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling, yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.Downsampling.Builder, yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.DownsamplingOrBuilder>(
                      getDownsampling(),
                      getParentForChildren(),
                      isClean());
              downsampling_ = null;
            }
            return downsamplingBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MonitoringDataSource>
            PARSER = new com.google.protobuf.AbstractParser<MonitoringDataSource>() {
          @java.lang.Override
          public MonitoringDataSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MonitoringDataSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<MonitoringDataSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MonitoringDataSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface PrometheusDataSourceOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The id.
         */
        java.lang.String getId();
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The bytes for id.
         */
        com.google.protobuf.ByteString
            getIdBytes();

        /**
         * <pre>
         * Required. Grid step in milliseconds.
         * </pre>
         *
         * <code>int64 step = 2;</code>
         * @return The step.
         */
        long getStep();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource}
       */
      public static final class PrometheusDataSource extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource)
          PrometheusDataSourceOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use PrometheusDataSource.newBuilder() to construct.
        private PrometheusDataSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private PrometheusDataSource() {
          id_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new PrometheusDataSource();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private PrometheusDataSource(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  id_ = s;
                  break;
                }
                case 16: {

                  step_ = input.readInt64();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder.class);
        }

        public static final int ID_FIELD_NUMBER = 1;
        private volatile java.lang.Object id_;
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Required. Data source ID.
         * </pre>
         *
         * <code>string id = 1;</code>
         * @return The bytes for id.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int STEP_FIELD_NUMBER = 2;
        private long step_;
        /**
         * <pre>
         * Required. Grid step in milliseconds.
         * </pre>
         *
         * <code>int64 step = 2;</code>
         * @return The step.
         */
        @java.lang.Override
        public long getStep() {
          return step_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
          }
          if (step_ != 0L) {
            output.writeInt64(2, step_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
          }
          if (step_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(2, step_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) obj;

          if (!getId()
              .equals(other.getId())) return false;
          if (getStep()
              != other.getStep()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
          hash = (37 * hash) + STEP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getStep());
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            id_ = "";

            step_ = 0L;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource(this);
            result.id_ = id_;
            result.step_ = step_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance()) return this;
            if (!other.getId().isEmpty()) {
              id_ = other.id_;
              onChanged();
            }
            if (other.getStep() != 0L) {
              setStep(other.getStep());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object id_ = "";
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @return The id.
           */
          public java.lang.String getId() {
            java.lang.Object ref = id_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              id_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @return The bytes for id.
           */
          public com.google.protobuf.ByteString
              getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              id_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @param value The id to set.
           * @return This builder for chaining.
           */
          public Builder setId(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            id_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearId() {
            
            id_ = getDefaultInstance().getId();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Data source ID.
           * </pre>
           *
           * <code>string id = 1;</code>
           * @param value The bytes for id to set.
           * @return This builder for chaining.
           */
          public Builder setIdBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            id_ = value;
            onChanged();
            return this;
          }

          private long step_ ;
          /**
           * <pre>
           * Required. Grid step in milliseconds.
           * </pre>
           *
           * <code>int64 step = 2;</code>
           * @return The step.
           */
          @java.lang.Override
          public long getStep() {
            return step_;
          }
          /**
           * <pre>
           * Required. Grid step in milliseconds.
           * </pre>
           *
           * <code>int64 step = 2;</code>
           * @param value The step to set.
           * @return This builder for chaining.
           */
          public Builder setStep(long value) {
            
            step_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Required. Grid step in milliseconds.
           * </pre>
           *
           * <code>int64 step = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearStep() {
            
            step_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PrometheusDataSource>
            PARSER = new com.google.protobuf.AbstractParser<PrometheusDataSource>() {
          @java.lang.Override
          public PrometheusDataSource parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PrometheusDataSource(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<PrometheusDataSource> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PrometheusDataSource> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int dataSourceCase_ = 0;
      private java.lang.Object dataSource_;
      public enum DataSourceCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        MONITORING_DATA_SOURCE(1),
        PROMETHEUS_DATA_SOURCE(2),
        DATASOURCE_NOT_SET(0);
        private final int value;
        private DataSourceCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static DataSourceCase valueOf(int value) {
          return forNumber(value);
        }

        public static DataSourceCase forNumber(int value) {
          switch (value) {
            case 1: return MONITORING_DATA_SOURCE;
            case 2: return PROMETHEUS_DATA_SOURCE;
            case 0: return DATASOURCE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public DataSourceCase
      getDataSourceCase() {
        return DataSourceCase.forNumber(
            dataSourceCase_);
      }

      public static final int MONITORING_DATA_SOURCE_FIELD_NUMBER = 1;
      /**
       * <pre>
       * Monitoring data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
       * @return Whether the monitoringDataSource field is set.
       */
      @java.lang.Override
      public boolean hasMonitoringDataSource() {
        return dataSourceCase_ == 1;
      }
      /**
       * <pre>
       * Monitoring data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
       * @return The monitoringDataSource.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource getMonitoringDataSource() {
        if (dataSourceCase_ == 1) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
      }
      /**
       * <pre>
       * Monitoring data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder getMonitoringDataSourceOrBuilder() {
        if (dataSourceCase_ == 1) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
      }

      public static final int PROMETHEUS_DATA_SOURCE_FIELD_NUMBER = 2;
      /**
       * <pre>
       * Prometheus data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
       * @return Whether the prometheusDataSource field is set.
       */
      @java.lang.Override
      public boolean hasPrometheusDataSource() {
        return dataSourceCase_ == 2;
      }
      /**
       * <pre>
       * Prometheus data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
       * @return The prometheusDataSource.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource getPrometheusDataSource() {
        if (dataSourceCase_ == 2) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
      }
      /**
       * <pre>
       * Prometheus data source.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder getPrometheusDataSourceOrBuilder() {
        if (dataSourceCase_ == 2) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (dataSourceCase_ == 1) {
          output.writeMessage(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_);
        }
        if (dataSourceCase_ == 2) {
          output.writeMessage(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (dataSourceCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_);
        }
        if (dataSourceCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource) obj;

        if (!getDataSourceCase().equals(other.getDataSourceCase())) return false;
        switch (dataSourceCase_) {
          case 1:
            if (!getMonitoringDataSource()
                .equals(other.getMonitoringDataSource())) return false;
            break;
          case 2:
            if (!getPrometheusDataSource()
                .equals(other.getPrometheusDataSource())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (dataSourceCase_) {
          case 1:
            hash = (37 * hash) + MONITORING_DATA_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getMonitoringDataSource().hashCode();
            break;
          case 2:
            hash = (37 * hash) + PROMETHEUS_DATA_SOURCE_FIELD_NUMBER;
            hash = (53 * hash) + getPrometheusDataSource().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Data source settings.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          dataSourceCase_ = 0;
          dataSource_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource(this);
          if (dataSourceCase_ == 1) {
            if (monitoringDataSourceBuilder_ == null) {
              result.dataSource_ = dataSource_;
            } else {
              result.dataSource_ = monitoringDataSourceBuilder_.build();
            }
          }
          if (dataSourceCase_ == 2) {
            if (prometheusDataSourceBuilder_ == null) {
              result.dataSource_ = dataSource_;
            } else {
              result.dataSource_ = prometheusDataSourceBuilder_.build();
            }
          }
          result.dataSourceCase_ = dataSourceCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.getDefaultInstance()) return this;
          switch (other.getDataSourceCase()) {
            case MONITORING_DATA_SOURCE: {
              mergeMonitoringDataSource(other.getMonitoringDataSource());
              break;
            }
            case PROMETHEUS_DATA_SOURCE: {
              mergePrometheusDataSource(other.getPrometheusDataSource());
              break;
            }
            case DATASOURCE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int dataSourceCase_ = 0;
        private java.lang.Object dataSource_;
        public DataSourceCase
            getDataSourceCase() {
          return DataSourceCase.forNumber(
              dataSourceCase_);
        }

        public Builder clearDataSource() {
          dataSourceCase_ = 0;
          dataSource_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder> monitoringDataSourceBuilder_;
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         * @return Whether the monitoringDataSource field is set.
         */
        @java.lang.Override
        public boolean hasMonitoringDataSource() {
          return dataSourceCase_ == 1;
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         * @return The monitoringDataSource.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource getMonitoringDataSource() {
          if (monitoringDataSourceBuilder_ == null) {
            if (dataSourceCase_ == 1) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
          } else {
            if (dataSourceCase_ == 1) {
              return monitoringDataSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        public Builder setMonitoringDataSource(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource value) {
          if (monitoringDataSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dataSource_ = value;
            onChanged();
          } else {
            monitoringDataSourceBuilder_.setMessage(value);
          }
          dataSourceCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        public Builder setMonitoringDataSource(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder builderForValue) {
          if (monitoringDataSourceBuilder_ == null) {
            dataSource_ = builderForValue.build();
            onChanged();
          } else {
            monitoringDataSourceBuilder_.setMessage(builderForValue.build());
          }
          dataSourceCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        public Builder mergeMonitoringDataSource(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource value) {
          if (monitoringDataSourceBuilder_ == null) {
            if (dataSourceCase_ == 1 &&
                dataSource_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance()) {
              dataSource_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_)
                  .mergeFrom(value).buildPartial();
            } else {
              dataSource_ = value;
            }
            onChanged();
          } else {
            if (dataSourceCase_ == 1) {
              monitoringDataSourceBuilder_.mergeFrom(value);
            }
            monitoringDataSourceBuilder_.setMessage(value);
          }
          dataSourceCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        public Builder clearMonitoringDataSource() {
          if (monitoringDataSourceBuilder_ == null) {
            if (dataSourceCase_ == 1) {
              dataSourceCase_ = 0;
              dataSource_ = null;
              onChanged();
            }
          } else {
            if (dataSourceCase_ == 1) {
              dataSourceCase_ = 0;
              dataSource_ = null;
            }
            monitoringDataSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder getMonitoringDataSourceBuilder() {
          return getMonitoringDataSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder getMonitoringDataSourceOrBuilder() {
          if ((dataSourceCase_ == 1) && (monitoringDataSourceBuilder_ != null)) {
            return monitoringDataSourceBuilder_.getMessageOrBuilder();
          } else {
            if (dataSourceCase_ == 1) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Monitoring data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.MonitoringDataSource monitoring_data_source = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder> 
            getMonitoringDataSourceFieldBuilder() {
          if (monitoringDataSourceBuilder_ == null) {
            if (!(dataSourceCase_ == 1)) {
              dataSource_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.getDefaultInstance();
            }
            monitoringDataSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSourceOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.MonitoringDataSource) dataSource_,
                    getParentForChildren(),
                    isClean());
            dataSource_ = null;
          }
          dataSourceCase_ = 1;
          onChanged();;
          return monitoringDataSourceBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder> prometheusDataSourceBuilder_;
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         * @return Whether the prometheusDataSource field is set.
         */
        @java.lang.Override
        public boolean hasPrometheusDataSource() {
          return dataSourceCase_ == 2;
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         * @return The prometheusDataSource.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource getPrometheusDataSource() {
          if (prometheusDataSourceBuilder_ == null) {
            if (dataSourceCase_ == 2) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
          } else {
            if (dataSourceCase_ == 2) {
              return prometheusDataSourceBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        public Builder setPrometheusDataSource(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource value) {
          if (prometheusDataSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dataSource_ = value;
            onChanged();
          } else {
            prometheusDataSourceBuilder_.setMessage(value);
          }
          dataSourceCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        public Builder setPrometheusDataSource(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder builderForValue) {
          if (prometheusDataSourceBuilder_ == null) {
            dataSource_ = builderForValue.build();
            onChanged();
          } else {
            prometheusDataSourceBuilder_.setMessage(builderForValue.build());
          }
          dataSourceCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        public Builder mergePrometheusDataSource(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource value) {
          if (prometheusDataSourceBuilder_ == null) {
            if (dataSourceCase_ == 2 &&
                dataSource_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance()) {
              dataSource_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_)
                  .mergeFrom(value).buildPartial();
            } else {
              dataSource_ = value;
            }
            onChanged();
          } else {
            if (dataSourceCase_ == 2) {
              prometheusDataSourceBuilder_.mergeFrom(value);
            }
            prometheusDataSourceBuilder_.setMessage(value);
          }
          dataSourceCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        public Builder clearPrometheusDataSource() {
          if (prometheusDataSourceBuilder_ == null) {
            if (dataSourceCase_ == 2) {
              dataSourceCase_ = 0;
              dataSource_ = null;
              onChanged();
            }
          } else {
            if (dataSourceCase_ == 2) {
              dataSourceCase_ = 0;
              dataSource_ = null;
            }
            prometheusDataSourceBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder getPrometheusDataSourceBuilder() {
          return getPrometheusDataSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder getPrometheusDataSourceOrBuilder() {
          if ((dataSourceCase_ == 2) && (prometheusDataSourceBuilder_ != null)) {
            return prometheusDataSourceBuilder_.getMessageOrBuilder();
          } else {
            if (dataSourceCase_ == 2) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * Prometheus data source.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource.PrometheusDataSource prometheus_data_source = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder> 
            getPrometheusDataSourceFieldBuilder() {
          if (prometheusDataSourceBuilder_ == null) {
            if (!(dataSourceCase_ == 2)) {
              dataSource_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.getDefaultInstance();
            }
            prometheusDataSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSourceOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.PrometheusDataSource) dataSource_,
                    getParentForChildren(),
                    isClean());
            dataSource_ = null;
          }
          dataSourceCase_ = 2;
          onChanged();;
          return prometheusDataSourceBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DataSource>
          PARSER = new com.google.protobuf.AbstractParser<DataSource>() {
        @java.lang.Override
        public DataSource parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DataSource(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DataSource> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DataSource> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface VisualizationSettingsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Visualization type.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      int getTypeValue();
      /**
       * <pre>
       * Visualization type.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
       * @return The type.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType getType();

      /**
       * <pre>
       * Normalize.
       * </pre>
       *
       * <code>bool normalize = 2;</code>
       * @return The normalize.
       */
      boolean getNormalize();

      /**
       * <pre>
       * Interpolate.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
       * @return The enum numeric value on the wire for interpolate.
       */
      int getInterpolateValue();
      /**
       * <pre>
       * Interpolate.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
       * @return The interpolate.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate getInterpolate();

      /**
       * <pre>
       * Aggregation.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
       * @return The enum numeric value on the wire for aggregation.
       */
      int getAggregationValue();
      /**
       * <pre>
       * Aggregation.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
       * @return The aggregation.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation getAggregation();

      /**
       * <pre>
       * Color scheme settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
       * @return Whether the colorSchemeSettings field is set.
       */
      boolean hasColorSchemeSettings();
      /**
       * <pre>
       * Color scheme settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
       * @return The colorSchemeSettings.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings getColorSchemeSettings();
      /**
       * <pre>
       * Color scheme settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder getColorSchemeSettingsOrBuilder();

      /**
       * <pre>
       * Heatmap settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
       * @return Whether the heatmapSettings field is set.
       */
      boolean hasHeatmapSettings();
      /**
       * <pre>
       * Heatmap settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
       * @return The heatmapSettings.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings getHeatmapSettings();
      /**
       * <pre>
       * Heatmap settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder getHeatmapSettingsOrBuilder();

      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
       * @return Whether the yaxisSettings field is set.
       */
      boolean hasYaxisSettings();
      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
       * @return The yaxisSettings.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings getYaxisSettings();
      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder getYaxisSettingsOrBuilder();

      /**
       * <pre>
       * Inside chart title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return The title.
       */
      java.lang.String getTitle();
      /**
       * <pre>
       * Inside chart title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return The bytes for title.
       */
      com.google.protobuf.ByteString
          getTitleBytes();

      /**
       * <pre>
       * Show chart labels.
       * </pre>
       *
       * <code>bool show_labels = 9;</code>
       * @return The showLabels.
       */
      boolean getShowLabels();
    }
    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings}
     */
    public static final class VisualizationSettings extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings)
        VisualizationSettingsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use VisualizationSettings.newBuilder() to construct.
      private VisualizationSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private VisualizationSettings() {
        type_ = 0;
        interpolate_ = 0;
        aggregation_ = 0;
        title_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new VisualizationSettings();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private VisualizationSettings(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                type_ = rawValue;
                break;
              }
              case 16: {

                normalize_ = input.readBool();
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                interpolate_ = rawValue;
                break;
              }
              case 32: {
                int rawValue = input.readEnum();

                aggregation_ = rawValue;
                break;
              }
              case 42: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder subBuilder = null;
                if (colorSchemeSettings_ != null) {
                  subBuilder = colorSchemeSettings_.toBuilder();
                }
                colorSchemeSettings_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(colorSchemeSettings_);
                  colorSchemeSettings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder subBuilder = null;
                if (heatmapSettings_ != null) {
                  subBuilder = heatmapSettings_.toBuilder();
                }
                heatmapSettings_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(heatmapSettings_);
                  heatmapSettings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 58: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder subBuilder = null;
                if (yaxisSettings_ != null) {
                  subBuilder = yaxisSettings_.toBuilder();
                }
                yaxisSettings_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(yaxisSettings_);
                  yaxisSettings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 66: {
                java.lang.String s = input.readStringRequireUtf8();

                title_ = s;
                break;
              }
              case 72: {

                showLabels_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder.class);
      }

      /**
       * <pre>
       * Chart visualization type.
       * </pre>
       *
       * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType}
       */
      public enum VisualizationType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Not specified (line by default).
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_UNSPECIFIED = 0;</code>
         */
        VISUALIZATION_TYPE_UNSPECIFIED(0),
        /**
         * <pre>
         * Line chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_LINE = 1;</code>
         */
        VISUALIZATION_TYPE_LINE(1),
        /**
         * <pre>
         * Stack chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_STACK = 2;</code>
         */
        VISUALIZATION_TYPE_STACK(2),
        /**
         * <pre>
         * Points as columns chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_COLUMN = 3;</code>
         */
        VISUALIZATION_TYPE_COLUMN(3),
        /**
         * <pre>
         * Points.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_POINTS = 4;</code>
         */
        VISUALIZATION_TYPE_POINTS(4),
        /**
         * <pre>
         * Pie aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_PIE = 5;</code>
         */
        VISUALIZATION_TYPE_PIE(5),
        /**
         * <pre>
         * Bars aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_BARS = 6;</code>
         */
        VISUALIZATION_TYPE_BARS(6),
        /**
         * <pre>
         * Distribution aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_DISTRIBUTION = 7;</code>
         */
        VISUALIZATION_TYPE_DISTRIBUTION(7),
        /**
         * <pre>
         * Heatmap aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_HEATMAP = 8;</code>
         */
        VISUALIZATION_TYPE_HEATMAP(8),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Not specified (line by default).
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_UNSPECIFIED = 0;</code>
         */
        public static final int VISUALIZATION_TYPE_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Line chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_LINE = 1;</code>
         */
        public static final int VISUALIZATION_TYPE_LINE_VALUE = 1;
        /**
         * <pre>
         * Stack chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_STACK = 2;</code>
         */
        public static final int VISUALIZATION_TYPE_STACK_VALUE = 2;
        /**
         * <pre>
         * Points as columns chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_COLUMN = 3;</code>
         */
        public static final int VISUALIZATION_TYPE_COLUMN_VALUE = 3;
        /**
         * <pre>
         * Points.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_POINTS = 4;</code>
         */
        public static final int VISUALIZATION_TYPE_POINTS_VALUE = 4;
        /**
         * <pre>
         * Pie aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_PIE = 5;</code>
         */
        public static final int VISUALIZATION_TYPE_PIE_VALUE = 5;
        /**
         * <pre>
         * Bars aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_BARS = 6;</code>
         */
        public static final int VISUALIZATION_TYPE_BARS_VALUE = 6;
        /**
         * <pre>
         * Distribution aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_DISTRIBUTION = 7;</code>
         */
        public static final int VISUALIZATION_TYPE_DISTRIBUTION_VALUE = 7;
        /**
         * <pre>
         * Heatmap aggregation chart.
         * </pre>
         *
         * <code>VISUALIZATION_TYPE_HEATMAP = 8;</code>
         */
        public static final int VISUALIZATION_TYPE_HEATMAP_VALUE = 8;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static VisualizationType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static VisualizationType forNumber(int value) {
          switch (value) {
            case 0: return VISUALIZATION_TYPE_UNSPECIFIED;
            case 1: return VISUALIZATION_TYPE_LINE;
            case 2: return VISUALIZATION_TYPE_STACK;
            case 3: return VISUALIZATION_TYPE_COLUMN;
            case 4: return VISUALIZATION_TYPE_POINTS;
            case 5: return VISUALIZATION_TYPE_PIE;
            case 6: return VISUALIZATION_TYPE_BARS;
            case 7: return VISUALIZATION_TYPE_DISTRIBUTION;
            case 8: return VISUALIZATION_TYPE_HEATMAP;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<VisualizationType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            VisualizationType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<VisualizationType>() {
                public VisualizationType findValueByNumber(int number) {
                  return VisualizationType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDescriptor().getEnumTypes().get(0);
        }

        private static final VisualizationType[] VALUES = values();

        public static VisualizationType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private VisualizationType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType)
      }

      /**
       * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate}
       */
      public enum Interpolate
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Not specified (linear by default).
         * </pre>
         *
         * <code>INTERPOLATE_UNSPECIFIED = 0;</code>
         */
        INTERPOLATE_UNSPECIFIED(0),
        /**
         * <pre>
         * Linear.
         * </pre>
         *
         * <code>INTERPOLATE_LINEAR = 1;</code>
         */
        INTERPOLATE_LINEAR(1),
        /**
         * <pre>
         * Left.
         * </pre>
         *
         * <code>INTERPOLATE_LEFT = 2;</code>
         */
        INTERPOLATE_LEFT(2),
        /**
         * <pre>
         * Right.
         * </pre>
         *
         * <code>INTERPOLATE_RIGHT = 3;</code>
         */
        INTERPOLATE_RIGHT(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Not specified (linear by default).
         * </pre>
         *
         * <code>INTERPOLATE_UNSPECIFIED = 0;</code>
         */
        public static final int INTERPOLATE_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Linear.
         * </pre>
         *
         * <code>INTERPOLATE_LINEAR = 1;</code>
         */
        public static final int INTERPOLATE_LINEAR_VALUE = 1;
        /**
         * <pre>
         * Left.
         * </pre>
         *
         * <code>INTERPOLATE_LEFT = 2;</code>
         */
        public static final int INTERPOLATE_LEFT_VALUE = 2;
        /**
         * <pre>
         * Right.
         * </pre>
         *
         * <code>INTERPOLATE_RIGHT = 3;</code>
         */
        public static final int INTERPOLATE_RIGHT_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Interpolate valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Interpolate forNumber(int value) {
          switch (value) {
            case 0: return INTERPOLATE_UNSPECIFIED;
            case 1: return INTERPOLATE_LINEAR;
            case 2: return INTERPOLATE_LEFT;
            case 3: return INTERPOLATE_RIGHT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Interpolate>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Interpolate> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Interpolate>() {
                public Interpolate findValueByNumber(int number) {
                  return Interpolate.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDescriptor().getEnumTypes().get(1);
        }

        private static final Interpolate[] VALUES = values();

        public static Interpolate valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Interpolate(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate)
      }

      /**
       * <pre>
       * Y axis type.
       * N.B. _TYPE prefix is necessary to expect name clash with Interpolate LINEAR value.
       * </pre>
       *
       * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType}
       */
      public enum YaxisType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Not specified (linear by default).
         * </pre>
         *
         * <code>YAXIS_TYPE_UNSPECIFIED = 0;</code>
         */
        YAXIS_TYPE_UNSPECIFIED(0),
        /**
         * <pre>
         * Linear.
         * </pre>
         *
         * <code>YAXIS_TYPE_LINEAR = 1;</code>
         */
        YAXIS_TYPE_LINEAR(1),
        /**
         * <pre>
         * Logarithmic.
         * </pre>
         *
         * <code>YAXIS_TYPE_LOGARITHMIC = 2;</code>
         */
        YAXIS_TYPE_LOGARITHMIC(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Not specified (linear by default).
         * </pre>
         *
         * <code>YAXIS_TYPE_UNSPECIFIED = 0;</code>
         */
        public static final int YAXIS_TYPE_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Linear.
         * </pre>
         *
         * <code>YAXIS_TYPE_LINEAR = 1;</code>
         */
        public static final int YAXIS_TYPE_LINEAR_VALUE = 1;
        /**
         * <pre>
         * Logarithmic.
         * </pre>
         *
         * <code>YAXIS_TYPE_LOGARITHMIC = 2;</code>
         */
        public static final int YAXIS_TYPE_LOGARITHMIC_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static YaxisType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static YaxisType forNumber(int value) {
          switch (value) {
            case 0: return YAXIS_TYPE_UNSPECIFIED;
            case 1: return YAXIS_TYPE_LINEAR;
            case 2: return YAXIS_TYPE_LOGARITHMIC;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<YaxisType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            YaxisType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<YaxisType>() {
                public YaxisType findValueByNumber(int number) {
                  return YaxisType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDescriptor().getEnumTypes().get(2);
        }

        private static final YaxisType[] VALUES = values();

        public static YaxisType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private YaxisType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType)
      }

      /**
       * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation}
       */
      public enum SeriesAggregation
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Not specified (avg by default).
         * </pre>
         *
         * <code>SERIES_AGGREGATION_UNSPECIFIED = 0;</code>
         */
        SERIES_AGGREGATION_UNSPECIFIED(0),
        /**
         * <pre>
         * Average.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_AVG = 1;</code>
         */
        SERIES_AGGREGATION_AVG(1),
        /**
         * <pre>
         * Minimum.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_MIN = 2;</code>
         */
        SERIES_AGGREGATION_MIN(2),
        /**
         * <pre>
         * Maximum.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_MAX = 3;</code>
         */
        SERIES_AGGREGATION_MAX(3),
        /**
         * <pre>
         * Last non-NaN value.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_LAST = 4;</code>
         */
        SERIES_AGGREGATION_LAST(4),
        /**
         * <pre>
         * Sum.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_SUM = 5;</code>
         */
        SERIES_AGGREGATION_SUM(5),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Not specified (avg by default).
         * </pre>
         *
         * <code>SERIES_AGGREGATION_UNSPECIFIED = 0;</code>
         */
        public static final int SERIES_AGGREGATION_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Average.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_AVG = 1;</code>
         */
        public static final int SERIES_AGGREGATION_AVG_VALUE = 1;
        /**
         * <pre>
         * Minimum.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_MIN = 2;</code>
         */
        public static final int SERIES_AGGREGATION_MIN_VALUE = 2;
        /**
         * <pre>
         * Maximum.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_MAX = 3;</code>
         */
        public static final int SERIES_AGGREGATION_MAX_VALUE = 3;
        /**
         * <pre>
         * Last non-NaN value.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_LAST = 4;</code>
         */
        public static final int SERIES_AGGREGATION_LAST_VALUE = 4;
        /**
         * <pre>
         * Sum.
         * </pre>
         *
         * <code>SERIES_AGGREGATION_SUM = 5;</code>
         */
        public static final int SERIES_AGGREGATION_SUM_VALUE = 5;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SeriesAggregation valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SeriesAggregation forNumber(int value) {
          switch (value) {
            case 0: return SERIES_AGGREGATION_UNSPECIFIED;
            case 1: return SERIES_AGGREGATION_AVG;
            case 2: return SERIES_AGGREGATION_MIN;
            case 3: return SERIES_AGGREGATION_MAX;
            case 4: return SERIES_AGGREGATION_LAST;
            case 5: return SERIES_AGGREGATION_SUM;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SeriesAggregation>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SeriesAggregation> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SeriesAggregation>() {
                public SeriesAggregation findValueByNumber(int number) {
                  return SeriesAggregation.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDescriptor().getEnumTypes().get(3);
        }

        private static final SeriesAggregation[] VALUES = values();

        public static SeriesAggregation valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SeriesAggregation(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation)
      }

      public interface ColorSchemeSettingsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Automatic color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
         * @return Whether the automatic field is set.
         */
        boolean hasAutomatic();
        /**
         * <pre>
         * Automatic color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
         * @return The automatic.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme getAutomatic();
        /**
         * <pre>
         * Automatic color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder getAutomaticOrBuilder();

        /**
         * <pre>
         * Standard color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
         * @return Whether the standard field is set.
         */
        boolean hasStandard();
        /**
         * <pre>
         * Standard color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
         * @return The standard.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme getStandard();
        /**
         * <pre>
         * Standard color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder getStandardOrBuilder();

        /**
         * <pre>
         * Gradient color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
         * @return Whether the gradient field is set.
         */
        boolean hasGradient();
        /**
         * <pre>
         * Gradient color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
         * @return The gradient.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme getGradient();
        /**
         * <pre>
         * Gradient color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder getGradientOrBuilder();

        /**
         * <pre>
         * Hash color scheme. Based on line name or value.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
         * @return Whether the hash field is set.
         */
        boolean hasHash();
        /**
         * <pre>
         * Hash color scheme. Based on line name or value.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
         * @return The hash.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme getHash();
        /**
         * <pre>
         * Hash color scheme. Based on line name or value.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder getHashOrBuilder();

        /**
         * <pre>
         * Threshold settings color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
         * @return Whether the thresholds field is set.
         */
        boolean hasThresholds();
        /**
         * <pre>
         * Threshold settings color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
         * @return The thresholds.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme getThresholds();
        /**
         * <pre>
         * Threshold settings color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder getThresholdsOrBuilder();

        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
         * @return Whether the constant field is set.
         */
        boolean hasConstant();
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
         * @return The constant.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme getConstant();
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder getConstantOrBuilder();

        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.SchemeCase getSchemeCase();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings}
       */
      public static final class ColorSchemeSettings extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)
          ColorSchemeSettingsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ColorSchemeSettings.newBuilder() to construct.
        private ColorSchemeSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ColorSchemeSettings() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ColorSchemeSettings();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private ColorSchemeSettings(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder subBuilder = null;
                  if (schemeCase_ == 1) {
                    subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_).toBuilder();
                  }
                  scheme_ =
                      input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_);
                    scheme_ = subBuilder.buildPartial();
                  }
                  schemeCase_ = 1;
                  break;
                }
                case 18: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder subBuilder = null;
                  if (schemeCase_ == 2) {
                    subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_).toBuilder();
                  }
                  scheme_ =
                      input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_);
                    scheme_ = subBuilder.buildPartial();
                  }
                  schemeCase_ = 2;
                  break;
                }
                case 26: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder subBuilder = null;
                  if (schemeCase_ == 3) {
                    subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_).toBuilder();
                  }
                  scheme_ =
                      input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_);
                    scheme_ = subBuilder.buildPartial();
                  }
                  schemeCase_ = 3;
                  break;
                }
                case 34: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder subBuilder = null;
                  if (schemeCase_ == 4) {
                    subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_).toBuilder();
                  }
                  scheme_ =
                      input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_);
                    scheme_ = subBuilder.buildPartial();
                  }
                  schemeCase_ = 4;
                  break;
                }
                case 42: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder subBuilder = null;
                  if (schemeCase_ == 5) {
                    subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_).toBuilder();
                  }
                  scheme_ =
                      input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_);
                    scheme_ = subBuilder.buildPartial();
                  }
                  schemeCase_ = 5;
                  break;
                }
                case 50: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder subBuilder = null;
                  if (schemeCase_ == 6) {
                    subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_).toBuilder();
                  }
                  scheme_ =
                      input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_);
                    scheme_ = subBuilder.buildPartial();
                  }
                  schemeCase_ = 6;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder.class);
        }

        public interface AutomaticColorSchemeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)
            com.google.protobuf.MessageOrBuilder {
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme}
         */
        public static final class AutomaticColorScheme extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)
            AutomaticColorSchemeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use AutomaticColorScheme.newBuilder() to construct.
          private AutomaticColorScheme(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private AutomaticColorScheme() {
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new AutomaticColorScheme();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private AutomaticColorScheme(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder.class);
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)) {
              return super.equals(obj);
            }
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) obj;

            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder.class);
            }

            // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme getDefaultInstanceForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme build() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme buildPartial() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme(this);
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) {
                return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme other) {
              if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance()) return this;
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme)
          private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme();
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<AutomaticColorScheme>
              PARSER = new com.google.protobuf.AbstractParser<AutomaticColorScheme>() {
            @java.lang.Override
            public AutomaticColorScheme parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new AutomaticColorScheme(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<AutomaticColorScheme> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<AutomaticColorScheme> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface StandardColorSchemeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)
            com.google.protobuf.MessageOrBuilder {
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme}
         */
        public static final class StandardColorScheme extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)
            StandardColorSchemeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use StandardColorScheme.newBuilder() to construct.
          private StandardColorScheme(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private StandardColorScheme() {
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new StandardColorScheme();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private StandardColorScheme(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder.class);
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)) {
              return super.equals(obj);
            }
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) obj;

            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder.class);
            }

            // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme getDefaultInstanceForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme build() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme buildPartial() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme(this);
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) {
                return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme other) {
              if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance()) return this;
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme)
          private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme();
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<StandardColorScheme>
              PARSER = new com.google.protobuf.AbstractParser<StandardColorScheme>() {
            @java.lang.Override
            public StandardColorScheme parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new StandardColorScheme(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<StandardColorScheme> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<StandardColorScheme> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface GradientColorSchemeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <pre>
           * Gradient green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return The greenValue.
           */
          java.lang.String getGreenValue();
          /**
           * <pre>
           * Gradient green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return The bytes for greenValue.
           */
          com.google.protobuf.ByteString
              getGreenValueBytes();

          /**
           * <pre>
           * Gradient yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return The yellowValue.
           */
          java.lang.String getYellowValue();
          /**
           * <pre>
           * Gradient yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return The bytes for yellowValue.
           */
          com.google.protobuf.ByteString
              getYellowValueBytes();

          /**
           * <pre>
           * Gradient red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return The redValue.
           */
          java.lang.String getRedValue();
          /**
           * <pre>
           * Gradient red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return The bytes for redValue.
           */
          com.google.protobuf.ByteString
              getRedValueBytes();

          /**
           * <pre>
           * Gradient violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return The violetValue.
           */
          java.lang.String getVioletValue();
          /**
           * <pre>
           * Gradient violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return The bytes for violetValue.
           */
          com.google.protobuf.ByteString
              getVioletValueBytes();
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme}
         */
        public static final class GradientColorScheme extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)
            GradientColorSchemeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use GradientColorScheme.newBuilder() to construct.
          private GradientColorScheme(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private GradientColorScheme() {
            greenValue_ = "";
            yellowValue_ = "";
            redValue_ = "";
            violetValue_ = "";
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new GradientColorScheme();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private GradientColorScheme(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 18: {
                    java.lang.String s = input.readStringRequireUtf8();

                    greenValue_ = s;
                    break;
                  }
                  case 26: {
                    java.lang.String s = input.readStringRequireUtf8();

                    yellowValue_ = s;
                    break;
                  }
                  case 34: {
                    java.lang.String s = input.readStringRequireUtf8();

                    redValue_ = s;
                    break;
                  }
                  case 42: {
                    java.lang.String s = input.readStringRequireUtf8();

                    violetValue_ = s;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder.class);
          }

          public static final int GREEN_VALUE_FIELD_NUMBER = 2;
          private volatile java.lang.Object greenValue_;
          /**
           * <pre>
           * Gradient green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return The greenValue.
           */
          @java.lang.Override
          public java.lang.String getGreenValue() {
            java.lang.Object ref = greenValue_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              greenValue_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Gradient green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return The bytes for greenValue.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getGreenValueBytes() {
            java.lang.Object ref = greenValue_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              greenValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int YELLOW_VALUE_FIELD_NUMBER = 3;
          private volatile java.lang.Object yellowValue_;
          /**
           * <pre>
           * Gradient yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return The yellowValue.
           */
          @java.lang.Override
          public java.lang.String getYellowValue() {
            java.lang.Object ref = yellowValue_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              yellowValue_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Gradient yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return The bytes for yellowValue.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getYellowValueBytes() {
            java.lang.Object ref = yellowValue_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              yellowValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int RED_VALUE_FIELD_NUMBER = 4;
          private volatile java.lang.Object redValue_;
          /**
           * <pre>
           * Gradient red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return The redValue.
           */
          @java.lang.Override
          public java.lang.String getRedValue() {
            java.lang.Object ref = redValue_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              redValue_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Gradient red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return The bytes for redValue.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getRedValueBytes() {
            java.lang.Object ref = redValue_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              redValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          public static final int VIOLET_VALUE_FIELD_NUMBER = 5;
          private volatile java.lang.Object violetValue_;
          /**
           * <pre>
           * Gradient violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return The violetValue.
           */
          @java.lang.Override
          public java.lang.String getVioletValue() {
            java.lang.Object ref = violetValue_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              violetValue_ = s;
              return s;
            }
          }
          /**
           * <pre>
           * Gradient violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return The bytes for violetValue.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getVioletValueBytes() {
            java.lang.Object ref = violetValue_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              violetValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(greenValue_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 2, greenValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(yellowValue_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 3, yellowValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(redValue_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 4, redValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(violetValue_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 5, violetValue_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(greenValue_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, greenValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(yellowValue_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, yellowValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(redValue_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, redValue_);
            }
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(violetValue_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, violetValue_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)) {
              return super.equals(obj);
            }
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) obj;

            if (!getGreenValue()
                .equals(other.getGreenValue())) return false;
            if (!getYellowValue()
                .equals(other.getYellowValue())) return false;
            if (!getRedValue()
                .equals(other.getRedValue())) return false;
            if (!getVioletValue()
                .equals(other.getVioletValue())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + GREEN_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getGreenValue().hashCode();
            hash = (37 * hash) + YELLOW_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getYellowValue().hashCode();
            hash = (37 * hash) + RED_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getRedValue().hashCode();
            hash = (37 * hash) + VIOLET_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + getVioletValue().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder.class);
            }

            // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              greenValue_ = "";

              yellowValue_ = "";

              redValue_ = "";

              violetValue_ = "";

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme getDefaultInstanceForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme build() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme buildPartial() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme(this);
              result.greenValue_ = greenValue_;
              result.yellowValue_ = yellowValue_;
              result.redValue_ = redValue_;
              result.violetValue_ = violetValue_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) {
                return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme other) {
              if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance()) return this;
              if (!other.getGreenValue().isEmpty()) {
                greenValue_ = other.greenValue_;
                onChanged();
              }
              if (!other.getYellowValue().isEmpty()) {
                yellowValue_ = other.yellowValue_;
                onChanged();
              }
              if (!other.getRedValue().isEmpty()) {
                redValue_ = other.redValue_;
                onChanged();
              }
              if (!other.getVioletValue().isEmpty()) {
                violetValue_ = other.violetValue_;
                onChanged();
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private java.lang.Object greenValue_ = "";
            /**
             * <pre>
             * Gradient green value.
             * </pre>
             *
             * <code>string green_value = 2;</code>
             * @return The greenValue.
             */
            public java.lang.String getGreenValue() {
              java.lang.Object ref = greenValue_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                greenValue_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Gradient green value.
             * </pre>
             *
             * <code>string green_value = 2;</code>
             * @return The bytes for greenValue.
             */
            public com.google.protobuf.ByteString
                getGreenValueBytes() {
              java.lang.Object ref = greenValue_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                greenValue_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Gradient green value.
             * </pre>
             *
             * <code>string green_value = 2;</code>
             * @param value The greenValue to set.
             * @return This builder for chaining.
             */
            public Builder setGreenValue(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              greenValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient green value.
             * </pre>
             *
             * <code>string green_value = 2;</code>
             * @return This builder for chaining.
             */
            public Builder clearGreenValue() {
              
              greenValue_ = getDefaultInstance().getGreenValue();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient green value.
             * </pre>
             *
             * <code>string green_value = 2;</code>
             * @param value The bytes for greenValue to set.
             * @return This builder for chaining.
             */
            public Builder setGreenValueBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              greenValue_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object yellowValue_ = "";
            /**
             * <pre>
             * Gradient yellow value.
             * </pre>
             *
             * <code>string yellow_value = 3;</code>
             * @return The yellowValue.
             */
            public java.lang.String getYellowValue() {
              java.lang.Object ref = yellowValue_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                yellowValue_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Gradient yellow value.
             * </pre>
             *
             * <code>string yellow_value = 3;</code>
             * @return The bytes for yellowValue.
             */
            public com.google.protobuf.ByteString
                getYellowValueBytes() {
              java.lang.Object ref = yellowValue_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                yellowValue_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Gradient yellow value.
             * </pre>
             *
             * <code>string yellow_value = 3;</code>
             * @param value The yellowValue to set.
             * @return This builder for chaining.
             */
            public Builder setYellowValue(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              yellowValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient yellow value.
             * </pre>
             *
             * <code>string yellow_value = 3;</code>
             * @return This builder for chaining.
             */
            public Builder clearYellowValue() {
              
              yellowValue_ = getDefaultInstance().getYellowValue();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient yellow value.
             * </pre>
             *
             * <code>string yellow_value = 3;</code>
             * @param value The bytes for yellowValue to set.
             * @return This builder for chaining.
             */
            public Builder setYellowValueBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              yellowValue_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object redValue_ = "";
            /**
             * <pre>
             * Gradient red value.
             * </pre>
             *
             * <code>string red_value = 4;</code>
             * @return The redValue.
             */
            public java.lang.String getRedValue() {
              java.lang.Object ref = redValue_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                redValue_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Gradient red value.
             * </pre>
             *
             * <code>string red_value = 4;</code>
             * @return The bytes for redValue.
             */
            public com.google.protobuf.ByteString
                getRedValueBytes() {
              java.lang.Object ref = redValue_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                redValue_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Gradient red value.
             * </pre>
             *
             * <code>string red_value = 4;</code>
             * @param value The redValue to set.
             * @return This builder for chaining.
             */
            public Builder setRedValue(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              redValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient red value.
             * </pre>
             *
             * <code>string red_value = 4;</code>
             * @return This builder for chaining.
             */
            public Builder clearRedValue() {
              
              redValue_ = getDefaultInstance().getRedValue();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient red value.
             * </pre>
             *
             * <code>string red_value = 4;</code>
             * @param value The bytes for redValue to set.
             * @return This builder for chaining.
             */
            public Builder setRedValueBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              redValue_ = value;
              onChanged();
              return this;
            }

            private java.lang.Object violetValue_ = "";
            /**
             * <pre>
             * Gradient violet_value.
             * </pre>
             *
             * <code>string violet_value = 5;</code>
             * @return The violetValue.
             */
            public java.lang.String getVioletValue() {
              java.lang.Object ref = violetValue_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                violetValue_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <pre>
             * Gradient violet_value.
             * </pre>
             *
             * <code>string violet_value = 5;</code>
             * @return The bytes for violetValue.
             */
            public com.google.protobuf.ByteString
                getVioletValueBytes() {
              java.lang.Object ref = violetValue_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                violetValue_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <pre>
             * Gradient violet_value.
             * </pre>
             *
             * <code>string violet_value = 5;</code>
             * @param value The violetValue to set.
             * @return This builder for chaining.
             */
            public Builder setVioletValue(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              violetValue_ = value;
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient violet_value.
             * </pre>
             *
             * <code>string violet_value = 5;</code>
             * @return This builder for chaining.
             */
            public Builder clearVioletValue() {
              
              violetValue_ = getDefaultInstance().getVioletValue();
              onChanged();
              return this;
            }
            /**
             * <pre>
             * Gradient violet_value.
             * </pre>
             *
             * <code>string violet_value = 5;</code>
             * @param value The bytes for violetValue to set.
             * @return This builder for chaining.
             */
            public Builder setVioletValueBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              violetValue_ = value;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme)
          private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme();
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<GradientColorScheme>
              PARSER = new com.google.protobuf.AbstractParser<GradientColorScheme>() {
            @java.lang.Override
            public GradientColorScheme parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new GradientColorScheme(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<GradientColorScheme> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<GradientColorScheme> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface HashColorSchemeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)
            com.google.protobuf.MessageOrBuilder {
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme}
         */
        public static final class HashColorScheme extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)
            HashColorSchemeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use HashColorScheme.newBuilder() to construct.
          private HashColorScheme(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private HashColorScheme() {
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new HashColorScheme();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private HashColorScheme(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder.class);
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)) {
              return super.equals(obj);
            }
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) obj;

            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder.class);
            }

            // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme getDefaultInstanceForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme build() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme buildPartial() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme(this);
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) {
                return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme other) {
              if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance()) return this;
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme)
          private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme();
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<HashColorScheme>
              PARSER = new com.google.protobuf.AbstractParser<HashColorScheme>() {
            @java.lang.Override
            public HashColorScheme parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new HashColorScheme(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<HashColorScheme> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<HashColorScheme> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface ConstantColorSchemeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <code>string color = 1;</code>
           * @return The color.
           */
          java.lang.String getColor();
          /**
           * <code>string color = 1;</code>
           * @return The bytes for color.
           */
          com.google.protobuf.ByteString
              getColorBytes();
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme}
         */
        public static final class ConstantColorScheme extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)
            ConstantColorSchemeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use ConstantColorScheme.newBuilder() to construct.
          private ConstantColorScheme(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private ConstantColorScheme() {
            color_ = "";
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new ConstantColorScheme();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private ConstantColorScheme(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    java.lang.String s = input.readStringRequireUtf8();

                    color_ = s;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder.class);
          }

          public static final int COLOR_FIELD_NUMBER = 1;
          private volatile java.lang.Object color_;
          /**
           * <code>string color = 1;</code>
           * @return The color.
           */
          @java.lang.Override
          public java.lang.String getColor() {
            java.lang.Object ref = color_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              color_ = s;
              return s;
            }
          }
          /**
           * <code>string color = 1;</code>
           * @return The bytes for color.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString
              getColorBytes() {
            java.lang.Object ref = color_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              color_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(color_)) {
              com.google.protobuf.GeneratedMessageV3.writeString(output, 1, color_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(color_)) {
              size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, color_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)) {
              return super.equals(obj);
            }
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) obj;

            if (!getColor()
                .equals(other.getColor())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder.class);
            }

            // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              color_ = "";

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme getDefaultInstanceForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme build() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme buildPartial() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme(this);
              result.color_ = color_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) {
                return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme other) {
              if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance()) return this;
              if (!other.getColor().isEmpty()) {
                color_ = other.color_;
                onChanged();
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private java.lang.Object color_ = "";
            /**
             * <code>string color = 1;</code>
             * @return The color.
             */
            public java.lang.String getColor() {
              java.lang.Object ref = color_;
              if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                    (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                color_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <code>string color = 1;</code>
             * @return The bytes for color.
             */
            public com.google.protobuf.ByteString
                getColorBytes() {
              java.lang.Object ref = color_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                color_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <code>string color = 1;</code>
             * @param value The color to set.
             * @return This builder for chaining.
             */
            public Builder setColor(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  
              color_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>string color = 1;</code>
             * @return This builder for chaining.
             */
            public Builder clearColor() {
              
              color_ = getDefaultInstance().getColor();
              onChanged();
              return this;
            }
            /**
             * <code>string color = 1;</code>
             * @param value The bytes for color to set.
             * @return This builder for chaining.
             */
            public Builder setColorBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
              
              color_ = value;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme)
          private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme();
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<ConstantColorScheme>
              PARSER = new com.google.protobuf.AbstractParser<ConstantColorScheme>() {
            @java.lang.Override
            public ConstantColorScheme parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new ConstantColorScheme(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<ConstantColorScheme> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<ConstantColorScheme> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        public interface ThresholdsColorSchemeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)
            com.google.protobuf.MessageOrBuilder {

          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
           * @return The enum numeric value on the wire for aggregation.
           */
          int getAggregationValue();
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
           * @return The aggregation.
           */
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation getAggregation();
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme}
         */
        public static final class ThresholdsColorScheme extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)
            ThresholdsColorSchemeOrBuilder {
        private static final long serialVersionUID = 0L;
          // Use ThresholdsColorScheme.newBuilder() to construct.
          private ThresholdsColorScheme(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
          }
          private ThresholdsColorScheme() {
            aggregation_ = 0;
          }

          @java.lang.Override
          @SuppressWarnings({"unused"})
          protected java.lang.Object newInstance(
              UnusedPrivateParameter unused) {
            return new ThresholdsColorScheme();
          }

          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
            return this.unknownFields;
          }
          private ThresholdsColorScheme(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    int rawValue = input.readEnum();

                    aggregation_ = rawValue;
                    break;
                  }
                  default: {
                    if (!parseUnknownField(
                        input, unknownFields, extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder.class);
          }

          /**
           * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation}
           */
          public enum Aggregation
              implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>AGGREGATION_UNSPECIFIED = 0;</code>
             */
            AGGREGATION_UNSPECIFIED(0),
            /**
             * <code>AGGREGATION_LAST = 1;</code>
             */
            AGGREGATION_LAST(1),
            /**
             * <code>AGGREGATION_MIN = 2;</code>
             */
            AGGREGATION_MIN(2),
            /**
             * <code>AGGREGATION_MAX = 3;</code>
             */
            AGGREGATION_MAX(3),
            /**
             * <code>AGGREGATION_AVG = 4;</code>
             */
            AGGREGATION_AVG(4),
            /**
             * <code>AGGREGATION_SUM = 5;</code>
             */
            AGGREGATION_SUM(5),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>AGGREGATION_UNSPECIFIED = 0;</code>
             */
            public static final int AGGREGATION_UNSPECIFIED_VALUE = 0;
            /**
             * <code>AGGREGATION_LAST = 1;</code>
             */
            public static final int AGGREGATION_LAST_VALUE = 1;
            /**
             * <code>AGGREGATION_MIN = 2;</code>
             */
            public static final int AGGREGATION_MIN_VALUE = 2;
            /**
             * <code>AGGREGATION_MAX = 3;</code>
             */
            public static final int AGGREGATION_MAX_VALUE = 3;
            /**
             * <code>AGGREGATION_AVG = 4;</code>
             */
            public static final int AGGREGATION_AVG_VALUE = 4;
            /**
             * <code>AGGREGATION_SUM = 5;</code>
             */
            public static final int AGGREGATION_SUM_VALUE = 5;


            public final int getNumber() {
              if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                    "Can't get the number of an unknown enum value.");
              }
              return value;
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static Aggregation valueOf(int value) {
              return forNumber(value);
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             */
            public static Aggregation forNumber(int value) {
              switch (value) {
                case 0: return AGGREGATION_UNSPECIFIED;
                case 1: return AGGREGATION_LAST;
                case 2: return AGGREGATION_MIN;
                case 3: return AGGREGATION_MAX;
                case 4: return AGGREGATION_AVG;
                case 5: return AGGREGATION_SUM;
                default: return null;
              }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Aggregation>
                internalGetValueMap() {
              return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                Aggregation> internalValueMap =
                  new com.google.protobuf.Internal.EnumLiteMap<Aggregation>() {
                    public Aggregation findValueByNumber(int number) {
                      return Aggregation.forNumber(number);
                    }
                  };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
                getValueDescriptor() {
              if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalStateException(
                    "Can't get the descriptor of an unrecognized enum value.");
              }
              return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptorForType() {
              return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDescriptor().getEnumTypes().get(0);
            }

            private static final Aggregation[] VALUES = values();

            public static Aggregation valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
              if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                  "EnumValueDescriptor is not for this type.");
              }
              if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
              }
              return VALUES[desc.getIndex()];
            }

            private final int value;

            private Aggregation(int value) {
              this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation)
          }

          public static final int AGGREGATION_FIELD_NUMBER = 1;
          private int aggregation_;
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
           * @return The enum numeric value on the wire for aggregation.
           */
          @java.lang.Override public int getAggregationValue() {
            return aggregation_;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
           * @return The aggregation.
           */
          @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation getAggregation() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation.valueOf(aggregation_);
            return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation.UNRECOGNIZED : result;
          }

          private byte memoizedIsInitialized = -1;
          @java.lang.Override
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
          }

          @java.lang.Override
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            if (aggregation_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation.AGGREGATION_UNSPECIFIED.getNumber()) {
              output.writeEnum(1, aggregation_);
            }
            unknownFields.writeTo(output);
          }

          @java.lang.Override
          public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (aggregation_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation.AGGREGATION_UNSPECIFIED.getNumber()) {
              size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, aggregation_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
          }

          @java.lang.Override
          public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
             return true;
            }
            if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)) {
              return super.equals(obj);
            }
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) obj;

            if (aggregation_ != other.aggregation_) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
          }

          @java.lang.Override
          public int hashCode() {
            if (memoizedHashCode != 0) {
              return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + AGGREGATION_FIELD_NUMBER;
            hash = (53 * hash) + aggregation_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              java.nio.ByteBuffer data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              java.nio.ByteBuffer data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
          }
          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
          }

          @java.lang.Override
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
          }
          public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
          }
          @java.lang.Override
          public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
          }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
              // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder.class);
            }

            // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessageV3
                      .alwaysUseFieldBuilders) {
              }
            }
            @java.lang.Override
            public Builder clear() {
              super.clear();
              aggregation_ = 0;

              return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_descriptor;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme getDefaultInstanceForType() {
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme build() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme buildPartial() {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme(this);
              result.aggregation_ = aggregation_;
              onBuilt();
              return result;
            }

            @java.lang.Override
            public Builder clone() {
              return super.clone();
            }
            @java.lang.Override
            public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.setField(field, value);
            }
            @java.lang.Override
            public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
              return super.clearField(field);
            }
            @java.lang.Override
            public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
              return super.clearOneof(oneof);
            }
            @java.lang.Override
            public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
              return super.setRepeatedField(field, index, value);
            }
            @java.lang.Override
            public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
              return super.addRepeatedField(field, value);
            }
            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) {
                return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme other) {
              if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance()) return this;
              if (other.aggregation_ != 0) {
                setAggregationValue(other.getAggregationValue());
              }
              this.mergeUnknownFields(other.unknownFields);
              onChanged();
              return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
              return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) e.getUnfinishedMessage();
                throw e.unwrapIOException();
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }

            private int aggregation_ = 0;
            /**
             * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
             * @return The enum numeric value on the wire for aggregation.
             */
            @java.lang.Override public int getAggregationValue() {
              return aggregation_;
            }
            /**
             * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
             * @param value The enum numeric value on the wire for aggregation to set.
             * @return This builder for chaining.
             */
            public Builder setAggregationValue(int value) {
              
              aggregation_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
             * @return The aggregation.
             */
            @java.lang.Override
            public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation getAggregation() {
              @SuppressWarnings("deprecation")
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation.valueOf(aggregation_);
              return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation.UNRECOGNIZED : result;
            }
            /**
             * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
             * @param value The aggregation to set.
             * @return This builder for chaining.
             */
            public Builder setAggregation(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation value) {
              if (value == null) {
                throw new NullPointerException();
              }
              
              aggregation_ = value.getNumber();
              onChanged();
              return this;
            }
            /**
             * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Aggregation aggregation = 1;</code>
             * @return This builder for chaining.
             */
            public Builder clearAggregation() {
              
              aggregation_ = 0;
              onChanged();
              return this;
            }
            @java.lang.Override
            public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
              return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)
          }

          // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme)
          private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme DEFAULT_INSTANCE;
          static {
            DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme();
          }

          public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme getDefaultInstance() {
            return DEFAULT_INSTANCE;
          }

          private static final com.google.protobuf.Parser<ThresholdsColorScheme>
              PARSER = new com.google.protobuf.AbstractParser<ThresholdsColorScheme>() {
            @java.lang.Override
            public ThresholdsColorScheme parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new ThresholdsColorScheme(input, extensionRegistry);
            }
          };

          public static com.google.protobuf.Parser<ThresholdsColorScheme> parser() {
            return PARSER;
          }

          @java.lang.Override
          public com.google.protobuf.Parser<ThresholdsColorScheme> getParserForType() {
            return PARSER;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
          }

        }

        private int schemeCase_ = 0;
        private java.lang.Object scheme_;
        public enum SchemeCase
            implements com.google.protobuf.Internal.EnumLite,
                com.google.protobuf.AbstractMessage.InternalOneOfEnum {
          AUTOMATIC(1),
          STANDARD(2),
          GRADIENT(3),
          HASH(4),
          THRESHOLDS(5),
          CONSTANT(6),
          SCHEME_NOT_SET(0);
          private final int value;
          private SchemeCase(int value) {
            this.value = value;
          }
          /**
           * @param value The number of the enum to look for.
           * @return The enum associated with the given number.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static SchemeCase valueOf(int value) {
            return forNumber(value);
          }

          public static SchemeCase forNumber(int value) {
            switch (value) {
              case 1: return AUTOMATIC;
              case 2: return STANDARD;
              case 3: return GRADIENT;
              case 4: return HASH;
              case 5: return THRESHOLDS;
              case 6: return CONSTANT;
              case 0: return SCHEME_NOT_SET;
              default: return null;
            }
          }
          public int getNumber() {
            return this.value;
          }
        };

        public SchemeCase
        getSchemeCase() {
          return SchemeCase.forNumber(
              schemeCase_);
        }

        public static final int AUTOMATIC_FIELD_NUMBER = 1;
        /**
         * <pre>
         * Automatic color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
         * @return Whether the automatic field is set.
         */
        @java.lang.Override
        public boolean hasAutomatic() {
          return schemeCase_ == 1;
        }
        /**
         * <pre>
         * Automatic color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
         * @return The automatic.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme getAutomatic() {
          if (schemeCase_ == 1) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
        }
        /**
         * <pre>
         * Automatic color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder getAutomaticOrBuilder() {
          if (schemeCase_ == 1) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
        }

        public static final int STANDARD_FIELD_NUMBER = 2;
        /**
         * <pre>
         * Standard color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
         * @return Whether the standard field is set.
         */
        @java.lang.Override
        public boolean hasStandard() {
          return schemeCase_ == 2;
        }
        /**
         * <pre>
         * Standard color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
         * @return The standard.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme getStandard() {
          if (schemeCase_ == 2) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
        }
        /**
         * <pre>
         * Standard color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder getStandardOrBuilder() {
          if (schemeCase_ == 2) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
        }

        public static final int GRADIENT_FIELD_NUMBER = 3;
        /**
         * <pre>
         * Gradient color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
         * @return Whether the gradient field is set.
         */
        @java.lang.Override
        public boolean hasGradient() {
          return schemeCase_ == 3;
        }
        /**
         * <pre>
         * Gradient color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
         * @return The gradient.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme getGradient() {
          if (schemeCase_ == 3) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
        }
        /**
         * <pre>
         * Gradient color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder getGradientOrBuilder() {
          if (schemeCase_ == 3) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
        }

        public static final int HASH_FIELD_NUMBER = 4;
        /**
         * <pre>
         * Hash color scheme. Based on line name or value.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
         * @return Whether the hash field is set.
         */
        @java.lang.Override
        public boolean hasHash() {
          return schemeCase_ == 4;
        }
        /**
         * <pre>
         * Hash color scheme. Based on line name or value.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
         * @return The hash.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme getHash() {
          if (schemeCase_ == 4) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
        }
        /**
         * <pre>
         * Hash color scheme. Based on line name or value.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder getHashOrBuilder() {
          if (schemeCase_ == 4) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
        }

        public static final int THRESHOLDS_FIELD_NUMBER = 5;
        /**
         * <pre>
         * Threshold settings color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
         * @return Whether the thresholds field is set.
         */
        @java.lang.Override
        public boolean hasThresholds() {
          return schemeCase_ == 5;
        }
        /**
         * <pre>
         * Threshold settings color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
         * @return The thresholds.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme getThresholds() {
          if (schemeCase_ == 5) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
        }
        /**
         * <pre>
         * Threshold settings color scheme.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder getThresholdsOrBuilder() {
          if (schemeCase_ == 5) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
        }

        public static final int CONSTANT_FIELD_NUMBER = 6;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
         * @return Whether the constant field is set.
         */
        @java.lang.Override
        public boolean hasConstant() {
          return schemeCase_ == 6;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
         * @return The constant.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme getConstant() {
          if (schemeCase_ == 6) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder getConstantOrBuilder() {
          if (schemeCase_ == 6) {
             return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_;
          }
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (schemeCase_ == 1) {
            output.writeMessage(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_);
          }
          if (schemeCase_ == 2) {
            output.writeMessage(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_);
          }
          if (schemeCase_ == 3) {
            output.writeMessage(3, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_);
          }
          if (schemeCase_ == 4) {
            output.writeMessage(4, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_);
          }
          if (schemeCase_ == 5) {
            output.writeMessage(5, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_);
          }
          if (schemeCase_ == 6) {
            output.writeMessage(6, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (schemeCase_ == 1) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_);
          }
          if (schemeCase_ == 2) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_);
          }
          if (schemeCase_ == 3) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_);
          }
          if (schemeCase_ == 4) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_);
          }
          if (schemeCase_ == 5) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_);
          }
          if (schemeCase_ == 6) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings) obj;

          if (!getSchemeCase().equals(other.getSchemeCase())) return false;
          switch (schemeCase_) {
            case 1:
              if (!getAutomatic()
                  .equals(other.getAutomatic())) return false;
              break;
            case 2:
              if (!getStandard()
                  .equals(other.getStandard())) return false;
              break;
            case 3:
              if (!getGradient()
                  .equals(other.getGradient())) return false;
              break;
            case 4:
              if (!getHash()
                  .equals(other.getHash())) return false;
              break;
            case 5:
              if (!getThresholds()
                  .equals(other.getThresholds())) return false;
              break;
            case 6:
              if (!getConstant()
                  .equals(other.getConstant())) return false;
              break;
            case 0:
            default:
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          switch (schemeCase_) {
            case 1:
              hash = (37 * hash) + AUTOMATIC_FIELD_NUMBER;
              hash = (53 * hash) + getAutomatic().hashCode();
              break;
            case 2:
              hash = (37 * hash) + STANDARD_FIELD_NUMBER;
              hash = (53 * hash) + getStandard().hashCode();
              break;
            case 3:
              hash = (37 * hash) + GRADIENT_FIELD_NUMBER;
              hash = (53 * hash) + getGradient().hashCode();
              break;
            case 4:
              hash = (37 * hash) + HASH_FIELD_NUMBER;
              hash = (53 * hash) + getHash().hashCode();
              break;
            case 5:
              hash = (37 * hash) + THRESHOLDS_FIELD_NUMBER;
              hash = (53 * hash) + getThresholds().hashCode();
              break;
            case 6:
              hash = (37 * hash) + CONSTANT_FIELD_NUMBER;
              hash = (53 * hash) + getConstant().hashCode();
              break;
            case 0:
            default:
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            schemeCase_ = 0;
            scheme_ = null;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings(this);
            if (schemeCase_ == 1) {
              if (automaticBuilder_ == null) {
                result.scheme_ = scheme_;
              } else {
                result.scheme_ = automaticBuilder_.build();
              }
            }
            if (schemeCase_ == 2) {
              if (standardBuilder_ == null) {
                result.scheme_ = scheme_;
              } else {
                result.scheme_ = standardBuilder_.build();
              }
            }
            if (schemeCase_ == 3) {
              if (gradientBuilder_ == null) {
                result.scheme_ = scheme_;
              } else {
                result.scheme_ = gradientBuilder_.build();
              }
            }
            if (schemeCase_ == 4) {
              if (hashBuilder_ == null) {
                result.scheme_ = scheme_;
              } else {
                result.scheme_ = hashBuilder_.build();
              }
            }
            if (schemeCase_ == 5) {
              if (thresholdsBuilder_ == null) {
                result.scheme_ = scheme_;
              } else {
                result.scheme_ = thresholdsBuilder_.build();
              }
            }
            if (schemeCase_ == 6) {
              if (constantBuilder_ == null) {
                result.scheme_ = scheme_;
              } else {
                result.scheme_ = constantBuilder_.build();
              }
            }
            result.schemeCase_ = schemeCase_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.getDefaultInstance()) return this;
            switch (other.getSchemeCase()) {
              case AUTOMATIC: {
                mergeAutomatic(other.getAutomatic());
                break;
              }
              case STANDARD: {
                mergeStandard(other.getStandard());
                break;
              }
              case GRADIENT: {
                mergeGradient(other.getGradient());
                break;
              }
              case HASH: {
                mergeHash(other.getHash());
                break;
              }
              case THRESHOLDS: {
                mergeThresholds(other.getThresholds());
                break;
              }
              case CONSTANT: {
                mergeConstant(other.getConstant());
                break;
              }
              case SCHEME_NOT_SET: {
                break;
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int schemeCase_ = 0;
          private java.lang.Object scheme_;
          public SchemeCase
              getSchemeCase() {
            return SchemeCase.forNumber(
                schemeCase_);
          }

          public Builder clearScheme() {
            schemeCase_ = 0;
            scheme_ = null;
            onChanged();
            return this;
          }


          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder> automaticBuilder_;
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           * @return Whether the automatic field is set.
           */
          @java.lang.Override
          public boolean hasAutomatic() {
            return schemeCase_ == 1;
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           * @return The automatic.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme getAutomatic() {
            if (automaticBuilder_ == null) {
              if (schemeCase_ == 1) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
            } else {
              if (schemeCase_ == 1) {
                return automaticBuilder_.getMessage();
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          public Builder setAutomatic(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme value) {
            if (automaticBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              scheme_ = value;
              onChanged();
            } else {
              automaticBuilder_.setMessage(value);
            }
            schemeCase_ = 1;
            return this;
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          public Builder setAutomatic(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder builderForValue) {
            if (automaticBuilder_ == null) {
              scheme_ = builderForValue.build();
              onChanged();
            } else {
              automaticBuilder_.setMessage(builderForValue.build());
            }
            schemeCase_ = 1;
            return this;
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          public Builder mergeAutomatic(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme value) {
            if (automaticBuilder_ == null) {
              if (schemeCase_ == 1 &&
                  scheme_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance()) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_)
                    .mergeFrom(value).buildPartial();
              } else {
                scheme_ = value;
              }
              onChanged();
            } else {
              if (schemeCase_ == 1) {
                automaticBuilder_.mergeFrom(value);
              }
              automaticBuilder_.setMessage(value);
            }
            schemeCase_ = 1;
            return this;
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          public Builder clearAutomatic() {
            if (automaticBuilder_ == null) {
              if (schemeCase_ == 1) {
                schemeCase_ = 0;
                scheme_ = null;
                onChanged();
              }
            } else {
              if (schemeCase_ == 1) {
                schemeCase_ = 0;
                scheme_ = null;
              }
              automaticBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder getAutomaticBuilder() {
            return getAutomaticFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder getAutomaticOrBuilder() {
            if ((schemeCase_ == 1) && (automaticBuilder_ != null)) {
              return automaticBuilder_.getMessageOrBuilder();
            } else {
              if (schemeCase_ == 1) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Automatic color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme automatic = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder> 
              getAutomaticFieldBuilder() {
            if (automaticBuilder_ == null) {
              if (!(schemeCase_ == 1)) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.getDefaultInstance();
              }
              automaticBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorSchemeOrBuilder>(
                      (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.AutomaticColorScheme) scheme_,
                      getParentForChildren(),
                      isClean());
              scheme_ = null;
            }
            schemeCase_ = 1;
            onChanged();;
            return automaticBuilder_;
          }

          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder> standardBuilder_;
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           * @return Whether the standard field is set.
           */
          @java.lang.Override
          public boolean hasStandard() {
            return schemeCase_ == 2;
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           * @return The standard.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme getStandard() {
            if (standardBuilder_ == null) {
              if (schemeCase_ == 2) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
            } else {
              if (schemeCase_ == 2) {
                return standardBuilder_.getMessage();
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          public Builder setStandard(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme value) {
            if (standardBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              scheme_ = value;
              onChanged();
            } else {
              standardBuilder_.setMessage(value);
            }
            schemeCase_ = 2;
            return this;
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          public Builder setStandard(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder builderForValue) {
            if (standardBuilder_ == null) {
              scheme_ = builderForValue.build();
              onChanged();
            } else {
              standardBuilder_.setMessage(builderForValue.build());
            }
            schemeCase_ = 2;
            return this;
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          public Builder mergeStandard(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme value) {
            if (standardBuilder_ == null) {
              if (schemeCase_ == 2 &&
                  scheme_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance()) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_)
                    .mergeFrom(value).buildPartial();
              } else {
                scheme_ = value;
              }
              onChanged();
            } else {
              if (schemeCase_ == 2) {
                standardBuilder_.mergeFrom(value);
              }
              standardBuilder_.setMessage(value);
            }
            schemeCase_ = 2;
            return this;
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          public Builder clearStandard() {
            if (standardBuilder_ == null) {
              if (schemeCase_ == 2) {
                schemeCase_ = 0;
                scheme_ = null;
                onChanged();
              }
            } else {
              if (schemeCase_ == 2) {
                schemeCase_ = 0;
                scheme_ = null;
              }
              standardBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder getStandardBuilder() {
            return getStandardFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder getStandardOrBuilder() {
            if ((schemeCase_ == 2) && (standardBuilder_ != null)) {
              return standardBuilder_.getMessageOrBuilder();
            } else {
              if (schemeCase_ == 2) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Standard color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme standard = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder> 
              getStandardFieldBuilder() {
            if (standardBuilder_ == null) {
              if (!(schemeCase_ == 2)) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.getDefaultInstance();
              }
              standardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorSchemeOrBuilder>(
                      (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.StandardColorScheme) scheme_,
                      getParentForChildren(),
                      isClean());
              scheme_ = null;
            }
            schemeCase_ = 2;
            onChanged();;
            return standardBuilder_;
          }

          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder> gradientBuilder_;
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           * @return Whether the gradient field is set.
           */
          @java.lang.Override
          public boolean hasGradient() {
            return schemeCase_ == 3;
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           * @return The gradient.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme getGradient() {
            if (gradientBuilder_ == null) {
              if (schemeCase_ == 3) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
            } else {
              if (schemeCase_ == 3) {
                return gradientBuilder_.getMessage();
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          public Builder setGradient(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme value) {
            if (gradientBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              scheme_ = value;
              onChanged();
            } else {
              gradientBuilder_.setMessage(value);
            }
            schemeCase_ = 3;
            return this;
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          public Builder setGradient(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder builderForValue) {
            if (gradientBuilder_ == null) {
              scheme_ = builderForValue.build();
              onChanged();
            } else {
              gradientBuilder_.setMessage(builderForValue.build());
            }
            schemeCase_ = 3;
            return this;
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          public Builder mergeGradient(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme value) {
            if (gradientBuilder_ == null) {
              if (schemeCase_ == 3 &&
                  scheme_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance()) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_)
                    .mergeFrom(value).buildPartial();
              } else {
                scheme_ = value;
              }
              onChanged();
            } else {
              if (schemeCase_ == 3) {
                gradientBuilder_.mergeFrom(value);
              }
              gradientBuilder_.setMessage(value);
            }
            schemeCase_ = 3;
            return this;
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          public Builder clearGradient() {
            if (gradientBuilder_ == null) {
              if (schemeCase_ == 3) {
                schemeCase_ = 0;
                scheme_ = null;
                onChanged();
              }
            } else {
              if (schemeCase_ == 3) {
                schemeCase_ = 0;
                scheme_ = null;
              }
              gradientBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder getGradientBuilder() {
            return getGradientFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder getGradientOrBuilder() {
            if ((schemeCase_ == 3) && (gradientBuilder_ != null)) {
              return gradientBuilder_.getMessageOrBuilder();
            } else {
              if (schemeCase_ == 3) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Gradient color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme gradient = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder> 
              getGradientFieldBuilder() {
            if (gradientBuilder_ == null) {
              if (!(schemeCase_ == 3)) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.getDefaultInstance();
              }
              gradientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorSchemeOrBuilder>(
                      (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.GradientColorScheme) scheme_,
                      getParentForChildren(),
                      isClean());
              scheme_ = null;
            }
            schemeCase_ = 3;
            onChanged();;
            return gradientBuilder_;
          }

          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder> hashBuilder_;
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           * @return Whether the hash field is set.
           */
          @java.lang.Override
          public boolean hasHash() {
            return schemeCase_ == 4;
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           * @return The hash.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme getHash() {
            if (hashBuilder_ == null) {
              if (schemeCase_ == 4) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
            } else {
              if (schemeCase_ == 4) {
                return hashBuilder_.getMessage();
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          public Builder setHash(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme value) {
            if (hashBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              scheme_ = value;
              onChanged();
            } else {
              hashBuilder_.setMessage(value);
            }
            schemeCase_ = 4;
            return this;
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          public Builder setHash(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder builderForValue) {
            if (hashBuilder_ == null) {
              scheme_ = builderForValue.build();
              onChanged();
            } else {
              hashBuilder_.setMessage(builderForValue.build());
            }
            schemeCase_ = 4;
            return this;
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          public Builder mergeHash(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme value) {
            if (hashBuilder_ == null) {
              if (schemeCase_ == 4 &&
                  scheme_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance()) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_)
                    .mergeFrom(value).buildPartial();
              } else {
                scheme_ = value;
              }
              onChanged();
            } else {
              if (schemeCase_ == 4) {
                hashBuilder_.mergeFrom(value);
              }
              hashBuilder_.setMessage(value);
            }
            schemeCase_ = 4;
            return this;
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          public Builder clearHash() {
            if (hashBuilder_ == null) {
              if (schemeCase_ == 4) {
                schemeCase_ = 0;
                scheme_ = null;
                onChanged();
              }
            } else {
              if (schemeCase_ == 4) {
                schemeCase_ = 0;
                scheme_ = null;
              }
              hashBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder getHashBuilder() {
            return getHashFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder getHashOrBuilder() {
            if ((schemeCase_ == 4) && (hashBuilder_ != null)) {
              return hashBuilder_.getMessageOrBuilder();
            } else {
              if (schemeCase_ == 4) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Hash color scheme. Based on line name or value.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme hash = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder> 
              getHashFieldBuilder() {
            if (hashBuilder_ == null) {
              if (!(schemeCase_ == 4)) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.getDefaultInstance();
              }
              hashBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorSchemeOrBuilder>(
                      (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.HashColorScheme) scheme_,
                      getParentForChildren(),
                      isClean());
              scheme_ = null;
            }
            schemeCase_ = 4;
            onChanged();;
            return hashBuilder_;
          }

          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder> thresholdsBuilder_;
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           * @return Whether the thresholds field is set.
           */
          @java.lang.Override
          public boolean hasThresholds() {
            return schemeCase_ == 5;
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           * @return The thresholds.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme getThresholds() {
            if (thresholdsBuilder_ == null) {
              if (schemeCase_ == 5) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
            } else {
              if (schemeCase_ == 5) {
                return thresholdsBuilder_.getMessage();
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          public Builder setThresholds(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme value) {
            if (thresholdsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              scheme_ = value;
              onChanged();
            } else {
              thresholdsBuilder_.setMessage(value);
            }
            schemeCase_ = 5;
            return this;
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          public Builder setThresholds(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder builderForValue) {
            if (thresholdsBuilder_ == null) {
              scheme_ = builderForValue.build();
              onChanged();
            } else {
              thresholdsBuilder_.setMessage(builderForValue.build());
            }
            schemeCase_ = 5;
            return this;
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          public Builder mergeThresholds(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme value) {
            if (thresholdsBuilder_ == null) {
              if (schemeCase_ == 5 &&
                  scheme_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance()) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_)
                    .mergeFrom(value).buildPartial();
              } else {
                scheme_ = value;
              }
              onChanged();
            } else {
              if (schemeCase_ == 5) {
                thresholdsBuilder_.mergeFrom(value);
              }
              thresholdsBuilder_.setMessage(value);
            }
            schemeCase_ = 5;
            return this;
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          public Builder clearThresholds() {
            if (thresholdsBuilder_ == null) {
              if (schemeCase_ == 5) {
                schemeCase_ = 0;
                scheme_ = null;
                onChanged();
              }
            } else {
              if (schemeCase_ == 5) {
                schemeCase_ = 0;
                scheme_ = null;
              }
              thresholdsBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder getThresholdsBuilder() {
            return getThresholdsFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder getThresholdsOrBuilder() {
            if ((schemeCase_ == 5) && (thresholdsBuilder_ != null)) {
              return thresholdsBuilder_.getMessageOrBuilder();
            } else {
              if (schemeCase_ == 5) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
            }
          }
          /**
           * <pre>
           * Threshold settings color scheme.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme thresholds = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder> 
              getThresholdsFieldBuilder() {
            if (thresholdsBuilder_ == null) {
              if (!(schemeCase_ == 5)) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.getDefaultInstance();
              }
              thresholdsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorSchemeOrBuilder>(
                      (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ThresholdsColorScheme) scheme_,
                      getParentForChildren(),
                      isClean());
              scheme_ = null;
            }
            schemeCase_ = 5;
            onChanged();;
            return thresholdsBuilder_;
          }

          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder> constantBuilder_;
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           * @return Whether the constant field is set.
           */
          @java.lang.Override
          public boolean hasConstant() {
            return schemeCase_ == 6;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           * @return The constant.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme getConstant() {
            if (constantBuilder_ == null) {
              if (schemeCase_ == 6) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
            } else {
              if (schemeCase_ == 6) {
                return constantBuilder_.getMessage();
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
            }
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          public Builder setConstant(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme value) {
            if (constantBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              scheme_ = value;
              onChanged();
            } else {
              constantBuilder_.setMessage(value);
            }
            schemeCase_ = 6;
            return this;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          public Builder setConstant(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder builderForValue) {
            if (constantBuilder_ == null) {
              scheme_ = builderForValue.build();
              onChanged();
            } else {
              constantBuilder_.setMessage(builderForValue.build());
            }
            schemeCase_ = 6;
            return this;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          public Builder mergeConstant(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme value) {
            if (constantBuilder_ == null) {
              if (schemeCase_ == 6 &&
                  scheme_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance()) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_)
                    .mergeFrom(value).buildPartial();
              } else {
                scheme_ = value;
              }
              onChanged();
            } else {
              if (schemeCase_ == 6) {
                constantBuilder_.mergeFrom(value);
              }
              constantBuilder_.setMessage(value);
            }
            schemeCase_ = 6;
            return this;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          public Builder clearConstant() {
            if (constantBuilder_ == null) {
              if (schemeCase_ == 6) {
                schemeCase_ = 0;
                scheme_ = null;
                onChanged();
              }
            } else {
              if (schemeCase_ == 6) {
                schemeCase_ = 0;
                scheme_ = null;
              }
              constantBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder getConstantBuilder() {
            return getConstantFieldBuilder().getBuilder();
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder getConstantOrBuilder() {
            if ((schemeCase_ == 6) && (constantBuilder_ != null)) {
              return constantBuilder_.getMessageOrBuilder();
            } else {
              if (schemeCase_ == 6) {
                return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_;
              }
              return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
            }
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme constant = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder> 
              getConstantFieldBuilder() {
            if (constantBuilder_ == null) {
              if (!(schemeCase_ == 6)) {
                scheme_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.getDefaultInstance();
              }
              constantBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorSchemeOrBuilder>(
                      (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.ConstantColorScheme) scheme_,
                      getParentForChildren(),
                      isClean());
              scheme_ = null;
            }
            schemeCase_ = 6;
            onChanged();;
            return constantBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ColorSchemeSettings>
            PARSER = new com.google.protobuf.AbstractParser<ColorSchemeSettings>() {
          @java.lang.Override
          public ColorSchemeSettings parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ColorSchemeSettings(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<ColorSchemeSettings> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ColorSchemeSettings> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface HeatmapSettingsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Heatmap green value.
         * </pre>
         *
         * <code>string green_value = 2;</code>
         * @return The greenValue.
         */
        java.lang.String getGreenValue();
        /**
         * <pre>
         * Heatmap green value.
         * </pre>
         *
         * <code>string green_value = 2;</code>
         * @return The bytes for greenValue.
         */
        com.google.protobuf.ByteString
            getGreenValueBytes();

        /**
         * <pre>
         * Heatmap yellow value.
         * </pre>
         *
         * <code>string yellow_value = 3;</code>
         * @return The yellowValue.
         */
        java.lang.String getYellowValue();
        /**
         * <pre>
         * Heatmap yellow value.
         * </pre>
         *
         * <code>string yellow_value = 3;</code>
         * @return The bytes for yellowValue.
         */
        com.google.protobuf.ByteString
            getYellowValueBytes();

        /**
         * <pre>
         * Heatmap red value.
         * </pre>
         *
         * <code>string red_value = 4;</code>
         * @return The redValue.
         */
        java.lang.String getRedValue();
        /**
         * <pre>
         * Heatmap red value.
         * </pre>
         *
         * <code>string red_value = 4;</code>
         * @return The bytes for redValue.
         */
        com.google.protobuf.ByteString
            getRedValueBytes();

        /**
         * <pre>
         * Heatmap violet_value.
         * </pre>
         *
         * <code>string violet_value = 5;</code>
         * @return The violetValue.
         */
        java.lang.String getVioletValue();
        /**
         * <pre>
         * Heatmap violet_value.
         * </pre>
         *
         * <code>string violet_value = 5;</code>
         * @return The bytes for violetValue.
         */
        com.google.protobuf.ByteString
            getVioletValueBytes();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings}
       */
      public static final class HeatmapSettings extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)
          HeatmapSettingsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use HeatmapSettings.newBuilder() to construct.
        private HeatmapSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private HeatmapSettings() {
          greenValue_ = "";
          yellowValue_ = "";
          redValue_ = "";
          violetValue_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new HeatmapSettings();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private HeatmapSettings(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  greenValue_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  yellowValue_ = s;
                  break;
                }
                case 34: {
                  java.lang.String s = input.readStringRequireUtf8();

                  redValue_ = s;
                  break;
                }
                case 42: {
                  java.lang.String s = input.readStringRequireUtf8();

                  violetValue_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder.class);
        }

        public static final int GREEN_VALUE_FIELD_NUMBER = 2;
        private volatile java.lang.Object greenValue_;
        /**
         * <pre>
         * Heatmap green value.
         * </pre>
         *
         * <code>string green_value = 2;</code>
         * @return The greenValue.
         */
        @java.lang.Override
        public java.lang.String getGreenValue() {
          java.lang.Object ref = greenValue_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            greenValue_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Heatmap green value.
         * </pre>
         *
         * <code>string green_value = 2;</code>
         * @return The bytes for greenValue.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getGreenValueBytes() {
          java.lang.Object ref = greenValue_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            greenValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int YELLOW_VALUE_FIELD_NUMBER = 3;
        private volatile java.lang.Object yellowValue_;
        /**
         * <pre>
         * Heatmap yellow value.
         * </pre>
         *
         * <code>string yellow_value = 3;</code>
         * @return The yellowValue.
         */
        @java.lang.Override
        public java.lang.String getYellowValue() {
          java.lang.Object ref = yellowValue_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            yellowValue_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Heatmap yellow value.
         * </pre>
         *
         * <code>string yellow_value = 3;</code>
         * @return The bytes for yellowValue.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getYellowValueBytes() {
          java.lang.Object ref = yellowValue_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            yellowValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int RED_VALUE_FIELD_NUMBER = 4;
        private volatile java.lang.Object redValue_;
        /**
         * <pre>
         * Heatmap red value.
         * </pre>
         *
         * <code>string red_value = 4;</code>
         * @return The redValue.
         */
        @java.lang.Override
        public java.lang.String getRedValue() {
          java.lang.Object ref = redValue_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            redValue_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Heatmap red value.
         * </pre>
         *
         * <code>string red_value = 4;</code>
         * @return The bytes for redValue.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getRedValueBytes() {
          java.lang.Object ref = redValue_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            redValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int VIOLET_VALUE_FIELD_NUMBER = 5;
        private volatile java.lang.Object violetValue_;
        /**
         * <pre>
         * Heatmap violet_value.
         * </pre>
         *
         * <code>string violet_value = 5;</code>
         * @return The violetValue.
         */
        @java.lang.Override
        public java.lang.String getVioletValue() {
          java.lang.Object ref = violetValue_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            violetValue_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Heatmap violet_value.
         * </pre>
         *
         * <code>string violet_value = 5;</code>
         * @return The bytes for violetValue.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getVioletValueBytes() {
          java.lang.Object ref = violetValue_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            violetValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(greenValue_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, greenValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(yellowValue_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, yellowValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(redValue_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, redValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(violetValue_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 5, violetValue_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(greenValue_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, greenValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(yellowValue_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, yellowValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(redValue_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, redValue_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(violetValue_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, violetValue_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings) obj;

          if (!getGreenValue()
              .equals(other.getGreenValue())) return false;
          if (!getYellowValue()
              .equals(other.getYellowValue())) return false;
          if (!getRedValue()
              .equals(other.getRedValue())) return false;
          if (!getVioletValue()
              .equals(other.getVioletValue())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + GREEN_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getGreenValue().hashCode();
          hash = (37 * hash) + YELLOW_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getYellowValue().hashCode();
          hash = (37 * hash) + RED_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getRedValue().hashCode();
          hash = (37 * hash) + VIOLET_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getVioletValue().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            greenValue_ = "";

            yellowValue_ = "";

            redValue_ = "";

            violetValue_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings(this);
            result.greenValue_ = greenValue_;
            result.yellowValue_ = yellowValue_;
            result.redValue_ = redValue_;
            result.violetValue_ = violetValue_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.getDefaultInstance()) return this;
            if (!other.getGreenValue().isEmpty()) {
              greenValue_ = other.greenValue_;
              onChanged();
            }
            if (!other.getYellowValue().isEmpty()) {
              yellowValue_ = other.yellowValue_;
              onChanged();
            }
            if (!other.getRedValue().isEmpty()) {
              redValue_ = other.redValue_;
              onChanged();
            }
            if (!other.getVioletValue().isEmpty()) {
              violetValue_ = other.violetValue_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object greenValue_ = "";
          /**
           * <pre>
           * Heatmap green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return The greenValue.
           */
          public java.lang.String getGreenValue() {
            java.lang.Object ref = greenValue_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              greenValue_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Heatmap green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return The bytes for greenValue.
           */
          public com.google.protobuf.ByteString
              getGreenValueBytes() {
            java.lang.Object ref = greenValue_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              greenValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Heatmap green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @param value The greenValue to set.
           * @return This builder for chaining.
           */
          public Builder setGreenValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            greenValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearGreenValue() {
            
            greenValue_ = getDefaultInstance().getGreenValue();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap green value.
           * </pre>
           *
           * <code>string green_value = 2;</code>
           * @param value The bytes for greenValue to set.
           * @return This builder for chaining.
           */
          public Builder setGreenValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            greenValue_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object yellowValue_ = "";
          /**
           * <pre>
           * Heatmap yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return The yellowValue.
           */
          public java.lang.String getYellowValue() {
            java.lang.Object ref = yellowValue_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              yellowValue_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Heatmap yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return The bytes for yellowValue.
           */
          public com.google.protobuf.ByteString
              getYellowValueBytes() {
            java.lang.Object ref = yellowValue_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              yellowValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Heatmap yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @param value The yellowValue to set.
           * @return This builder for chaining.
           */
          public Builder setYellowValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            yellowValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearYellowValue() {
            
            yellowValue_ = getDefaultInstance().getYellowValue();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap yellow value.
           * </pre>
           *
           * <code>string yellow_value = 3;</code>
           * @param value The bytes for yellowValue to set.
           * @return This builder for chaining.
           */
          public Builder setYellowValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            yellowValue_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object redValue_ = "";
          /**
           * <pre>
           * Heatmap red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return The redValue.
           */
          public java.lang.String getRedValue() {
            java.lang.Object ref = redValue_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              redValue_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Heatmap red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return The bytes for redValue.
           */
          public com.google.protobuf.ByteString
              getRedValueBytes() {
            java.lang.Object ref = redValue_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              redValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Heatmap red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @param value The redValue to set.
           * @return This builder for chaining.
           */
          public Builder setRedValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            redValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearRedValue() {
            
            redValue_ = getDefaultInstance().getRedValue();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap red value.
           * </pre>
           *
           * <code>string red_value = 4;</code>
           * @param value The bytes for redValue to set.
           * @return This builder for chaining.
           */
          public Builder setRedValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            redValue_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object violetValue_ = "";
          /**
           * <pre>
           * Heatmap violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return The violetValue.
           */
          public java.lang.String getVioletValue() {
            java.lang.Object ref = violetValue_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              violetValue_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Heatmap violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return The bytes for violetValue.
           */
          public com.google.protobuf.ByteString
              getVioletValueBytes() {
            java.lang.Object ref = violetValue_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              violetValue_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Heatmap violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @param value The violetValue to set.
           * @return This builder for chaining.
           */
          public Builder setVioletValue(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            violetValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearVioletValue() {
            
            violetValue_ = getDefaultInstance().getVioletValue();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Heatmap violet_value.
           * </pre>
           *
           * <code>string violet_value = 5;</code>
           * @param value The bytes for violetValue to set.
           * @return This builder for chaining.
           */
          public Builder setVioletValueBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            violetValue_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HeatmapSettings>
            PARSER = new com.google.protobuf.AbstractParser<HeatmapSettings>() {
          @java.lang.Override
          public HeatmapSettings parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new HeatmapSettings(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<HeatmapSettings> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HeatmapSettings> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface YaxisOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
         * @return The enum numeric value on the wire for type.
         */
        int getTypeValue();
        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
         * @return The type.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType getType();

        /**
         * <pre>
         * Title or empty.
         * </pre>
         *
         * <code>string title = 2;</code>
         * @return The title.
         */
        java.lang.String getTitle();
        /**
         * <pre>
         * Title or empty.
         * </pre>
         *
         * <code>string title = 2;</code>
         * @return The bytes for title.
         */
        com.google.protobuf.ByteString
            getTitleBytes();

        /**
         * <pre>
         * Min value in extended number format or empty.
         * </pre>
         *
         * <code>string min = 3;</code>
         * @return The min.
         */
        java.lang.String getMin();
        /**
         * <pre>
         * Min value in extended number format or empty.
         * </pre>
         *
         * <code>string min = 3;</code>
         * @return The bytes for min.
         */
        com.google.protobuf.ByteString
            getMinBytes();

        /**
         * <pre>
         * Max value in extended number format or empty.
         * </pre>
         *
         * <code>string max = 4;</code>
         * @return The max.
         */
        java.lang.String getMax();
        /**
         * <pre>
         * Max value in extended number format or empty.
         * </pre>
         *
         * <code>string max = 4;</code>
         * @return The bytes for max.
         */
        com.google.protobuf.ByteString
            getMaxBytes();

        /**
         * <pre>
         * Unit format.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
         * @return The enum numeric value on the wire for unitFormat.
         */
        int getUnitFormatValue();
        /**
         * <pre>
         * Unit format.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
         * @return The unitFormat.
         */
        yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat getUnitFormat();

        /**
         * <pre>
         * Tick value precision (null as default, 0-7 in other cases).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value precision = 6;</code>
         * @return Whether the precision field is set.
         */
        boolean hasPrecision();
        /**
         * <pre>
         * Tick value precision (null as default, 0-7 in other cases).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value precision = 6;</code>
         * @return The precision.
         */
        com.google.protobuf.Int64Value getPrecision();
        /**
         * <pre>
         * Tick value precision (null as default, 0-7 in other cases).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value precision = 6;</code>
         */
        com.google.protobuf.Int64ValueOrBuilder getPrecisionOrBuilder();
      }
      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis}
       */
      public static final class Yaxis extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis)
          YaxisOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Yaxis.newBuilder() to construct.
        private Yaxis(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Yaxis() {
          type_ = 0;
          title_ = "";
          min_ = "";
          max_ = "";
          unitFormat_ = 0;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Yaxis();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Yaxis(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();

                  type_ = rawValue;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  title_ = s;
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  min_ = s;
                  break;
                }
                case 34: {
                  java.lang.String s = input.readStringRequireUtf8();

                  max_ = s;
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  unitFormat_ = rawValue;
                  break;
                }
                case 50: {
                  com.google.protobuf.Int64Value.Builder subBuilder = null;
                  if (precision_ != null) {
                    subBuilder = precision_.toBuilder();
                  }
                  precision_ = input.readMessage(com.google.protobuf.Int64Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(precision_);
                    precision_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder.class);
        }

        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
         * @return The type.
         */
        @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType getType() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType.valueOf(type_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType.UNRECOGNIZED : result;
        }

        public static final int TITLE_FIELD_NUMBER = 2;
        private volatile java.lang.Object title_;
        /**
         * <pre>
         * Title or empty.
         * </pre>
         *
         * <code>string title = 2;</code>
         * @return The title.
         */
        @java.lang.Override
        public java.lang.String getTitle() {
          java.lang.Object ref = title_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            title_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Title or empty.
         * </pre>
         *
         * <code>string title = 2;</code>
         * @return The bytes for title.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTitleBytes() {
          java.lang.Object ref = title_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            title_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MIN_FIELD_NUMBER = 3;
        private volatile java.lang.Object min_;
        /**
         * <pre>
         * Min value in extended number format or empty.
         * </pre>
         *
         * <code>string min = 3;</code>
         * @return The min.
         */
        @java.lang.Override
        public java.lang.String getMin() {
          java.lang.Object ref = min_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            min_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Min value in extended number format or empty.
         * </pre>
         *
         * <code>string min = 3;</code>
         * @return The bytes for min.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMinBytes() {
          java.lang.Object ref = min_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            min_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int MAX_FIELD_NUMBER = 4;
        private volatile java.lang.Object max_;
        /**
         * <pre>
         * Max value in extended number format or empty.
         * </pre>
         *
         * <code>string max = 4;</code>
         * @return The max.
         */
        @java.lang.Override
        public java.lang.String getMax() {
          java.lang.Object ref = max_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            max_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Max value in extended number format or empty.
         * </pre>
         *
         * <code>string max = 4;</code>
         * @return The bytes for max.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getMaxBytes() {
          java.lang.Object ref = max_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            max_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int UNIT_FORMAT_FIELD_NUMBER = 5;
        private int unitFormat_;
        /**
         * <pre>
         * Unit format.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
         * @return The enum numeric value on the wire for unitFormat.
         */
        @java.lang.Override public int getUnitFormatValue() {
          return unitFormat_;
        }
        /**
         * <pre>
         * Unit format.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
         * @return The unitFormat.
         */
        @java.lang.Override public yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat getUnitFormat() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat result = yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat.valueOf(unitFormat_);
          return result == null ? yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat.UNRECOGNIZED : result;
        }

        public static final int PRECISION_FIELD_NUMBER = 6;
        private com.google.protobuf.Int64Value precision_;
        /**
         * <pre>
         * Tick value precision (null as default, 0-7 in other cases).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value precision = 6;</code>
         * @return Whether the precision field is set.
         */
        @java.lang.Override
        public boolean hasPrecision() {
          return precision_ != null;
        }
        /**
         * <pre>
         * Tick value precision (null as default, 0-7 in other cases).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value precision = 6;</code>
         * @return The precision.
         */
        @java.lang.Override
        public com.google.protobuf.Int64Value getPrecision() {
          return precision_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : precision_;
        }
        /**
         * <pre>
         * Tick value precision (null as default, 0-7 in other cases).
         * </pre>
         *
         * <code>.google.protobuf.Int64Value precision = 6;</code>
         */
        @java.lang.Override
        public com.google.protobuf.Int64ValueOrBuilder getPrecisionOrBuilder() {
          return getPrecision();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType.YAXIS_TYPE_UNSPECIFIED.getNumber()) {
            output.writeEnum(1, type_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, title_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(min_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, min_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(max_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, max_);
          }
          if (unitFormat_ != yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat.UNIT_FORMAT_UNSPECIFIED.getNumber()) {
            output.writeEnum(5, unitFormat_);
          }
          if (precision_ != null) {
            output.writeMessage(6, getPrecision());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType.YAXIS_TYPE_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, type_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, title_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(min_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, min_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(max_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, max_);
          }
          if (unitFormat_ != yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat.UNIT_FORMAT_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(5, unitFormat_);
          }
          if (precision_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getPrecision());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis) obj;

          if (type_ != other.type_) return false;
          if (!getTitle()
              .equals(other.getTitle())) return false;
          if (!getMin()
              .equals(other.getMin())) return false;
          if (!getMax()
              .equals(other.getMax())) return false;
          if (unitFormat_ != other.unitFormat_) return false;
          if (hasPrecision() != other.hasPrecision()) return false;
          if (hasPrecision()) {
            if (!getPrecision()
                .equals(other.getPrecision())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
          hash = (37 * hash) + TITLE_FIELD_NUMBER;
          hash = (53 * hash) + getTitle().hashCode();
          hash = (37 * hash) + MIN_FIELD_NUMBER;
          hash = (53 * hash) + getMin().hashCode();
          hash = (37 * hash) + MAX_FIELD_NUMBER;
          hash = (53 * hash) + getMax().hashCode();
          hash = (37 * hash) + UNIT_FORMAT_FIELD_NUMBER;
          hash = (53 * hash) + unitFormat_;
          if (hasPrecision()) {
            hash = (37 * hash) + PRECISION_FIELD_NUMBER;
            hash = (53 * hash) + getPrecision().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            type_ = 0;

            title_ = "";

            min_ = "";

            max_ = "";

            unitFormat_ = 0;

            if (precisionBuilder_ == null) {
              precision_ = null;
            } else {
              precision_ = null;
              precisionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis(this);
            result.type_ = type_;
            result.title_ = title_;
            result.min_ = min_;
            result.max_ = max_;
            result.unitFormat_ = unitFormat_;
            if (precisionBuilder_ == null) {
              result.precision_ = precision_;
            } else {
              result.precision_ = precisionBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance()) return this;
            if (other.type_ != 0) {
              setTypeValue(other.getTypeValue());
            }
            if (!other.getTitle().isEmpty()) {
              title_ = other.title_;
              onChanged();
            }
            if (!other.getMin().isEmpty()) {
              min_ = other.min_;
              onChanged();
            }
            if (!other.getMax().isEmpty()) {
              max_ = other.max_;
              onChanged();
            }
            if (other.unitFormat_ != 0) {
              setUnitFormatValue(other.getUnitFormatValue());
            }
            if (other.hasPrecision()) {
              mergePrecision(other.getPrecision());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int type_ = 0;
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
           * @return The enum numeric value on the wire for type.
           */
          @java.lang.Override public int getTypeValue() {
            return type_;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
           * @param value The enum numeric value on the wire for type to set.
           * @return This builder for chaining.
           */
          public Builder setTypeValue(int value) {
            
            type_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
           * @return The type.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType getType() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType.valueOf(type_);
            return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisType type = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            
            type_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object title_ = "";
          /**
           * <pre>
           * Title or empty.
           * </pre>
           *
           * <code>string title = 2;</code>
           * @return The title.
           */
          public java.lang.String getTitle() {
            java.lang.Object ref = title_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              title_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Title or empty.
           * </pre>
           *
           * <code>string title = 2;</code>
           * @return The bytes for title.
           */
          public com.google.protobuf.ByteString
              getTitleBytes() {
            java.lang.Object ref = title_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              title_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Title or empty.
           * </pre>
           *
           * <code>string title = 2;</code>
           * @param value The title to set.
           * @return This builder for chaining.
           */
          public Builder setTitle(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            title_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Title or empty.
           * </pre>
           *
           * <code>string title = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearTitle() {
            
            title_ = getDefaultInstance().getTitle();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Title or empty.
           * </pre>
           *
           * <code>string title = 2;</code>
           * @param value The bytes for title to set.
           * @return This builder for chaining.
           */
          public Builder setTitleBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            title_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object min_ = "";
          /**
           * <pre>
           * Min value in extended number format or empty.
           * </pre>
           *
           * <code>string min = 3;</code>
           * @return The min.
           */
          public java.lang.String getMin() {
            java.lang.Object ref = min_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              min_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Min value in extended number format or empty.
           * </pre>
           *
           * <code>string min = 3;</code>
           * @return The bytes for min.
           */
          public com.google.protobuf.ByteString
              getMinBytes() {
            java.lang.Object ref = min_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              min_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Min value in extended number format or empty.
           * </pre>
           *
           * <code>string min = 3;</code>
           * @param value The min to set.
           * @return This builder for chaining.
           */
          public Builder setMin(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            min_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Min value in extended number format or empty.
           * </pre>
           *
           * <code>string min = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearMin() {
            
            min_ = getDefaultInstance().getMin();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Min value in extended number format or empty.
           * </pre>
           *
           * <code>string min = 3;</code>
           * @param value The bytes for min to set.
           * @return This builder for chaining.
           */
          public Builder setMinBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            min_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object max_ = "";
          /**
           * <pre>
           * Max value in extended number format or empty.
           * </pre>
           *
           * <code>string max = 4;</code>
           * @return The max.
           */
          public java.lang.String getMax() {
            java.lang.Object ref = max_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              max_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Max value in extended number format or empty.
           * </pre>
           *
           * <code>string max = 4;</code>
           * @return The bytes for max.
           */
          public com.google.protobuf.ByteString
              getMaxBytes() {
            java.lang.Object ref = max_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              max_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Max value in extended number format or empty.
           * </pre>
           *
           * <code>string max = 4;</code>
           * @param value The max to set.
           * @return This builder for chaining.
           */
          public Builder setMax(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            max_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Max value in extended number format or empty.
           * </pre>
           *
           * <code>string max = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearMax() {
            
            max_ = getDefaultInstance().getMax();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Max value in extended number format or empty.
           * </pre>
           *
           * <code>string max = 4;</code>
           * @param value The bytes for max to set.
           * @return This builder for chaining.
           */
          public Builder setMaxBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            max_ = value;
            onChanged();
            return this;
          }

          private int unitFormat_ = 0;
          /**
           * <pre>
           * Unit format.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
           * @return The enum numeric value on the wire for unitFormat.
           */
          @java.lang.Override public int getUnitFormatValue() {
            return unitFormat_;
          }
          /**
           * <pre>
           * Unit format.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
           * @param value The enum numeric value on the wire for unitFormat to set.
           * @return This builder for chaining.
           */
          public Builder setUnitFormatValue(int value) {
            
            unitFormat_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Unit format.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
           * @return The unitFormat.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat getUnitFormat() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat result = yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat.valueOf(unitFormat_);
            return result == null ? yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Unit format.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
           * @param value The unitFormat to set.
           * @return This builder for chaining.
           */
          public Builder setUnitFormat(yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.UnitFormat value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            unitFormat_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Unit format.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.UnitFormat unit_format = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearUnitFormat() {
            
            unitFormat_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Int64Value precision_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> precisionBuilder_;
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           * @return Whether the precision field is set.
           */
          public boolean hasPrecision() {
            return precisionBuilder_ != null || precision_ != null;
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           * @return The precision.
           */
          public com.google.protobuf.Int64Value getPrecision() {
            if (precisionBuilder_ == null) {
              return precision_ == null ? com.google.protobuf.Int64Value.getDefaultInstance() : precision_;
            } else {
              return precisionBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          public Builder setPrecision(com.google.protobuf.Int64Value value) {
            if (precisionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              precision_ = value;
              onChanged();
            } else {
              precisionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          public Builder setPrecision(
              com.google.protobuf.Int64Value.Builder builderForValue) {
            if (precisionBuilder_ == null) {
              precision_ = builderForValue.build();
              onChanged();
            } else {
              precisionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          public Builder mergePrecision(com.google.protobuf.Int64Value value) {
            if (precisionBuilder_ == null) {
              if (precision_ != null) {
                precision_ =
                  com.google.protobuf.Int64Value.newBuilder(precision_).mergeFrom(value).buildPartial();
              } else {
                precision_ = value;
              }
              onChanged();
            } else {
              precisionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          public Builder clearPrecision() {
            if (precisionBuilder_ == null) {
              precision_ = null;
              onChanged();
            } else {
              precision_ = null;
              precisionBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          public com.google.protobuf.Int64Value.Builder getPrecisionBuilder() {
            
            onChanged();
            return getPrecisionFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          public com.google.protobuf.Int64ValueOrBuilder getPrecisionOrBuilder() {
            if (precisionBuilder_ != null) {
              return precisionBuilder_.getMessageOrBuilder();
            } else {
              return precision_ == null ?
                  com.google.protobuf.Int64Value.getDefaultInstance() : precision_;
            }
          }
          /**
           * <pre>
           * Tick value precision (null as default, 0-7 in other cases).
           * </pre>
           *
           * <code>.google.protobuf.Int64Value precision = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder> 
              getPrecisionFieldBuilder() {
            if (precisionBuilder_ == null) {
              precisionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int64Value, com.google.protobuf.Int64Value.Builder, com.google.protobuf.Int64ValueOrBuilder>(
                      getPrecision(),
                      getParentForChildren(),
                      isClean());
              precision_ = null;
            }
            return precisionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Yaxis>
            PARSER = new com.google.protobuf.AbstractParser<Yaxis>() {
          @java.lang.Override
          public Yaxis parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Yaxis(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Yaxis> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Yaxis> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface YaxisSettingsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Left Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
         * @return Whether the left field is set.
         */
        boolean hasLeft();
        /**
         * <pre>
         * Left Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
         * @return The left.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getLeft();
        /**
         * <pre>
         * Left Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder getLeftOrBuilder();

        /**
         * <pre>
         * Right Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
         * @return Whether the right field is set.
         */
        boolean hasRight();
        /**
         * <pre>
         * Right Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
         * @return The right.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getRight();
        /**
         * <pre>
         * Right Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder getRightOrBuilder();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings}
       */
      public static final class YaxisSettings extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)
          YaxisSettingsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use YaxisSettings.newBuilder() to construct.
        private YaxisSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private YaxisSettings() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new YaxisSettings();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private YaxisSettings(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder subBuilder = null;
                  if (left_ != null) {
                    subBuilder = left_.toBuilder();
                  }
                  left_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(left_);
                    left_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder subBuilder = null;
                  if (right_ != null) {
                    subBuilder = right_.toBuilder();
                  }
                  right_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(right_);
                    right_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder.class);
        }

        public static final int LEFT_FIELD_NUMBER = 1;
        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis left_;
        /**
         * <pre>
         * Left Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
         * @return Whether the left field is set.
         */
        @java.lang.Override
        public boolean hasLeft() {
          return left_ != null;
        }
        /**
         * <pre>
         * Left Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
         * @return The left.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getLeft() {
          return left_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance() : left_;
        }
        /**
         * <pre>
         * Left Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder getLeftOrBuilder() {
          return getLeft();
        }

        public static final int RIGHT_FIELD_NUMBER = 2;
        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis right_;
        /**
         * <pre>
         * Right Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
         * @return Whether the right field is set.
         */
        @java.lang.Override
        public boolean hasRight() {
          return right_ != null;
        }
        /**
         * <pre>
         * Right Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
         * @return The right.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getRight() {
          return right_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance() : right_;
        }
        /**
         * <pre>
         * Right Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder getRightOrBuilder() {
          return getRight();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (left_ != null) {
            output.writeMessage(1, getLeft());
          }
          if (right_ != null) {
            output.writeMessage(2, getRight());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (left_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getLeft());
          }
          if (right_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getRight());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings) obj;

          if (hasLeft() != other.hasLeft()) return false;
          if (hasLeft()) {
            if (!getLeft()
                .equals(other.getLeft())) return false;
          }
          if (hasRight() != other.hasRight()) return false;
          if (hasRight()) {
            if (!getRight()
                .equals(other.getRight())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasLeft()) {
            hash = (37 * hash) + LEFT_FIELD_NUMBER;
            hash = (53 * hash) + getLeft().hashCode();
          }
          if (hasRight()) {
            hash = (37 * hash) + RIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getRight().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (leftBuilder_ == null) {
              left_ = null;
            } else {
              left_ = null;
              leftBuilder_ = null;
            }
            if (rightBuilder_ == null) {
              right_ = null;
            } else {
              right_ = null;
              rightBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings(this);
            if (leftBuilder_ == null) {
              result.left_ = left_;
            } else {
              result.left_ = leftBuilder_.build();
            }
            if (rightBuilder_ == null) {
              result.right_ = right_;
            } else {
              result.right_ = rightBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.getDefaultInstance()) return this;
            if (other.hasLeft()) {
              mergeLeft(other.getLeft());
            }
            if (other.hasRight()) {
              mergeRight(other.getRight());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis left_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder> leftBuilder_;
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           * @return Whether the left field is set.
           */
          public boolean hasLeft() {
            return leftBuilder_ != null || left_ != null;
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           * @return The left.
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getLeft() {
            if (leftBuilder_ == null) {
              return left_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance() : left_;
            } else {
              return leftBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          public Builder setLeft(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis value) {
            if (leftBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              left_ = value;
              onChanged();
            } else {
              leftBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          public Builder setLeft(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder builderForValue) {
            if (leftBuilder_ == null) {
              left_ = builderForValue.build();
              onChanged();
            } else {
              leftBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          public Builder mergeLeft(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis value) {
            if (leftBuilder_ == null) {
              if (left_ != null) {
                left_ =
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.newBuilder(left_).mergeFrom(value).buildPartial();
              } else {
                left_ = value;
              }
              onChanged();
            } else {
              leftBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          public Builder clearLeft() {
            if (leftBuilder_ == null) {
              left_ = null;
              onChanged();
            } else {
              left_ = null;
              leftBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder getLeftBuilder() {
            
            onChanged();
            return getLeftFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder getLeftOrBuilder() {
            if (leftBuilder_ != null) {
              return leftBuilder_.getMessageOrBuilder();
            } else {
              return left_ == null ?
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance() : left_;
            }
          }
          /**
           * <pre>
           * Left Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis left = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder> 
              getLeftFieldBuilder() {
            if (leftBuilder_ == null) {
              leftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder>(
                      getLeft(),
                      getParentForChildren(),
                      isClean());
              left_ = null;
            }
            return leftBuilder_;
          }

          private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis right_;
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder> rightBuilder_;
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           * @return Whether the right field is set.
           */
          public boolean hasRight() {
            return rightBuilder_ != null || right_ != null;
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           * @return The right.
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis getRight() {
            if (rightBuilder_ == null) {
              return right_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance() : right_;
            } else {
              return rightBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          public Builder setRight(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis value) {
            if (rightBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              right_ = value;
              onChanged();
            } else {
              rightBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          public Builder setRight(
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder builderForValue) {
            if (rightBuilder_ == null) {
              right_ = builderForValue.build();
              onChanged();
            } else {
              rightBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          public Builder mergeRight(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis value) {
            if (rightBuilder_ == null) {
              if (right_ != null) {
                right_ =
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.newBuilder(right_).mergeFrom(value).buildPartial();
              } else {
                right_ = value;
              }
              onChanged();
            } else {
              rightBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          public Builder clearRight() {
            if (rightBuilder_ == null) {
              right_ = null;
              onChanged();
            } else {
              right_ = null;
              rightBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder getRightBuilder() {
            
            onChanged();
            return getRightFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder getRightOrBuilder() {
            if (rightBuilder_ != null) {
              return rightBuilder_.getMessageOrBuilder();
            } else {
              return right_ == null ?
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.getDefaultInstance() : right_;
            }
          }
          /**
           * <pre>
           * Right Y axis settings.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Yaxis right = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder> 
              getRightFieldBuilder() {
            if (rightBuilder_ == null) {
              rightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Yaxis.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisOrBuilder>(
                      getRight(),
                      getParentForChildren(),
                      isClean());
              right_ = null;
            }
            return rightBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<YaxisSettings>
            PARSER = new com.google.protobuf.AbstractParser<YaxisSettings>() {
          @java.lang.Override
          public YaxisSettings parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new YaxisSettings(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<YaxisSettings> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<YaxisSettings> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <pre>
       * Visualization type.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Visualization type.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType getType() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType.valueOf(type_);
        return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType.UNRECOGNIZED : result;
      }

      public static final int NORMALIZE_FIELD_NUMBER = 2;
      private boolean normalize_;
      /**
       * <pre>
       * Normalize.
       * </pre>
       *
       * <code>bool normalize = 2;</code>
       * @return The normalize.
       */
      @java.lang.Override
      public boolean getNormalize() {
        return normalize_;
      }

      public static final int INTERPOLATE_FIELD_NUMBER = 3;
      private int interpolate_;
      /**
       * <pre>
       * Interpolate.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
       * @return The enum numeric value on the wire for interpolate.
       */
      @java.lang.Override public int getInterpolateValue() {
        return interpolate_;
      }
      /**
       * <pre>
       * Interpolate.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
       * @return The interpolate.
       */
      @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate getInterpolate() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate.valueOf(interpolate_);
        return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate.UNRECOGNIZED : result;
      }

      public static final int AGGREGATION_FIELD_NUMBER = 4;
      private int aggregation_;
      /**
       * <pre>
       * Aggregation.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
       * @return The enum numeric value on the wire for aggregation.
       */
      @java.lang.Override public int getAggregationValue() {
        return aggregation_;
      }
      /**
       * <pre>
       * Aggregation.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
       * @return The aggregation.
       */
      @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation getAggregation() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation.valueOf(aggregation_);
        return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation.UNRECOGNIZED : result;
      }

      public static final int COLOR_SCHEME_SETTINGS_FIELD_NUMBER = 5;
      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings colorSchemeSettings_;
      /**
       * <pre>
       * Color scheme settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
       * @return Whether the colorSchemeSettings field is set.
       */
      @java.lang.Override
      public boolean hasColorSchemeSettings() {
        return colorSchemeSettings_ != null;
      }
      /**
       * <pre>
       * Color scheme settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
       * @return The colorSchemeSettings.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings getColorSchemeSettings() {
        return colorSchemeSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.getDefaultInstance() : colorSchemeSettings_;
      }
      /**
       * <pre>
       * Color scheme settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder getColorSchemeSettingsOrBuilder() {
        return getColorSchemeSettings();
      }

      public static final int HEATMAP_SETTINGS_FIELD_NUMBER = 6;
      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmapSettings_;
      /**
       * <pre>
       * Heatmap settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
       * @return Whether the heatmapSettings field is set.
       */
      @java.lang.Override
      public boolean hasHeatmapSettings() {
        return heatmapSettings_ != null;
      }
      /**
       * <pre>
       * Heatmap settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
       * @return The heatmapSettings.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings getHeatmapSettings() {
        return heatmapSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.getDefaultInstance() : heatmapSettings_;
      }
      /**
       * <pre>
       * Heatmap settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder getHeatmapSettingsOrBuilder() {
        return getHeatmapSettings();
      }

      public static final int YAXIS_SETTINGS_FIELD_NUMBER = 7;
      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxisSettings_;
      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
       * @return Whether the yaxisSettings field is set.
       */
      @java.lang.Override
      public boolean hasYaxisSettings() {
        return yaxisSettings_ != null;
      }
      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
       * @return The yaxisSettings.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings getYaxisSettings() {
        return yaxisSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.getDefaultInstance() : yaxisSettings_;
      }
      /**
       * <pre>
       * Y axis settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder getYaxisSettingsOrBuilder() {
        return getYaxisSettings();
      }

      public static final int TITLE_FIELD_NUMBER = 8;
      private volatile java.lang.Object title_;
      /**
       * <pre>
       * Inside chart title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return The title.
       */
      @java.lang.Override
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Inside chart title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return The bytes for title.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SHOW_LABELS_FIELD_NUMBER = 9;
      private boolean showLabels_;
      /**
       * <pre>
       * Show chart labels.
       * </pre>
       *
       * <code>bool show_labels = 9;</code>
       * @return The showLabels.
       */
      @java.lang.Override
      public boolean getShowLabels() {
        return showLabels_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType.VISUALIZATION_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(1, type_);
        }
        if (normalize_ != false) {
          output.writeBool(2, normalize_);
        }
        if (interpolate_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate.INTERPOLATE_UNSPECIFIED.getNumber()) {
          output.writeEnum(3, interpolate_);
        }
        if (aggregation_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation.SERIES_AGGREGATION_UNSPECIFIED.getNumber()) {
          output.writeEnum(4, aggregation_);
        }
        if (colorSchemeSettings_ != null) {
          output.writeMessage(5, getColorSchemeSettings());
        }
        if (heatmapSettings_ != null) {
          output.writeMessage(6, getHeatmapSettings());
        }
        if (yaxisSettings_ != null) {
          output.writeMessage(7, getYaxisSettings());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 8, title_);
        }
        if (showLabels_ != false) {
          output.writeBool(9, showLabels_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType.VISUALIZATION_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (normalize_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, normalize_);
        }
        if (interpolate_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate.INTERPOLATE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, interpolate_);
        }
        if (aggregation_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation.SERIES_AGGREGATION_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, aggregation_);
        }
        if (colorSchemeSettings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getColorSchemeSettings());
        }
        if (heatmapSettings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getHeatmapSettings());
        }
        if (yaxisSettings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getYaxisSettings());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, title_);
        }
        if (showLabels_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, showLabels_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings) obj;

        if (type_ != other.type_) return false;
        if (getNormalize()
            != other.getNormalize()) return false;
        if (interpolate_ != other.interpolate_) return false;
        if (aggregation_ != other.aggregation_) return false;
        if (hasColorSchemeSettings() != other.hasColorSchemeSettings()) return false;
        if (hasColorSchemeSettings()) {
          if (!getColorSchemeSettings()
              .equals(other.getColorSchemeSettings())) return false;
        }
        if (hasHeatmapSettings() != other.hasHeatmapSettings()) return false;
        if (hasHeatmapSettings()) {
          if (!getHeatmapSettings()
              .equals(other.getHeatmapSettings())) return false;
        }
        if (hasYaxisSettings() != other.hasYaxisSettings()) return false;
        if (hasYaxisSettings()) {
          if (!getYaxisSettings()
              .equals(other.getYaxisSettings())) return false;
        }
        if (!getTitle()
            .equals(other.getTitle())) return false;
        if (getShowLabels()
            != other.getShowLabels()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
        hash = (37 * hash) + NORMALIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNormalize());
        hash = (37 * hash) + INTERPOLATE_FIELD_NUMBER;
        hash = (53 * hash) + interpolate_;
        hash = (37 * hash) + AGGREGATION_FIELD_NUMBER;
        hash = (53 * hash) + aggregation_;
        if (hasColorSchemeSettings()) {
          hash = (37 * hash) + COLOR_SCHEME_SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getColorSchemeSettings().hashCode();
        }
        if (hasHeatmapSettings()) {
          hash = (37 * hash) + HEATMAP_SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getHeatmapSettings().hashCode();
        }
        if (hasYaxisSettings()) {
          hash = (37 * hash) + YAXIS_SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getYaxisSettings().hashCode();
        }
        hash = (37 * hash) + TITLE_FIELD_NUMBER;
        hash = (53 * hash) + getTitle().hashCode();
        hash = (37 * hash) + SHOW_LABELS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowLabels());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          type_ = 0;

          normalize_ = false;

          interpolate_ = 0;

          aggregation_ = 0;

          if (colorSchemeSettingsBuilder_ == null) {
            colorSchemeSettings_ = null;
          } else {
            colorSchemeSettings_ = null;
            colorSchemeSettingsBuilder_ = null;
          }
          if (heatmapSettingsBuilder_ == null) {
            heatmapSettings_ = null;
          } else {
            heatmapSettings_ = null;
            heatmapSettingsBuilder_ = null;
          }
          if (yaxisSettingsBuilder_ == null) {
            yaxisSettings_ = null;
          } else {
            yaxisSettings_ = null;
            yaxisSettingsBuilder_ = null;
          }
          title_ = "";

          showLabels_ = false;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings(this);
          result.type_ = type_;
          result.normalize_ = normalize_;
          result.interpolate_ = interpolate_;
          result.aggregation_ = aggregation_;
          if (colorSchemeSettingsBuilder_ == null) {
            result.colorSchemeSettings_ = colorSchemeSettings_;
          } else {
            result.colorSchemeSettings_ = colorSchemeSettingsBuilder_.build();
          }
          if (heatmapSettingsBuilder_ == null) {
            result.heatmapSettings_ = heatmapSettings_;
          } else {
            result.heatmapSettings_ = heatmapSettingsBuilder_.build();
          }
          if (yaxisSettingsBuilder_ == null) {
            result.yaxisSettings_ = yaxisSettings_;
          } else {
            result.yaxisSettings_ = yaxisSettingsBuilder_.build();
          }
          result.title_ = title_;
          result.showLabels_ = showLabels_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDefaultInstance()) return this;
          if (other.type_ != 0) {
            setTypeValue(other.getTypeValue());
          }
          if (other.getNormalize() != false) {
            setNormalize(other.getNormalize());
          }
          if (other.interpolate_ != 0) {
            setInterpolateValue(other.getInterpolateValue());
          }
          if (other.aggregation_ != 0) {
            setAggregationValue(other.getAggregationValue());
          }
          if (other.hasColorSchemeSettings()) {
            mergeColorSchemeSettings(other.getColorSchemeSettings());
          }
          if (other.hasHeatmapSettings()) {
            mergeHeatmapSettings(other.getHeatmapSettings());
          }
          if (other.hasYaxisSettings()) {
            mergeYaxisSettings(other.getYaxisSettings());
          }
          if (!other.getTitle().isEmpty()) {
            title_ = other.title_;
            onChanged();
          }
          if (other.getShowLabels() != false) {
            setShowLabels(other.getShowLabels());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int type_ = 0;
        /**
         * <pre>
         * Visualization type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Visualization type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
         * @param value The enum numeric value on the wire for type to set.
         * @return This builder for chaining.
         */
        public Builder setTypeValue(int value) {
          
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Visualization type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
         * @return The type.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType getType() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType.valueOf(type_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Visualization type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.VisualizationType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Visualization type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.VisualizationType type = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          
          type_ = 0;
          onChanged();
          return this;
        }

        private boolean normalize_ ;
        /**
         * <pre>
         * Normalize.
         * </pre>
         *
         * <code>bool normalize = 2;</code>
         * @return The normalize.
         */
        @java.lang.Override
        public boolean getNormalize() {
          return normalize_;
        }
        /**
         * <pre>
         * Normalize.
         * </pre>
         *
         * <code>bool normalize = 2;</code>
         * @param value The normalize to set.
         * @return This builder for chaining.
         */
        public Builder setNormalize(boolean value) {
          
          normalize_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Normalize.
         * </pre>
         *
         * <code>bool normalize = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNormalize() {
          
          normalize_ = false;
          onChanged();
          return this;
        }

        private int interpolate_ = 0;
        /**
         * <pre>
         * Interpolate.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
         * @return The enum numeric value on the wire for interpolate.
         */
        @java.lang.Override public int getInterpolateValue() {
          return interpolate_;
        }
        /**
         * <pre>
         * Interpolate.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
         * @param value The enum numeric value on the wire for interpolate to set.
         * @return This builder for chaining.
         */
        public Builder setInterpolateValue(int value) {
          
          interpolate_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Interpolate.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
         * @return The interpolate.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate getInterpolate() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate.valueOf(interpolate_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Interpolate.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
         * @param value The interpolate to set.
         * @return This builder for chaining.
         */
        public Builder setInterpolate(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Interpolate value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          interpolate_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Interpolate.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.Interpolate interpolate = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearInterpolate() {
          
          interpolate_ = 0;
          onChanged();
          return this;
        }

        private int aggregation_ = 0;
        /**
         * <pre>
         * Aggregation.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
         * @return The enum numeric value on the wire for aggregation.
         */
        @java.lang.Override public int getAggregationValue() {
          return aggregation_;
        }
        /**
         * <pre>
         * Aggregation.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
         * @param value The enum numeric value on the wire for aggregation to set.
         * @return This builder for chaining.
         */
        public Builder setAggregationValue(int value) {
          
          aggregation_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Aggregation.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
         * @return The aggregation.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation getAggregation() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation.valueOf(aggregation_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Aggregation.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
         * @param value The aggregation to set.
         * @return This builder for chaining.
         */
        public Builder setAggregation(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          aggregation_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Aggregation.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.SeriesAggregation aggregation = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearAggregation() {
          
          aggregation_ = 0;
          onChanged();
          return this;
        }

        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings colorSchemeSettings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder> colorSchemeSettingsBuilder_;
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         * @return Whether the colorSchemeSettings field is set.
         */
        public boolean hasColorSchemeSettings() {
          return colorSchemeSettingsBuilder_ != null || colorSchemeSettings_ != null;
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         * @return The colorSchemeSettings.
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings getColorSchemeSettings() {
          if (colorSchemeSettingsBuilder_ == null) {
            return colorSchemeSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.getDefaultInstance() : colorSchemeSettings_;
          } else {
            return colorSchemeSettingsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        public Builder setColorSchemeSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings value) {
          if (colorSchemeSettingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            colorSchemeSettings_ = value;
            onChanged();
          } else {
            colorSchemeSettingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        public Builder setColorSchemeSettings(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder builderForValue) {
          if (colorSchemeSettingsBuilder_ == null) {
            colorSchemeSettings_ = builderForValue.build();
            onChanged();
          } else {
            colorSchemeSettingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        public Builder mergeColorSchemeSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings value) {
          if (colorSchemeSettingsBuilder_ == null) {
            if (colorSchemeSettings_ != null) {
              colorSchemeSettings_ =
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.newBuilder(colorSchemeSettings_).mergeFrom(value).buildPartial();
            } else {
              colorSchemeSettings_ = value;
            }
            onChanged();
          } else {
            colorSchemeSettingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        public Builder clearColorSchemeSettings() {
          if (colorSchemeSettingsBuilder_ == null) {
            colorSchemeSettings_ = null;
            onChanged();
          } else {
            colorSchemeSettings_ = null;
            colorSchemeSettingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder getColorSchemeSettingsBuilder() {
          
          onChanged();
          return getColorSchemeSettingsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder getColorSchemeSettingsOrBuilder() {
          if (colorSchemeSettingsBuilder_ != null) {
            return colorSchemeSettingsBuilder_.getMessageOrBuilder();
          } else {
            return colorSchemeSettings_ == null ?
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.getDefaultInstance() : colorSchemeSettings_;
          }
        }
        /**
         * <pre>
         * Color scheme settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings color_scheme_settings = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder> 
            getColorSchemeSettingsFieldBuilder() {
          if (colorSchemeSettingsBuilder_ == null) {
            colorSchemeSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.ColorSchemeSettingsOrBuilder>(
                    getColorSchemeSettings(),
                    getParentForChildren(),
                    isClean());
            colorSchemeSettings_ = null;
          }
          return colorSchemeSettingsBuilder_;
        }

        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmapSettings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder> heatmapSettingsBuilder_;
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         * @return Whether the heatmapSettings field is set.
         */
        public boolean hasHeatmapSettings() {
          return heatmapSettingsBuilder_ != null || heatmapSettings_ != null;
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         * @return The heatmapSettings.
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings getHeatmapSettings() {
          if (heatmapSettingsBuilder_ == null) {
            return heatmapSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.getDefaultInstance() : heatmapSettings_;
          } else {
            return heatmapSettingsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        public Builder setHeatmapSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings value) {
          if (heatmapSettingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            heatmapSettings_ = value;
            onChanged();
          } else {
            heatmapSettingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        public Builder setHeatmapSettings(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder builderForValue) {
          if (heatmapSettingsBuilder_ == null) {
            heatmapSettings_ = builderForValue.build();
            onChanged();
          } else {
            heatmapSettingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        public Builder mergeHeatmapSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings value) {
          if (heatmapSettingsBuilder_ == null) {
            if (heatmapSettings_ != null) {
              heatmapSettings_ =
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.newBuilder(heatmapSettings_).mergeFrom(value).buildPartial();
            } else {
              heatmapSettings_ = value;
            }
            onChanged();
          } else {
            heatmapSettingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        public Builder clearHeatmapSettings() {
          if (heatmapSettingsBuilder_ == null) {
            heatmapSettings_ = null;
            onChanged();
          } else {
            heatmapSettings_ = null;
            heatmapSettingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder getHeatmapSettingsBuilder() {
          
          onChanged();
          return getHeatmapSettingsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder getHeatmapSettingsOrBuilder() {
          if (heatmapSettingsBuilder_ != null) {
            return heatmapSettingsBuilder_.getMessageOrBuilder();
          } else {
            return heatmapSettings_ == null ?
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.getDefaultInstance() : heatmapSettings_;
          }
        }
        /**
         * <pre>
         * Heatmap settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings heatmap_settings = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder> 
            getHeatmapSettingsFieldBuilder() {
          if (heatmapSettingsBuilder_ == null) {
            heatmapSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.HeatmapSettingsOrBuilder>(
                    getHeatmapSettings(),
                    getParentForChildren(),
                    isClean());
            heatmapSettings_ = null;
          }
          return heatmapSettingsBuilder_;
        }

        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxisSettings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder> yaxisSettingsBuilder_;
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         * @return Whether the yaxisSettings field is set.
         */
        public boolean hasYaxisSettings() {
          return yaxisSettingsBuilder_ != null || yaxisSettings_ != null;
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         * @return The yaxisSettings.
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings getYaxisSettings() {
          if (yaxisSettingsBuilder_ == null) {
            return yaxisSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.getDefaultInstance() : yaxisSettings_;
          } else {
            return yaxisSettingsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        public Builder setYaxisSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings value) {
          if (yaxisSettingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            yaxisSettings_ = value;
            onChanged();
          } else {
            yaxisSettingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        public Builder setYaxisSettings(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder builderForValue) {
          if (yaxisSettingsBuilder_ == null) {
            yaxisSettings_ = builderForValue.build();
            onChanged();
          } else {
            yaxisSettingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        public Builder mergeYaxisSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings value) {
          if (yaxisSettingsBuilder_ == null) {
            if (yaxisSettings_ != null) {
              yaxisSettings_ =
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.newBuilder(yaxisSettings_).mergeFrom(value).buildPartial();
            } else {
              yaxisSettings_ = value;
            }
            onChanged();
          } else {
            yaxisSettingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        public Builder clearYaxisSettings() {
          if (yaxisSettingsBuilder_ == null) {
            yaxisSettings_ = null;
            onChanged();
          } else {
            yaxisSettings_ = null;
            yaxisSettingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder getYaxisSettingsBuilder() {
          
          onChanged();
          return getYaxisSettingsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder getYaxisSettingsOrBuilder() {
          if (yaxisSettingsBuilder_ != null) {
            return yaxisSettingsBuilder_.getMessageOrBuilder();
          } else {
            return yaxisSettings_ == null ?
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.getDefaultInstance() : yaxisSettings_;
          }
        }
        /**
         * <pre>
         * Y axis settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings.YaxisSettings yaxis_settings = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder> 
            getYaxisSettingsFieldBuilder() {
          if (yaxisSettingsBuilder_ == null) {
            yaxisSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.YaxisSettingsOrBuilder>(
                    getYaxisSettings(),
                    getParentForChildren(),
                    isClean());
            yaxisSettings_ = null;
          }
          return yaxisSettingsBuilder_;
        }

        private java.lang.Object title_ = "";
        /**
         * <pre>
         * Inside chart title.
         * </pre>
         *
         * <code>string title = 8;</code>
         * @return The title.
         */
        public java.lang.String getTitle() {
          java.lang.Object ref = title_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            title_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Inside chart title.
         * </pre>
         *
         * <code>string title = 8;</code>
         * @return The bytes for title.
         */
        public com.google.protobuf.ByteString
            getTitleBytes() {
          java.lang.Object ref = title_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            title_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Inside chart title.
         * </pre>
         *
         * <code>string title = 8;</code>
         * @param value The title to set.
         * @return This builder for chaining.
         */
        public Builder setTitle(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          title_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Inside chart title.
         * </pre>
         *
         * <code>string title = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearTitle() {
          
          title_ = getDefaultInstance().getTitle();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Inside chart title.
         * </pre>
         *
         * <code>string title = 8;</code>
         * @param value The bytes for title to set.
         * @return This builder for chaining.
         */
        public Builder setTitleBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          title_ = value;
          onChanged();
          return this;
        }

        private boolean showLabels_ ;
        /**
         * <pre>
         * Show chart labels.
         * </pre>
         *
         * <code>bool show_labels = 9;</code>
         * @return The showLabels.
         */
        @java.lang.Override
        public boolean getShowLabels() {
          return showLabels_;
        }
        /**
         * <pre>
         * Show chart labels.
         * </pre>
         *
         * <code>bool show_labels = 9;</code>
         * @param value The showLabels to set.
         * @return This builder for chaining.
         */
        public Builder setShowLabels(boolean value) {
          
          showLabels_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Show chart labels.
         * </pre>
         *
         * <code>bool show_labels = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearShowLabels() {
          
          showLabels_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<VisualizationSettings>
          PARSER = new com.google.protobuf.AbstractParser<VisualizationSettings>() {
        @java.lang.Override
        public VisualizationSettings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new VisualizationSettings(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<VisualizationSettings> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<VisualizationSettings> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SeriesOverridesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Series name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Series name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Series name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Target index.
       * </pre>
       *
       * <code>string target_index = 2;</code>
       * @return Whether the targetIndex field is set.
       */
      boolean hasTargetIndex();
      /**
       * <pre>
       * Target index.
       * </pre>
       *
       * <code>string target_index = 2;</code>
       * @return The targetIndex.
       */
      java.lang.String getTargetIndex();
      /**
       * <pre>
       * Target index.
       * </pre>
       *
       * <code>string target_index = 2;</code>
       * @return The bytes for targetIndex.
       */
      com.google.protobuf.ByteString
          getTargetIndexBytes();

      /**
       * <pre>
       * Required. Override settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
       * @return Whether the settings field is set.
       */
      boolean hasSettings();
      /**
       * <pre>
       * Required. Override settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
       * @return The settings.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings getSettings();
      /**
       * <pre>
       * Required. Override settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder getSettingsOrBuilder();

      /**
       * <code>string override_name = 4;</code>
       * @return The overrideName.
       */
      java.lang.String getOverrideName();
      /**
       * <code>string override_name = 4;</code>
       * @return The bytes for overrideName.
       */
      com.google.protobuf.ByteString
          getOverrideNameBytes();

      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
       * @return Whether the matcher field is set.
       */
      boolean hasMatcher();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
       * @return The matcher.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher getMatcher();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder getMatcherOrBuilder();

      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.TypeCase getTypeCase();
    }
    /**
     * <pre>
     * Series override settings.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides}
     */
    public static final class SeriesOverrides extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides)
        SeriesOverridesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SeriesOverrides.newBuilder() to construct.
      private SeriesOverrides(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SeriesOverrides() {
        overrideName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SeriesOverrides();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SeriesOverrides(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                typeCase_ = 1;
                type_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                typeCase_ = 2;
                type_ = s;
                break;
              }
              case 26: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder subBuilder = null;
                if (settings_ != null) {
                  subBuilder = settings_.toBuilder();
                }
                settings_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(settings_);
                  settings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                overrideName_ = s;
                break;
              }
              case 42: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder subBuilder = null;
                if (matcher_ != null) {
                  subBuilder = matcher_.toBuilder();
                }
                matcher_ = input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(matcher_);
                  matcher_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder.class);
      }

      /**
       * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition}
       */
      public enum YaxisPosition
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Not specified (left by default).
         * </pre>
         *
         * <code>YAXIS_POSITION_UNSPECIFIED = 0;</code>
         */
        YAXIS_POSITION_UNSPECIFIED(0),
        /**
         * <pre>
         * Left.
         * </pre>
         *
         * <code>YAXIS_POSITION_LEFT = 1;</code>
         */
        YAXIS_POSITION_LEFT(1),
        /**
         * <pre>
         * Right.
         * </pre>
         *
         * <code>YAXIS_POSITION_RIGHT = 2;</code>
         */
        YAXIS_POSITION_RIGHT(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Not specified (left by default).
         * </pre>
         *
         * <code>YAXIS_POSITION_UNSPECIFIED = 0;</code>
         */
        public static final int YAXIS_POSITION_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Left.
         * </pre>
         *
         * <code>YAXIS_POSITION_LEFT = 1;</code>
         */
        public static final int YAXIS_POSITION_LEFT_VALUE = 1;
        /**
         * <pre>
         * Right.
         * </pre>
         *
         * <code>YAXIS_POSITION_RIGHT = 2;</code>
         */
        public static final int YAXIS_POSITION_RIGHT_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static YaxisPosition valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static YaxisPosition forNumber(int value) {
          switch (value) {
            case 0: return YAXIS_POSITION_UNSPECIFIED;
            case 1: return YAXIS_POSITION_LEFT;
            case 2: return YAXIS_POSITION_RIGHT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<YaxisPosition>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            YaxisPosition> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<YaxisPosition>() {
                public YaxisPosition findValueByNumber(int number) {
                  return YaxisPosition.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.getDescriptor().getEnumTypes().get(0);
        }

        private static final YaxisPosition[] VALUES = values();

        public static YaxisPosition valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private YaxisPosition(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition)
      }

      /**
       * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType}
       */
      public enum SeriesVisualizationType
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Not specified (line by default).
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_UNSPECIFIED = 0;</code>
         */
        SERIES_VISUALIZATION_TYPE_UNSPECIFIED(0),
        /**
         * <pre>
         * Line chart.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_LINE = 1;</code>
         */
        SERIES_VISUALIZATION_TYPE_LINE(1),
        /**
         * <pre>
         * Stack chart.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_STACK = 2;</code>
         */
        SERIES_VISUALIZATION_TYPE_STACK(2),
        /**
         * <pre>
         * Points as columns chart.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_COLUMN = 3;</code>
         */
        SERIES_VISUALIZATION_TYPE_COLUMN(3),
        /**
         * <pre>
         * Points.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_POINTS = 4;</code>
         */
        SERIES_VISUALIZATION_TYPE_POINTS(4),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Not specified (line by default).
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_UNSPECIFIED = 0;</code>
         */
        public static final int SERIES_VISUALIZATION_TYPE_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Line chart.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_LINE = 1;</code>
         */
        public static final int SERIES_VISUALIZATION_TYPE_LINE_VALUE = 1;
        /**
         * <pre>
         * Stack chart.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_STACK = 2;</code>
         */
        public static final int SERIES_VISUALIZATION_TYPE_STACK_VALUE = 2;
        /**
         * <pre>
         * Points as columns chart.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_COLUMN = 3;</code>
         */
        public static final int SERIES_VISUALIZATION_TYPE_COLUMN_VALUE = 3;
        /**
         * <pre>
         * Points.
         * </pre>
         *
         * <code>SERIES_VISUALIZATION_TYPE_POINTS = 4;</code>
         */
        public static final int SERIES_VISUALIZATION_TYPE_POINTS_VALUE = 4;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SeriesVisualizationType valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static SeriesVisualizationType forNumber(int value) {
          switch (value) {
            case 0: return SERIES_VISUALIZATION_TYPE_UNSPECIFIED;
            case 1: return SERIES_VISUALIZATION_TYPE_LINE;
            case 2: return SERIES_VISUALIZATION_TYPE_STACK;
            case 3: return SERIES_VISUALIZATION_TYPE_COLUMN;
            case 4: return SERIES_VISUALIZATION_TYPE_POINTS;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<SeriesVisualizationType>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            SeriesVisualizationType> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<SeriesVisualizationType>() {
                public SeriesVisualizationType findValueByNumber(int number) {
                  return SeriesVisualizationType.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.getDescriptor().getEnumTypes().get(1);
        }

        private static final SeriesVisualizationType[] VALUES = values();

        public static SeriesVisualizationType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private SeriesVisualizationType(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType)
      }

      public interface SeriesOverrideSettingsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Series name or empty.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Series name or empty.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * Series color or empty.
         * </pre>
         *
         * <code>string color = 2;</code>
         * @return The color.
         */
        java.lang.String getColor();
        /**
         * <pre>
         * Series color or empty.
         * </pre>
         *
         * <code>string color = 2;</code>
         * @return The bytes for color.
         */
        com.google.protobuf.ByteString
            getColorBytes();

        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
         * @return The enum numeric value on the wire for type.
         */
        int getTypeValue();
        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
         * @return The type.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType getType();

        /**
         * <pre>
         * Stack name or empty.
         * </pre>
         *
         * <code>string stack_name = 4;</code>
         * @return The stackName.
         */
        java.lang.String getStackName();
        /**
         * <pre>
         * Stack name or empty.
         * </pre>
         *
         * <code>string stack_name = 4;</code>
         * @return The bytes for stackName.
         */
        com.google.protobuf.ByteString
            getStackNameBytes();

        /**
         * <pre>
         * Stack grow down.
         * </pre>
         *
         * <code>bool grow_down = 5;</code>
         * @return The growDown.
         */
        boolean getGrowDown();

        /**
         * <pre>
         * Yaxis position.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
         * @return The enum numeric value on the wire for yaxisPosition.
         */
        int getYaxisPositionValue();
        /**
         * <pre>
         * Yaxis position.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
         * @return The yaxisPosition.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition getYaxisPosition();

        /**
         * <pre>
         * Line Border Width
         * </pre>
         *
         * <code>int64 line_width = 7;</code>
         * @return The lineWidth.
         */
        long getLineWidth();

        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
         * @return The enum numeric value on the wire for lineStyle.
         */
        int getLineStyleValue();
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
         * @return The lineStyle.
         */
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle getLineStyle();
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings}
       */
      public static final class SeriesOverrideSettings extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)
          SeriesOverrideSettingsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SeriesOverrideSettings.newBuilder() to construct.
        private SeriesOverrideSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SeriesOverrideSettings() {
          name_ = "";
          color_ = "";
          type_ = 0;
          stackName_ = "";
          yaxisPosition_ = 0;
          lineStyle_ = 0;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new SeriesOverrideSettings();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private SeriesOverrideSettings(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  java.lang.String s = input.readStringRequireUtf8();

                  name_ = s;
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  color_ = s;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  type_ = rawValue;
                  break;
                }
                case 34: {
                  java.lang.String s = input.readStringRequireUtf8();

                  stackName_ = s;
                  break;
                }
                case 40: {

                  growDown_ = input.readBool();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();

                  yaxisPosition_ = rawValue;
                  break;
                }
                case 56: {

                  lineWidth_ = input.readInt64();
                  break;
                }
                case 64: {
                  int rawValue = input.readEnum();

                  lineStyle_ = rawValue;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder.class);
        }

        /**
         * Protobuf enum {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle}
         */
        public enum LineStyle
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>LINE_STYLE_UNSPECIFIED = 0;</code>
           */
          LINE_STYLE_UNSPECIFIED(0),
          /**
           * <code>LINE_STYLE_SOLID = 1;</code>
           */
          LINE_STYLE_SOLID(1),
          /**
           * <code>LINE_STYLE_DASH = 2;</code>
           */
          LINE_STYLE_DASH(2),
          /**
           * <code>LINE_STYLE_DOTS = 3;</code>
           */
          LINE_STYLE_DOTS(3),
          UNRECOGNIZED(-1),
          ;

          /**
           * <code>LINE_STYLE_UNSPECIFIED = 0;</code>
           */
          public static final int LINE_STYLE_UNSPECIFIED_VALUE = 0;
          /**
           * <code>LINE_STYLE_SOLID = 1;</code>
           */
          public static final int LINE_STYLE_SOLID_VALUE = 1;
          /**
           * <code>LINE_STYLE_DASH = 2;</code>
           */
          public static final int LINE_STYLE_DASH_VALUE = 2;
          /**
           * <code>LINE_STYLE_DOTS = 3;</code>
           */
          public static final int LINE_STYLE_DOTS_VALUE = 3;


          public final int getNumber() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalArgumentException(
                  "Can't get the number of an unknown enum value.");
            }
            return value;
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           * @deprecated Use {@link #forNumber(int)} instead.
           */
          @java.lang.Deprecated
          public static LineStyle valueOf(int value) {
            return forNumber(value);
          }

          /**
           * @param value The numeric wire value of the corresponding enum entry.
           * @return The enum associated with the given numeric wire value.
           */
          public static LineStyle forNumber(int value) {
            switch (value) {
              case 0: return LINE_STYLE_UNSPECIFIED;
              case 1: return LINE_STYLE_SOLID;
              case 2: return LINE_STYLE_DASH;
              case 3: return LINE_STYLE_DOTS;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<LineStyle>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static final com.google.protobuf.Internal.EnumLiteMap<
              LineStyle> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<LineStyle>() {
                  public LineStyle findValueByNumber(int number) {
                    return LineStyle.forNumber(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            if (this == UNRECOGNIZED) {
              throw new java.lang.IllegalStateException(
                  "Can't get the descriptor of an unrecognized enum value.");
            }
            return getDescriptor().getValues().get(ordinal());
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.getDescriptor().getEnumTypes().get(0);
          }

          private static final LineStyle[] VALUES = values();

          public static LineStyle valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
              return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
          }

          private final int value;

          private LineStyle(int value) {
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle)
        }

        public static final int NAME_FIELD_NUMBER = 1;
        private volatile java.lang.Object name_;
        /**
         * <pre>
         * Series name or empty.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Series name or empty.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int COLOR_FIELD_NUMBER = 2;
        private volatile java.lang.Object color_;
        /**
         * <pre>
         * Series color or empty.
         * </pre>
         *
         * <code>string color = 2;</code>
         * @return The color.
         */
        @java.lang.Override
        public java.lang.String getColor() {
          java.lang.Object ref = color_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            color_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Series color or empty.
         * </pre>
         *
         * <code>string color = 2;</code>
         * @return The bytes for color.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getColorBytes() {
          java.lang.Object ref = color_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            color_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int TYPE_FIELD_NUMBER = 3;
        private int type_;
        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
         * @return The enum numeric value on the wire for type.
         */
        @java.lang.Override public int getTypeValue() {
          return type_;
        }
        /**
         * <pre>
         * Type.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
         * @return The type.
         */
        @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType getType() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType.valueOf(type_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType.UNRECOGNIZED : result;
        }

        public static final int STACK_NAME_FIELD_NUMBER = 4;
        private volatile java.lang.Object stackName_;
        /**
         * <pre>
         * Stack name or empty.
         * </pre>
         *
         * <code>string stack_name = 4;</code>
         * @return The stackName.
         */
        @java.lang.Override
        public java.lang.String getStackName() {
          java.lang.Object ref = stackName_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            stackName_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * Stack name or empty.
         * </pre>
         *
         * <code>string stack_name = 4;</code>
         * @return The bytes for stackName.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getStackNameBytes() {
          java.lang.Object ref = stackName_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stackName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int GROW_DOWN_FIELD_NUMBER = 5;
        private boolean growDown_;
        /**
         * <pre>
         * Stack grow down.
         * </pre>
         *
         * <code>bool grow_down = 5;</code>
         * @return The growDown.
         */
        @java.lang.Override
        public boolean getGrowDown() {
          return growDown_;
        }

        public static final int YAXIS_POSITION_FIELD_NUMBER = 6;
        private int yaxisPosition_;
        /**
         * <pre>
         * Yaxis position.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
         * @return The enum numeric value on the wire for yaxisPosition.
         */
        @java.lang.Override public int getYaxisPositionValue() {
          return yaxisPosition_;
        }
        /**
         * <pre>
         * Yaxis position.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
         * @return The yaxisPosition.
         */
        @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition getYaxisPosition() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition.valueOf(yaxisPosition_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition.UNRECOGNIZED : result;
        }

        public static final int LINE_WIDTH_FIELD_NUMBER = 7;
        private long lineWidth_;
        /**
         * <pre>
         * Line Border Width
         * </pre>
         *
         * <code>int64 line_width = 7;</code>
         * @return The lineWidth.
         */
        @java.lang.Override
        public long getLineWidth() {
          return lineWidth_;
        }

        public static final int LINE_STYLE_FIELD_NUMBER = 8;
        private int lineStyle_;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
         * @return The enum numeric value on the wire for lineStyle.
         */
        @java.lang.Override public int getLineStyleValue() {
          return lineStyle_;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
         * @return The lineStyle.
         */
        @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle getLineStyle() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle.valueOf(lineStyle_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(color_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, color_);
          }
          if (type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType.SERIES_VISUALIZATION_TYPE_UNSPECIFIED.getNumber()) {
            output.writeEnum(3, type_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackName_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stackName_);
          }
          if (growDown_ != false) {
            output.writeBool(5, growDown_);
          }
          if (yaxisPosition_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition.YAXIS_POSITION_UNSPECIFIED.getNumber()) {
            output.writeEnum(6, yaxisPosition_);
          }
          if (lineWidth_ != 0L) {
            output.writeInt64(7, lineWidth_);
          }
          if (lineStyle_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle.LINE_STYLE_UNSPECIFIED.getNumber()) {
            output.writeEnum(8, lineStyle_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(color_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, color_);
          }
          if (type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType.SERIES_VISUALIZATION_TYPE_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(3, type_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stackName_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stackName_);
          }
          if (growDown_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(5, growDown_);
          }
          if (yaxisPosition_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition.YAXIS_POSITION_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(6, yaxisPosition_);
          }
          if (lineWidth_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(7, lineWidth_);
          }
          if (lineStyle_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle.LINE_STYLE_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(8, lineStyle_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)) {
            return super.equals(obj);
          }
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings) obj;

          if (!getName()
              .equals(other.getName())) return false;
          if (!getColor()
              .equals(other.getColor())) return false;
          if (type_ != other.type_) return false;
          if (!getStackName()
              .equals(other.getStackName())) return false;
          if (getGrowDown()
              != other.getGrowDown()) return false;
          if (yaxisPosition_ != other.yaxisPosition_) return false;
          if (getLineWidth()
              != other.getLineWidth()) return false;
          if (lineStyle_ != other.lineStyle_) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
          hash = (37 * hash) + COLOR_FIELD_NUMBER;
          hash = (53 * hash) + getColor().hashCode();
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
          hash = (37 * hash) + STACK_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getStackName().hashCode();
          hash = (37 * hash) + GROW_DOWN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getGrowDown());
          hash = (37 * hash) + YAXIS_POSITION_FIELD_NUMBER;
          hash = (53 * hash) + yaxisPosition_;
          hash = (37 * hash) + LINE_WIDTH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLineWidth());
          hash = (37 * hash) + LINE_STYLE_FIELD_NUMBER;
          hash = (53 * hash) + lineStyle_;
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder.class);
          }

          // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            name_ = "";

            color_ = "";

            type_ = 0;

            stackName_ = "";

            growDown_ = false;

            yaxisPosition_ = 0;

            lineWidth_ = 0L;

            lineStyle_ = 0;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_descriptor;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings getDefaultInstanceForType() {
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.getDefaultInstance();
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings build() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings buildPartial() {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings(this);
            result.name_ = name_;
            result.color_ = color_;
            result.type_ = type_;
            result.stackName_ = stackName_;
            result.growDown_ = growDown_;
            result.yaxisPosition_ = yaxisPosition_;
            result.lineWidth_ = lineWidth_;
            result.lineStyle_ = lineStyle_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings) {
              return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings other) {
            if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.getDefaultInstance()) return this;
            if (!other.getName().isEmpty()) {
              name_ = other.name_;
              onChanged();
            }
            if (!other.getColor().isEmpty()) {
              color_ = other.color_;
              onChanged();
            }
            if (other.type_ != 0) {
              setTypeValue(other.getTypeValue());
            }
            if (!other.getStackName().isEmpty()) {
              stackName_ = other.stackName_;
              onChanged();
            }
            if (other.getGrowDown() != false) {
              setGrowDown(other.getGrowDown());
            }
            if (other.yaxisPosition_ != 0) {
              setYaxisPositionValue(other.getYaxisPositionValue());
            }
            if (other.getLineWidth() != 0L) {
              setLineWidth(other.getLineWidth());
            }
            if (other.lineStyle_ != 0) {
              setLineStyleValue(other.getLineStyleValue());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Series name or empty.
           * </pre>
           *
           * <code>string name = 1;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Series name or empty.
           * </pre>
           *
           * <code>string name = 1;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Series name or empty.
           * </pre>
           *
           * <code>string name = 1;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Series name or empty.
           * </pre>
           *
           * <code>string name = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Series name or empty.
           * </pre>
           *
           * <code>string name = 1;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            name_ = value;
            onChanged();
            return this;
          }

          private java.lang.Object color_ = "";
          /**
           * <pre>
           * Series color or empty.
           * </pre>
           *
           * <code>string color = 2;</code>
           * @return The color.
           */
          public java.lang.String getColor() {
            java.lang.Object ref = color_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              color_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Series color or empty.
           * </pre>
           *
           * <code>string color = 2;</code>
           * @return The bytes for color.
           */
          public com.google.protobuf.ByteString
              getColorBytes() {
            java.lang.Object ref = color_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              color_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Series color or empty.
           * </pre>
           *
           * <code>string color = 2;</code>
           * @param value The color to set.
           * @return This builder for chaining.
           */
          public Builder setColor(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            color_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Series color or empty.
           * </pre>
           *
           * <code>string color = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearColor() {
            
            color_ = getDefaultInstance().getColor();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Series color or empty.
           * </pre>
           *
           * <code>string color = 2;</code>
           * @param value The bytes for color to set.
           * @return This builder for chaining.
           */
          public Builder setColorBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            color_ = value;
            onChanged();
            return this;
          }

          private int type_ = 0;
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
           * @return The enum numeric value on the wire for type.
           */
          @java.lang.Override public int getTypeValue() {
            return type_;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
           * @param value The enum numeric value on the wire for type to set.
           * @return This builder for chaining.
           */
          public Builder setTypeValue(int value) {
            
            type_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
           * @return The type.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType getType() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType.valueOf(type_);
            return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
           * @param value The type to set.
           * @return This builder for chaining.
           */
          public Builder setType(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            type_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Type.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesVisualizationType type = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearType() {
            
            type_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object stackName_ = "";
          /**
           * <pre>
           * Stack name or empty.
           * </pre>
           *
           * <code>string stack_name = 4;</code>
           * @return The stackName.
           */
          public java.lang.String getStackName() {
            java.lang.Object ref = stackName_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              stackName_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Stack name or empty.
           * </pre>
           *
           * <code>string stack_name = 4;</code>
           * @return The bytes for stackName.
           */
          public com.google.protobuf.ByteString
              getStackNameBytes() {
            java.lang.Object ref = stackName_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              stackName_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Stack name or empty.
           * </pre>
           *
           * <code>string stack_name = 4;</code>
           * @param value The stackName to set.
           * @return This builder for chaining.
           */
          public Builder setStackName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            stackName_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Stack name or empty.
           * </pre>
           *
           * <code>string stack_name = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearStackName() {
            
            stackName_ = getDefaultInstance().getStackName();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Stack name or empty.
           * </pre>
           *
           * <code>string stack_name = 4;</code>
           * @param value The bytes for stackName to set.
           * @return This builder for chaining.
           */
          public Builder setStackNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            stackName_ = value;
            onChanged();
            return this;
          }

          private boolean growDown_ ;
          /**
           * <pre>
           * Stack grow down.
           * </pre>
           *
           * <code>bool grow_down = 5;</code>
           * @return The growDown.
           */
          @java.lang.Override
          public boolean getGrowDown() {
            return growDown_;
          }
          /**
           * <pre>
           * Stack grow down.
           * </pre>
           *
           * <code>bool grow_down = 5;</code>
           * @param value The growDown to set.
           * @return This builder for chaining.
           */
          public Builder setGrowDown(boolean value) {
            
            growDown_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Stack grow down.
           * </pre>
           *
           * <code>bool grow_down = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearGrowDown() {
            
            growDown_ = false;
            onChanged();
            return this;
          }

          private int yaxisPosition_ = 0;
          /**
           * <pre>
           * Yaxis position.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
           * @return The enum numeric value on the wire for yaxisPosition.
           */
          @java.lang.Override public int getYaxisPositionValue() {
            return yaxisPosition_;
          }
          /**
           * <pre>
           * Yaxis position.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
           * @param value The enum numeric value on the wire for yaxisPosition to set.
           * @return This builder for chaining.
           */
          public Builder setYaxisPositionValue(int value) {
            
            yaxisPosition_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Yaxis position.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
           * @return The yaxisPosition.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition getYaxisPosition() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition.valueOf(yaxisPosition_);
            return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * Yaxis position.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
           * @param value The yaxisPosition to set.
           * @return This builder for chaining.
           */
          public Builder setYaxisPosition(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.YaxisPosition value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            yaxisPosition_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Yaxis position.
           * </pre>
           *
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.YaxisPosition yaxis_position = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearYaxisPosition() {
            
            yaxisPosition_ = 0;
            onChanged();
            return this;
          }

          private long lineWidth_ ;
          /**
           * <pre>
           * Line Border Width
           * </pre>
           *
           * <code>int64 line_width = 7;</code>
           * @return The lineWidth.
           */
          @java.lang.Override
          public long getLineWidth() {
            return lineWidth_;
          }
          /**
           * <pre>
           * Line Border Width
           * </pre>
           *
           * <code>int64 line_width = 7;</code>
           * @param value The lineWidth to set.
           * @return This builder for chaining.
           */
          public Builder setLineWidth(long value) {
            
            lineWidth_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Line Border Width
           * </pre>
           *
           * <code>int64 line_width = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearLineWidth() {
            
            lineWidth_ = 0L;
            onChanged();
            return this;
          }

          private int lineStyle_ = 0;
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
           * @return The enum numeric value on the wire for lineStyle.
           */
          @java.lang.Override public int getLineStyleValue() {
            return lineStyle_;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
           * @param value The enum numeric value on the wire for lineStyle to set.
           * @return This builder for chaining.
           */
          public Builder setLineStyleValue(int value) {
            
            lineStyle_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
           * @return The lineStyle.
           */
          @java.lang.Override
          public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle getLineStyle() {
            @SuppressWarnings("deprecation")
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle.valueOf(lineStyle_);
            return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle.UNRECOGNIZED : result;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
           * @param value The lineStyle to set.
           * @return This builder for chaining.
           */
          public Builder setLineStyle(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            lineStyle_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.LineStyle line_style = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearLineStyle() {
            
            lineStyle_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)
        }

        // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings)
        private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings();
        }

        public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SeriesOverrideSettings>
            PARSER = new com.google.protobuf.AbstractParser<SeriesOverrideSettings>() {
          @java.lang.Override
          public SeriesOverrideSettings parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new SeriesOverrideSettings(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<SeriesOverrideSettings> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SeriesOverrideSettings> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int typeCase_ = 0;
      private java.lang.Object type_;
      public enum TypeCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        NAME(1),
        TARGET_INDEX(2),
        TYPE_NOT_SET(0);
        private final int value;
        private TypeCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static TypeCase forNumber(int value) {
          switch (value) {
            case 1: return NAME;
            case 2: return TARGET_INDEX;
            case 0: return TYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public TypeCase
      getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      /**
       * <pre>
       * Series name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return typeCase_ == 1;
      }
      /**
       * <pre>
       * Series name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = "";
        if (typeCase_ == 1) {
          ref = type_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (typeCase_ == 1) {
            type_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Series name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = "";
        if (typeCase_ == 1) {
          ref = type_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (typeCase_ == 1) {
            type_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TARGET_INDEX_FIELD_NUMBER = 2;
      /**
       * <pre>
       * Target index.
       * </pre>
       *
       * <code>string target_index = 2;</code>
       * @return Whether the targetIndex field is set.
       */
      public boolean hasTargetIndex() {
        return typeCase_ == 2;
      }
      /**
       * <pre>
       * Target index.
       * </pre>
       *
       * <code>string target_index = 2;</code>
       * @return The targetIndex.
       */
      public java.lang.String getTargetIndex() {
        java.lang.Object ref = "";
        if (typeCase_ == 2) {
          ref = type_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (typeCase_ == 2) {
            type_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Target index.
       * </pre>
       *
       * <code>string target_index = 2;</code>
       * @return The bytes for targetIndex.
       */
      public com.google.protobuf.ByteString
          getTargetIndexBytes() {
        java.lang.Object ref = "";
        if (typeCase_ == 2) {
          ref = type_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (typeCase_ == 2) {
            type_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SETTINGS_FIELD_NUMBER = 3;
      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings_;
      /**
       * <pre>
       * Required. Override settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
       * @return Whether the settings field is set.
       */
      @java.lang.Override
      public boolean hasSettings() {
        return settings_ != null;
      }
      /**
       * <pre>
       * Required. Override settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
       * @return The settings.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings getSettings() {
        return settings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.getDefaultInstance() : settings_;
      }
      /**
       * <pre>
       * Required. Override settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder getSettingsOrBuilder() {
        return getSettings();
      }

      public static final int OVERRIDE_NAME_FIELD_NUMBER = 4;
      private volatile java.lang.Object overrideName_;
      /**
       * <code>string override_name = 4;</code>
       * @return The overrideName.
       */
      @java.lang.Override
      public java.lang.String getOverrideName() {
        java.lang.Object ref = overrideName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          overrideName_ = s;
          return s;
        }
      }
      /**
       * <code>string override_name = 4;</code>
       * @return The bytes for overrideName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOverrideNameBytes() {
        java.lang.Object ref = overrideName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          overrideName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MATCHER_FIELD_NUMBER = 5;
      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher matcher_;
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
       * @return Whether the matcher field is set.
       */
      @java.lang.Override
      public boolean hasMatcher() {
        return matcher_ != null;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
       * @return The matcher.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher getMatcher() {
        return matcher_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.getDefaultInstance() : matcher_;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder getMatcherOrBuilder() {
        return getMatcher();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (typeCase_ == 1) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
        }
        if (typeCase_ == 2) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
        }
        if (settings_ != null) {
          output.writeMessage(3, getSettings());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(overrideName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, overrideName_);
        }
        if (matcher_ != null) {
          output.writeMessage(5, getMatcher());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (typeCase_ == 1) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
        }
        if (typeCase_ == 2) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
        }
        if (settings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getSettings());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(overrideName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, overrideName_);
        }
        if (matcher_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getMatcher());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides) obj;

        if (hasSettings() != other.hasSettings()) return false;
        if (hasSettings()) {
          if (!getSettings()
              .equals(other.getSettings())) return false;
        }
        if (!getOverrideName()
            .equals(other.getOverrideName())) return false;
        if (hasMatcher() != other.hasMatcher()) return false;
        if (hasMatcher()) {
          if (!getMatcher()
              .equals(other.getMatcher())) return false;
        }
        if (!getTypeCase().equals(other.getTypeCase())) return false;
        switch (typeCase_) {
          case 1:
            if (!getName()
                .equals(other.getName())) return false;
            break;
          case 2:
            if (!getTargetIndex()
                .equals(other.getTargetIndex())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSettings()) {
          hash = (37 * hash) + SETTINGS_FIELD_NUMBER;
          hash = (53 * hash) + getSettings().hashCode();
        }
        hash = (37 * hash) + OVERRIDE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getOverrideName().hashCode();
        if (hasMatcher()) {
          hash = (37 * hash) + MATCHER_FIELD_NUMBER;
          hash = (53 * hash) + getMatcher().hashCode();
        }
        switch (typeCase_) {
          case 1:
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            break;
          case 2:
            hash = (37 * hash) + TARGET_INDEX_FIELD_NUMBER;
            hash = (53 * hash) + getTargetIndex().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Series override settings.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (settingsBuilder_ == null) {
            settings_ = null;
          } else {
            settings_ = null;
            settingsBuilder_ = null;
          }
          overrideName_ = "";

          if (matcherBuilder_ == null) {
            matcher_ = null;
          } else {
            matcher_ = null;
            matcherBuilder_ = null;
          }
          typeCase_ = 0;
          type_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides(this);
          if (typeCase_ == 1) {
            result.type_ = type_;
          }
          if (typeCase_ == 2) {
            result.type_ = type_;
          }
          if (settingsBuilder_ == null) {
            result.settings_ = settings_;
          } else {
            result.settings_ = settingsBuilder_.build();
          }
          result.overrideName_ = overrideName_;
          if (matcherBuilder_ == null) {
            result.matcher_ = matcher_;
          } else {
            result.matcher_ = matcherBuilder_.build();
          }
          result.typeCase_ = typeCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.getDefaultInstance()) return this;
          if (other.hasSettings()) {
            mergeSettings(other.getSettings());
          }
          if (!other.getOverrideName().isEmpty()) {
            overrideName_ = other.overrideName_;
            onChanged();
          }
          if (other.hasMatcher()) {
            mergeMatcher(other.getMatcher());
          }
          switch (other.getTypeCase()) {
            case NAME: {
              typeCase_ = 1;
              type_ = other.type_;
              onChanged();
              break;
            }
            case TARGET_INDEX: {
              typeCase_ = 2;
              type_ = other.type_;
              onChanged();
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int typeCase_ = 0;
        private java.lang.Object type_;
        public TypeCase
            getTypeCase() {
          return TypeCase.forNumber(
              typeCase_);
        }

        public Builder clearType() {
          typeCase_ = 0;
          type_ = null;
          onChanged();
          return this;
        }


        /**
         * <pre>
         * Series name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return typeCase_ == 1;
        }
        /**
         * <pre>
         * Series name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = "";
          if (typeCase_ == 1) {
            ref = type_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (typeCase_ == 1) {
              type_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Series name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = "";
          if (typeCase_ == 1) {
            ref = type_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (typeCase_ == 1) {
              type_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Series name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 1;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Series name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          if (typeCase_ == 1) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Series name.
         * </pre>
         *
         * <code>string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          typeCase_ = 1;
          type_ = value;
          onChanged();
          return this;
        }

        /**
         * <pre>
         * Target index.
         * </pre>
         *
         * <code>string target_index = 2;</code>
         * @return Whether the targetIndex field is set.
         */
        @java.lang.Override
        public boolean hasTargetIndex() {
          return typeCase_ == 2;
        }
        /**
         * <pre>
         * Target index.
         * </pre>
         *
         * <code>string target_index = 2;</code>
         * @return The targetIndex.
         */
        @java.lang.Override
        public java.lang.String getTargetIndex() {
          java.lang.Object ref = "";
          if (typeCase_ == 2) {
            ref = type_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (typeCase_ == 2) {
              type_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Target index.
         * </pre>
         *
         * <code>string target_index = 2;</code>
         * @return The bytes for targetIndex.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTargetIndexBytes() {
          java.lang.Object ref = "";
          if (typeCase_ == 2) {
            ref = type_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (typeCase_ == 2) {
              type_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Target index.
         * </pre>
         *
         * <code>string target_index = 2;</code>
         * @param value The targetIndex to set.
         * @return This builder for chaining.
         */
        public Builder setTargetIndex(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  typeCase_ = 2;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Target index.
         * </pre>
         *
         * <code>string target_index = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTargetIndex() {
          if (typeCase_ == 2) {
            typeCase_ = 0;
            type_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Target index.
         * </pre>
         *
         * <code>string target_index = 2;</code>
         * @param value The bytes for targetIndex to set.
         * @return This builder for chaining.
         */
        public Builder setTargetIndexBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          typeCase_ = 2;
          type_ = value;
          onChanged();
          return this;
        }

        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder> settingsBuilder_;
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         * @return Whether the settings field is set.
         */
        public boolean hasSettings() {
          return settingsBuilder_ != null || settings_ != null;
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         * @return The settings.
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings getSettings() {
          if (settingsBuilder_ == null) {
            return settings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.getDefaultInstance() : settings_;
          } else {
            return settingsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        public Builder setSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings value) {
          if (settingsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            settings_ = value;
            onChanged();
          } else {
            settingsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        public Builder setSettings(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder builderForValue) {
          if (settingsBuilder_ == null) {
            settings_ = builderForValue.build();
            onChanged();
          } else {
            settingsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        public Builder mergeSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings value) {
          if (settingsBuilder_ == null) {
            if (settings_ != null) {
              settings_ =
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.newBuilder(settings_).mergeFrom(value).buildPartial();
            } else {
              settings_ = value;
            }
            onChanged();
          } else {
            settingsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        public Builder clearSettings() {
          if (settingsBuilder_ == null) {
            settings_ = null;
            onChanged();
          } else {
            settings_ = null;
            settingsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder getSettingsBuilder() {
          
          onChanged();
          return getSettingsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder getSettingsOrBuilder() {
          if (settingsBuilder_ != null) {
            return settingsBuilder_.getMessageOrBuilder();
          } else {
            return settings_ == null ?
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.getDefaultInstance() : settings_;
          }
        }
        /**
         * <pre>
         * Required. Override settings.
         * </pre>
         *
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings settings = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder> 
            getSettingsFieldBuilder() {
          if (settingsBuilder_ == null) {
            settingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.SeriesOverrideSettingsOrBuilder>(
                    getSettings(),
                    getParentForChildren(),
                    isClean());
            settings_ = null;
          }
          return settingsBuilder_;
        }

        private java.lang.Object overrideName_ = "";
        /**
         * <code>string override_name = 4;</code>
         * @return The overrideName.
         */
        public java.lang.String getOverrideName() {
          java.lang.Object ref = overrideName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            overrideName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string override_name = 4;</code>
         * @return The bytes for overrideName.
         */
        public com.google.protobuf.ByteString
            getOverrideNameBytes() {
          java.lang.Object ref = overrideName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            overrideName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string override_name = 4;</code>
         * @param value The overrideName to set.
         * @return This builder for chaining.
         */
        public Builder setOverrideName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          overrideName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string override_name = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearOverrideName() {
          
          overrideName_ = getDefaultInstance().getOverrideName();
          onChanged();
          return this;
        }
        /**
         * <code>string override_name = 4;</code>
         * @param value The bytes for overrideName to set.
         * @return This builder for chaining.
         */
        public Builder setOverrideNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          overrideName_ = value;
          onChanged();
          return this;
        }

        private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher matcher_;
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder> matcherBuilder_;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         * @return Whether the matcher field is set.
         */
        public boolean hasMatcher() {
          return matcherBuilder_ != null || matcher_ != null;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         * @return The matcher.
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher getMatcher() {
          if (matcherBuilder_ == null) {
            return matcher_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.getDefaultInstance() : matcher_;
          } else {
            return matcherBuilder_.getMessage();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        public Builder setMatcher(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher value) {
          if (matcherBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            matcher_ = value;
            onChanged();
          } else {
            matcherBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        public Builder setMatcher(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder builderForValue) {
          if (matcherBuilder_ == null) {
            matcher_ = builderForValue.build();
            onChanged();
          } else {
            matcherBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        public Builder mergeMatcher(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher value) {
          if (matcherBuilder_ == null) {
            if (matcher_ != null) {
              matcher_ =
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.newBuilder(matcher_).mergeFrom(value).buildPartial();
            } else {
              matcher_ = value;
            }
            onChanged();
          } else {
            matcherBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        public Builder clearMatcher() {
          if (matcherBuilder_ == null) {
            matcher_ = null;
            onChanged();
          } else {
            matcher_ = null;
            matcherBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder getMatcherBuilder() {
          
          onChanged();
          return getMatcherFieldBuilder().getBuilder();
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder getMatcherOrBuilder() {
          if (matcherBuilder_ != null) {
            return matcherBuilder_.getMessageOrBuilder();
          } else {
            return matcher_ == null ?
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.getDefaultInstance() : matcher_;
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher matcher = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder> 
            getMatcherFieldBuilder() {
          if (matcherBuilder_ == null) {
            matcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder>(
                    getMatcher(),
                    getParentForChildren(),
                    isClean());
            matcher_ = null;
          }
          return matcherBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SeriesOverrides>
          PARSER = new com.google.protobuf.AbstractParser<SeriesOverrides>() {
        @java.lang.Override
        public SeriesOverrides parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SeriesOverrides(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SeriesOverrides> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SeriesOverrides> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OverrideMatcherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
       * @return Whether the query field is set.
       */
      boolean hasQuery();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
       * @return The query.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher getQuery();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder getQueryOrBuilder();

      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
       * @return Whether the line field is set.
       */
      boolean hasLine();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
       * @return The line.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher getLine();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder getLineOrBuilder();

      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
       * @return Whether the regexp field is set.
       */
      boolean hasRegexp();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
       * @return The regexp.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher getRegexp();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder getRegexpOrBuilder();

      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
       * @return Whether the values field is set.
       */
      boolean hasValues();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
       * @return The values.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher getValues();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder getValuesOrBuilder();

      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.TypeCase getTypeCase();
    }
    /**
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher}
     */
    public static final class OverrideMatcher extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher)
        OverrideMatcherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use OverrideMatcher.newBuilder() to construct.
      private OverrideMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private OverrideMatcher() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new OverrideMatcher();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private OverrideMatcher(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder subBuilder = null;
                if (typeCase_ == 1) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_).toBuilder();
                }
                type_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 1;
                break;
              }
              case 18: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder subBuilder = null;
                if (typeCase_ == 2) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_).toBuilder();
                }
                type_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 2;
                break;
              }
              case 26: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder subBuilder = null;
                if (typeCase_ == 3) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_).toBuilder();
                }
                type_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 3;
                break;
              }
              case 34: {
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder subBuilder = null;
                if (typeCase_ == 4) {
                  subBuilder = ((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_).toBuilder();
                }
                type_ =
                    input.readMessage(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 4;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder.class);
      }

      private int typeCase_ = 0;
      private java.lang.Object type_;
      public enum TypeCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        QUERY(1),
        LINE(2),
        REGEXP(3),
        VALUES(4),
        TYPE_NOT_SET(0);
        private final int value;
        private TypeCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static TypeCase forNumber(int value) {
          switch (value) {
            case 1: return QUERY;
            case 2: return LINE;
            case 3: return REGEXP;
            case 4: return VALUES;
            case 0: return TYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public TypeCase
      getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public static final int QUERY_FIELD_NUMBER = 1;
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
       * @return Whether the query field is set.
       */
      @java.lang.Override
      public boolean hasQuery() {
        return typeCase_ == 1;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
       * @return The query.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher getQuery() {
        if (typeCase_ == 1) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder getQueryOrBuilder() {
        if (typeCase_ == 1) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
      }

      public static final int LINE_FIELD_NUMBER = 2;
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
       * @return Whether the line field is set.
       */
      @java.lang.Override
      public boolean hasLine() {
        return typeCase_ == 2;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
       * @return The line.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher getLine() {
        if (typeCase_ == 2) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder getLineOrBuilder() {
        if (typeCase_ == 2) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
      }

      public static final int REGEXP_FIELD_NUMBER = 3;
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
       * @return Whether the regexp field is set.
       */
      @java.lang.Override
      public boolean hasRegexp() {
        return typeCase_ == 3;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
       * @return The regexp.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher getRegexp() {
        if (typeCase_ == 3) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder getRegexpOrBuilder() {
        if (typeCase_ == 3) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
      }

      public static final int VALUES_FIELD_NUMBER = 4;
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
       * @return Whether the values field is set.
       */
      @java.lang.Override
      public boolean hasValues() {
        return typeCase_ == 4;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
       * @return The values.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher getValues() {
        if (typeCase_ == 4) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder getValuesOrBuilder() {
        if (typeCase_ == 4) {
           return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_;
        }
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (typeCase_ == 1) {
          output.writeMessage(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_);
        }
        if (typeCase_ == 2) {
          output.writeMessage(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_);
        }
        if (typeCase_ == 3) {
          output.writeMessage(3, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_);
        }
        if (typeCase_ == 4) {
          output.writeMessage(4, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (typeCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_);
        }
        if (typeCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_);
        }
        if (typeCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_);
        }
        if (typeCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher) obj;

        if (!getTypeCase().equals(other.getTypeCase())) return false;
        switch (typeCase_) {
          case 1:
            if (!getQuery()
                .equals(other.getQuery())) return false;
            break;
          case 2:
            if (!getLine()
                .equals(other.getLine())) return false;
            break;
          case 3:
            if (!getRegexp()
                .equals(other.getRegexp())) return false;
            break;
          case 4:
            if (!getValues()
                .equals(other.getValues())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (typeCase_) {
          case 1:
            hash = (37 * hash) + QUERY_FIELD_NUMBER;
            hash = (53 * hash) + getQuery().hashCode();
            break;
          case 2:
            hash = (37 * hash) + LINE_FIELD_NUMBER;
            hash = (53 * hash) + getLine().hashCode();
            break;
          case 3:
            hash = (37 * hash) + REGEXP_FIELD_NUMBER;
            hash = (53 * hash) + getRegexp().hashCode();
            break;
          case 4:
            hash = (37 * hash) + VALUES_FIELD_NUMBER;
            hash = (53 * hash) + getValues().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          typeCase_ = 0;
          type_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher(this);
          if (typeCase_ == 1) {
            if (queryBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = queryBuilder_.build();
            }
          }
          if (typeCase_ == 2) {
            if (lineBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = lineBuilder_.build();
            }
          }
          if (typeCase_ == 3) {
            if (regexpBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = regexpBuilder_.build();
            }
          }
          if (typeCase_ == 4) {
            if (valuesBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = valuesBuilder_.build();
            }
          }
          result.typeCase_ = typeCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher.getDefaultInstance()) return this;
          switch (other.getTypeCase()) {
            case QUERY: {
              mergeQuery(other.getQuery());
              break;
            }
            case LINE: {
              mergeLine(other.getLine());
              break;
            }
            case REGEXP: {
              mergeRegexp(other.getRegexp());
              break;
            }
            case VALUES: {
              mergeValues(other.getValues());
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int typeCase_ = 0;
        private java.lang.Object type_;
        public TypeCase
            getTypeCase() {
          return TypeCase.forNumber(
              typeCase_);
        }

        public Builder clearType() {
          typeCase_ = 0;
          type_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder> queryBuilder_;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         * @return Whether the query field is set.
         */
        @java.lang.Override
        public boolean hasQuery() {
          return typeCase_ == 1;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         * @return The query.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher getQuery() {
          if (queryBuilder_ == null) {
            if (typeCase_ == 1) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
          } else {
            if (typeCase_ == 1) {
              return queryBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        public Builder setQuery(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher value) {
          if (queryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            queryBuilder_.setMessage(value);
          }
          typeCase_ = 1;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        public Builder setQuery(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder builderForValue) {
          if (queryBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            queryBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 1;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        public Builder mergeQuery(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher value) {
          if (queryBuilder_ == null) {
            if (typeCase_ == 1 &&
                type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance()) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 1) {
              queryBuilder_.mergeFrom(value);
            }
            queryBuilder_.setMessage(value);
          }
          typeCase_ = 1;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        public Builder clearQuery() {
          if (queryBuilder_ == null) {
            if (typeCase_ == 1) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 1) {
              typeCase_ = 0;
              type_ = null;
            }
            queryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder getQueryBuilder() {
          return getQueryFieldBuilder().getBuilder();
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder getQueryOrBuilder() {
          if ((typeCase_ == 1) && (queryBuilder_ != null)) {
            return queryBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 1) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher query = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder> 
            getQueryFieldBuilder() {
          if (queryBuilder_ == null) {
            if (!(typeCase_ == 1)) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
            }
            queryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 1;
          onChanged();;
          return queryBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder> lineBuilder_;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         * @return Whether the line field is set.
         */
        @java.lang.Override
        public boolean hasLine() {
          return typeCase_ == 2;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         * @return The line.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher getLine() {
          if (lineBuilder_ == null) {
            if (typeCase_ == 2) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
          } else {
            if (typeCase_ == 2) {
              return lineBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        public Builder setLine(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher value) {
          if (lineBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            lineBuilder_.setMessage(value);
          }
          typeCase_ = 2;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        public Builder setLine(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder builderForValue) {
          if (lineBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            lineBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 2;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        public Builder mergeLine(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher value) {
          if (lineBuilder_ == null) {
            if (typeCase_ == 2 &&
                type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance()) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 2) {
              lineBuilder_.mergeFrom(value);
            }
            lineBuilder_.setMessage(value);
          }
          typeCase_ = 2;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        public Builder clearLine() {
          if (lineBuilder_ == null) {
            if (typeCase_ == 2) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 2) {
              typeCase_ = 0;
              type_ = null;
            }
            lineBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder getLineBuilder() {
          return getLineFieldBuilder().getBuilder();
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder getLineOrBuilder() {
          if ((typeCase_ == 2) && (lineBuilder_ != null)) {
            return lineBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 2) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher line = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder> 
            getLineFieldBuilder() {
          if (lineBuilder_ == null) {
            if (!(typeCase_ == 2)) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
            }
            lineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 2;
          onChanged();;
          return lineBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder> regexpBuilder_;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         * @return Whether the regexp field is set.
         */
        @java.lang.Override
        public boolean hasRegexp() {
          return typeCase_ == 3;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         * @return The regexp.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher getRegexp() {
          if (regexpBuilder_ == null) {
            if (typeCase_ == 3) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
          } else {
            if (typeCase_ == 3) {
              return regexpBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        public Builder setRegexp(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher value) {
          if (regexpBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            regexpBuilder_.setMessage(value);
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        public Builder setRegexp(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder builderForValue) {
          if (regexpBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            regexpBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        public Builder mergeRegexp(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher value) {
          if (regexpBuilder_ == null) {
            if (typeCase_ == 3 &&
                type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance()) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 3) {
              regexpBuilder_.mergeFrom(value);
            }
            regexpBuilder_.setMessage(value);
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        public Builder clearRegexp() {
          if (regexpBuilder_ == null) {
            if (typeCase_ == 3) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 3) {
              typeCase_ = 0;
              type_ = null;
            }
            regexpBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder getRegexpBuilder() {
          return getRegexpFieldBuilder().getBuilder();
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder getRegexpOrBuilder() {
          if ((typeCase_ == 3) && (regexpBuilder_ != null)) {
            return regexpBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 3) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher regexp = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder> 
            getRegexpFieldBuilder() {
          if (regexpBuilder_ == null) {
            if (!(typeCase_ == 3)) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
            }
            regexpBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 3;
          onChanged();;
          return regexpBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder> valuesBuilder_;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         * @return Whether the values field is set.
         */
        @java.lang.Override
        public boolean hasValues() {
          return typeCase_ == 4;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         * @return The values.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher getValues() {
          if (valuesBuilder_ == null) {
            if (typeCase_ == 4) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
          } else {
            if (typeCase_ == 4) {
              return valuesBuilder_.getMessage();
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        public Builder setValues(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher value) {
          if (valuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            valuesBuilder_.setMessage(value);
          }
          typeCase_ = 4;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        public Builder setValues(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder builderForValue) {
          if (valuesBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            valuesBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 4;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        public Builder mergeValues(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher value) {
          if (valuesBuilder_ == null) {
            if (typeCase_ == 4 &&
                type_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance()) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.newBuilder((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 4) {
              valuesBuilder_.mergeFrom(value);
            }
            valuesBuilder_.setMessage(value);
          }
          typeCase_ = 4;
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        public Builder clearValues() {
          if (valuesBuilder_ == null) {
            if (typeCase_ == 4) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 4) {
              typeCase_ = 0;
              type_ = null;
            }
            valuesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder getValuesBuilder() {
          return getValuesFieldBuilder().getBuilder();
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder getValuesOrBuilder() {
          if ((typeCase_ == 4) && (valuesBuilder_ != null)) {
            return valuesBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 4) {
              return (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_;
            }
            return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
          }
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher values = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder> 
            getValuesFieldBuilder() {
          if (valuesBuilder_ == null) {
            if (!(typeCase_ == 4)) {
              type_ = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
            }
            valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder>(
                    (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 4;
          onChanged();;
          return valuesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.OverrideMatcher)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<OverrideMatcher>
          PARSER = new com.google.protobuf.AbstractParser<OverrideMatcher>() {
        @java.lang.Override
        public OverrideMatcher parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new OverrideMatcher(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<OverrideMatcher> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OverrideMatcher> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.OverrideMatcher getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface QueryMatcherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated string names = 1;</code>
       * @return A list containing the names.
       */
      java.util.List<java.lang.String>
          getNamesList();
      /**
       * <code>repeated string names = 1;</code>
       * @return The count of names.
       */
      int getNamesCount();
      /**
       * <code>repeated string names = 1;</code>
       * @param index The index of the element to return.
       * @return The names at the given index.
       */
      java.lang.String getNames(int index);
      /**
       * <code>repeated string names = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the names at the given index.
       */
      com.google.protobuf.ByteString
          getNamesBytes(int index);
    }
    /**
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher}
     */
    public static final class QueryMatcher extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher)
        QueryMatcherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use QueryMatcher.newBuilder() to construct.
      private QueryMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QueryMatcher() {
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new QueryMatcher();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private QueryMatcher(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  names_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                names_.add(s);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            names_ = names_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder.class);
      }

      public static final int NAMES_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList names_;
      /**
       * <code>repeated string names = 1;</code>
       * @return A list containing the names.
       */
      public com.google.protobuf.ProtocolStringList
          getNamesList() {
        return names_;
      }
      /**
       * <code>repeated string names = 1;</code>
       * @return The count of names.
       */
      public int getNamesCount() {
        return names_.size();
      }
      /**
       * <code>repeated string names = 1;</code>
       * @param index The index of the element to return.
       * @return The names at the given index.
       */
      public java.lang.String getNames(int index) {
        return names_.get(index);
      }
      /**
       * <code>repeated string names = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the names at the given index.
       */
      public com.google.protobuf.ByteString
          getNamesBytes(int index) {
        return names_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < names_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, names_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < names_.size(); i++) {
            dataSize += computeStringSizeNoTag(names_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getNamesList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) obj;

        if (!getNamesList()
            .equals(other.getNamesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getNamesCount() > 0) {
          hash = (37 * hash) + NAMES_FIELD_NUMBER;
          hash = (53 * hash) + getNamesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            names_ = names_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.names_ = names_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher.getDefaultInstance()) return this;
          if (!other.names_.isEmpty()) {
            if (names_.isEmpty()) {
              names_ = other.names_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNamesIsMutable();
              names_.addAll(other.names_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureNamesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            names_ = new com.google.protobuf.LazyStringArrayList(names_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated string names = 1;</code>
         * @return A list containing the names.
         */
        public com.google.protobuf.ProtocolStringList
            getNamesList() {
          return names_.getUnmodifiableView();
        }
        /**
         * <code>repeated string names = 1;</code>
         * @return The count of names.
         */
        public int getNamesCount() {
          return names_.size();
        }
        /**
         * <code>repeated string names = 1;</code>
         * @param index The index of the element to return.
         * @return The names at the given index.
         */
        public java.lang.String getNames(int index) {
          return names_.get(index);
        }
        /**
         * <code>repeated string names = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the names at the given index.
         */
        public com.google.protobuf.ByteString
            getNamesBytes(int index) {
          return names_.getByteString(index);
        }
        /**
         * <code>repeated string names = 1;</code>
         * @param index The index to set the value at.
         * @param value The names to set.
         * @return This builder for chaining.
         */
        public Builder setNames(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
          names_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string names = 1;</code>
         * @param value The names to add.
         * @return This builder for chaining.
         */
        public Builder addNames(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
          names_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string names = 1;</code>
         * @param values The names to add.
         * @return This builder for chaining.
         */
        public Builder addAllNames(
            java.lang.Iterable<java.lang.String> values) {
          ensureNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, names_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string names = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearNames() {
          names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string names = 1;</code>
         * @param value The bytes of the names to add.
         * @return This builder for chaining.
         */
        public Builder addNamesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureNamesIsMutable();
          names_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.QueryMatcher)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<QueryMatcher>
          PARSER = new com.google.protobuf.AbstractParser<QueryMatcher>() {
        @java.lang.Override
        public QueryMatcher parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new QueryMatcher(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<QueryMatcher> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryMatcher> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.QueryMatcher getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LineMatcherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated string line_ids = 1;</code>
       * @return A list containing the lineIds.
       */
      java.util.List<java.lang.String>
          getLineIdsList();
      /**
       * <code>repeated string line_ids = 1;</code>
       * @return The count of lineIds.
       */
      int getLineIdsCount();
      /**
       * <code>repeated string line_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The lineIds at the given index.
       */
      java.lang.String getLineIds(int index);
      /**
       * <code>repeated string line_ids = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the lineIds at the given index.
       */
      com.google.protobuf.ByteString
          getLineIdsBytes(int index);
    }
    /**
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher}
     */
    public static final class LineMatcher extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher)
        LineMatcherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LineMatcher.newBuilder() to construct.
      private LineMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LineMatcher() {
        lineIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LineMatcher();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LineMatcher(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  lineIds_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                lineIds_.add(s);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            lineIds_ = lineIds_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder.class);
      }

      public static final int LINE_IDS_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList lineIds_;
      /**
       * <code>repeated string line_ids = 1;</code>
       * @return A list containing the lineIds.
       */
      public com.google.protobuf.ProtocolStringList
          getLineIdsList() {
        return lineIds_;
      }
      /**
       * <code>repeated string line_ids = 1;</code>
       * @return The count of lineIds.
       */
      public int getLineIdsCount() {
        return lineIds_.size();
      }
      /**
       * <code>repeated string line_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The lineIds at the given index.
       */
      public java.lang.String getLineIds(int index) {
        return lineIds_.get(index);
      }
      /**
       * <code>repeated string line_ids = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the lineIds at the given index.
       */
      public com.google.protobuf.ByteString
          getLineIdsBytes(int index) {
        return lineIds_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < lineIds_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, lineIds_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < lineIds_.size(); i++) {
            dataSize += computeStringSizeNoTag(lineIds_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getLineIdsList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) obj;

        if (!getLineIdsList()
            .equals(other.getLineIdsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getLineIdsCount() > 0) {
          hash = (37 * hash) + LINE_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getLineIdsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          lineIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            lineIds_ = lineIds_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.lineIds_ = lineIds_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher.getDefaultInstance()) return this;
          if (!other.lineIds_.isEmpty()) {
            if (lineIds_.isEmpty()) {
              lineIds_ = other.lineIds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLineIdsIsMutable();
              lineIds_.addAll(other.lineIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList lineIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureLineIdsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            lineIds_ = new com.google.protobuf.LazyStringArrayList(lineIds_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @return A list containing the lineIds.
         */
        public com.google.protobuf.ProtocolStringList
            getLineIdsList() {
          return lineIds_.getUnmodifiableView();
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @return The count of lineIds.
         */
        public int getLineIdsCount() {
          return lineIds_.size();
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @param index The index of the element to return.
         * @return The lineIds at the given index.
         */
        public java.lang.String getLineIds(int index) {
          return lineIds_.get(index);
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the lineIds at the given index.
         */
        public com.google.protobuf.ByteString
            getLineIdsBytes(int index) {
          return lineIds_.getByteString(index);
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @param index The index to set the value at.
         * @param value The lineIds to set.
         * @return This builder for chaining.
         */
        public Builder setLineIds(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLineIdsIsMutable();
          lineIds_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @param value The lineIds to add.
         * @return This builder for chaining.
         */
        public Builder addLineIds(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureLineIdsIsMutable();
          lineIds_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @param values The lineIds to add.
         * @return This builder for chaining.
         */
        public Builder addAllLineIds(
            java.lang.Iterable<java.lang.String> values) {
          ensureLineIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lineIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLineIds() {
          lineIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string line_ids = 1;</code>
         * @param value The bytes of the lineIds to add.
         * @return This builder for chaining.
         */
        public Builder addLineIdsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureLineIdsIsMutable();
          lineIds_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.LineMatcher)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LineMatcher>
          PARSER = new com.google.protobuf.AbstractParser<LineMatcher>() {
        @java.lang.Override
        public LineMatcher parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LineMatcher(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LineMatcher> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LineMatcher> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.LineMatcher getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RegExpMatcherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string reg_exp = 1;</code>
       * @return The regExp.
       */
      java.lang.String getRegExp();
      /**
       * <code>string reg_exp = 1;</code>
       * @return The bytes for regExp.
       */
      com.google.protobuf.ByteString
          getRegExpBytes();
    }
    /**
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher}
     */
    public static final class RegExpMatcher extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher)
        RegExpMatcherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RegExpMatcher.newBuilder() to construct.
      private RegExpMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RegExpMatcher() {
        regExp_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RegExpMatcher();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RegExpMatcher(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                regExp_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder.class);
      }

      public static final int REG_EXP_FIELD_NUMBER = 1;
      private volatile java.lang.Object regExp_;
      /**
       * <code>string reg_exp = 1;</code>
       * @return The regExp.
       */
      @java.lang.Override
      public java.lang.String getRegExp() {
        java.lang.Object ref = regExp_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          regExp_ = s;
          return s;
        }
      }
      /**
       * <code>string reg_exp = 1;</code>
       * @return The bytes for regExp.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRegExpBytes() {
        java.lang.Object ref = regExp_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          regExp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(regExp_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, regExp_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(regExp_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, regExp_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) obj;

        if (!getRegExp()
            .equals(other.getRegExp())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + REG_EXP_FIELD_NUMBER;
        hash = (53 * hash) + getRegExp().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          regExp_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher(this);
          result.regExp_ = regExp_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher.getDefaultInstance()) return this;
          if (!other.getRegExp().isEmpty()) {
            regExp_ = other.regExp_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object regExp_ = "";
        /**
         * <code>string reg_exp = 1;</code>
         * @return The regExp.
         */
        public java.lang.String getRegExp() {
          java.lang.Object ref = regExp_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            regExp_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string reg_exp = 1;</code>
         * @return The bytes for regExp.
         */
        public com.google.protobuf.ByteString
            getRegExpBytes() {
          java.lang.Object ref = regExp_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            regExp_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string reg_exp = 1;</code>
         * @param value The regExp to set.
         * @return This builder for chaining.
         */
        public Builder setRegExp(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          regExp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string reg_exp = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRegExp() {
          
          regExp_ = getDefaultInstance().getRegExp();
          onChanged();
          return this;
        }
        /**
         * <code>string reg_exp = 1;</code>
         * @param value The bytes for regExp to set.
         * @return This builder for chaining.
         */
        public Builder setRegExpBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          regExp_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RegExpMatcher)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RegExpMatcher>
          PARSER = new com.google.protobuf.AbstractParser<RegExpMatcher>() {
        @java.lang.Override
        public RegExpMatcher parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RegExpMatcher(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RegExpMatcher> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RegExpMatcher> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RegExpMatcher getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ValueMatcherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
       * @return The enum numeric value on the wire for valueType.
       */
      int getValueTypeValue();
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
       * @return The valueType.
       */
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType getValueType();
    }
    /**
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher}
     */
    public static final class ValueMatcher extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher)
        ValueMatcherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ValueMatcher.newBuilder() to construct.
      private ValueMatcher(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ValueMatcher() {
        valueType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ValueMatcher();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ValueMatcher(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();

                valueType_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder.class);
      }

      public static final int VALUE_TYPE_FIELD_NUMBER = 1;
      private int valueType_;
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
       * @return The enum numeric value on the wire for valueType.
       */
      @java.lang.Override public int getValueTypeValue() {
        return valueType_;
      }
      /**
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
       * @return The valueType.
       */
      @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType getValueType() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType.valueOf(valueType_);
        return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (valueType_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType.VALUES_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(1, valueType_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (valueType_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType.VALUES_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, valueType_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) obj;

        if (valueType_ != other.valueType_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + VALUE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + valueType_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          valueType_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher(this);
          result.valueType_ = valueType_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher.getDefaultInstance()) return this;
          if (other.valueType_ != 0) {
            setValueTypeValue(other.getValueTypeValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int valueType_ = 0;
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
         * @return The enum numeric value on the wire for valueType.
         */
        @java.lang.Override public int getValueTypeValue() {
          return valueType_;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
         * @param value The enum numeric value on the wire for valueType to set.
         * @return This builder for chaining.
         */
        public Builder setValueTypeValue(int value) {
          
          valueType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
         * @return The valueType.
         */
        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType getValueType() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType.valueOf(valueType_);
          return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType.UNRECOGNIZED : result;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
         * @param value The valueType to set.
         * @return This builder for chaining.
         */
        public Builder setValueType(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValuesType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          valueType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValuesType value_type = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearValueType() {
          
          valueType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.ValueMatcher)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ValueMatcher>
          PARSER = new com.google.protobuf.AbstractParser<ValueMatcher>() {
        @java.lang.Override
        public ValueMatcher parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ValueMatcher(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ValueMatcher> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ValueMatcher> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.ValueMatcher getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NameHidingSettingsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * True if we want to show concrete series names only, false if we want to hide concrete series names.
       * </pre>
       *
       * <code>bool positive = 1;</code>
       * @return The positive.
       */
      boolean getPositive();

      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @return A list containing the names.
       */
      java.util.List<java.lang.String>
          getNamesList();
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @return The count of names.
       */
      int getNamesCount();
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @param index The index of the element to return.
       * @return The names at the given index.
       */
      java.lang.String getNames(int index);
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the names at the given index.
       */
      com.google.protobuf.ByteString
          getNamesBytes(int index);
    }
    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings}
     */
    public static final class NameHidingSettings extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings)
        NameHidingSettingsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use NameHidingSettings.newBuilder() to construct.
      private NameHidingSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NameHidingSettings() {
        names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new NameHidingSettings();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private NameHidingSettings(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                positive_ = input.readBool();
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  names_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                names_.add(s);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            names_ = names_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder.class);
      }

      public static final int POSITIVE_FIELD_NUMBER = 1;
      private boolean positive_;
      /**
       * <pre>
       * True if we want to show concrete series names only, false if we want to hide concrete series names.
       * </pre>
       *
       * <code>bool positive = 1;</code>
       * @return The positive.
       */
      @java.lang.Override
      public boolean getPositive() {
        return positive_;
      }

      public static final int NAMES_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList names_;
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @return A list containing the names.
       */
      public com.google.protobuf.ProtocolStringList
          getNamesList() {
        return names_;
      }
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @return The count of names.
       */
      public int getNamesCount() {
        return names_.size();
      }
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @param index The index of the element to return.
       * @return The names at the given index.
       */
      public java.lang.String getNames(int index) {
        return names_.get(index);
      }
      /**
       * <pre>
       * Series names to show or hide.
       * </pre>
       *
       * <code>repeated string names = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the names at the given index.
       */
      public com.google.protobuf.ByteString
          getNamesBytes(int index) {
        return names_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (positive_ != false) {
          output.writeBool(1, positive_);
        }
        for (int i = 0; i < names_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, names_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (positive_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, positive_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < names_.size(); i++) {
            dataSize += computeStringSizeNoTag(names_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getNamesList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings) obj;

        if (getPositive()
            != other.getPositive()) return false;
        if (!getNamesList()
            .equals(other.getNamesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + POSITIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPositive());
        if (getNamesCount() > 0) {
          hash = (37 * hash) + NAMES_FIELD_NUMBER;
          hash = (53 * hash) + getNamesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          positive_ = false;

          names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings(this);
          int from_bitField0_ = bitField0_;
          result.positive_ = positive_;
          if (((bitField0_ & 0x00000001) != 0)) {
            names_ = names_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.names_ = names_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.getDefaultInstance()) return this;
          if (other.getPositive() != false) {
            setPositive(other.getPositive());
          }
          if (!other.names_.isEmpty()) {
            if (names_.isEmpty()) {
              names_ = other.names_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNamesIsMutable();
              names_.addAll(other.names_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean positive_ ;
        /**
         * <pre>
         * True if we want to show concrete series names only, false if we want to hide concrete series names.
         * </pre>
         *
         * <code>bool positive = 1;</code>
         * @return The positive.
         */
        @java.lang.Override
        public boolean getPositive() {
          return positive_;
        }
        /**
         * <pre>
         * True if we want to show concrete series names only, false if we want to hide concrete series names.
         * </pre>
         *
         * <code>bool positive = 1;</code>
         * @param value The positive to set.
         * @return This builder for chaining.
         */
        public Builder setPositive(boolean value) {
          
          positive_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * True if we want to show concrete series names only, false if we want to hide concrete series names.
         * </pre>
         *
         * <code>bool positive = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPositive() {
          
          positive_ = false;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureNamesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            names_ = new com.google.protobuf.LazyStringArrayList(names_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @return A list containing the names.
         */
        public com.google.protobuf.ProtocolStringList
            getNamesList() {
          return names_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @return The count of names.
         */
        public int getNamesCount() {
          return names_.size();
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @param index The index of the element to return.
         * @return The names at the given index.
         */
        public java.lang.String getNames(int index) {
          return names_.get(index);
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @param index The index of the value to return.
         * @return The bytes of the names at the given index.
         */
        public com.google.protobuf.ByteString
            getNamesBytes(int index) {
          return names_.getByteString(index);
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @param index The index to set the value at.
         * @param value The names to set.
         * @return This builder for chaining.
         */
        public Builder setNames(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
          names_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @param value The names to add.
         * @return This builder for chaining.
         */
        public Builder addNames(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureNamesIsMutable();
          names_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @param values The names to add.
         * @return This builder for chaining.
         */
        public Builder addAllNames(
            java.lang.Iterable<java.lang.String> values) {
          ensureNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, names_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearNames() {
          names_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Series names to show or hide.
         * </pre>
         *
         * <code>repeated string names = 2;</code>
         * @param value The bytes of the names to add.
         * @return This builder for chaining.
         */
        public Builder addNamesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureNamesIsMutable();
          names_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<NameHidingSettings>
          PARSER = new com.google.protobuf.AbstractParser<NameHidingSettings>() {
        @java.lang.Override
        public NameHidingSettings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NameHidingSettings(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<NameHidingSettings> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NameHidingSettings> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RepeatSettingsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @return A list containing the repeatBy.
       */
      java.util.List<java.lang.String>
          getRepeatByList();
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @return The count of repeatBy.
       */
      int getRepeatByCount();
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @param index The index of the element to return.
       * @return The repeatBy at the given index.
       */
      java.lang.String getRepeatBy(int index);
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the repeatBy at the given index.
       */
      com.google.protobuf.ByteString
          getRepeatByBytes(int index);

      /**
       * <pre>
       * Max number of chart in one row.
       * </pre>
       *
       * <code>int64 max_charts_in_row = 2;</code>
       * @return The maxChartsInRow.
       */
      long getMaxChartsInRow();
    }
    /**
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings}
     */
    public static final class RepeatSettings extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings)
        RepeatSettingsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RepeatSettings.newBuilder() to construct.
      private RepeatSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RepeatSettings() {
        repeatBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RepeatSettings();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RepeatSettings(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  repeatBy_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                repeatBy_.add(s);
                break;
              }
              case 16: {

                maxChartsInRow_ = input.readInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            repeatBy_ = repeatBy_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder.class);
      }

      public static final int REPEAT_BY_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList repeatBy_;
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @return A list containing the repeatBy.
       */
      public com.google.protobuf.ProtocolStringList
          getRepeatByList() {
        return repeatBy_;
      }
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @return The count of repeatBy.
       */
      public int getRepeatByCount() {
        return repeatBy_.size();
      }
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @param index The index of the element to return.
       * @return The repeatBy at the given index.
       */
      public java.lang.String getRepeatBy(int index) {
        return repeatBy_.get(index);
      }
      /**
       * <pre>
       * Parameters to repeat by.
       * </pre>
       *
       * <code>repeated string repeat_by = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the repeatBy at the given index.
       */
      public com.google.protobuf.ByteString
          getRepeatByBytes(int index) {
        return repeatBy_.getByteString(index);
      }

      public static final int MAX_CHARTS_IN_ROW_FIELD_NUMBER = 2;
      private long maxChartsInRow_;
      /**
       * <pre>
       * Max number of chart in one row.
       * </pre>
       *
       * <code>int64 max_charts_in_row = 2;</code>
       * @return The maxChartsInRow.
       */
      @java.lang.Override
      public long getMaxChartsInRow() {
        return maxChartsInRow_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < repeatBy_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, repeatBy_.getRaw(i));
        }
        if (maxChartsInRow_ != 0L) {
          output.writeInt64(2, maxChartsInRow_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < repeatBy_.size(); i++) {
            dataSize += computeStringSizeNoTag(repeatBy_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getRepeatByList().size();
        }
        if (maxChartsInRow_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, maxChartsInRow_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings)) {
          return super.equals(obj);
        }
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings) obj;

        if (!getRepeatByList()
            .equals(other.getRepeatByList())) return false;
        if (getMaxChartsInRow()
            != other.getMaxChartsInRow()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getRepeatByCount() > 0) {
          hash = (37 * hash) + REPEAT_BY_FIELD_NUMBER;
          hash = (53 * hash) + getRepeatByList().hashCode();
        }
        hash = (37 * hash) + MAX_CHARTS_IN_ROW_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMaxChartsInRow());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings)
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder.class);
        }

        // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          repeatBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          maxChartsInRow_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings getDefaultInstanceForType() {
          return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings build() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings buildPartial() {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            repeatBy_ = repeatBy_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.repeatBy_ = repeatBy_;
          result.maxChartsInRow_ = maxChartsInRow_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings) {
            return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings other) {
          if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.getDefaultInstance()) return this;
          if (!other.repeatBy_.isEmpty()) {
            if (repeatBy_.isEmpty()) {
              repeatBy_ = other.repeatBy_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRepeatByIsMutable();
              repeatBy_.addAll(other.repeatBy_);
            }
            onChanged();
          }
          if (other.getMaxChartsInRow() != 0L) {
            setMaxChartsInRow(other.getMaxChartsInRow());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList repeatBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureRepeatByIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            repeatBy_ = new com.google.protobuf.LazyStringArrayList(repeatBy_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @return A list containing the repeatBy.
         */
        public com.google.protobuf.ProtocolStringList
            getRepeatByList() {
          return repeatBy_.getUnmodifiableView();
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @return The count of repeatBy.
         */
        public int getRepeatByCount() {
          return repeatBy_.size();
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @param index The index of the element to return.
         * @return The repeatBy at the given index.
         */
        public java.lang.String getRepeatBy(int index) {
          return repeatBy_.get(index);
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the repeatBy at the given index.
         */
        public com.google.protobuf.ByteString
            getRepeatByBytes(int index) {
          return repeatBy_.getByteString(index);
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @param index The index to set the value at.
         * @param value The repeatBy to set.
         * @return This builder for chaining.
         */
        public Builder setRepeatBy(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatByIsMutable();
          repeatBy_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @param value The repeatBy to add.
         * @return This builder for chaining.
         */
        public Builder addRepeatBy(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureRepeatByIsMutable();
          repeatBy_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @param values The repeatBy to add.
         * @return This builder for chaining.
         */
        public Builder addAllRepeatBy(
            java.lang.Iterable<java.lang.String> values) {
          ensureRepeatByIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, repeatBy_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRepeatBy() {
          repeatBy_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Parameters to repeat by.
         * </pre>
         *
         * <code>repeated string repeat_by = 1;</code>
         * @param value The bytes of the repeatBy to add.
         * @return This builder for chaining.
         */
        public Builder addRepeatByBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureRepeatByIsMutable();
          repeatBy_.add(value);
          onChanged();
          return this;
        }

        private long maxChartsInRow_ ;
        /**
         * <pre>
         * Max number of chart in one row.
         * </pre>
         *
         * <code>int64 max_charts_in_row = 2;</code>
         * @return The maxChartsInRow.
         */
        @java.lang.Override
        public long getMaxChartsInRow() {
          return maxChartsInRow_;
        }
        /**
         * <pre>
         * Max number of chart in one row.
         * </pre>
         *
         * <code>int64 max_charts_in_row = 2;</code>
         * @param value The maxChartsInRow to set.
         * @return This builder for chaining.
         */
        public Builder setMaxChartsInRow(long value) {
          
          maxChartsInRow_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Max number of chart in one row.
         * </pre>
         *
         * <code>int64 max_charts_in_row = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearMaxChartsInRow() {
          
          maxChartsInRow_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings)
      private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings();
      }

      public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RepeatSettings>
          PARSER = new com.google.protobuf.AbstractParser<RepeatSettings>() {
        @java.lang.Override
        public RepeatSettings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RepeatSettings(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RepeatSettings> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RepeatSettings> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Required. Chart ID.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Required. Chart ID.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETS_FIELD_NUMBER = 2;
    private java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target> targets_;
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target> getTargetsList() {
      return targets_;
    }
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    @java.lang.Override
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <pre>
     * Targets.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }

    public static final int DATA_SOURCES_FIELD_NUMBER = 3;
    private java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource> dataSources_;
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource> getDataSourcesList() {
      return dataSources_;
    }
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder> 
        getDataSourcesOrBuilderList() {
      return dataSources_;
    }
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    @java.lang.Override
    public int getDataSourcesCount() {
      return dataSources_.size();
    }
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource getDataSources(int index) {
      return dataSources_.get(index);
    }
    /**
     * <pre>
     * Data sources.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder getDataSourcesOrBuilder(
        int index) {
      return dataSources_.get(index);
    }

    public static final int VISUALIZATION_SETTINGS_FIELD_NUMBER = 4;
    private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings visualizationSettings_;
    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
     * @return Whether the visualizationSettings field is set.
     */
    @java.lang.Override
    public boolean hasVisualizationSettings() {
      return visualizationSettings_ != null;
    }
    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
     * @return The visualizationSettings.
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings getVisualizationSettings() {
      return visualizationSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDefaultInstance() : visualizationSettings_;
    }
    /**
     * <pre>
     * Visualization settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder getVisualizationSettingsOrBuilder() {
      return getVisualizationSettings();
    }

    public static final int SERIES_OVERRIDES_FIELD_NUMBER = 5;
    private java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides> seriesOverrides_;
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides> getSeriesOverridesList() {
      return seriesOverrides_;
    }
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder> 
        getSeriesOverridesOrBuilderList() {
      return seriesOverrides_;
    }
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    @java.lang.Override
    public int getSeriesOverridesCount() {
      return seriesOverrides_.size();
    }
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides getSeriesOverrides(int index) {
      return seriesOverrides_.get(index);
    }
    /**
     * <pre>
     * Override settings.
     * </pre>
     *
     * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder getSeriesOverridesOrBuilder(
        int index) {
      return seriesOverrides_.get(index);
    }

    public static final int NAME_HIDING_SETTINGS_FIELD_NUMBER = 6;
    private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings nameHidingSettings_;
    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
     * @return Whether the nameHidingSettings field is set.
     */
    @java.lang.Override
    public boolean hasNameHidingSettings() {
      return nameHidingSettings_ != null;
    }
    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
     * @return The nameHidingSettings.
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings getNameHidingSettings() {
      return nameHidingSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.getDefaultInstance() : nameHidingSettings_;
    }
    /**
     * <pre>
     * Name hiding settings.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder getNameHidingSettingsOrBuilder() {
      return getNameHidingSettings();
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 7;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Chart description in dashboard (not enabled in UI).
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Chart description in dashboard (not enabled in UI).
     * </pre>
     *
     * <code>string description = 7;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TITLE_FIELD_NUMBER = 8;
    private volatile java.lang.Object title_;
    /**
     * <pre>
     * Chart widget title.
     * </pre>
     *
     * <code>string title = 8;</code>
     * @return The title.
     */
    @java.lang.Override
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Chart widget title.
     * </pre>
     *
     * <code>string title = 8;</code>
     * @return The bytes for title.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISPLAY_LEGEND_FIELD_NUMBER = 9;
    private boolean displayLegend_;
    /**
     * <pre>
     * Enable legend under chart.
     * </pre>
     *
     * <code>bool display_legend = 9;</code>
     * @return The displayLegend.
     */
    @java.lang.Override
    public boolean getDisplayLegend() {
      return displayLegend_;
    }

    public static final int FREEZE_FIELD_NUMBER = 10;
    private int freeze_;
    /**
     * <pre>
     * Fixed time interval for chart.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
     * @return The enum numeric value on the wire for freeze.
     */
    @java.lang.Override public int getFreezeValue() {
      return freeze_;
    }
    /**
     * <pre>
     * Fixed time interval for chart.
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
     * @return The freeze.
     */
    @java.lang.Override public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration getFreeze() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration.valueOf(freeze_);
      return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration.UNRECOGNIZED : result;
    }

    public static final int REPEAT_FIELD_NUMBER = 11;
    private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings repeat_;
    /**
     * <pre>
     * Setting for repeat panel / repeat row
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
     * @return Whether the repeat field is set.
     */
    @java.lang.Override
    public boolean hasRepeat() {
      return repeat_ != null;
    }
    /**
     * <pre>
     * Setting for repeat panel / repeat row
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
     * @return The repeat.
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings getRepeat() {
      return repeat_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.getDefaultInstance() : repeat_;
    }
    /**
     * <pre>
     * Setting for repeat panel / repeat row
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder getRepeatOrBuilder() {
      return getRepeat();
    }

    public static final int THRESHOLDS_FIELD_NUMBER = 12;
    private yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds thresholds_;
    /**
     * <pre>
     * Threshold settings
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
     * @return Whether the thresholds field is set.
     */
    @java.lang.Override
    public boolean hasThresholds() {
      return thresholds_ != null;
    }
    /**
     * <pre>
     * Threshold settings
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
     * @return The thresholds.
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds getThresholds() {
      return thresholds_ == null ? yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.getDefaultInstance() : thresholds_;
    }
    /**
     * <pre>
     * Threshold settings
     * </pre>
     *
     * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.ThresholdsOrBuilder getThresholdsOrBuilder() {
      return getThresholds();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      for (int i = 0; i < targets_.size(); i++) {
        output.writeMessage(2, targets_.get(i));
      }
      for (int i = 0; i < dataSources_.size(); i++) {
        output.writeMessage(3, dataSources_.get(i));
      }
      if (visualizationSettings_ != null) {
        output.writeMessage(4, getVisualizationSettings());
      }
      for (int i = 0; i < seriesOverrides_.size(); i++) {
        output.writeMessage(5, seriesOverrides_.get(i));
      }
      if (nameHidingSettings_ != null) {
        output.writeMessage(6, getNameHidingSettings());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, description_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, title_);
      }
      if (displayLegend_ != false) {
        output.writeBool(9, displayLegend_);
      }
      if (freeze_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration.FREEZE_DURATION_UNSPECIFIED.getNumber()) {
        output.writeEnum(10, freeze_);
      }
      if (repeat_ != null) {
        output.writeMessage(11, getRepeat());
      }
      if (thresholds_ != null) {
        output.writeMessage(12, getThresholds());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      for (int i = 0; i < targets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, targets_.get(i));
      }
      for (int i = 0; i < dataSources_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, dataSources_.get(i));
      }
      if (visualizationSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getVisualizationSettings());
      }
      for (int i = 0; i < seriesOverrides_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, seriesOverrides_.get(i));
      }
      if (nameHidingSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getNameHidingSettings());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, description_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(title_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, title_);
      }
      if (displayLegend_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, displayLegend_);
      }
      if (freeze_ != yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration.FREEZE_DURATION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, freeze_);
      }
      if (repeat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getRepeat());
      }
      if (thresholds_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getThresholds());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget)) {
        return super.equals(obj);
      }
      yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget other = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getTargetsList()
          .equals(other.getTargetsList())) return false;
      if (!getDataSourcesList()
          .equals(other.getDataSourcesList())) return false;
      if (hasVisualizationSettings() != other.hasVisualizationSettings()) return false;
      if (hasVisualizationSettings()) {
        if (!getVisualizationSettings()
            .equals(other.getVisualizationSettings())) return false;
      }
      if (!getSeriesOverridesList()
          .equals(other.getSeriesOverridesList())) return false;
      if (hasNameHidingSettings() != other.hasNameHidingSettings()) return false;
      if (hasNameHidingSettings()) {
        if (!getNameHidingSettings()
            .equals(other.getNameHidingSettings())) return false;
      }
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getTitle()
          .equals(other.getTitle())) return false;
      if (getDisplayLegend()
          != other.getDisplayLegend()) return false;
      if (freeze_ != other.freeze_) return false;
      if (hasRepeat() != other.hasRepeat()) return false;
      if (hasRepeat()) {
        if (!getRepeat()
            .equals(other.getRepeat())) return false;
      }
      if (hasThresholds() != other.hasThresholds()) return false;
      if (hasThresholds()) {
        if (!getThresholds()
            .equals(other.getThresholds())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      if (getDataSourcesCount() > 0) {
        hash = (37 * hash) + DATA_SOURCES_FIELD_NUMBER;
        hash = (53 * hash) + getDataSourcesList().hashCode();
      }
      if (hasVisualizationSettings()) {
        hash = (37 * hash) + VISUALIZATION_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getVisualizationSettings().hashCode();
      }
      if (getSeriesOverridesCount() > 0) {
        hash = (37 * hash) + SERIES_OVERRIDES_FIELD_NUMBER;
        hash = (53 * hash) + getSeriesOverridesList().hashCode();
      }
      if (hasNameHidingSettings()) {
        hash = (37 * hash) + NAME_HIDING_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getNameHidingSettings().hashCode();
      }
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + DISPLAY_LEGEND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisplayLegend());
      hash = (37 * hash) + FREEZE_FIELD_NUMBER;
      hash = (53 * hash) + freeze_;
      if (hasRepeat()) {
        hash = (37 * hash) + REPEAT_FIELD_NUMBER;
        hash = (53 * hash) + getRepeat().hashCode();
      }
      if (hasThresholds()) {
        hash = (37 * hash) + THRESHOLDS_FIELD_NUMBER;
        hash = (53 * hash) + getThresholds().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Multi-source chart widget.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.monitoring.v3.MultiSourceChartWidget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.monitoring.v3.MultiSourceChartWidget)
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidgetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.class, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Builder.class);
      }

      // Construct using yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetsFieldBuilder();
          getDataSourcesFieldBuilder();
          getSeriesOverridesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          targetsBuilder_.clear();
        }
        if (dataSourcesBuilder_ == null) {
          dataSources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          dataSourcesBuilder_.clear();
        }
        if (visualizationSettingsBuilder_ == null) {
          visualizationSettings_ = null;
        } else {
          visualizationSettings_ = null;
          visualizationSettingsBuilder_ = null;
        }
        if (seriesOverridesBuilder_ == null) {
          seriesOverrides_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          seriesOverridesBuilder_.clear();
        }
        if (nameHidingSettingsBuilder_ == null) {
          nameHidingSettings_ = null;
        } else {
          nameHidingSettings_ = null;
          nameHidingSettingsBuilder_ = null;
        }
        description_ = "";

        title_ = "";

        displayLegend_ = false;

        freeze_ = 0;

        if (repeatBuilder_ == null) {
          repeat_ = null;
        } else {
          repeat_ = null;
          repeatBuilder_ = null;
        }
        if (thresholdsBuilder_ == null) {
          thresholds_ = null;
        } else {
          thresholds_ = null;
          thresholdsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget getDefaultInstanceForType() {
        return yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget build() {
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget buildPartial() {
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget result = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            targets_ = java.util.Collections.unmodifiableList(targets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
        if (dataSourcesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            dataSources_ = java.util.Collections.unmodifiableList(dataSources_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.dataSources_ = dataSources_;
        } else {
          result.dataSources_ = dataSourcesBuilder_.build();
        }
        if (visualizationSettingsBuilder_ == null) {
          result.visualizationSettings_ = visualizationSettings_;
        } else {
          result.visualizationSettings_ = visualizationSettingsBuilder_.build();
        }
        if (seriesOverridesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            seriesOverrides_ = java.util.Collections.unmodifiableList(seriesOverrides_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.seriesOverrides_ = seriesOverrides_;
        } else {
          result.seriesOverrides_ = seriesOverridesBuilder_.build();
        }
        if (nameHidingSettingsBuilder_ == null) {
          result.nameHidingSettings_ = nameHidingSettings_;
        } else {
          result.nameHidingSettings_ = nameHidingSettingsBuilder_.build();
        }
        result.description_ = description_;
        result.title_ = title_;
        result.displayLegend_ = displayLegend_;
        result.freeze_ = freeze_;
        if (repeatBuilder_ == null) {
          result.repeat_ = repeat_;
        } else {
          result.repeat_ = repeatBuilder_.build();
        }
        if (thresholdsBuilder_ == null) {
          result.thresholds_ = thresholds_;
        } else {
          result.thresholds_ = thresholdsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget) {
          return mergeFrom((yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget other) {
        if (other == yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (targetsBuilder_ == null) {
          if (!other.targets_.isEmpty()) {
            if (targets_.isEmpty()) {
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTargetsIsMutable();
              targets_.addAll(other.targets_);
            }
            onChanged();
          }
        } else {
          if (!other.targets_.isEmpty()) {
            if (targetsBuilder_.isEmpty()) {
              targetsBuilder_.dispose();
              targetsBuilder_ = null;
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              targetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTargetsFieldBuilder() : null;
            } else {
              targetsBuilder_.addAllMessages(other.targets_);
            }
          }
        }
        if (dataSourcesBuilder_ == null) {
          if (!other.dataSources_.isEmpty()) {
            if (dataSources_.isEmpty()) {
              dataSources_ = other.dataSources_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataSourcesIsMutable();
              dataSources_.addAll(other.dataSources_);
            }
            onChanged();
          }
        } else {
          if (!other.dataSources_.isEmpty()) {
            if (dataSourcesBuilder_.isEmpty()) {
              dataSourcesBuilder_.dispose();
              dataSourcesBuilder_ = null;
              dataSources_ = other.dataSources_;
              bitField0_ = (bitField0_ & ~0x00000002);
              dataSourcesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataSourcesFieldBuilder() : null;
            } else {
              dataSourcesBuilder_.addAllMessages(other.dataSources_);
            }
          }
        }
        if (other.hasVisualizationSettings()) {
          mergeVisualizationSettings(other.getVisualizationSettings());
        }
        if (seriesOverridesBuilder_ == null) {
          if (!other.seriesOverrides_.isEmpty()) {
            if (seriesOverrides_.isEmpty()) {
              seriesOverrides_ = other.seriesOverrides_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSeriesOverridesIsMutable();
              seriesOverrides_.addAll(other.seriesOverrides_);
            }
            onChanged();
          }
        } else {
          if (!other.seriesOverrides_.isEmpty()) {
            if (seriesOverridesBuilder_.isEmpty()) {
              seriesOverridesBuilder_.dispose();
              seriesOverridesBuilder_ = null;
              seriesOverrides_ = other.seriesOverrides_;
              bitField0_ = (bitField0_ & ~0x00000004);
              seriesOverridesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSeriesOverridesFieldBuilder() : null;
            } else {
              seriesOverridesBuilder_.addAllMessages(other.seriesOverrides_);
            }
          }
        }
        if (other.hasNameHidingSettings()) {
          mergeNameHidingSettings(other.getNameHidingSettings());
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (other.getDisplayLegend() != false) {
          setDisplayLegend(other.getDisplayLegend());
        }
        if (other.freeze_ != 0) {
          setFreezeValue(other.getFreezeValue());
        }
        if (other.hasRepeat()) {
          mergeRepeat(other.getRepeat());
        }
        if (other.hasThresholds()) {
          mergeThresholds(other.getThresholds());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Required. Chart ID.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Required. Chart ID.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Required. Chart ID.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Chart ID.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Required. Chart ID.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target> targets_ =
        java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          targets_ = new java.util.ArrayList<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target>(targets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder> targetsBuilder_;

      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target> getTargetsList() {
        if (targetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targets_);
        } else {
          return targetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public int getTargetsCount() {
        if (targetsBuilder_ == null) {
          return targets_.size();
        } else {
          return targetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target getTargets(int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);
        } else {
          return targetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder setTargets(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.set(index, value);
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder setTargets(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder addTargets(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder addTargets(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(index, value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder addTargets(
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder addTargets(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target> values) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targets_);
          onChanged();
        } else {
          targetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public Builder removeTargets(int index) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.remove(index);
          onChanged();
        } else {
          targetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder getTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder getTargetsOrBuilder(
          int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);  } else {
          return targetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder> 
           getTargetsOrBuilderList() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targets_);
        }
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder addTargetsBuilder() {
        return getTargetsFieldBuilder().addBuilder(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.getDefaultInstance());
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder addTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().addBuilder(
            index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.getDefaultInstance());
      }
      /**
       * <pre>
       * Targets.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.Target targets = 2;</code>
       */
      public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder> 
           getTargetsBuilderList() {
        return getTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.Target.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.TargetOrBuilder>(
                  targets_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }

      private java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource> dataSources_ =
        java.util.Collections.emptyList();
      private void ensureDataSourcesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dataSources_ = new java.util.ArrayList<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource>(dataSources_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder> dataSourcesBuilder_;

      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource> getDataSourcesList() {
        if (dataSourcesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataSources_);
        } else {
          return dataSourcesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public int getDataSourcesCount() {
        if (dataSourcesBuilder_ == null) {
          return dataSources_.size();
        } else {
          return dataSourcesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource getDataSources(int index) {
        if (dataSourcesBuilder_ == null) {
          return dataSources_.get(index);
        } else {
          return dataSourcesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder setDataSources(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource value) {
        if (dataSourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataSourcesIsMutable();
          dataSources_.set(index, value);
          onChanged();
        } else {
          dataSourcesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder setDataSources(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder builderForValue) {
        if (dataSourcesBuilder_ == null) {
          ensureDataSourcesIsMutable();
          dataSources_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataSourcesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder addDataSources(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource value) {
        if (dataSourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataSourcesIsMutable();
          dataSources_.add(value);
          onChanged();
        } else {
          dataSourcesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder addDataSources(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource value) {
        if (dataSourcesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataSourcesIsMutable();
          dataSources_.add(index, value);
          onChanged();
        } else {
          dataSourcesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder addDataSources(
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder builderForValue) {
        if (dataSourcesBuilder_ == null) {
          ensureDataSourcesIsMutable();
          dataSources_.add(builderForValue.build());
          onChanged();
        } else {
          dataSourcesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder addDataSources(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder builderForValue) {
        if (dataSourcesBuilder_ == null) {
          ensureDataSourcesIsMutable();
          dataSources_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataSourcesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder addAllDataSources(
          java.lang.Iterable<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource> values) {
        if (dataSourcesBuilder_ == null) {
          ensureDataSourcesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataSources_);
          onChanged();
        } else {
          dataSourcesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder clearDataSources() {
        if (dataSourcesBuilder_ == null) {
          dataSources_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          dataSourcesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public Builder removeDataSources(int index) {
        if (dataSourcesBuilder_ == null) {
          ensureDataSourcesIsMutable();
          dataSources_.remove(index);
          onChanged();
        } else {
          dataSourcesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder getDataSourcesBuilder(
          int index) {
        return getDataSourcesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder getDataSourcesOrBuilder(
          int index) {
        if (dataSourcesBuilder_ == null) {
          return dataSources_.get(index);  } else {
          return dataSourcesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder> 
           getDataSourcesOrBuilderList() {
        if (dataSourcesBuilder_ != null) {
          return dataSourcesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataSources_);
        }
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder addDataSourcesBuilder() {
        return getDataSourcesFieldBuilder().addBuilder(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.getDefaultInstance());
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder addDataSourcesBuilder(
          int index) {
        return getDataSourcesFieldBuilder().addBuilder(
            index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.getDefaultInstance());
      }
      /**
       * <pre>
       * Data sources.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.DataSource data_sources = 3;</code>
       */
      public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder> 
           getDataSourcesBuilderList() {
        return getDataSourcesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder> 
          getDataSourcesFieldBuilder() {
        if (dataSourcesBuilder_ == null) {
          dataSourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSource.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.DataSourceOrBuilder>(
                  dataSources_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          dataSources_ = null;
        }
        return dataSourcesBuilder_;
      }

      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings visualizationSettings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder> visualizationSettingsBuilder_;
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       * @return Whether the visualizationSettings field is set.
       */
      public boolean hasVisualizationSettings() {
        return visualizationSettingsBuilder_ != null || visualizationSettings_ != null;
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       * @return The visualizationSettings.
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings getVisualizationSettings() {
        if (visualizationSettingsBuilder_ == null) {
          return visualizationSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDefaultInstance() : visualizationSettings_;
        } else {
          return visualizationSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      public Builder setVisualizationSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings value) {
        if (visualizationSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          visualizationSettings_ = value;
          onChanged();
        } else {
          visualizationSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      public Builder setVisualizationSettings(
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder builderForValue) {
        if (visualizationSettingsBuilder_ == null) {
          visualizationSettings_ = builderForValue.build();
          onChanged();
        } else {
          visualizationSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      public Builder mergeVisualizationSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings value) {
        if (visualizationSettingsBuilder_ == null) {
          if (visualizationSettings_ != null) {
            visualizationSettings_ =
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.newBuilder(visualizationSettings_).mergeFrom(value).buildPartial();
          } else {
            visualizationSettings_ = value;
          }
          onChanged();
        } else {
          visualizationSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      public Builder clearVisualizationSettings() {
        if (visualizationSettingsBuilder_ == null) {
          visualizationSettings_ = null;
          onChanged();
        } else {
          visualizationSettings_ = null;
          visualizationSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder getVisualizationSettingsBuilder() {
        
        onChanged();
        return getVisualizationSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder getVisualizationSettingsOrBuilder() {
        if (visualizationSettingsBuilder_ != null) {
          return visualizationSettingsBuilder_.getMessageOrBuilder();
        } else {
          return visualizationSettings_ == null ?
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.getDefaultInstance() : visualizationSettings_;
        }
      }
      /**
       * <pre>
       * Visualization settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.VisualizationSettings visualization_settings = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder> 
          getVisualizationSettingsFieldBuilder() {
        if (visualizationSettingsBuilder_ == null) {
          visualizationSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.VisualizationSettingsOrBuilder>(
                  getVisualizationSettings(),
                  getParentForChildren(),
                  isClean());
          visualizationSettings_ = null;
        }
        return visualizationSettingsBuilder_;
      }

      private java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides> seriesOverrides_ =
        java.util.Collections.emptyList();
      private void ensureSeriesOverridesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          seriesOverrides_ = new java.util.ArrayList<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides>(seriesOverrides_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder> seriesOverridesBuilder_;

      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides> getSeriesOverridesList() {
        if (seriesOverridesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(seriesOverrides_);
        } else {
          return seriesOverridesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public int getSeriesOverridesCount() {
        if (seriesOverridesBuilder_ == null) {
          return seriesOverrides_.size();
        } else {
          return seriesOverridesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides getSeriesOverrides(int index) {
        if (seriesOverridesBuilder_ == null) {
          return seriesOverrides_.get(index);
        } else {
          return seriesOverridesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder setSeriesOverrides(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides value) {
        if (seriesOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.set(index, value);
          onChanged();
        } else {
          seriesOverridesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder setSeriesOverrides(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder builderForValue) {
        if (seriesOverridesBuilder_ == null) {
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.set(index, builderForValue.build());
          onChanged();
        } else {
          seriesOverridesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder addSeriesOverrides(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides value) {
        if (seriesOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.add(value);
          onChanged();
        } else {
          seriesOverridesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder addSeriesOverrides(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides value) {
        if (seriesOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.add(index, value);
          onChanged();
        } else {
          seriesOverridesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder addSeriesOverrides(
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder builderForValue) {
        if (seriesOverridesBuilder_ == null) {
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.add(builderForValue.build());
          onChanged();
        } else {
          seriesOverridesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder addSeriesOverrides(
          int index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder builderForValue) {
        if (seriesOverridesBuilder_ == null) {
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.add(index, builderForValue.build());
          onChanged();
        } else {
          seriesOverridesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder addAllSeriesOverrides(
          java.lang.Iterable<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides> values) {
        if (seriesOverridesBuilder_ == null) {
          ensureSeriesOverridesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, seriesOverrides_);
          onChanged();
        } else {
          seriesOverridesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder clearSeriesOverrides() {
        if (seriesOverridesBuilder_ == null) {
          seriesOverrides_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          seriesOverridesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public Builder removeSeriesOverrides(int index) {
        if (seriesOverridesBuilder_ == null) {
          ensureSeriesOverridesIsMutable();
          seriesOverrides_.remove(index);
          onChanged();
        } else {
          seriesOverridesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder getSeriesOverridesBuilder(
          int index) {
        return getSeriesOverridesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder getSeriesOverridesOrBuilder(
          int index) {
        if (seriesOverridesBuilder_ == null) {
          return seriesOverrides_.get(index);  } else {
          return seriesOverridesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public java.util.List<? extends yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder> 
           getSeriesOverridesOrBuilderList() {
        if (seriesOverridesBuilder_ != null) {
          return seriesOverridesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(seriesOverrides_);
        }
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder addSeriesOverridesBuilder() {
        return getSeriesOverridesFieldBuilder().addBuilder(
            yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.getDefaultInstance());
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder addSeriesOverridesBuilder(
          int index) {
        return getSeriesOverridesFieldBuilder().addBuilder(
            index, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.getDefaultInstance());
      }
      /**
       * <pre>
       * Override settings.
       * </pre>
       *
       * <code>repeated .yandex.cloud.monitoring.v3.MultiSourceChartWidget.SeriesOverrides series_overrides = 5;</code>
       */
      public java.util.List<yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder> 
           getSeriesOverridesBuilderList() {
        return getSeriesOverridesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder> 
          getSeriesOverridesFieldBuilder() {
        if (seriesOverridesBuilder_ == null) {
          seriesOverridesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverrides.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.SeriesOverridesOrBuilder>(
                  seriesOverrides_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          seriesOverrides_ = null;
        }
        return seriesOverridesBuilder_;
      }

      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings nameHidingSettings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder> nameHidingSettingsBuilder_;
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       * @return Whether the nameHidingSettings field is set.
       */
      public boolean hasNameHidingSettings() {
        return nameHidingSettingsBuilder_ != null || nameHidingSettings_ != null;
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       * @return The nameHidingSettings.
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings getNameHidingSettings() {
        if (nameHidingSettingsBuilder_ == null) {
          return nameHidingSettings_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.getDefaultInstance() : nameHidingSettings_;
        } else {
          return nameHidingSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      public Builder setNameHidingSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings value) {
        if (nameHidingSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nameHidingSettings_ = value;
          onChanged();
        } else {
          nameHidingSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      public Builder setNameHidingSettings(
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder builderForValue) {
        if (nameHidingSettingsBuilder_ == null) {
          nameHidingSettings_ = builderForValue.build();
          onChanged();
        } else {
          nameHidingSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      public Builder mergeNameHidingSettings(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings value) {
        if (nameHidingSettingsBuilder_ == null) {
          if (nameHidingSettings_ != null) {
            nameHidingSettings_ =
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.newBuilder(nameHidingSettings_).mergeFrom(value).buildPartial();
          } else {
            nameHidingSettings_ = value;
          }
          onChanged();
        } else {
          nameHidingSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      public Builder clearNameHidingSettings() {
        if (nameHidingSettingsBuilder_ == null) {
          nameHidingSettings_ = null;
          onChanged();
        } else {
          nameHidingSettings_ = null;
          nameHidingSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder getNameHidingSettingsBuilder() {
        
        onChanged();
        return getNameHidingSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder getNameHidingSettingsOrBuilder() {
        if (nameHidingSettingsBuilder_ != null) {
          return nameHidingSettingsBuilder_.getMessageOrBuilder();
        } else {
          return nameHidingSettings_ == null ?
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.getDefaultInstance() : nameHidingSettings_;
        }
      }
      /**
       * <pre>
       * Name hiding settings.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.NameHidingSettings name_hiding_settings = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder> 
          getNameHidingSettingsFieldBuilder() {
        if (nameHidingSettingsBuilder_ == null) {
          nameHidingSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.NameHidingSettingsOrBuilder>(
                  getNameHidingSettings(),
                  getParentForChildren(),
                  isClean());
          nameHidingSettings_ = null;
        }
        return nameHidingSettingsBuilder_;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Chart description in dashboard (not enabled in UI).
       * </pre>
       *
       * <code>string description = 7;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Chart description in dashboard (not enabled in UI).
       * </pre>
       *
       * <code>string description = 7;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Chart description in dashboard (not enabled in UI).
       * </pre>
       *
       * <code>string description = 7;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chart description in dashboard (not enabled in UI).
       * </pre>
       *
       * <code>string description = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chart description in dashboard (not enabled in UI).
       * </pre>
       *
       * <code>string description = 7;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object title_ = "";
      /**
       * <pre>
       * Chart widget title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return The title.
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Chart widget title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return The bytes for title.
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Chart widget title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @param value The title to set.
       * @return This builder for chaining.
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chart widget title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Chart widget title.
       * </pre>
       *
       * <code>string title = 8;</code>
       * @param value The bytes for title to set.
       * @return This builder for chaining.
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private boolean displayLegend_ ;
      /**
       * <pre>
       * Enable legend under chart.
       * </pre>
       *
       * <code>bool display_legend = 9;</code>
       * @return The displayLegend.
       */
      @java.lang.Override
      public boolean getDisplayLegend() {
        return displayLegend_;
      }
      /**
       * <pre>
       * Enable legend under chart.
       * </pre>
       *
       * <code>bool display_legend = 9;</code>
       * @param value The displayLegend to set.
       * @return This builder for chaining.
       */
      public Builder setDisplayLegend(boolean value) {
        
        displayLegend_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enable legend under chart.
       * </pre>
       *
       * <code>bool display_legend = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisplayLegend() {
        
        displayLegend_ = false;
        onChanged();
        return this;
      }

      private int freeze_ = 0;
      /**
       * <pre>
       * Fixed time interval for chart.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
       * @return The enum numeric value on the wire for freeze.
       */
      @java.lang.Override public int getFreezeValue() {
        return freeze_;
      }
      /**
       * <pre>
       * Fixed time interval for chart.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
       * @param value The enum numeric value on the wire for freeze to set.
       * @return This builder for chaining.
       */
      public Builder setFreezeValue(int value) {
        
        freeze_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fixed time interval for chart.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
       * @return The freeze.
       */
      @java.lang.Override
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration getFreeze() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration result = yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration.valueOf(freeze_);
        return result == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Fixed time interval for chart.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
       * @param value The freeze to set.
       * @return This builder for chaining.
       */
      public Builder setFreeze(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.FreezeDuration value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        freeze_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fixed time interval for chart.
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.FreezeDuration freeze = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreeze() {
        
        freeze_ = 0;
        onChanged();
        return this;
      }

      private yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings repeat_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder> repeatBuilder_;
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       * @return Whether the repeat field is set.
       */
      public boolean hasRepeat() {
        return repeatBuilder_ != null || repeat_ != null;
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       * @return The repeat.
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings getRepeat() {
        if (repeatBuilder_ == null) {
          return repeat_ == null ? yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.getDefaultInstance() : repeat_;
        } else {
          return repeatBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      public Builder setRepeat(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings value) {
        if (repeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          repeat_ = value;
          onChanged();
        } else {
          repeatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      public Builder setRepeat(
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder builderForValue) {
        if (repeatBuilder_ == null) {
          repeat_ = builderForValue.build();
          onChanged();
        } else {
          repeatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      public Builder mergeRepeat(yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings value) {
        if (repeatBuilder_ == null) {
          if (repeat_ != null) {
            repeat_ =
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.newBuilder(repeat_).mergeFrom(value).buildPartial();
          } else {
            repeat_ = value;
          }
          onChanged();
        } else {
          repeatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      public Builder clearRepeat() {
        if (repeatBuilder_ == null) {
          repeat_ = null;
          onChanged();
        } else {
          repeat_ = null;
          repeatBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder getRepeatBuilder() {
        
        onChanged();
        return getRepeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder getRepeatOrBuilder() {
        if (repeatBuilder_ != null) {
          return repeatBuilder_.getMessageOrBuilder();
        } else {
          return repeat_ == null ?
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.getDefaultInstance() : repeat_;
        }
      }
      /**
       * <pre>
       * Setting for repeat panel / repeat row
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.MultiSourceChartWidget.RepeatSettings repeat = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder> 
          getRepeatFieldBuilder() {
        if (repeatBuilder_ == null) {
          repeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettings.Builder, yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget.RepeatSettingsOrBuilder>(
                  getRepeat(),
                  getParentForChildren(),
                  isClean());
          repeat_ = null;
        }
        return repeatBuilder_;
      }

      private yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds thresholds_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds, yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.Builder, yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.ThresholdsOrBuilder> thresholdsBuilder_;
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       * @return Whether the thresholds field is set.
       */
      public boolean hasThresholds() {
        return thresholdsBuilder_ != null || thresholds_ != null;
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       * @return The thresholds.
       */
      public yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds getThresholds() {
        if (thresholdsBuilder_ == null) {
          return thresholds_ == null ? yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.getDefaultInstance() : thresholds_;
        } else {
          return thresholdsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      public Builder setThresholds(yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds value) {
        if (thresholdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          thresholds_ = value;
          onChanged();
        } else {
          thresholdsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      public Builder setThresholds(
          yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.Builder builderForValue) {
        if (thresholdsBuilder_ == null) {
          thresholds_ = builderForValue.build();
          onChanged();
        } else {
          thresholdsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      public Builder mergeThresholds(yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds value) {
        if (thresholdsBuilder_ == null) {
          if (thresholds_ != null) {
            thresholds_ =
              yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.newBuilder(thresholds_).mergeFrom(value).buildPartial();
          } else {
            thresholds_ = value;
          }
          onChanged();
        } else {
          thresholdsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      public Builder clearThresholds() {
        if (thresholdsBuilder_ == null) {
          thresholds_ = null;
          onChanged();
        } else {
          thresholds_ = null;
          thresholdsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      public yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.Builder getThresholdsBuilder() {
        
        onChanged();
        return getThresholdsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      public yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.ThresholdsOrBuilder getThresholdsOrBuilder() {
        if (thresholdsBuilder_ != null) {
          return thresholdsBuilder_.getMessageOrBuilder();
        } else {
          return thresholds_ == null ?
              yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.getDefaultInstance() : thresholds_;
        }
      }
      /**
       * <pre>
       * Threshold settings
       * </pre>
       *
       * <code>.yandex.cloud.monitoring.v3.Thresholds thresholds = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds, yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.Builder, yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.ThresholdsOrBuilder> 
          getThresholdsFieldBuilder() {
        if (thresholdsBuilder_ == null) {
          thresholdsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds, yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.Thresholds.Builder, yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.ThresholdsOrBuilder>(
                  getThresholds(),
                  getParentForChildren(),
                  isClean());
          thresholds_ = null;
        }
        return thresholdsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.monitoring.v3.MultiSourceChartWidget)
    private static final yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget();
    }

    public static yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiSourceChartWidget>
        PARSER = new com.google.protobuf.AbstractParser<MultiSourceChartWidget>() {
      @java.lang.Override
      public MultiSourceChartWidget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiSourceChartWidget(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiSourceChartWidget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiSourceChartWidget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.monitoring.v3.MultiSourceChartWidgetOuterClass.MultiSourceChartWidget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:yandex/cloud/monitoring/v3/multi_sourc" +
      "e_chart_widget.proto\022\032yandex.cloud.monit" +
      "oring.v3\032\036google/protobuf/wrappers.proto" +
      "\032-yandex/cloud/monitoring/v3/downsamplin" +
      "g.proto\032,yandex/cloud/monitoring/v3/unit" +
      "_format.proto\032+yandex/cloud/monitoring/v" +
      "3/thresholds.proto\"\2178\n\026MultiSourceChartW" +
      "idget\022\n\n\002id\030\001 \001(\t\022J\n\007targets\030\002 \003(\01329.yan" +
      "dex.cloud.monitoring.v3.MultiSourceChart" +
      "Widget.Target\022S\n\014data_sources\030\003 \003(\0132=.ya" +
      "ndex.cloud.monitoring.v3.MultiSourceChar" +
      "tWidget.DataSource\022h\n\026visualization_sett" +
      "ings\030\004 \001(\0132H.yandex.cloud.monitoring.v3." +
      "MultiSourceChartWidget.VisualizationSett" +
      "ings\022\\\n\020series_overrides\030\005 \003(\0132B.yandex." +
      "cloud.monitoring.v3.MultiSourceChartWidg" +
      "et.SeriesOverrides\022c\n\024name_hiding_settin" +
      "gs\030\006 \001(\0132E.yandex.cloud.monitoring.v3.Mu" +
      "ltiSourceChartWidget.NameHidingSettings\022" +
      "\023\n\013description\030\007 \001(\t\022\r\n\005title\030\010 \001(\t\022\026\n\016d" +
      "isplay_legend\030\t \001(\010\022Q\n\006freeze\030\n \001(\0162A.ya" +
      "ndex.cloud.monitoring.v3.MultiSourceChar" +
      "tWidget.FreezeDuration\022Q\n\006repeat\030\013 \001(\0132A" +
      ".yandex.cloud.monitoring.v3.MultiSourceC" +
      "hartWidget.RepeatSettings\022:\n\nthresholds\030" +
      "\014 \001(\0132&.yandex.cloud.monitoring.v3.Thres" +
      "holds\032\341\003\n\006Target\022g\n\021monitoring_target\030\001 " +
      "\001(\0132J.yandex.cloud.monitoring.v3.MultiSo" +
      "urceChartWidget.Target.MonitoringTargetH" +
      "\000\022g\n\021prometheus_target\030\002 \001(\0132J.yandex.cl" +
      "oud.monitoring.v3.MultiSourceChartWidget" +
      ".Target.PrometheusTargetH\000\032j\n\020Monitoring" +
      "Target\022\026\n\016data_source_id\030\001 \001(\t\022\r\n\005query\030" +
      "\002 \001(\t\022\021\n\ttext_mode\030\003 \001(\010\022\016\n\006hidden\030\004 \001(\010" +
      "\022\014\n\004name\030\005 \001(\t\032\216\001\n\020PrometheusTarget\022\026\n\016d" +
      "ata_source_id\030\001 \001(\t\022\024\n\014workspace_id\030\002 \001(" +
      "\t\022\r\n\005query\030\003 \001(\t\022\021\n\ttext_mode\030\004 \001(\010\022\016\n\006h" +
      "idden\030\005 \001(\010\022\014\n\004name\030\006 \001(\t\022\014\n\004step\030\007 \001(\tB" +
      "\010\n\006target\032\235\003\n\nDataSource\022t\n\026monitoring_d" +
      "ata_source\030\001 \001(\0132R.yandex.cloud.monitori" +
      "ng.v3.MultiSourceChartWidget.DataSource." +
      "MonitoringDataSourceH\000\022t\n\026prometheus_dat" +
      "a_source\030\002 \001(\0132R.yandex.cloud.monitoring" +
      ".v3.MultiSourceChartWidget.DataSource.Pr" +
      "ometheusDataSourceH\000\032b\n\024MonitoringDataSo" +
      "urce\022\n\n\002id\030\001 \001(\t\022>\n\014downsampling\030\002 \001(\0132(" +
      ".yandex.cloud.monitoring.v3.Downsampling" +
      "\0320\n\024PrometheusDataSource\022\n\n\002id\030\001 \001(\t\022\014\n\004" +
      "step\030\002 \001(\003B\r\n\013data_source\032\325\032\n\025Visualizat" +
      "ionSettings\022h\n\004type\030\001 \001(\0162Z.yandex.cloud" +
      ".monitoring.v3.MultiSourceChartWidget.Vi" +
      "sualizationSettings.VisualizationType\022\021\n" +
      "\tnormalize\030\002 \001(\010\022i\n\013interpolate\030\003 \001(\0162T." +
      "yandex.cloud.monitoring.v3.MultiSourceCh" +
      "artWidget.VisualizationSettings.Interpol" +
      "ate\022o\n\013aggregation\030\004 \001(\0162Z.yandex.cloud." +
      "monitoring.v3.MultiSourceChartWidget.Vis" +
      "ualizationSettings.SeriesAggregation\022{\n\025" +
      "color_scheme_settings\030\005 \001(\0132\\.yandex.clo" +
      "ud.monitoring.v3.MultiSourceChartWidget." +
      "VisualizationSettings.ColorSchemeSetting" +
      "s\022r\n\020heatmap_settings\030\006 \001(\0132X.yandex.clo" +
      "ud.monitoring.v3.MultiSourceChartWidget." +
      "VisualizationSettings.HeatmapSettings\022n\n" +
      "\016yaxis_settings\030\007 \001(\0132V.yandex.cloud.mon" +
      "itoring.v3.MultiSourceChartWidget.Visual" +
      "izationSettings.YaxisSettings\022\r\n\005title\030\010" +
      " \001(\t\022\023\n\013show_labels\030\t \001(\010\032\340\n\n\023ColorSchem" +
      "eSettings\022\206\001\n\tautomatic\030\001 \001(\0132q.yandex.c" +
      "loud.monitoring.v3.MultiSourceChartWidge" +
      "t.VisualizationSettings.ColorSchemeSetti" +
      "ngs.AutomaticColorSchemeH\000\022\204\001\n\010standard\030" +
      "\002 \001(\0132p.yandex.cloud.monitoring.v3.Multi" +
      "SourceChartWidget.VisualizationSettings." +
      "ColorSchemeSettings.StandardColorSchemeH" +
      "\000\022\204\001\n\010gradient\030\003 \001(\0132p.yandex.cloud.moni" +
      "toring.v3.MultiSourceChartWidget.Visuali" +
      "zationSettings.ColorSchemeSettings.Gradi" +
      "entColorSchemeH\000\022|\n\004hash\030\004 \001(\0132l.yandex." +
      "cloud.monitoring.v3.MultiSourceChartWidg" +
      "et.VisualizationSettings.ColorSchemeSett" +
      "ings.HashColorSchemeH\000\022\210\001\n\nthresholds\030\005 " +
      "\001(\0132r.yandex.cloud.monitoring.v3.MultiSo" +
      "urceChartWidget.VisualizationSettings.Co" +
      "lorSchemeSettings.ThresholdsColorSchemeH" +
      "\000\022\204\001\n\010constant\030\006 \001(\0132p.yandex.cloud.moni" +
      "toring.v3.MultiSourceChartWidget.Visuali" +
      "zationSettings.ColorSchemeSettings.Const" +
      "antColorSchemeH\000\032\026\n\024AutomaticColorScheme" +
      "\032\025\n\023StandardColorScheme\032i\n\023GradientColor" +
      "Scheme\022\023\n\013green_value\030\002 \001(\t\022\024\n\014yellow_va" +
      "lue\030\003 \001(\t\022\021\n\tred_value\030\004 \001(\t\022\024\n\014violet_v" +
      "alue\030\005 \001(\t\032\021\n\017HashColorScheme\032$\n\023Constan" +
      "tColorScheme\022\r\n\005color\030\001 \001(\t\032\304\002\n\025Threshol" +
      "dsColorScheme\022\223\001\n\013aggregation\030\001 \001(\0162~.ya" +
      "ndex.cloud.monitoring.v3.MultiSourceChar" +
      "tWidget.VisualizationSettings.ColorSchem" +
      "eSettings.ThresholdsColorScheme.Aggregat" +
      "ion\"\224\001\n\013Aggregation\022\033\n\027AGGREGATION_UNSPE" +
      "CIFIED\020\000\022\024\n\020AGGREGATION_LAST\020\001\022\023\n\017AGGREG" +
      "ATION_MIN\020\002\022\023\n\017AGGREGATION_MAX\020\003\022\023\n\017AGGR" +
      "EGATION_AVG\020\004\022\023\n\017AGGREGATION_SUM\020\005B\010\n\006sc" +
      "heme\032e\n\017HeatmapSettings\022\023\n\013green_value\030\002" +
      " \001(\t\022\024\n\014yellow_value\030\003 \001(\t\022\021\n\tred_value\030" +
      "\004 \001(\t\022\024\n\014violet_value\030\005 \001(\t\032\377\001\n\005Yaxis\022`\n" +
      "\004type\030\001 \001(\0162R.yandex.cloud.monitoring.v3" +
      ".MultiSourceChartWidget.VisualizationSet" +
      "tings.YaxisType\022\r\n\005title\030\002 \001(\t\022\013\n\003min\030\003 " +
      "\001(\t\022\013\n\003max\030\004 \001(\t\022;\n\013unit_format\030\005 \001(\0162&." +
      "yandex.cloud.monitoring.v3.UnitFormat\022.\n" +
      "\tprecision\030\006 \001(\0132\033.google.protobuf.Int64" +
      "Value\032\314\001\n\rYaxisSettings\022\\\n\004left\030\001 \001(\0132N." +
      "yandex.cloud.monitoring.v3.MultiSourceCh" +
      "artWidget.VisualizationSettings.Yaxis\022]\n" +
      "\005right\030\002 \001(\0132N.yandex.cloud.monitoring.v" +
      "3.MultiSourceChartWidget.VisualizationSe" +
      "ttings.Yaxis\"\256\002\n\021VisualizationType\022\"\n\036VI" +
      "SUALIZATION_TYPE_UNSPECIFIED\020\000\022\033\n\027VISUAL" +
      "IZATION_TYPE_LINE\020\001\022\034\n\030VISUALIZATION_TYP" +
      "E_STACK\020\002\022\035\n\031VISUALIZATION_TYPE_COLUMN\020\003" +
      "\022\035\n\031VISUALIZATION_TYPE_POINTS\020\004\022\032\n\026VISUA" +
      "LIZATION_TYPE_PIE\020\005\022\033\n\027VISUALIZATION_TYP" +
      "E_BARS\020\006\022#\n\037VISUALIZATION_TYPE_DISTRIBUT" +
      "ION\020\007\022\036\n\032VISUALIZATION_TYPE_HEATMAP\020\010\"o\n" +
      "\013Interpolate\022\033\n\027INTERPOLATE_UNSPECIFIED\020" +
      "\000\022\026\n\022INTERPOLATE_LINEAR\020\001\022\024\n\020INTERPOLATE" +
      "_LEFT\020\002\022\025\n\021INTERPOLATE_RIGHT\020\003\"Z\n\tYaxisT" +
      "ype\022\032\n\026YAXIS_TYPE_UNSPECIFIED\020\000\022\025\n\021YAXIS" +
      "_TYPE_LINEAR\020\001\022\032\n\026YAXIS_TYPE_LOGARITHMIC" +
      "\020\002\"\304\001\n\021SeriesAggregation\022\"\n\036SERIES_AGGRE" +
      "GATION_UNSPECIFIED\020\000\022\032\n\026SERIES_AGGREGATI" +
      "ON_AVG\020\001\022\032\n\026SERIES_AGGREGATION_MIN\020\002\022\032\n\026" +
      "SERIES_AGGREGATION_MAX\020\003\022\033\n\027SERIES_AGGRE" +
      "GATION_LAST\020\004\022\032\n\026SERIES_AGGREGATION_SUM\020" +
      "\005\032\203\t\n\017SeriesOverrides\022\016\n\004name\030\001 \001(\tH\000\022\026\n" +
      "\014target_index\030\002 \001(\tH\000\022k\n\010settings\030\003 \001(\0132" +
      "Y.yandex.cloud.monitoring.v3.MultiSource" +
      "ChartWidget.SeriesOverrides.SeriesOverri" +
      "deSettings\022\025\n\roverride_name\030\004 \001(\t\022S\n\007mat" +
      "cher\030\005 \001(\0132B.yandex.cloud.monitoring.v3." +
      "MultiSourceChartWidget.OverrideMatcher\032\246" +
      "\004\n\026SeriesOverrideSettings\022\014\n\004name\030\001 \001(\t\022" +
      "\r\n\005color\030\002 \001(\t\022h\n\004type\030\003 \001(\0162Z.yandex.cl" +
      "oud.monitoring.v3.MultiSourceChartWidget" +
      ".SeriesOverrides.SeriesVisualizationType" +
      "\022\022\n\nstack_name\030\004 \001(\t\022\021\n\tgrow_down\030\005 \001(\010\022" +
      "h\n\016yaxis_position\030\006 \001(\0162P.yandex.cloud.m" +
      "onitoring.v3.MultiSourceChartWidget.Seri" +
      "esOverrides.YaxisPosition\022\022\n\nline_width\030" +
      "\007 \001(\003\022w\n\nline_style\030\010 \001(\0162c.yandex.cloud" +
      ".monitoring.v3.MultiSourceChartWidget.Se" +
      "riesOverrides.SeriesOverrideSettings.Lin" +
      "eStyle\"g\n\tLineStyle\022\032\n\026LINE_STYLE_UNSPEC" +
      "IFIED\020\000\022\024\n\020LINE_STYLE_SOLID\020\001\022\023\n\017LINE_ST" +
      "YLE_DASH\020\002\022\023\n\017LINE_STYLE_DOTS\020\003\"b\n\rYaxis" +
      "Position\022\036\n\032YAXIS_POSITION_UNSPECIFIED\020\000" +
      "\022\027\n\023YAXIS_POSITION_LEFT\020\001\022\030\n\024YAXIS_POSIT" +
      "ION_RIGHT\020\002\"\331\001\n\027SeriesVisualizationType\022" +
      ")\n%SERIES_VISUALIZATION_TYPE_UNSPECIFIED" +
      "\020\000\022\"\n\036SERIES_VISUALIZATION_TYPE_LINE\020\001\022#" +
      "\n\037SERIES_VISUALIZATION_TYPE_STACK\020\002\022$\n S" +
      "ERIES_VISUALIZATION_TYPE_COLUMN\020\003\022$\n SER" +
      "IES_VISUALIZATION_TYPE_POINTS\020\004B\006\n\004type\032" +
      "\342\002\n\017OverrideMatcher\022P\n\005query\030\001 \001(\0132?.yan" +
      "dex.cloud.monitoring.v3.MultiSourceChart" +
      "Widget.QueryMatcherH\000\022N\n\004line\030\002 \001(\0132>.ya" +
      "ndex.cloud.monitoring.v3.MultiSourceChar" +
      "tWidget.LineMatcherH\000\022R\n\006regexp\030\003 \001(\0132@." +
      "yandex.cloud.monitoring.v3.MultiSourceCh" +
      "artWidget.RegExpMatcherH\000\022Q\n\006values\030\004 \001(" +
      "\0132?.yandex.cloud.monitoring.v3.MultiSour" +
      "ceChartWidget.ValueMatcherH\000B\006\n\004type\032\035\n\014" +
      "QueryMatcher\022\r\n\005names\030\001 \003(\t\032\037\n\013LineMatch" +
      "er\022\020\n\010line_ids\030\001 \003(\t\032 \n\rRegExpMatcher\022\017\n" +
      "\007reg_exp\030\001 \001(\t\032a\n\014ValueMatcher\022Q\n\nvalue_" +
      "type\030\001 \001(\0162=.yandex.cloud.monitoring.v3." +
      "MultiSourceChartWidget.ValuesType\0325\n\022Nam" +
      "eHidingSettings\022\020\n\010positive\030\001 \001(\010\022\r\n\005nam" +
      "es\030\002 \003(\t\032>\n\016RepeatSettings\022\021\n\trepeat_by\030" +
      "\001 \003(\t\022\031\n\021max_charts_in_row\030\002 \001(\003\"^\n\nValu" +
      "esType\022\033\n\027VALUES_TYPE_UNSPECIFIED\020\000\022\031\n\025V" +
      "ALUES_TYPE_ALL_ZEROS\020\001\022\030\n\024VALUES_TYPE_AL" +
      "L_NULL\020\002\"\231\001\n\016FreezeDuration\022\037\n\033FREEZE_DU" +
      "RATION_UNSPECIFIED\020\000\022\030\n\024FREEZE_DURATION_" +
      "HOUR\020\001\022\027\n\023FREEZE_DURATION_DAY\020\002\022\030\n\024FREEZ" +
      "E_DURATION_WEEK\020\003\022\031\n\025FREEZE_DURATION_MON" +
      "TH\020\004Bk\n\036yandex.cloud.api.monitoring.v3ZI" +
      "github.com/yandex-cloud/go-genproto/yand" +
      "ex/cloud/monitoring/v3;monitoringb\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.WrappersProto.getDescriptor(),
          yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.getDescriptor(),
          yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.getDescriptor(),
          yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.getDescriptor(),
        });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor,
        new java.lang.String[] { "Id", "Targets", "DataSources", "VisualizationSettings", "SeriesOverrides", "NameHidingSettings", "Description", "Title", "DisplayLegend", "Freeze", "Repeat", "Thresholds", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor,
        new java.lang.String[] { "MonitoringTarget", "PrometheusTarget", "Target", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_MonitoringTarget_descriptor,
        new java.lang.String[] { "DataSourceId", "Query", "TextMode", "Hidden", "Name", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_Target_PrometheusTarget_descriptor,
        new java.lang.String[] { "DataSourceId", "WorkspaceId", "Query", "TextMode", "Hidden", "Name", "Step", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor,
        new java.lang.String[] { "MonitoringDataSource", "PrometheusDataSource", "DataSource", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_MonitoringDataSource_descriptor,
        new java.lang.String[] { "Id", "Downsampling", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_DataSource_PrometheusDataSource_descriptor,
        new java.lang.String[] { "Id", "Step", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(2);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor,
        new java.lang.String[] { "Type", "Normalize", "Interpolate", "Aggregation", "ColorSchemeSettings", "HeatmapSettings", "YaxisSettings", "Title", "ShowLabels", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor,
        new java.lang.String[] { "Automatic", "Standard", "Gradient", "Hash", "Thresholds", "Constant", "Scheme", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_AutomaticColorScheme_descriptor,
        new java.lang.String[] { });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_StandardColorScheme_descriptor,
        new java.lang.String[] { });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor.getNestedTypes().get(2);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_GradientColorScheme_descriptor,
        new java.lang.String[] { "GreenValue", "YellowValue", "RedValue", "VioletValue", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor.getNestedTypes().get(3);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_HashColorScheme_descriptor,
        new java.lang.String[] { });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor.getNestedTypes().get(4);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ConstantColorScheme_descriptor,
        new java.lang.String[] { "Color", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_descriptor.getNestedTypes().get(5);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_ColorSchemeSettings_ThresholdsColorScheme_descriptor,
        new java.lang.String[] { "Aggregation", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_HeatmapSettings_descriptor,
        new java.lang.String[] { "GreenValue", "YellowValue", "RedValue", "VioletValue", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor.getNestedTypes().get(2);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_Yaxis_descriptor,
        new java.lang.String[] { "Type", "Title", "Min", "Max", "UnitFormat", "Precision", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_descriptor.getNestedTypes().get(3);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_VisualizationSettings_YaxisSettings_descriptor,
        new java.lang.String[] { "Left", "Right", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(3);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor,
        new java.lang.String[] { "Name", "TargetIndex", "Settings", "OverrideName", "Matcher", "Type", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_SeriesOverrides_SeriesOverrideSettings_descriptor,
        new java.lang.String[] { "Name", "Color", "Type", "StackName", "GrowDown", "YaxisPosition", "LineWidth", "LineStyle", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(4);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_OverrideMatcher_descriptor,
        new java.lang.String[] { "Query", "Line", "Regexp", "Values", "Type", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(5);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_QueryMatcher_descriptor,
        new java.lang.String[] { "Names", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(6);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_LineMatcher_descriptor,
        new java.lang.String[] { "LineIds", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(7);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RegExpMatcher_descriptor,
        new java.lang.String[] { "RegExp", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(8);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_ValueMatcher_descriptor,
        new java.lang.String[] { "ValueType", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(9);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_NameHidingSettings_descriptor,
        new java.lang.String[] { "Positive", "Names", });
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_descriptor =
      internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_descriptor.getNestedTypes().get(10);
    internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_monitoring_v3_MultiSourceChartWidget_RepeatSettings_descriptor,
        new java.lang.String[] { "RepeatBy", "MaxChartsInRow", });
    com.google.protobuf.WrappersProto.getDescriptor();
    yandex.cloud.api.monitoring.v3.DownsamplingOuterClass.getDescriptor();
    yandex.cloud.api.monitoring.v3.UnitFormatOuterClass.getDescriptor();
    yandex.cloud.api.monitoring.v3.ThresholdsOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
