// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/speechsense/v1/audio.proto

package yandex.cloud.api.speechsense.v1;

public final class AudioProto {
  private AudioProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RawAudioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.RawAudio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  Type of audio encoding
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The enum numeric value on the wire for audioEncoding.
     */
    int getAudioEncodingValue();
    /**
     * <pre>
     *  Type of audio encoding
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The audioEncoding.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding getAudioEncoding();

    /**
     * <pre>
     *  PCM sample rate
     * </pre>
     *
     * <code>int64 sample_rate_hertz = 2;</code>
     * @return The sampleRateHertz.
     */
    long getSampleRateHertz();

    /**
     * <pre>
     *  PCM channel count.
     * </pre>
     *
     * <code>int64 audio_channel_count = 3;</code>
     * @return The audioChannelCount.
     */
    long getAudioChannelCount();
  }
  /**
   * <pre>
   * RAW Audio format spec (no container to infer type). Used in AudioFormat options.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.speechsense.v1.RawAudio}
   */
  public static final class RawAudio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.RawAudio)
      RawAudioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawAudio.newBuilder() to construct.
    private RawAudio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawAudio() {
      audioEncoding_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawAudio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RawAudio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              audioEncoding_ = rawValue;
              break;
            }
            case 16: {

              sampleRateHertz_ = input.readInt64();
              break;
            }
            case 24: {

              audioChannelCount_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_RawAudio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_RawAudio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.class, yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.speechsense.v1.RawAudio.AudioEncoding}
     */
    public enum AudioEncoding
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AUDIO_ENCODING_UNSPECIFIED = 0;</code>
       */
      AUDIO_ENCODING_UNSPECIFIED(0),
      /**
       * <pre>
       * Audio bit depth 16-bit signed little-endian (Linear PCM).
       * </pre>
       *
       * <code>AUDIO_ENCODING_LINEAR16_PCM = 1;</code>
       */
      AUDIO_ENCODING_LINEAR16_PCM(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>AUDIO_ENCODING_UNSPECIFIED = 0;</code>
       */
      public static final int AUDIO_ENCODING_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Audio bit depth 16-bit signed little-endian (Linear PCM).
       * </pre>
       *
       * <code>AUDIO_ENCODING_LINEAR16_PCM = 1;</code>
       */
      public static final int AUDIO_ENCODING_LINEAR16_PCM_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioEncoding valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AudioEncoding forNumber(int value) {
        switch (value) {
          case 0: return AUDIO_ENCODING_UNSPECIFIED;
          case 1: return AUDIO_ENCODING_LINEAR16_PCM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AudioEncoding>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AudioEncoding> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AudioEncoding>() {
              public AudioEncoding findValueByNumber(int number) {
                return AudioEncoding.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDescriptor().getEnumTypes().get(0);
      }

      private static final AudioEncoding[] VALUES = values();

      public static AudioEncoding valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AudioEncoding(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.speechsense.v1.RawAudio.AudioEncoding)
    }

    public static final int AUDIO_ENCODING_FIELD_NUMBER = 1;
    private int audioEncoding_;
    /**
     * <pre>
     *  Type of audio encoding
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The enum numeric value on the wire for audioEncoding.
     */
    @java.lang.Override public int getAudioEncodingValue() {
      return audioEncoding_;
    }
    /**
     * <pre>
     *  Type of audio encoding
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The audioEncoding.
     */
    @java.lang.Override public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding getAudioEncoding() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding result = yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding.valueOf(audioEncoding_);
      return result == null ? yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding.UNRECOGNIZED : result;
    }

    public static final int SAMPLE_RATE_HERTZ_FIELD_NUMBER = 2;
    private long sampleRateHertz_;
    /**
     * <pre>
     *  PCM sample rate
     * </pre>
     *
     * <code>int64 sample_rate_hertz = 2;</code>
     * @return The sampleRateHertz.
     */
    @java.lang.Override
    public long getSampleRateHertz() {
      return sampleRateHertz_;
    }

    public static final int AUDIO_CHANNEL_COUNT_FIELD_NUMBER = 3;
    private long audioChannelCount_;
    /**
     * <pre>
     *  PCM channel count.
     * </pre>
     *
     * <code>int64 audio_channel_count = 3;</code>
     * @return The audioChannelCount.
     */
    @java.lang.Override
    public long getAudioChannelCount() {
      return audioChannelCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioEncoding_ != yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding.AUDIO_ENCODING_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, audioEncoding_);
      }
      if (sampleRateHertz_ != 0L) {
        output.writeInt64(2, sampleRateHertz_);
      }
      if (audioChannelCount_ != 0L) {
        output.writeInt64(3, audioChannelCount_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioEncoding_ != yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding.AUDIO_ENCODING_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, audioEncoding_);
      }
      if (sampleRateHertz_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sampleRateHertz_);
      }
      if (audioChannelCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, audioChannelCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.AudioProto.RawAudio)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.AudioProto.RawAudio other = (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) obj;

      if (audioEncoding_ != other.audioEncoding_) return false;
      if (getSampleRateHertz()
          != other.getSampleRateHertz()) return false;
      if (getAudioChannelCount()
          != other.getAudioChannelCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUDIO_ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + audioEncoding_;
      hash = (37 * hash) + SAMPLE_RATE_HERTZ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSampleRateHertz());
      hash = (37 * hash) + AUDIO_CHANNEL_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAudioChannelCount());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.AudioProto.RawAudio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RAW Audio format spec (no container to infer type). Used in AudioFormat options.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.speechsense.v1.RawAudio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.RawAudio)
        yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_RawAudio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_RawAudio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.class, yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        audioEncoding_ = 0;

        sampleRateHertz_ = 0L;

        audioChannelCount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_RawAudio_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio build() {
        yandex.cloud.api.speechsense.v1.AudioProto.RawAudio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio buildPartial() {
        yandex.cloud.api.speechsense.v1.AudioProto.RawAudio result = new yandex.cloud.api.speechsense.v1.AudioProto.RawAudio(this);
        result.audioEncoding_ = audioEncoding_;
        result.sampleRateHertz_ = sampleRateHertz_;
        result.audioChannelCount_ = audioChannelCount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.RawAudio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.AudioProto.RawAudio other) {
        if (other == yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance()) return this;
        if (other.audioEncoding_ != 0) {
          setAudioEncodingValue(other.getAudioEncodingValue());
        }
        if (other.getSampleRateHertz() != 0L) {
          setSampleRateHertz(other.getSampleRateHertz());
        }
        if (other.getAudioChannelCount() != 0L) {
          setAudioChannelCount(other.getAudioChannelCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.AudioProto.RawAudio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int audioEncoding_ = 0;
      /**
       * <pre>
       *  Type of audio encoding
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @return The enum numeric value on the wire for audioEncoding.
       */
      @java.lang.Override public int getAudioEncodingValue() {
        return audioEncoding_;
      }
      /**
       * <pre>
       *  Type of audio encoding
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @param value The enum numeric value on the wire for audioEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setAudioEncodingValue(int value) {
        
        audioEncoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  Type of audio encoding
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @return The audioEncoding.
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding getAudioEncoding() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding result = yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding.valueOf(audioEncoding_);
        return result == null ? yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *  Type of audio encoding
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @param value The audioEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setAudioEncoding(yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.AudioEncoding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        audioEncoding_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  Type of audio encoding
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAudioEncoding() {
        
        audioEncoding_ = 0;
        onChanged();
        return this;
      }

      private long sampleRateHertz_ ;
      /**
       * <pre>
       *  PCM sample rate
       * </pre>
       *
       * <code>int64 sample_rate_hertz = 2;</code>
       * @return The sampleRateHertz.
       */
      @java.lang.Override
      public long getSampleRateHertz() {
        return sampleRateHertz_;
      }
      /**
       * <pre>
       *  PCM sample rate
       * </pre>
       *
       * <code>int64 sample_rate_hertz = 2;</code>
       * @param value The sampleRateHertz to set.
       * @return This builder for chaining.
       */
      public Builder setSampleRateHertz(long value) {
        
        sampleRateHertz_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  PCM sample rate
       * </pre>
       *
       * <code>int64 sample_rate_hertz = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleRateHertz() {
        
        sampleRateHertz_ = 0L;
        onChanged();
        return this;
      }

      private long audioChannelCount_ ;
      /**
       * <pre>
       *  PCM channel count.
       * </pre>
       *
       * <code>int64 audio_channel_count = 3;</code>
       * @return The audioChannelCount.
       */
      @java.lang.Override
      public long getAudioChannelCount() {
        return audioChannelCount_;
      }
      /**
       * <pre>
       *  PCM channel count.
       * </pre>
       *
       * <code>int64 audio_channel_count = 3;</code>
       * @param value The audioChannelCount to set.
       * @return This builder for chaining.
       */
      public Builder setAudioChannelCount(long value) {
        
        audioChannelCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  PCM channel count.
       * </pre>
       *
       * <code>int64 audio_channel_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAudioChannelCount() {
        
        audioChannelCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.RawAudio)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.RawAudio)
    private static final yandex.cloud.api.speechsense.v1.AudioProto.RawAudio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.AudioProto.RawAudio();
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.RawAudio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawAudio>
        PARSER = new com.google.protobuf.AbstractParser<RawAudio>() {
      @java.lang.Override
      public RawAudio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RawAudio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RawAudio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawAudio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContainerAudioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.ContainerAudio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  Type of audio container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The enum numeric value on the wire for containerAudioType.
     */
    int getContainerAudioTypeValue();
    /**
     * <pre>
     *  Type of audio container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The containerAudioType.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType getContainerAudioType();
  }
  /**
   * <pre>
   * Audio with fixed type in container. Used in AudioFormat options.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.speechsense.v1.ContainerAudio}
   */
  public static final class ContainerAudio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.ContainerAudio)
      ContainerAudioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContainerAudio.newBuilder() to construct.
    private ContainerAudio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContainerAudio() {
      containerAudioType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContainerAudio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ContainerAudio(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              containerAudioType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_ContainerAudio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_ContainerAudio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.class, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder.class);
    }

    /**
     * Protobuf enum {@code yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType}
     */
    public enum ContainerAudioType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CONTAINER_AUDIO_TYPE_UNSPECIFIED = 0;</code>
       */
      CONTAINER_AUDIO_TYPE_UNSPECIFIED(0),
      /**
       * <pre>
       * Audio bit depth 16-bit signed little-endian (Linear PCM).
       * </pre>
       *
       * <code>CONTAINER_AUDIO_TYPE_WAV = 1;</code>
       */
      CONTAINER_AUDIO_TYPE_WAV(1),
      /**
       * <pre>
       * Data is encoded using the OPUS audio codec and compressed using the OGG container format.
       * </pre>
       *
       * <code>CONTAINER_AUDIO_TYPE_OGG_OPUS = 2;</code>
       */
      CONTAINER_AUDIO_TYPE_OGG_OPUS(2),
      /**
       * <pre>
       * Data is encoded using MPEG-1/2 Layer III and compressed using the MP3 container format.
       * </pre>
       *
       * <code>CONTAINER_AUDIO_TYPE_MP3 = 3;</code>
       */
      CONTAINER_AUDIO_TYPE_MP3(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CONTAINER_AUDIO_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int CONTAINER_AUDIO_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Audio bit depth 16-bit signed little-endian (Linear PCM).
       * </pre>
       *
       * <code>CONTAINER_AUDIO_TYPE_WAV = 1;</code>
       */
      public static final int CONTAINER_AUDIO_TYPE_WAV_VALUE = 1;
      /**
       * <pre>
       * Data is encoded using the OPUS audio codec and compressed using the OGG container format.
       * </pre>
       *
       * <code>CONTAINER_AUDIO_TYPE_OGG_OPUS = 2;</code>
       */
      public static final int CONTAINER_AUDIO_TYPE_OGG_OPUS_VALUE = 2;
      /**
       * <pre>
       * Data is encoded using MPEG-1/2 Layer III and compressed using the MP3 container format.
       * </pre>
       *
       * <code>CONTAINER_AUDIO_TYPE_MP3 = 3;</code>
       */
      public static final int CONTAINER_AUDIO_TYPE_MP3_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContainerAudioType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ContainerAudioType forNumber(int value) {
        switch (value) {
          case 0: return CONTAINER_AUDIO_TYPE_UNSPECIFIED;
          case 1: return CONTAINER_AUDIO_TYPE_WAV;
          case 2: return CONTAINER_AUDIO_TYPE_OGG_OPUS;
          case 3: return CONTAINER_AUDIO_TYPE_MP3;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ContainerAudioType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ContainerAudioType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ContainerAudioType>() {
              public ContainerAudioType findValueByNumber(int number) {
                return ContainerAudioType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDescriptor().getEnumTypes().get(0);
      }

      private static final ContainerAudioType[] VALUES = values();

      public static ContainerAudioType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ContainerAudioType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType)
    }

    public static final int CONTAINER_AUDIO_TYPE_FIELD_NUMBER = 1;
    private int containerAudioType_;
    /**
     * <pre>
     *  Type of audio container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The enum numeric value on the wire for containerAudioType.
     */
    @java.lang.Override public int getContainerAudioTypeValue() {
      return containerAudioType_;
    }
    /**
     * <pre>
     *  Type of audio container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The containerAudioType.
     */
    @java.lang.Override public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType getContainerAudioType() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType result = yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType.valueOf(containerAudioType_);
      return result == null ? yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (containerAudioType_ != yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType.CONTAINER_AUDIO_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, containerAudioType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (containerAudioType_ != yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType.CONTAINER_AUDIO_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, containerAudioType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio other = (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) obj;

      if (containerAudioType_ != other.containerAudioType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTAINER_AUDIO_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + containerAudioType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Audio with fixed type in container. Used in AudioFormat options.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.speechsense.v1.ContainerAudio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.ContainerAudio)
        yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_ContainerAudio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_ContainerAudio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.class, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        containerAudioType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_ContainerAudio_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio build() {
        yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio buildPartial() {
        yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio result = new yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio(this);
        result.containerAudioType_ = containerAudioType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio other) {
        if (other == yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance()) return this;
        if (other.containerAudioType_ != 0) {
          setContainerAudioTypeValue(other.getContainerAudioTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int containerAudioType_ = 0;
      /**
       * <pre>
       *  Type of audio container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @return The enum numeric value on the wire for containerAudioType.
       */
      @java.lang.Override public int getContainerAudioTypeValue() {
        return containerAudioType_;
      }
      /**
       * <pre>
       *  Type of audio container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @param value The enum numeric value on the wire for containerAudioType to set.
       * @return This builder for chaining.
       */
      public Builder setContainerAudioTypeValue(int value) {
        
        containerAudioType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  Type of audio container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @return The containerAudioType.
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType getContainerAudioType() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType result = yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType.valueOf(containerAudioType_);
        return result == null ? yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *  Type of audio container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @param value The containerAudioType to set.
       * @return This builder for chaining.
       */
      public Builder setContainerAudioType(yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.ContainerAudioType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        containerAudioType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  Type of audio container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContainerAudioType() {
        
        containerAudioType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.ContainerAudio)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.ContainerAudio)
    private static final yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio();
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContainerAudio>
        PARSER = new com.google.protobuf.AbstractParser<ContainerAudio>() {
      @java.lang.Override
      public ContainerAudio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ContainerAudio(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ContainerAudio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContainerAudio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.AudioMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Audio without container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
     * @return Whether the rawAudio field is set.
     */
    boolean hasRawAudio();
    /**
     * <pre>
     * Audio without container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
     * @return The rawAudio.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.RawAudio getRawAudio();
    /**
     * <pre>
     * Audio without container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
     */
    yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder getRawAudioOrBuilder();

    /**
     * <pre>
     * Audio is wrapped in container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
     * @return Whether the containerAudio field is set.
     */
    boolean hasContainerAudio();
    /**
     * <pre>
     * Audio is wrapped in container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
     * @return The containerAudio.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio getContainerAudio();
    /**
     * <pre>
     * Audio is wrapped in container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
     */
    yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder getContainerAudioOrBuilder();

    public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.AudioFormatCase getAudioFormatCase();
  }
  /**
   * <pre>
   * Audio format options.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.speechsense.v1.AudioMetadata}
   */
  public static final class AudioMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.AudioMetadata)
      AudioMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioMetadata.newBuilder() to construct.
    private AudioMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioMetadata() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AudioMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder subBuilder = null;
              if (audioFormatCase_ == 1) {
                subBuilder = ((yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_).toBuilder();
              }
              audioFormat_ =
                  input.readMessage(yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_);
                audioFormat_ = subBuilder.buildPartial();
              }
              audioFormatCase_ = 1;
              break;
            }
            case 18: {
              yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder subBuilder = null;
              if (audioFormatCase_ == 2) {
                subBuilder = ((yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_).toBuilder();
              }
              audioFormat_ =
                  input.readMessage(yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_);
                audioFormat_ = subBuilder.buildPartial();
              }
              audioFormatCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder.class);
    }

    private int audioFormatCase_ = 0;
    private java.lang.Object audioFormat_;
    public enum AudioFormatCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RAW_AUDIO(1),
      CONTAINER_AUDIO(2),
      AUDIOFORMAT_NOT_SET(0);
      private final int value;
      private AudioFormatCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioFormatCase valueOf(int value) {
        return forNumber(value);
      }

      public static AudioFormatCase forNumber(int value) {
        switch (value) {
          case 1: return RAW_AUDIO;
          case 2: return CONTAINER_AUDIO;
          case 0: return AUDIOFORMAT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public AudioFormatCase
    getAudioFormatCase() {
      return AudioFormatCase.forNumber(
          audioFormatCase_);
    }

    public static final int RAW_AUDIO_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Audio without container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
     * @return Whether the rawAudio field is set.
     */
    @java.lang.Override
    public boolean hasRawAudio() {
      return audioFormatCase_ == 1;
    }
    /**
     * <pre>
     * Audio without container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
     * @return The rawAudio.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio getRawAudio() {
      if (audioFormatCase_ == 1) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
    }
    /**
     * <pre>
     * Audio without container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder getRawAudioOrBuilder() {
      if (audioFormatCase_ == 1) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
    }

    public static final int CONTAINER_AUDIO_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Audio is wrapped in container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
     * @return Whether the containerAudio field is set.
     */
    @java.lang.Override
    public boolean hasContainerAudio() {
      return audioFormatCase_ == 2;
    }
    /**
     * <pre>
     * Audio is wrapped in container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
     * @return The containerAudio.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio getContainerAudio() {
      if (audioFormatCase_ == 2) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
    }
    /**
     * <pre>
     * Audio is wrapped in container.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder getContainerAudioOrBuilder() {
      if (audioFormatCase_ == 2) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioFormatCase_ == 1) {
        output.writeMessage(1, (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_);
      }
      if (audioFormatCase_ == 2) {
        output.writeMessage(2, (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioFormatCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_);
      }
      if (audioFormatCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata other = (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) obj;

      if (!getAudioFormatCase().equals(other.getAudioFormatCase())) return false;
      switch (audioFormatCase_) {
        case 1:
          if (!getRawAudio()
              .equals(other.getRawAudio())) return false;
          break;
        case 2:
          if (!getContainerAudio()
              .equals(other.getContainerAudio())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (audioFormatCase_) {
        case 1:
          hash = (37 * hash) + RAW_AUDIO_FIELD_NUMBER;
          hash = (53 * hash) + getRawAudio().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CONTAINER_AUDIO_FIELD_NUMBER;
          hash = (53 * hash) + getContainerAudio().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Audio format options.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.speechsense.v1.AudioMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.AudioMetadata)
        yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        audioFormatCase_ = 0;
        audioFormat_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioMetadata_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata build() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata buildPartial() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata result = new yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata(this);
        if (audioFormatCase_ == 1) {
          if (rawAudioBuilder_ == null) {
            result.audioFormat_ = audioFormat_;
          } else {
            result.audioFormat_ = rawAudioBuilder_.build();
          }
        }
        if (audioFormatCase_ == 2) {
          if (containerAudioBuilder_ == null) {
            result.audioFormat_ = audioFormat_;
          } else {
            result.audioFormat_ = containerAudioBuilder_.build();
          }
        }
        result.audioFormatCase_ = audioFormatCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata other) {
        if (other == yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance()) return this;
        switch (other.getAudioFormatCase()) {
          case RAW_AUDIO: {
            mergeRawAudio(other.getRawAudio());
            break;
          }
          case CONTAINER_AUDIO: {
            mergeContainerAudio(other.getContainerAudio());
            break;
          }
          case AUDIOFORMAT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int audioFormatCase_ = 0;
      private java.lang.Object audioFormat_;
      public AudioFormatCase
          getAudioFormatCase() {
        return AudioFormatCase.forNumber(
            audioFormatCase_);
      }

      public Builder clearAudioFormat() {
        audioFormatCase_ = 0;
        audioFormat_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.RawAudio, yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder, yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder> rawAudioBuilder_;
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       * @return Whether the rawAudio field is set.
       */
      @java.lang.Override
      public boolean hasRawAudio() {
        return audioFormatCase_ == 1;
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       * @return The rawAudio.
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio getRawAudio() {
        if (rawAudioBuilder_ == null) {
          if (audioFormatCase_ == 1) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
        } else {
          if (audioFormatCase_ == 1) {
            return rawAudioBuilder_.getMessage();
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      public Builder setRawAudio(yandex.cloud.api.speechsense.v1.AudioProto.RawAudio value) {
        if (rawAudioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioFormat_ = value;
          onChanged();
        } else {
          rawAudioBuilder_.setMessage(value);
        }
        audioFormatCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      public Builder setRawAudio(
          yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder builderForValue) {
        if (rawAudioBuilder_ == null) {
          audioFormat_ = builderForValue.build();
          onChanged();
        } else {
          rawAudioBuilder_.setMessage(builderForValue.build());
        }
        audioFormatCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      public Builder mergeRawAudio(yandex.cloud.api.speechsense.v1.AudioProto.RawAudio value) {
        if (rawAudioBuilder_ == null) {
          if (audioFormatCase_ == 1 &&
              audioFormat_ != yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance()) {
            audioFormat_ = yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.newBuilder((yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_)
                .mergeFrom(value).buildPartial();
          } else {
            audioFormat_ = value;
          }
          onChanged();
        } else {
          if (audioFormatCase_ == 1) {
            rawAudioBuilder_.mergeFrom(value);
          }
          rawAudioBuilder_.setMessage(value);
        }
        audioFormatCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      public Builder clearRawAudio() {
        if (rawAudioBuilder_ == null) {
          if (audioFormatCase_ == 1) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
            onChanged();
          }
        } else {
          if (audioFormatCase_ == 1) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
          }
          rawAudioBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder getRawAudioBuilder() {
        return getRawAudioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder getRawAudioOrBuilder() {
        if ((audioFormatCase_ == 1) && (rawAudioBuilder_ != null)) {
          return rawAudioBuilder_.getMessageOrBuilder();
        } else {
          if (audioFormatCase_ == 1) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Audio without container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.RawAudio raw_audio = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.RawAudio, yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder, yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder> 
          getRawAudioFieldBuilder() {
        if (rawAudioBuilder_ == null) {
          if (!(audioFormatCase_ == 1)) {
            audioFormat_ = yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.getDefaultInstance();
          }
          rawAudioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.AudioProto.RawAudio, yandex.cloud.api.speechsense.v1.AudioProto.RawAudio.Builder, yandex.cloud.api.speechsense.v1.AudioProto.RawAudioOrBuilder>(
                  (yandex.cloud.api.speechsense.v1.AudioProto.RawAudio) audioFormat_,
                  getParentForChildren(),
                  isClean());
          audioFormat_ = null;
        }
        audioFormatCase_ = 1;
        onChanged();;
        return rawAudioBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder> containerAudioBuilder_;
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       * @return Whether the containerAudio field is set.
       */
      @java.lang.Override
      public boolean hasContainerAudio() {
        return audioFormatCase_ == 2;
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       * @return The containerAudio.
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio getContainerAudio() {
        if (containerAudioBuilder_ == null) {
          if (audioFormatCase_ == 2) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
        } else {
          if (audioFormatCase_ == 2) {
            return containerAudioBuilder_.getMessage();
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      public Builder setContainerAudio(yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio value) {
        if (containerAudioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioFormat_ = value;
          onChanged();
        } else {
          containerAudioBuilder_.setMessage(value);
        }
        audioFormatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      public Builder setContainerAudio(
          yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder builderForValue) {
        if (containerAudioBuilder_ == null) {
          audioFormat_ = builderForValue.build();
          onChanged();
        } else {
          containerAudioBuilder_.setMessage(builderForValue.build());
        }
        audioFormatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      public Builder mergeContainerAudio(yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio value) {
        if (containerAudioBuilder_ == null) {
          if (audioFormatCase_ == 2 &&
              audioFormat_ != yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance()) {
            audioFormat_ = yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.newBuilder((yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_)
                .mergeFrom(value).buildPartial();
          } else {
            audioFormat_ = value;
          }
          onChanged();
        } else {
          if (audioFormatCase_ == 2) {
            containerAudioBuilder_.mergeFrom(value);
          }
          containerAudioBuilder_.setMessage(value);
        }
        audioFormatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      public Builder clearContainerAudio() {
        if (containerAudioBuilder_ == null) {
          if (audioFormatCase_ == 2) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
            onChanged();
          }
        } else {
          if (audioFormatCase_ == 2) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
          }
          containerAudioBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder getContainerAudioBuilder() {
        return getContainerAudioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder getContainerAudioOrBuilder() {
        if ((audioFormatCase_ == 2) && (containerAudioBuilder_ != null)) {
          return containerAudioBuilder_.getMessageOrBuilder();
        } else {
          if (audioFormatCase_ == 2) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Audio is wrapped in container.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.ContainerAudio container_audio = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder> 
          getContainerAudioFieldBuilder() {
        if (containerAudioBuilder_ == null) {
          if (!(audioFormatCase_ == 2)) {
            audioFormat_ = yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.getDefaultInstance();
          }
          containerAudioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio.Builder, yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudioOrBuilder>(
                  (yandex.cloud.api.speechsense.v1.AudioProto.ContainerAudio) audioFormat_,
                  getParentForChildren(),
                  isClean());
          audioFormat_ = null;
        }
        audioFormatCase_ = 2;
        onChanged();;
        return containerAudioBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.AudioMetadata)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.AudioMetadata)
    private static final yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata();
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioMetadata>
        PARSER = new com.google.protobuf.AbstractParser<AudioMetadata>() {
      @java.lang.Override
      public AudioMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AudioMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.AudioChunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Data chunk with audio.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.speechsense.v1.AudioChunk}
   */
  public static final class AudioChunk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.AudioChunk)
      AudioChunkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioChunk.newBuilder() to construct.
    private AudioChunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioChunk() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioChunk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AudioChunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioChunk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk other = (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Data chunk with audio.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.speechsense.v1.AudioChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.AudioChunk)
        yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioChunk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioChunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioChunk_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk build() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk buildPartial() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk result = new yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk(this);
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk other) {
        if (other == yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.AudioChunk)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.AudioChunk)
    private static final yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk();
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioChunk>
        PARSER = new com.google.protobuf.AbstractParser<AudioChunk>() {
      @java.lang.Override
      public AudioChunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioChunk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AudioChunk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioChunk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioStreamingRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.AudioStreamingRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Session options. Should be the first message from user.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return Whether the audioMetadata field is set.
     */
    boolean hasAudioMetadata();
    /**
     * <pre>
     * Session options. Should be the first message from user.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return The audioMetadata.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getAudioMetadata();
    /**
     * <pre>
     * Session options. Should be the first message from user.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder getAudioMetadataOrBuilder();

    /**
     * <pre>
     * Chunk with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
     * @return Whether the chunk field is set.
     */
    boolean hasChunk();
    /**
     * <pre>
     * Chunk with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
     * @return The chunk.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getChunk();
    /**
     * <pre>
     * Chunk with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder getChunkOrBuilder();

    public yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.AudioEventCase getAudioEventCase();
  }
  /**
   * <pre>
   * Streaming audio request
   * First message should be audio metadata.
   * The next messages are audio data chunks.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.speechsense.v1.AudioStreamingRequest}
   */
  public static final class AudioStreamingRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.AudioStreamingRequest)
      AudioStreamingRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioStreamingRequest.newBuilder() to construct.
    private AudioStreamingRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioStreamingRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioStreamingRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AudioStreamingRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder subBuilder = null;
              if (audioEventCase_ == 1) {
                subBuilder = ((yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_).toBuilder();
              }
              audioEvent_ =
                  input.readMessage(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_);
                audioEvent_ = subBuilder.buildPartial();
              }
              audioEventCase_ = 1;
              break;
            }
            case 18: {
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder subBuilder = null;
              if (audioEventCase_ == 2) {
                subBuilder = ((yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_).toBuilder();
              }
              audioEvent_ =
                  input.readMessage(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_);
                audioEvent_ = subBuilder.buildPartial();
              }
              audioEventCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.Builder.class);
    }

    private int audioEventCase_ = 0;
    private java.lang.Object audioEvent_;
    public enum AudioEventCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      AUDIO_METADATA(1),
      CHUNK(2),
      AUDIOEVENT_NOT_SET(0);
      private final int value;
      private AudioEventCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioEventCase valueOf(int value) {
        return forNumber(value);
      }

      public static AudioEventCase forNumber(int value) {
        switch (value) {
          case 1: return AUDIO_METADATA;
          case 2: return CHUNK;
          case 0: return AUDIOEVENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public AudioEventCase
    getAudioEventCase() {
      return AudioEventCase.forNumber(
          audioEventCase_);
    }

    public static final int AUDIO_METADATA_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Session options. Should be the first message from user.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return Whether the audioMetadata field is set.
     */
    @java.lang.Override
    public boolean hasAudioMetadata() {
      return audioEventCase_ == 1;
    }
    /**
     * <pre>
     * Session options. Should be the first message from user.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return The audioMetadata.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getAudioMetadata() {
      if (audioEventCase_ == 1) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
    }
    /**
     * <pre>
     * Session options. Should be the first message from user.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder getAudioMetadataOrBuilder() {
      if (audioEventCase_ == 1) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
    }

    public static final int CHUNK_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Chunk with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
     * @return Whether the chunk field is set.
     */
    @java.lang.Override
    public boolean hasChunk() {
      return audioEventCase_ == 2;
    }
    /**
     * <pre>
     * Chunk with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
     * @return The chunk.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getChunk() {
      if (audioEventCase_ == 2) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
    }
    /**
     * <pre>
     * Chunk with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder getChunkOrBuilder() {
      if (audioEventCase_ == 2) {
         return (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_;
      }
      return yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioEventCase_ == 1) {
        output.writeMessage(1, (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_);
      }
      if (audioEventCase_ == 2) {
        output.writeMessage(2, (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioEventCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_);
      }
      if (audioEventCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest other = (yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest) obj;

      if (!getAudioEventCase().equals(other.getAudioEventCase())) return false;
      switch (audioEventCase_) {
        case 1:
          if (!getAudioMetadata()
              .equals(other.getAudioMetadata())) return false;
          break;
        case 2:
          if (!getChunk()
              .equals(other.getChunk())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (audioEventCase_) {
        case 1:
          hash = (37 * hash) + AUDIO_METADATA_FIELD_NUMBER;
          hash = (53 * hash) + getAudioMetadata().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CHUNK_FIELD_NUMBER;
          hash = (53 * hash) + getChunk().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Streaming audio request
     * First message should be audio metadata.
     * The next messages are audio data chunks.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.speechsense.v1.AudioStreamingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.AudioStreamingRequest)
        yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        audioEventCase_ = 0;
        audioEvent_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest build() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest buildPartial() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest result = new yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest(this);
        if (audioEventCase_ == 1) {
          if (audioMetadataBuilder_ == null) {
            result.audioEvent_ = audioEvent_;
          } else {
            result.audioEvent_ = audioMetadataBuilder_.build();
          }
        }
        if (audioEventCase_ == 2) {
          if (chunkBuilder_ == null) {
            result.audioEvent_ = audioEvent_;
          } else {
            result.audioEvent_ = chunkBuilder_.build();
          }
        }
        result.audioEventCase_ = audioEventCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest other) {
        if (other == yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest.getDefaultInstance()) return this;
        switch (other.getAudioEventCase()) {
          case AUDIO_METADATA: {
            mergeAudioMetadata(other.getAudioMetadata());
            break;
          }
          case CHUNK: {
            mergeChunk(other.getChunk());
            break;
          }
          case AUDIOEVENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int audioEventCase_ = 0;
      private java.lang.Object audioEvent_;
      public AudioEventCase
          getAudioEventCase() {
        return AudioEventCase.forNumber(
            audioEventCase_);
      }

      public Builder clearAudioEvent() {
        audioEventCase_ = 0;
        audioEvent_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder> audioMetadataBuilder_;
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       * @return Whether the audioMetadata field is set.
       */
      @java.lang.Override
      public boolean hasAudioMetadata() {
        return audioEventCase_ == 1;
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       * @return The audioMetadata.
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getAudioMetadata() {
        if (audioMetadataBuilder_ == null) {
          if (audioEventCase_ == 1) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
        } else {
          if (audioEventCase_ == 1) {
            return audioMetadataBuilder_.getMessage();
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder setAudioMetadata(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata value) {
        if (audioMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioEvent_ = value;
          onChanged();
        } else {
          audioMetadataBuilder_.setMessage(value);
        }
        audioEventCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder setAudioMetadata(
          yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder builderForValue) {
        if (audioMetadataBuilder_ == null) {
          audioEvent_ = builderForValue.build();
          onChanged();
        } else {
          audioMetadataBuilder_.setMessage(builderForValue.build());
        }
        audioEventCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder mergeAudioMetadata(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata value) {
        if (audioMetadataBuilder_ == null) {
          if (audioEventCase_ == 1 &&
              audioEvent_ != yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance()) {
            audioEvent_ = yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.newBuilder((yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_)
                .mergeFrom(value).buildPartial();
          } else {
            audioEvent_ = value;
          }
          onChanged();
        } else {
          if (audioEventCase_ == 1) {
            audioMetadataBuilder_.mergeFrom(value);
          }
          audioMetadataBuilder_.setMessage(value);
        }
        audioEventCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder clearAudioMetadata() {
        if (audioMetadataBuilder_ == null) {
          if (audioEventCase_ == 1) {
            audioEventCase_ = 0;
            audioEvent_ = null;
            onChanged();
          }
        } else {
          if (audioEventCase_ == 1) {
            audioEventCase_ = 0;
            audioEvent_ = null;
          }
          audioMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder getAudioMetadataBuilder() {
        return getAudioMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder getAudioMetadataOrBuilder() {
        if ((audioEventCase_ == 1) && (audioMetadataBuilder_ != null)) {
          return audioMetadataBuilder_.getMessageOrBuilder();
        } else {
          if (audioEventCase_ == 1) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Session options. Should be the first message from user.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder> 
          getAudioMetadataFieldBuilder() {
        if (audioMetadataBuilder_ == null) {
          if (!(audioEventCase_ == 1)) {
            audioEvent_ = yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance();
          }
          audioMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder>(
                  (yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata) audioEvent_,
                  getParentForChildren(),
                  isClean());
          audioEvent_ = null;
        }
        audioEventCase_ = 1;
        onChanged();;
        return audioMetadataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder> chunkBuilder_;
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       * @return Whether the chunk field is set.
       */
      @java.lang.Override
      public boolean hasChunk() {
        return audioEventCase_ == 2;
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       * @return The chunk.
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getChunk() {
        if (chunkBuilder_ == null) {
          if (audioEventCase_ == 2) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
        } else {
          if (audioEventCase_ == 2) {
            return chunkBuilder_.getMessage();
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      public Builder setChunk(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk value) {
        if (chunkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioEvent_ = value;
          onChanged();
        } else {
          chunkBuilder_.setMessage(value);
        }
        audioEventCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      public Builder setChunk(
          yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder builderForValue) {
        if (chunkBuilder_ == null) {
          audioEvent_ = builderForValue.build();
          onChanged();
        } else {
          chunkBuilder_.setMessage(builderForValue.build());
        }
        audioEventCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      public Builder mergeChunk(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk value) {
        if (chunkBuilder_ == null) {
          if (audioEventCase_ == 2 &&
              audioEvent_ != yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance()) {
            audioEvent_ = yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.newBuilder((yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_)
                .mergeFrom(value).buildPartial();
          } else {
            audioEvent_ = value;
          }
          onChanged();
        } else {
          if (audioEventCase_ == 2) {
            chunkBuilder_.mergeFrom(value);
          }
          chunkBuilder_.setMessage(value);
        }
        audioEventCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      public Builder clearChunk() {
        if (chunkBuilder_ == null) {
          if (audioEventCase_ == 2) {
            audioEventCase_ = 0;
            audioEvent_ = null;
            onChanged();
          }
        } else {
          if (audioEventCase_ == 2) {
            audioEventCase_ = 0;
            audioEvent_ = null;
          }
          chunkBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder getChunkBuilder() {
        return getChunkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder getChunkOrBuilder() {
        if ((audioEventCase_ == 2) && (chunkBuilder_ != null)) {
          return chunkBuilder_.getMessageOrBuilder();
        } else {
          if (audioEventCase_ == 2) {
            return (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_;
          }
          return yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Chunk with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk chunk = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder> 
          getChunkFieldBuilder() {
        if (chunkBuilder_ == null) {
          if (!(audioEventCase_ == 2)) {
            audioEvent_ = yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance();
          }
          chunkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder>(
                  (yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk) audioEvent_,
                  getParentForChildren(),
                  isClean());
          audioEvent_ = null;
        }
        audioEventCase_ = 2;
        onChanged();;
        return chunkBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.AudioStreamingRequest)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.AudioStreamingRequest)
    private static final yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest();
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioStreamingRequest>
        PARSER = new com.google.protobuf.AbstractParser<AudioStreamingRequest>() {
      @java.lang.Override
      public AudioStreamingRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioStreamingRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AudioStreamingRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioStreamingRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioStreamingRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.AudioRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * audio metadata
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return Whether the audioMetadata field is set.
     */
    boolean hasAudioMetadata();
    /**
     * <pre>
     * audio metadata
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return The audioMetadata.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getAudioMetadata();
    /**
     * <pre>
     * audio metadata
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder getAudioMetadataOrBuilder();

    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
     * @return Whether the audioData field is set.
     */
    boolean hasAudioData();
    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
     * @return The audioData.
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getAudioData();
    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
     */
    yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder getAudioDataOrBuilder();
  }
  /**
   * <pre>
   * request for sending small audios (&lt; 128 mb) in one go
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.speechsense.v1.AudioRequest}
   */
  public static final class AudioRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.AudioRequest)
      AudioRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioRequest.newBuilder() to construct.
    private AudioRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AudioRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder subBuilder = null;
              if (audioMetadata_ != null) {
                subBuilder = audioMetadata_.toBuilder();
              }
              audioMetadata_ = input.readMessage(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(audioMetadata_);
                audioMetadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder subBuilder = null;
              if (audioData_ != null) {
                subBuilder = audioData_.toBuilder();
              }
              audioData_ = input.readMessage(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(audioData_);
                audioData_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.Builder.class);
    }

    public static final int AUDIO_METADATA_FIELD_NUMBER = 1;
    private yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata audioMetadata_;
    /**
     * <pre>
     * audio metadata
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return Whether the audioMetadata field is set.
     */
    @java.lang.Override
    public boolean hasAudioMetadata() {
      return audioMetadata_ != null;
    }
    /**
     * <pre>
     * audio metadata
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     * @return The audioMetadata.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getAudioMetadata() {
      return audioMetadata_ == null ? yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance() : audioMetadata_;
    }
    /**
     * <pre>
     * audio metadata
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder getAudioMetadataOrBuilder() {
      return getAudioMetadata();
    }

    public static final int AUDIO_DATA_FIELD_NUMBER = 2;
    private yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk audioData_;
    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
     * @return Whether the audioData field is set.
     */
    @java.lang.Override
    public boolean hasAudioData() {
      return audioData_ != null;
    }
    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
     * @return The audioData.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getAudioData() {
      return audioData_ == null ? yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance() : audioData_;
    }
    /**
     * <pre>
     * Bytes with audio data.
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder getAudioDataOrBuilder() {
      return getAudioData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioMetadata_ != null) {
        output.writeMessage(1, getAudioMetadata());
      }
      if (audioData_ != null) {
        output.writeMessage(2, getAudioData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAudioMetadata());
      }
      if (audioData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAudioData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest other = (yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest) obj;

      if (hasAudioMetadata() != other.hasAudioMetadata()) return false;
      if (hasAudioMetadata()) {
        if (!getAudioMetadata()
            .equals(other.getAudioMetadata())) return false;
      }
      if (hasAudioData() != other.hasAudioData()) return false;
      if (hasAudioData()) {
        if (!getAudioData()
            .equals(other.getAudioData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAudioMetadata()) {
        hash = (37 * hash) + AUDIO_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getAudioMetadata().hashCode();
      }
      if (hasAudioData()) {
        hash = (37 * hash) + AUDIO_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getAudioData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * request for sending small audios (&lt; 128 mb) in one go
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.speechsense.v1.AudioRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.AudioRequest)
        yandex.cloud.api.speechsense.v1.AudioProto.AudioRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.class, yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (audioMetadataBuilder_ == null) {
          audioMetadata_ = null;
        } else {
          audioMetadata_ = null;
          audioMetadataBuilder_ = null;
        }
        if (audioDataBuilder_ == null) {
          audioData_ = null;
        } else {
          audioData_ = null;
          audioDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.internal_static_yandex_cloud_speechsense_v1_AudioRequest_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest build() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest buildPartial() {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest result = new yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest(this);
        if (audioMetadataBuilder_ == null) {
          result.audioMetadata_ = audioMetadata_;
        } else {
          result.audioMetadata_ = audioMetadataBuilder_.build();
        }
        if (audioDataBuilder_ == null) {
          result.audioData_ = audioData_;
        } else {
          result.audioData_ = audioDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest other) {
        if (other == yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest.getDefaultInstance()) return this;
        if (other.hasAudioMetadata()) {
          mergeAudioMetadata(other.getAudioMetadata());
        }
        if (other.hasAudioData()) {
          mergeAudioData(other.getAudioData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata audioMetadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder> audioMetadataBuilder_;
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       * @return Whether the audioMetadata field is set.
       */
      public boolean hasAudioMetadata() {
        return audioMetadataBuilder_ != null || audioMetadata_ != null;
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       * @return The audioMetadata.
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata getAudioMetadata() {
        if (audioMetadataBuilder_ == null) {
          return audioMetadata_ == null ? yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance() : audioMetadata_;
        } else {
          return audioMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder setAudioMetadata(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata value) {
        if (audioMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioMetadata_ = value;
          onChanged();
        } else {
          audioMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder setAudioMetadata(
          yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder builderForValue) {
        if (audioMetadataBuilder_ == null) {
          audioMetadata_ = builderForValue.build();
          onChanged();
        } else {
          audioMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder mergeAudioMetadata(yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata value) {
        if (audioMetadataBuilder_ == null) {
          if (audioMetadata_ != null) {
            audioMetadata_ =
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.newBuilder(audioMetadata_).mergeFrom(value).buildPartial();
          } else {
            audioMetadata_ = value;
          }
          onChanged();
        } else {
          audioMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public Builder clearAudioMetadata() {
        if (audioMetadataBuilder_ == null) {
          audioMetadata_ = null;
          onChanged();
        } else {
          audioMetadata_ = null;
          audioMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder getAudioMetadataBuilder() {
        
        onChanged();
        return getAudioMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder getAudioMetadataOrBuilder() {
        if (audioMetadataBuilder_ != null) {
          return audioMetadataBuilder_.getMessageOrBuilder();
        } else {
          return audioMetadata_ == null ?
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.getDefaultInstance() : audioMetadata_;
        }
      }
      /**
       * <pre>
       * audio metadata
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioMetadata audio_metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder> 
          getAudioMetadataFieldBuilder() {
        if (audioMetadataBuilder_ == null) {
          audioMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadata.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioMetadataOrBuilder>(
                  getAudioMetadata(),
                  getParentForChildren(),
                  isClean());
          audioMetadata_ = null;
        }
        return audioMetadataBuilder_;
      }

      private yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk audioData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder> audioDataBuilder_;
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       * @return Whether the audioData field is set.
       */
      public boolean hasAudioData() {
        return audioDataBuilder_ != null || audioData_ != null;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       * @return The audioData.
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk getAudioData() {
        if (audioDataBuilder_ == null) {
          return audioData_ == null ? yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance() : audioData_;
        } else {
          return audioDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      public Builder setAudioData(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk value) {
        if (audioDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioData_ = value;
          onChanged();
        } else {
          audioDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      public Builder setAudioData(
          yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder builderForValue) {
        if (audioDataBuilder_ == null) {
          audioData_ = builderForValue.build();
          onChanged();
        } else {
          audioDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      public Builder mergeAudioData(yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk value) {
        if (audioDataBuilder_ == null) {
          if (audioData_ != null) {
            audioData_ =
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.newBuilder(audioData_).mergeFrom(value).buildPartial();
          } else {
            audioData_ = value;
          }
          onChanged();
        } else {
          audioDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      public Builder clearAudioData() {
        if (audioDataBuilder_ == null) {
          audioData_ = null;
          onChanged();
        } else {
          audioData_ = null;
          audioDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder getAudioDataBuilder() {
        
        onChanged();
        return getAudioDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      public yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder getAudioDataOrBuilder() {
        if (audioDataBuilder_ != null) {
          return audioDataBuilder_.getMessageOrBuilder();
        } else {
          return audioData_ == null ?
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.getDefaultInstance() : audioData_;
        }
      }
      /**
       * <pre>
       * Bytes with audio data.
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.AudioChunk audio_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder> 
          getAudioDataFieldBuilder() {
        if (audioDataBuilder_ == null) {
          audioDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunk.Builder, yandex.cloud.api.speechsense.v1.AudioProto.AudioChunkOrBuilder>(
                  getAudioData(),
                  getParentForChildren(),
                  isClean());
          audioData_ = null;
        }
        return audioDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.AudioRequest)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.AudioRequest)
    private static final yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest();
    }

    public static yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioRequest>
        PARSER = new com.google.protobuf.AbstractParser<AudioRequest>() {
      @java.lang.Override
      public AudioRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AudioRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.AudioProto.AudioRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_RawAudio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_RawAudio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_ContainerAudio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_ContainerAudio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_AudioMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_AudioMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_AudioChunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_AudioChunk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_AudioRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_AudioRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'yandex/cloud/speechsense/v1/audio.prot" +
      "o\022\033yandex.cloud.speechsense.v1\"\341\001\n\010RawAu" +
      "dio\022K\n\016audio_encoding\030\001 \001(\01623.yandex.clo" +
      "ud.speechsense.v1.RawAudio.AudioEncoding" +
      "\022\031\n\021sample_rate_hertz\030\002 \001(\003\022\033\n\023audio_cha" +
      "nnel_count\030\003 \001(\003\"P\n\rAudioEncoding\022\036\n\032AUD" +
      "IO_ENCODING_UNSPECIFIED\020\000\022\037\n\033AUDIO_ENCOD" +
      "ING_LINEAR16_PCM\020\001\"\212\002\n\016ContainerAudio\022\\\n" +
      "\024container_audio_type\030\001 \001(\0162>.yandex.clo" +
      "ud.speechsense.v1.ContainerAudio.Contain" +
      "erAudioType\"\231\001\n\022ContainerAudioType\022$\n CO" +
      "NTAINER_AUDIO_TYPE_UNSPECIFIED\020\000\022\034\n\030CONT" +
      "AINER_AUDIO_TYPE_WAV\020\001\022!\n\035CONTAINER_AUDI" +
      "O_TYPE_OGG_OPUS\020\002\022\034\n\030CONTAINER_AUDIO_TYP" +
      "E_MP3\020\003\"\242\001\n\rAudioMetadata\022:\n\traw_audio\030\001" +
      " \001(\0132%.yandex.cloud.speechsense.v1.RawAu" +
      "dioH\000\022F\n\017container_audio\030\002 \001(\0132+.yandex." +
      "cloud.speechsense.v1.ContainerAudioH\000B\r\n" +
      "\013AudioFormat\"\032\n\nAudioChunk\022\014\n\004data\030\001 \001(\014" +
      "\"\245\001\n\025AudioStreamingRequest\022D\n\016audio_meta" +
      "data\030\001 \001(\0132*.yandex.cloud.speechsense.v1" +
      ".AudioMetadataH\000\0228\n\005chunk\030\002 \001(\0132\'.yandex" +
      ".cloud.speechsense.v1.AudioChunkH\000B\014\n\nAu" +
      "dioEvent\"\217\001\n\014AudioRequest\022B\n\016audio_metad" +
      "ata\030\001 \001(\0132*.yandex.cloud.speechsense.v1." +
      "AudioMetadata\022;\n\naudio_data\030\002 \001(\0132\'.yand" +
      "ex.cloud.speechsense.v1.AudioChunkBz\n\037ya" +
      "ndex.cloud.api.speechsense.v1B\nAudioProt" +
      "oZKgithub.com/yandex-cloud/go-genproto/y" +
      "andex/cloud/speechsense/v1;speechsenseb\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_yandex_cloud_speechsense_v1_RawAudio_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_speechsense_v1_RawAudio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_RawAudio_descriptor,
        new java.lang.String[] { "AudioEncoding", "SampleRateHertz", "AudioChannelCount", });
    internal_static_yandex_cloud_speechsense_v1_ContainerAudio_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_speechsense_v1_ContainerAudio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_ContainerAudio_descriptor,
        new java.lang.String[] { "ContainerAudioType", });
    internal_static_yandex_cloud_speechsense_v1_AudioMetadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_speechsense_v1_AudioMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_AudioMetadata_descriptor,
        new java.lang.String[] { "RawAudio", "ContainerAudio", "AudioFormat", });
    internal_static_yandex_cloud_speechsense_v1_AudioChunk_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_yandex_cloud_speechsense_v1_AudioChunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_AudioChunk_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_AudioStreamingRequest_descriptor,
        new java.lang.String[] { "AudioMetadata", "Chunk", "AudioEvent", });
    internal_static_yandex_cloud_speechsense_v1_AudioRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_yandex_cloud_speechsense_v1_AudioRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_AudioRequest_descriptor,
        new java.lang.String[] { "AudioMetadata", "AudioData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
