// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/speechsense/v1/analysis/speaker_statistics.proto

package yandex.cloud.api.speechsense.v1.analysis;

public final class SpeakerStatisticsProto {
  private SpeakerStatisticsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SpeakerStatisticsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.speechsense.v1.analysis.SpeakerStatistics)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Speaker tag
     * </pre>
     *
     * <code>string speaker_tag = 1;</code>
     * @return The speakerTag.
     */
    java.lang.String getSpeakerTag();
    /**
     * <pre>
     * Speaker tag
     * </pre>
     *
     * <code>string speaker_tag = 1;</code>
     * @return The bytes for speakerTag.
     */
    com.google.protobuf.ByteString
        getSpeakerTagBytes();

    /**
     * <pre>
     * analysis of all phrases in format of single utterance
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
     * @return Whether the completeStatistics field is set.
     */
    boolean hasCompleteStatistics();
    /**
     * <pre>
     * analysis of all phrases in format of single utterance
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
     * @return The completeStatistics.
     */
    yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics getCompleteStatistics();
    /**
     * <pre>
     * analysis of all phrases in format of single utterance
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
     */
    yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatisticsOrBuilder getCompleteStatisticsOrBuilder();

    /**
     * <pre>
     * Descriptive statistics for words per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
     * @return Whether the wordsPerUtterance field is set.
     */
    boolean hasWordsPerUtterance();
    /**
     * <pre>
     * Descriptive statistics for words per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
     * @return The wordsPerUtterance.
     */
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getWordsPerUtterance();
    /**
     * <pre>
     * Descriptive statistics for words per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
     */
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getWordsPerUtteranceOrBuilder();

    /**
     * <pre>
     * Descriptive statistics for letters per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
     * @return Whether the lettersPerUtterance field is set.
     */
    boolean hasLettersPerUtterance();
    /**
     * <pre>
     * Descriptive statistics for letters per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
     * @return The lettersPerUtterance.
     */
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getLettersPerUtterance();
    /**
     * <pre>
     * Descriptive statistics for letters per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
     */
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getLettersPerUtteranceOrBuilder();

    /**
     * <pre>
     * Number of utterances
     * </pre>
     *
     * <code>int64 utterance_count = 5;</code>
     * @return The utteranceCount.
     */
    long getUtteranceCount();

    /**
     * <pre>
     * Descriptive statistics for utterance duration distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
     * @return Whether the utteranceDurationEstimation field is set.
     */
    boolean hasUtteranceDurationEstimation();
    /**
     * <pre>
     * Descriptive statistics for utterance duration distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
     * @return The utteranceDurationEstimation.
     */
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getUtteranceDurationEstimation();
    /**
     * <pre>
     * Descriptive statistics for utterance duration distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
     */
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getUtteranceDurationEstimationOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.speechsense.v1.analysis.SpeakerStatistics}
   */
  public static final class SpeakerStatistics extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.speechsense.v1.analysis.SpeakerStatistics)
      SpeakerStatisticsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SpeakerStatistics.newBuilder() to construct.
    private SpeakerStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeakerStatistics() {
      speakerTag_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SpeakerStatistics();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeakerStatistics(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              speakerTag_ = s;
              break;
            }
            case 18: {
              yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.Builder subBuilder = null;
              if (completeStatistics_ != null) {
                subBuilder = completeStatistics_.toBuilder();
              }
              completeStatistics_ = input.readMessage(yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(completeStatistics_);
                completeStatistics_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder subBuilder = null;
              if (wordsPerUtterance_ != null) {
                subBuilder = wordsPerUtterance_.toBuilder();
              }
              wordsPerUtterance_ = input.readMessage(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wordsPerUtterance_);
                wordsPerUtterance_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder subBuilder = null;
              if (lettersPerUtterance_ != null) {
                subBuilder = lettersPerUtterance_.toBuilder();
              }
              lettersPerUtterance_ = input.readMessage(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lettersPerUtterance_);
                lettersPerUtterance_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              utteranceCount_ = input.readInt64();
              break;
            }
            case 50: {
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder subBuilder = null;
              if (utteranceDurationEstimation_ != null) {
                subBuilder = utteranceDurationEstimation_.toBuilder();
              }
              utteranceDurationEstimation_ = input.readMessage(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(utteranceDurationEstimation_);
                utteranceDurationEstimation_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.class, yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.Builder.class);
    }

    public static final int SPEAKER_TAG_FIELD_NUMBER = 1;
    private volatile java.lang.Object speakerTag_;
    /**
     * <pre>
     * Speaker tag
     * </pre>
     *
     * <code>string speaker_tag = 1;</code>
     * @return The speakerTag.
     */
    @java.lang.Override
    public java.lang.String getSpeakerTag() {
      java.lang.Object ref = speakerTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        speakerTag_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Speaker tag
     * </pre>
     *
     * <code>string speaker_tag = 1;</code>
     * @return The bytes for speakerTag.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSpeakerTagBytes() {
      java.lang.Object ref = speakerTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        speakerTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPLETE_STATISTICS_FIELD_NUMBER = 2;
    private yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics completeStatistics_;
    /**
     * <pre>
     * analysis of all phrases in format of single utterance
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
     * @return Whether the completeStatistics field is set.
     */
    @java.lang.Override
    public boolean hasCompleteStatistics() {
      return completeStatistics_ != null;
    }
    /**
     * <pre>
     * analysis of all phrases in format of single utterance
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
     * @return The completeStatistics.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics getCompleteStatistics() {
      return completeStatistics_ == null ? yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.getDefaultInstance() : completeStatistics_;
    }
    /**
     * <pre>
     * analysis of all phrases in format of single utterance
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatisticsOrBuilder getCompleteStatisticsOrBuilder() {
      return getCompleteStatistics();
    }

    public static final int WORDS_PER_UTTERANCE_FIELD_NUMBER = 3;
    private yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics wordsPerUtterance_;
    /**
     * <pre>
     * Descriptive statistics for words per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
     * @return Whether the wordsPerUtterance field is set.
     */
    @java.lang.Override
    public boolean hasWordsPerUtterance() {
      return wordsPerUtterance_ != null;
    }
    /**
     * <pre>
     * Descriptive statistics for words per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
     * @return The wordsPerUtterance.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getWordsPerUtterance() {
      return wordsPerUtterance_ == null ? yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : wordsPerUtterance_;
    }
    /**
     * <pre>
     * Descriptive statistics for words per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getWordsPerUtteranceOrBuilder() {
      return getWordsPerUtterance();
    }

    public static final int LETTERS_PER_UTTERANCE_FIELD_NUMBER = 4;
    private yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics lettersPerUtterance_;
    /**
     * <pre>
     * Descriptive statistics for letters per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
     * @return Whether the lettersPerUtterance field is set.
     */
    @java.lang.Override
    public boolean hasLettersPerUtterance() {
      return lettersPerUtterance_ != null;
    }
    /**
     * <pre>
     * Descriptive statistics for letters per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
     * @return The lettersPerUtterance.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getLettersPerUtterance() {
      return lettersPerUtterance_ == null ? yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : lettersPerUtterance_;
    }
    /**
     * <pre>
     * Descriptive statistics for letters per utterance distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getLettersPerUtteranceOrBuilder() {
      return getLettersPerUtterance();
    }

    public static final int UTTERANCE_COUNT_FIELD_NUMBER = 5;
    private long utteranceCount_;
    /**
     * <pre>
     * Number of utterances
     * </pre>
     *
     * <code>int64 utterance_count = 5;</code>
     * @return The utteranceCount.
     */
    @java.lang.Override
    public long getUtteranceCount() {
      return utteranceCount_;
    }

    public static final int UTTERANCE_DURATION_ESTIMATION_FIELD_NUMBER = 6;
    private yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics utteranceDurationEstimation_;
    /**
     * <pre>
     * Descriptive statistics for utterance duration distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
     * @return Whether the utteranceDurationEstimation field is set.
     */
    @java.lang.Override
    public boolean hasUtteranceDurationEstimation() {
      return utteranceDurationEstimation_ != null;
    }
    /**
     * <pre>
     * Descriptive statistics for utterance duration distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
     * @return The utteranceDurationEstimation.
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getUtteranceDurationEstimation() {
      return utteranceDurationEstimation_ == null ? yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : utteranceDurationEstimation_;
    }
    /**
     * <pre>
     * Descriptive statistics for utterance duration distribution
     * </pre>
     *
     * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getUtteranceDurationEstimationOrBuilder() {
      return getUtteranceDurationEstimation();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(speakerTag_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, speakerTag_);
      }
      if (completeStatistics_ != null) {
        output.writeMessage(2, getCompleteStatistics());
      }
      if (wordsPerUtterance_ != null) {
        output.writeMessage(3, getWordsPerUtterance());
      }
      if (lettersPerUtterance_ != null) {
        output.writeMessage(4, getLettersPerUtterance());
      }
      if (utteranceCount_ != 0L) {
        output.writeInt64(5, utteranceCount_);
      }
      if (utteranceDurationEstimation_ != null) {
        output.writeMessage(6, getUtteranceDurationEstimation());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(speakerTag_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, speakerTag_);
      }
      if (completeStatistics_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCompleteStatistics());
      }
      if (wordsPerUtterance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getWordsPerUtterance());
      }
      if (lettersPerUtterance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLettersPerUtterance());
      }
      if (utteranceCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, utteranceCount_);
      }
      if (utteranceDurationEstimation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUtteranceDurationEstimation());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics)) {
        return super.equals(obj);
      }
      yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics other = (yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics) obj;

      if (!getSpeakerTag()
          .equals(other.getSpeakerTag())) return false;
      if (hasCompleteStatistics() != other.hasCompleteStatistics()) return false;
      if (hasCompleteStatistics()) {
        if (!getCompleteStatistics()
            .equals(other.getCompleteStatistics())) return false;
      }
      if (hasWordsPerUtterance() != other.hasWordsPerUtterance()) return false;
      if (hasWordsPerUtterance()) {
        if (!getWordsPerUtterance()
            .equals(other.getWordsPerUtterance())) return false;
      }
      if (hasLettersPerUtterance() != other.hasLettersPerUtterance()) return false;
      if (hasLettersPerUtterance()) {
        if (!getLettersPerUtterance()
            .equals(other.getLettersPerUtterance())) return false;
      }
      if (getUtteranceCount()
          != other.getUtteranceCount()) return false;
      if (hasUtteranceDurationEstimation() != other.hasUtteranceDurationEstimation()) return false;
      if (hasUtteranceDurationEstimation()) {
        if (!getUtteranceDurationEstimation()
            .equals(other.getUtteranceDurationEstimation())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPEAKER_TAG_FIELD_NUMBER;
      hash = (53 * hash) + getSpeakerTag().hashCode();
      if (hasCompleteStatistics()) {
        hash = (37 * hash) + COMPLETE_STATISTICS_FIELD_NUMBER;
        hash = (53 * hash) + getCompleteStatistics().hashCode();
      }
      if (hasWordsPerUtterance()) {
        hash = (37 * hash) + WORDS_PER_UTTERANCE_FIELD_NUMBER;
        hash = (53 * hash) + getWordsPerUtterance().hashCode();
      }
      if (hasLettersPerUtterance()) {
        hash = (37 * hash) + LETTERS_PER_UTTERANCE_FIELD_NUMBER;
        hash = (53 * hash) + getLettersPerUtterance().hashCode();
      }
      hash = (37 * hash) + UTTERANCE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUtteranceCount());
      if (hasUtteranceDurationEstimation()) {
        hash = (37 * hash) + UTTERANCE_DURATION_ESTIMATION_FIELD_NUMBER;
        hash = (53 * hash) + getUtteranceDurationEstimation().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.speechsense.v1.analysis.SpeakerStatistics}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.speechsense.v1.analysis.SpeakerStatistics)
        yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatisticsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.class, yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.Builder.class);
      }

      // Construct using yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        speakerTag_ = "";

        if (completeStatisticsBuilder_ == null) {
          completeStatistics_ = null;
        } else {
          completeStatistics_ = null;
          completeStatisticsBuilder_ = null;
        }
        if (wordsPerUtteranceBuilder_ == null) {
          wordsPerUtterance_ = null;
        } else {
          wordsPerUtterance_ = null;
          wordsPerUtteranceBuilder_ = null;
        }
        if (lettersPerUtteranceBuilder_ == null) {
          lettersPerUtterance_ = null;
        } else {
          lettersPerUtterance_ = null;
          lettersPerUtteranceBuilder_ = null;
        }
        utteranceCount_ = 0L;

        if (utteranceDurationEstimationBuilder_ == null) {
          utteranceDurationEstimation_ = null;
        } else {
          utteranceDurationEstimation_ = null;
          utteranceDurationEstimationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics getDefaultInstanceForType() {
        return yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics build() {
        yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics buildPartial() {
        yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics result = new yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics(this);
        result.speakerTag_ = speakerTag_;
        if (completeStatisticsBuilder_ == null) {
          result.completeStatistics_ = completeStatistics_;
        } else {
          result.completeStatistics_ = completeStatisticsBuilder_.build();
        }
        if (wordsPerUtteranceBuilder_ == null) {
          result.wordsPerUtterance_ = wordsPerUtterance_;
        } else {
          result.wordsPerUtterance_ = wordsPerUtteranceBuilder_.build();
        }
        if (lettersPerUtteranceBuilder_ == null) {
          result.lettersPerUtterance_ = lettersPerUtterance_;
        } else {
          result.lettersPerUtterance_ = lettersPerUtteranceBuilder_.build();
        }
        result.utteranceCount_ = utteranceCount_;
        if (utteranceDurationEstimationBuilder_ == null) {
          result.utteranceDurationEstimation_ = utteranceDurationEstimation_;
        } else {
          result.utteranceDurationEstimation_ = utteranceDurationEstimationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics) {
          return mergeFrom((yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics other) {
        if (other == yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics.getDefaultInstance()) return this;
        if (!other.getSpeakerTag().isEmpty()) {
          speakerTag_ = other.speakerTag_;
          onChanged();
        }
        if (other.hasCompleteStatistics()) {
          mergeCompleteStatistics(other.getCompleteStatistics());
        }
        if (other.hasWordsPerUtterance()) {
          mergeWordsPerUtterance(other.getWordsPerUtterance());
        }
        if (other.hasLettersPerUtterance()) {
          mergeLettersPerUtterance(other.getLettersPerUtterance());
        }
        if (other.getUtteranceCount() != 0L) {
          setUtteranceCount(other.getUtteranceCount());
        }
        if (other.hasUtteranceDurationEstimation()) {
          mergeUtteranceDurationEstimation(other.getUtteranceDurationEstimation());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object speakerTag_ = "";
      /**
       * <pre>
       * Speaker tag
       * </pre>
       *
       * <code>string speaker_tag = 1;</code>
       * @return The speakerTag.
       */
      public java.lang.String getSpeakerTag() {
        java.lang.Object ref = speakerTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          speakerTag_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Speaker tag
       * </pre>
       *
       * <code>string speaker_tag = 1;</code>
       * @return The bytes for speakerTag.
       */
      public com.google.protobuf.ByteString
          getSpeakerTagBytes() {
        java.lang.Object ref = speakerTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          speakerTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Speaker tag
       * </pre>
       *
       * <code>string speaker_tag = 1;</code>
       * @param value The speakerTag to set.
       * @return This builder for chaining.
       */
      public Builder setSpeakerTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        speakerTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Speaker tag
       * </pre>
       *
       * <code>string speaker_tag = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpeakerTag() {
        
        speakerTag_ = getDefaultInstance().getSpeakerTag();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Speaker tag
       * </pre>
       *
       * <code>string speaker_tag = 1;</code>
       * @param value The bytes for speakerTag to set.
       * @return This builder for chaining.
       */
      public Builder setSpeakerTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        speakerTag_ = value;
        onChanged();
        return this;
      }

      private yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics completeStatistics_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics, yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatisticsOrBuilder> completeStatisticsBuilder_;
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       * @return Whether the completeStatistics field is set.
       */
      public boolean hasCompleteStatistics() {
        return completeStatisticsBuilder_ != null || completeStatistics_ != null;
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       * @return The completeStatistics.
       */
      public yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics getCompleteStatistics() {
        if (completeStatisticsBuilder_ == null) {
          return completeStatistics_ == null ? yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.getDefaultInstance() : completeStatistics_;
        } else {
          return completeStatisticsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      public Builder setCompleteStatistics(yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics value) {
        if (completeStatisticsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          completeStatistics_ = value;
          onChanged();
        } else {
          completeStatisticsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      public Builder setCompleteStatistics(
          yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.Builder builderForValue) {
        if (completeStatisticsBuilder_ == null) {
          completeStatistics_ = builderForValue.build();
          onChanged();
        } else {
          completeStatisticsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      public Builder mergeCompleteStatistics(yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics value) {
        if (completeStatisticsBuilder_ == null) {
          if (completeStatistics_ != null) {
            completeStatistics_ =
              yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.newBuilder(completeStatistics_).mergeFrom(value).buildPartial();
          } else {
            completeStatistics_ = value;
          }
          onChanged();
        } else {
          completeStatisticsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      public Builder clearCompleteStatistics() {
        if (completeStatisticsBuilder_ == null) {
          completeStatistics_ = null;
          onChanged();
        } else {
          completeStatistics_ = null;
          completeStatisticsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.Builder getCompleteStatisticsBuilder() {
        
        onChanged();
        return getCompleteStatisticsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatisticsOrBuilder getCompleteStatisticsOrBuilder() {
        if (completeStatisticsBuilder_ != null) {
          return completeStatisticsBuilder_.getMessageOrBuilder();
        } else {
          return completeStatistics_ == null ?
              yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.getDefaultInstance() : completeStatistics_;
        }
      }
      /**
       * <pre>
       * analysis of all phrases in format of single utterance
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.UtteranceStatistics complete_statistics = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics, yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatisticsOrBuilder> 
          getCompleteStatisticsFieldBuilder() {
        if (completeStatisticsBuilder_ == null) {
          completeStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics, yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.UtteranceStatisticsOrBuilder>(
                  getCompleteStatistics(),
                  getParentForChildren(),
                  isClean());
          completeStatistics_ = null;
        }
        return completeStatisticsBuilder_;
      }

      private yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics wordsPerUtterance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder> wordsPerUtteranceBuilder_;
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       * @return Whether the wordsPerUtterance field is set.
       */
      public boolean hasWordsPerUtterance() {
        return wordsPerUtteranceBuilder_ != null || wordsPerUtterance_ != null;
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       * @return The wordsPerUtterance.
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getWordsPerUtterance() {
        if (wordsPerUtteranceBuilder_ == null) {
          return wordsPerUtterance_ == null ? yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : wordsPerUtterance_;
        } else {
          return wordsPerUtteranceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      public Builder setWordsPerUtterance(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics value) {
        if (wordsPerUtteranceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wordsPerUtterance_ = value;
          onChanged();
        } else {
          wordsPerUtteranceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      public Builder setWordsPerUtterance(
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder builderForValue) {
        if (wordsPerUtteranceBuilder_ == null) {
          wordsPerUtterance_ = builderForValue.build();
          onChanged();
        } else {
          wordsPerUtteranceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      public Builder mergeWordsPerUtterance(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics value) {
        if (wordsPerUtteranceBuilder_ == null) {
          if (wordsPerUtterance_ != null) {
            wordsPerUtterance_ =
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.newBuilder(wordsPerUtterance_).mergeFrom(value).buildPartial();
          } else {
            wordsPerUtterance_ = value;
          }
          onChanged();
        } else {
          wordsPerUtteranceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      public Builder clearWordsPerUtterance() {
        if (wordsPerUtteranceBuilder_ == null) {
          wordsPerUtterance_ = null;
          onChanged();
        } else {
          wordsPerUtterance_ = null;
          wordsPerUtteranceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder getWordsPerUtteranceBuilder() {
        
        onChanged();
        return getWordsPerUtteranceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getWordsPerUtteranceOrBuilder() {
        if (wordsPerUtteranceBuilder_ != null) {
          return wordsPerUtteranceBuilder_.getMessageOrBuilder();
        } else {
          return wordsPerUtterance_ == null ?
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : wordsPerUtterance_;
        }
      }
      /**
       * <pre>
       * Descriptive statistics for words per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics words_per_utterance = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder> 
          getWordsPerUtteranceFieldBuilder() {
        if (wordsPerUtteranceBuilder_ == null) {
          wordsPerUtteranceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder>(
                  getWordsPerUtterance(),
                  getParentForChildren(),
                  isClean());
          wordsPerUtterance_ = null;
        }
        return wordsPerUtteranceBuilder_;
      }

      private yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics lettersPerUtterance_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder> lettersPerUtteranceBuilder_;
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       * @return Whether the lettersPerUtterance field is set.
       */
      public boolean hasLettersPerUtterance() {
        return lettersPerUtteranceBuilder_ != null || lettersPerUtterance_ != null;
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       * @return The lettersPerUtterance.
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getLettersPerUtterance() {
        if (lettersPerUtteranceBuilder_ == null) {
          return lettersPerUtterance_ == null ? yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : lettersPerUtterance_;
        } else {
          return lettersPerUtteranceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      public Builder setLettersPerUtterance(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics value) {
        if (lettersPerUtteranceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lettersPerUtterance_ = value;
          onChanged();
        } else {
          lettersPerUtteranceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      public Builder setLettersPerUtterance(
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder builderForValue) {
        if (lettersPerUtteranceBuilder_ == null) {
          lettersPerUtterance_ = builderForValue.build();
          onChanged();
        } else {
          lettersPerUtteranceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      public Builder mergeLettersPerUtterance(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics value) {
        if (lettersPerUtteranceBuilder_ == null) {
          if (lettersPerUtterance_ != null) {
            lettersPerUtterance_ =
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.newBuilder(lettersPerUtterance_).mergeFrom(value).buildPartial();
          } else {
            lettersPerUtterance_ = value;
          }
          onChanged();
        } else {
          lettersPerUtteranceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      public Builder clearLettersPerUtterance() {
        if (lettersPerUtteranceBuilder_ == null) {
          lettersPerUtterance_ = null;
          onChanged();
        } else {
          lettersPerUtterance_ = null;
          lettersPerUtteranceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder getLettersPerUtteranceBuilder() {
        
        onChanged();
        return getLettersPerUtteranceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getLettersPerUtteranceOrBuilder() {
        if (lettersPerUtteranceBuilder_ != null) {
          return lettersPerUtteranceBuilder_.getMessageOrBuilder();
        } else {
          return lettersPerUtterance_ == null ?
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : lettersPerUtterance_;
        }
      }
      /**
       * <pre>
       * Descriptive statistics for letters per utterance distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics letters_per_utterance = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder> 
          getLettersPerUtteranceFieldBuilder() {
        if (lettersPerUtteranceBuilder_ == null) {
          lettersPerUtteranceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder>(
                  getLettersPerUtterance(),
                  getParentForChildren(),
                  isClean());
          lettersPerUtterance_ = null;
        }
        return lettersPerUtteranceBuilder_;
      }

      private long utteranceCount_ ;
      /**
       * <pre>
       * Number of utterances
       * </pre>
       *
       * <code>int64 utterance_count = 5;</code>
       * @return The utteranceCount.
       */
      @java.lang.Override
      public long getUtteranceCount() {
        return utteranceCount_;
      }
      /**
       * <pre>
       * Number of utterances
       * </pre>
       *
       * <code>int64 utterance_count = 5;</code>
       * @param value The utteranceCount to set.
       * @return This builder for chaining.
       */
      public Builder setUtteranceCount(long value) {
        
        utteranceCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of utterances
       * </pre>
       *
       * <code>int64 utterance_count = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUtteranceCount() {
        
        utteranceCount_ = 0L;
        onChanged();
        return this;
      }

      private yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics utteranceDurationEstimation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder> utteranceDurationEstimationBuilder_;
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       * @return Whether the utteranceDurationEstimation field is set.
       */
      public boolean hasUtteranceDurationEstimation() {
        return utteranceDurationEstimationBuilder_ != null || utteranceDurationEstimation_ != null;
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       * @return The utteranceDurationEstimation.
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics getUtteranceDurationEstimation() {
        if (utteranceDurationEstimationBuilder_ == null) {
          return utteranceDurationEstimation_ == null ? yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : utteranceDurationEstimation_;
        } else {
          return utteranceDurationEstimationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      public Builder setUtteranceDurationEstimation(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics value) {
        if (utteranceDurationEstimationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          utteranceDurationEstimation_ = value;
          onChanged();
        } else {
          utteranceDurationEstimationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      public Builder setUtteranceDurationEstimation(
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder builderForValue) {
        if (utteranceDurationEstimationBuilder_ == null) {
          utteranceDurationEstimation_ = builderForValue.build();
          onChanged();
        } else {
          utteranceDurationEstimationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      public Builder mergeUtteranceDurationEstimation(yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics value) {
        if (utteranceDurationEstimationBuilder_ == null) {
          if (utteranceDurationEstimation_ != null) {
            utteranceDurationEstimation_ =
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.newBuilder(utteranceDurationEstimation_).mergeFrom(value).buildPartial();
          } else {
            utteranceDurationEstimation_ = value;
          }
          onChanged();
        } else {
          utteranceDurationEstimationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      public Builder clearUtteranceDurationEstimation() {
        if (utteranceDurationEstimationBuilder_ == null) {
          utteranceDurationEstimation_ = null;
          onChanged();
        } else {
          utteranceDurationEstimation_ = null;
          utteranceDurationEstimationBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder getUtteranceDurationEstimationBuilder() {
        
        onChanged();
        return getUtteranceDurationEstimationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      public yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder getUtteranceDurationEstimationOrBuilder() {
        if (utteranceDurationEstimationBuilder_ != null) {
          return utteranceDurationEstimationBuilder_.getMessageOrBuilder();
        } else {
          return utteranceDurationEstimation_ == null ?
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.getDefaultInstance() : utteranceDurationEstimation_;
        }
      }
      /**
       * <pre>
       * Descriptive statistics for utterance duration distribution
       * </pre>
       *
       * <code>.yandex.cloud.speechsense.v1.analysis.DescriptiveStatistics utterance_duration_estimation = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder> 
          getUtteranceDurationEstimationFieldBuilder() {
        if (utteranceDurationEstimationBuilder_ == null) {
          utteranceDurationEstimationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatistics.Builder, yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.DescriptiveStatisticsOrBuilder>(
                  getUtteranceDurationEstimation(),
                  getParentForChildren(),
                  isClean());
          utteranceDurationEstimation_ = null;
        }
        return utteranceDurationEstimationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.speechsense.v1.analysis.SpeakerStatistics)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.speechsense.v1.analysis.SpeakerStatistics)
    private static final yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics();
    }

    public static yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpeakerStatistics>
        PARSER = new com.google.protobuf.AbstractParser<SpeakerStatistics>() {
      @java.lang.Override
      public SpeakerStatistics parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeakerStatistics(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpeakerStatistics> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeakerStatistics> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.speechsense.v1.analysis.SpeakerStatisticsProto.SpeakerStatistics getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=yandex/cloud/speechsense/v1/analysis/s" +
      "peaker_statistics.proto\022$yandex.cloud.sp" +
      "eechsense.v1.analysis\032<yandex/cloud/spee" +
      "chsense/v1/analysis/statistics_common.pr" +
      "oto\032?yandex/cloud/speechsense/v1/analysi" +
      "s/utterance_statistics.proto\"\263\003\n\021Speaker" +
      "Statistics\022\023\n\013speaker_tag\030\001 \001(\t\022V\n\023compl" +
      "ete_statistics\030\002 \001(\01329.yandex.cloud.spee" +
      "chsense.v1.analysis.UtteranceStatistics\022" +
      "X\n\023words_per_utterance\030\003 \001(\0132;.yandex.cl" +
      "oud.speechsense.v1.analysis.DescriptiveS" +
      "tatistics\022Z\n\025letters_per_utterance\030\004 \001(\013" +
      "2;.yandex.cloud.speechsense.v1.analysis." +
      "DescriptiveStatistics\022\027\n\017utterance_count" +
      "\030\005 \001(\003\022b\n\035utterance_duration_estimation\030" +
      "\006 \001(\0132;.yandex.cloud.speechsense.v1.anal" +
      "ysis.DescriptiveStatisticsB\230\001\n(yandex.cl" +
      "oud.api.speechsense.v1.analysisB\026Speaker" +
      "StatisticsProtoZTgithub.com/yandex-cloud" +
      "/go-genproto/yandex/cloud/speechsense/v1" +
      "/analysis;speechsenseb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.getDescriptor(),
          yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.getDescriptor(),
        });
    internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_speechsense_v1_analysis_SpeakerStatistics_descriptor,
        new java.lang.String[] { "SpeakerTag", "CompleteStatistics", "WordsPerUtterance", "LettersPerUtterance", "UtteranceCount", "UtteranceDurationEstimation", });
    yandex.cloud.api.speechsense.v1.analysis.StatisticsCommonProto.getDescriptor();
    yandex.cloud.api.speechsense.v1.analysis.UtteranceStatisticsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
