// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/datatransfer/v1/endpoint/mysql.proto

package yandex.cloud.api.datatransfer.v1.endpoint;

public final class Mysql {
  private Mysql() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OnPremiseMysqlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Database port
     * </pre>
     *
     * <code>int64 port = 2;</code>
     * @return The port.
     */
    long getPort();

    /**
     * <pre>
     * Network interface for endpoint. If none will assume public ipv4
     * </pre>
     *
     * <code>string subnet_id = 4;</code>
     * @return The subnetId.
     */
    java.lang.String getSubnetId();
    /**
     * <pre>
     * Network interface for endpoint. If none will assume public ipv4
     * </pre>
     *
     * <code>string subnet_id = 4;</code>
     * @return The bytes for subnetId.
     */
    com.google.protobuf.ByteString
        getSubnetIdBytes();

    /**
     * <code>repeated string hosts = 5;</code>
     * @return A list containing the hosts.
     */
    java.util.List<java.lang.String>
        getHostsList();
    /**
     * <code>repeated string hosts = 5;</code>
     * @return The count of hosts.
     */
    int getHostsCount();
    /**
     * <code>repeated string hosts = 5;</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    java.lang.String getHosts(int index);
    /**
     * <code>repeated string hosts = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    com.google.protobuf.ByteString
        getHostsBytes(int index);

    /**
     * <pre>
     * TLS settings for server connection. Disabled by default.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
     * @return Whether the tlsMode field is set.
     */
    boolean hasTlsMode();
    /**
     * <pre>
     * TLS settings for server connection. Disabled by default.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
     * @return The tlsMode.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode getTlsMode();
    /**
     * <pre>
     * TLS settings for server connection. Disabled by default.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSModeOrBuilder getTlsModeOrBuilder();
  }
  /**
   * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql}
   */
  public static final class OnPremiseMysql extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql)
      OnPremiseMysqlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OnPremiseMysql.newBuilder() to construct.
    private OnPremiseMysql(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OnPremiseMysql() {
      subnetId_ = "";
      hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OnPremiseMysql();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OnPremiseMysql(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {

              port_ = input.readInt64();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              subnetId_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hosts_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              hosts_.add(s);
              break;
            }
            case 50: {
              yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.Builder subBuilder = null;
              if (tlsMode_ != null) {
                subBuilder = tlsMode_.toBuilder();
              }
              tlsMode_ = input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tlsMode_);
                tlsMode_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hosts_ = hosts_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder.class);
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private long port_;
    /**
     * <pre>
     * Database port
     * </pre>
     *
     * <code>int64 port = 2;</code>
     * @return The port.
     */
    @java.lang.Override
    public long getPort() {
      return port_;
    }

    public static final int SUBNET_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object subnetId_;
    /**
     * <pre>
     * Network interface for endpoint. If none will assume public ipv4
     * </pre>
     *
     * <code>string subnet_id = 4;</code>
     * @return The subnetId.
     */
    @java.lang.Override
    public java.lang.String getSubnetId() {
      java.lang.Object ref = subnetId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subnetId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Network interface for endpoint. If none will assume public ipv4
     * </pre>
     *
     * <code>string subnet_id = 4;</code>
     * @return The bytes for subnetId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubnetIdBytes() {
      java.lang.Object ref = subnetId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subnetId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOSTS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList hosts_;
    /**
     * <code>repeated string hosts = 5;</code>
     * @return A list containing the hosts.
     */
    public com.google.protobuf.ProtocolStringList
        getHostsList() {
      return hosts_;
    }
    /**
     * <code>repeated string hosts = 5;</code>
     * @return The count of hosts.
     */
    public int getHostsCount() {
      return hosts_.size();
    }
    /**
     * <code>repeated string hosts = 5;</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    public java.lang.String getHosts(int index) {
      return hosts_.get(index);
    }
    /**
     * <code>repeated string hosts = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    public com.google.protobuf.ByteString
        getHostsBytes(int index) {
      return hosts_.getByteString(index);
    }

    public static final int TLS_MODE_FIELD_NUMBER = 6;
    private yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode tlsMode_;
    /**
     * <pre>
     * TLS settings for server connection. Disabled by default.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
     * @return Whether the tlsMode field is set.
     */
    @java.lang.Override
    public boolean hasTlsMode() {
      return tlsMode_ != null;
    }
    /**
     * <pre>
     * TLS settings for server connection. Disabled by default.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
     * @return The tlsMode.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode getTlsMode() {
      return tlsMode_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.getDefaultInstance() : tlsMode_;
    }
    /**
     * <pre>
     * TLS settings for server connection. Disabled by default.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSModeOrBuilder getTlsModeOrBuilder() {
      return getTlsMode();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (port_ != 0L) {
        output.writeInt64(2, port_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, subnetId_);
      }
      for (int i = 0; i < hosts_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, hosts_.getRaw(i));
      }
      if (tlsMode_ != null) {
        output.writeMessage(6, getTlsMode());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (port_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, port_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subnetId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, subnetId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < hosts_.size(); i++) {
          dataSize += computeStringSizeNoTag(hosts_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getHostsList().size();
      }
      if (tlsMode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTlsMode());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql)) {
        return super.equals(obj);
      }
      yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql other = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) obj;

      if (getPort()
          != other.getPort()) return false;
      if (!getSubnetId()
          .equals(other.getSubnetId())) return false;
      if (!getHostsList()
          .equals(other.getHostsList())) return false;
      if (hasTlsMode() != other.hasTlsMode()) return false;
      if (hasTlsMode()) {
        if (!getTlsMode()
            .equals(other.getTlsMode())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPort());
      hash = (37 * hash) + SUBNET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSubnetId().hashCode();
      if (getHostsCount() > 0) {
        hash = (37 * hash) + HOSTS_FIELD_NUMBER;
        hash = (53 * hash) + getHostsList().hashCode();
      }
      if (hasTlsMode()) {
        hash = (37 * hash) + TLS_MODE_FIELD_NUMBER;
        hash = (53 * hash) + getTlsMode().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql)
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder.class);
      }

      // Construct using yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        port_ = 0L;

        subnetId_ = "";

        hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tlsModeBuilder_ == null) {
          tlsMode_ = null;
        } else {
          tlsMode_ = null;
          tlsModeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql getDefaultInstanceForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql build() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql buildPartial() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql result = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql(this);
        int from_bitField0_ = bitField0_;
        result.port_ = port_;
        result.subnetId_ = subnetId_;
        if (((bitField0_ & 0x00000001) != 0)) {
          hosts_ = hosts_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.hosts_ = hosts_;
        if (tlsModeBuilder_ == null) {
          result.tlsMode_ = tlsMode_;
        } else {
          result.tlsMode_ = tlsModeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) {
          return mergeFrom((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql other) {
        if (other == yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance()) return this;
        if (other.getPort() != 0L) {
          setPort(other.getPort());
        }
        if (!other.getSubnetId().isEmpty()) {
          subnetId_ = other.subnetId_;
          onChanged();
        }
        if (!other.hosts_.isEmpty()) {
          if (hosts_.isEmpty()) {
            hosts_ = other.hosts_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHostsIsMutable();
            hosts_.addAll(other.hosts_);
          }
          onChanged();
        }
        if (other.hasTlsMode()) {
          mergeTlsMode(other.getTlsMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long port_ ;
      /**
       * <pre>
       * Database port
       * </pre>
       *
       * <code>int64 port = 2;</code>
       * @return The port.
       */
      @java.lang.Override
      public long getPort() {
        return port_;
      }
      /**
       * <pre>
       * Database port
       * </pre>
       *
       * <code>int64 port = 2;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(long value) {
        
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database port
       * </pre>
       *
       * <code>int64 port = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        
        port_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object subnetId_ = "";
      /**
       * <pre>
       * Network interface for endpoint. If none will assume public ipv4
       * </pre>
       *
       * <code>string subnet_id = 4;</code>
       * @return The subnetId.
       */
      public java.lang.String getSubnetId() {
        java.lang.Object ref = subnetId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subnetId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Network interface for endpoint. If none will assume public ipv4
       * </pre>
       *
       * <code>string subnet_id = 4;</code>
       * @return The bytes for subnetId.
       */
      public com.google.protobuf.ByteString
          getSubnetIdBytes() {
        java.lang.Object ref = subnetId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subnetId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Network interface for endpoint. If none will assume public ipv4
       * </pre>
       *
       * <code>string subnet_id = 4;</code>
       * @param value The subnetId to set.
       * @return This builder for chaining.
       */
      public Builder setSubnetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subnetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Network interface for endpoint. If none will assume public ipv4
       * </pre>
       *
       * <code>string subnet_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubnetId() {
        
        subnetId_ = getDefaultInstance().getSubnetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Network interface for endpoint. If none will assume public ipv4
       * </pre>
       *
       * <code>string subnet_id = 4;</code>
       * @param value The bytes for subnetId to set.
       * @return This builder for chaining.
       */
      public Builder setSubnetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subnetId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHostsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hosts_ = new com.google.protobuf.LazyStringArrayList(hosts_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @return A list containing the hosts.
       */
      public com.google.protobuf.ProtocolStringList
          getHostsList() {
        return hosts_.getUnmodifiableView();
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @return The count of hosts.
       */
      public int getHostsCount() {
        return hosts_.size();
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @param index The index of the element to return.
       * @return The hosts at the given index.
       */
      public java.lang.String getHosts(int index) {
        return hosts_.get(index);
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the hosts at the given index.
       */
      public com.google.protobuf.ByteString
          getHostsBytes(int index) {
        return hosts_.getByteString(index);
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @param index The index to set the value at.
       * @param value The hosts to set.
       * @return This builder for chaining.
       */
      public Builder setHosts(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHostsIsMutable();
        hosts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @param value The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHosts(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHostsIsMutable();
        hosts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @param values The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addAllHosts(
          java.lang.Iterable<java.lang.String> values) {
        ensureHostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hosts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHosts() {
        hosts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string hosts = 5;</code>
       * @param value The bytes of the hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHostsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureHostsIsMutable();
        hosts_.add(value);
        onChanged();
        return this;
      }

      private yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode tlsMode_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode, yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSModeOrBuilder> tlsModeBuilder_;
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       * @return Whether the tlsMode field is set.
       */
      public boolean hasTlsMode() {
        return tlsModeBuilder_ != null || tlsMode_ != null;
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       * @return The tlsMode.
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode getTlsMode() {
        if (tlsModeBuilder_ == null) {
          return tlsMode_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.getDefaultInstance() : tlsMode_;
        } else {
          return tlsModeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      public Builder setTlsMode(yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode value) {
        if (tlsModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tlsMode_ = value;
          onChanged();
        } else {
          tlsModeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      public Builder setTlsMode(
          yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.Builder builderForValue) {
        if (tlsModeBuilder_ == null) {
          tlsMode_ = builderForValue.build();
          onChanged();
        } else {
          tlsModeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      public Builder mergeTlsMode(yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode value) {
        if (tlsModeBuilder_ == null) {
          if (tlsMode_ != null) {
            tlsMode_ =
              yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.newBuilder(tlsMode_).mergeFrom(value).buildPartial();
          } else {
            tlsMode_ = value;
          }
          onChanged();
        } else {
          tlsModeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      public Builder clearTlsMode() {
        if (tlsModeBuilder_ == null) {
          tlsMode_ = null;
          onChanged();
        } else {
          tlsMode_ = null;
          tlsModeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.Builder getTlsModeBuilder() {
        
        onChanged();
        return getTlsModeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSModeOrBuilder getTlsModeOrBuilder() {
        if (tlsModeBuilder_ != null) {
          return tlsModeBuilder_.getMessageOrBuilder();
        } else {
          return tlsMode_ == null ?
              yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.getDefaultInstance() : tlsMode_;
        }
      }
      /**
       * <pre>
       * TLS settings for server connection. Disabled by default.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.TLSMode tls_mode = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode, yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSModeOrBuilder> 
          getTlsModeFieldBuilder() {
        if (tlsModeBuilder_ == null) {
          tlsModeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode, yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSMode.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.TLSModeOrBuilder>(
                  getTlsMode(),
                  getParentForChildren(),
                  isClean());
          tlsMode_ = null;
        }
        return tlsModeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql)
    private static final yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql();
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OnPremiseMysql>
        PARSER = new com.google.protobuf.AbstractParser<OnPremiseMysql>() {
      @java.lang.Override
      public OnPremiseMysql parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OnPremiseMysql(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OnPremiseMysql> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OnPremiseMysql> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MysqlConnectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.datatransfer.v1.endpoint.MysqlConnection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Managed Service for MySQL cluster ID
     * </pre>
     *
     * <code>string mdb_cluster_id = 1;</code>
     * @return Whether the mdbClusterId field is set.
     */
    boolean hasMdbClusterId();
    /**
     * <pre>
     * Managed Service for MySQL cluster ID
     * </pre>
     *
     * <code>string mdb_cluster_id = 1;</code>
     * @return The mdbClusterId.
     */
    java.lang.String getMdbClusterId();
    /**
     * <pre>
     * Managed Service for MySQL cluster ID
     * </pre>
     *
     * <code>string mdb_cluster_id = 1;</code>
     * @return The bytes for mdbClusterId.
     */
    com.google.protobuf.ByteString
        getMdbClusterIdBytes();

    /**
     * <pre>
     * Connection options for on-premise MySQL
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
     * @return Whether the onPremise field is set.
     */
    boolean hasOnPremise();
    /**
     * <pre>
     * Connection options for on-premise MySQL
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
     * @return The onPremise.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql getOnPremise();
    /**
     * <pre>
     * Connection options for on-premise MySQL
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder getOnPremiseOrBuilder();

    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.ConnectionCase getConnectionCase();
  }
  /**
   * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlConnection}
   */
  public static final class MysqlConnection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlConnection)
      MysqlConnectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MysqlConnection.newBuilder() to construct.
    private MysqlConnection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MysqlConnection() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MysqlConnection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MysqlConnection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              connectionCase_ = 1;
              connection_ = s;
              break;
            }
            case 18: {
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder subBuilder = null;
              if (connectionCase_ == 2) {
                subBuilder = ((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_).toBuilder();
              }
              connection_ =
                  input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_);
                connection_ = subBuilder.buildPartial();
              }
              connectionCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder.class);
    }

    private int connectionCase_ = 0;
    private java.lang.Object connection_;
    public enum ConnectionCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      MDB_CLUSTER_ID(1),
      ON_PREMISE(2),
      CONNECTION_NOT_SET(0);
      private final int value;
      private ConnectionCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConnectionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ConnectionCase forNumber(int value) {
        switch (value) {
          case 1: return MDB_CLUSTER_ID;
          case 2: return ON_PREMISE;
          case 0: return CONNECTION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ConnectionCase
    getConnectionCase() {
      return ConnectionCase.forNumber(
          connectionCase_);
    }

    public static final int MDB_CLUSTER_ID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Managed Service for MySQL cluster ID
     * </pre>
     *
     * <code>string mdb_cluster_id = 1;</code>
     * @return Whether the mdbClusterId field is set.
     */
    public boolean hasMdbClusterId() {
      return connectionCase_ == 1;
    }
    /**
     * <pre>
     * Managed Service for MySQL cluster ID
     * </pre>
     *
     * <code>string mdb_cluster_id = 1;</code>
     * @return The mdbClusterId.
     */
    public java.lang.String getMdbClusterId() {
      java.lang.Object ref = "";
      if (connectionCase_ == 1) {
        ref = connection_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (connectionCase_ == 1) {
          connection_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Managed Service for MySQL cluster ID
     * </pre>
     *
     * <code>string mdb_cluster_id = 1;</code>
     * @return The bytes for mdbClusterId.
     */
    public com.google.protobuf.ByteString
        getMdbClusterIdBytes() {
      java.lang.Object ref = "";
      if (connectionCase_ == 1) {
        ref = connection_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (connectionCase_ == 1) {
          connection_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ON_PREMISE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Connection options for on-premise MySQL
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
     * @return Whether the onPremise field is set.
     */
    @java.lang.Override
    public boolean hasOnPremise() {
      return connectionCase_ == 2;
    }
    /**
     * <pre>
     * Connection options for on-premise MySQL
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
     * @return The onPremise.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql getOnPremise() {
      if (connectionCase_ == 2) {
         return (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_;
      }
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
    }
    /**
     * <pre>
     * Connection options for on-premise MySQL
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder getOnPremiseOrBuilder() {
      if (connectionCase_ == 2) {
         return (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_;
      }
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (connectionCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, connection_);
      }
      if (connectionCase_ == 2) {
        output.writeMessage(2, (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (connectionCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, connection_);
      }
      if (connectionCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection)) {
        return super.equals(obj);
      }
      yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection other = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection) obj;

      if (!getConnectionCase().equals(other.getConnectionCase())) return false;
      switch (connectionCase_) {
        case 1:
          if (!getMdbClusterId()
              .equals(other.getMdbClusterId())) return false;
          break;
        case 2:
          if (!getOnPremise()
              .equals(other.getOnPremise())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (connectionCase_) {
        case 1:
          hash = (37 * hash) + MDB_CLUSTER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getMdbClusterId().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ON_PREMISE_FIELD_NUMBER;
          hash = (53 * hash) + getOnPremise().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlConnection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlConnection)
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder.class);
      }

      // Construct using yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        connectionCase_ = 0;
        connection_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getDefaultInstanceForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection build() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection buildPartial() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection result = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection(this);
        if (connectionCase_ == 1) {
          result.connection_ = connection_;
        }
        if (connectionCase_ == 2) {
          if (onPremiseBuilder_ == null) {
            result.connection_ = connection_;
          } else {
            result.connection_ = onPremiseBuilder_.build();
          }
        }
        result.connectionCase_ = connectionCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection) {
          return mergeFrom((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection other) {
        if (other == yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance()) return this;
        switch (other.getConnectionCase()) {
          case MDB_CLUSTER_ID: {
            connectionCase_ = 1;
            connection_ = other.connection_;
            onChanged();
            break;
          }
          case ON_PREMISE: {
            mergeOnPremise(other.getOnPremise());
            break;
          }
          case CONNECTION_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int connectionCase_ = 0;
      private java.lang.Object connection_;
      public ConnectionCase
          getConnectionCase() {
        return ConnectionCase.forNumber(
            connectionCase_);
      }

      public Builder clearConnection() {
        connectionCase_ = 0;
        connection_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * Managed Service for MySQL cluster ID
       * </pre>
       *
       * <code>string mdb_cluster_id = 1;</code>
       * @return Whether the mdbClusterId field is set.
       */
      @java.lang.Override
      public boolean hasMdbClusterId() {
        return connectionCase_ == 1;
      }
      /**
       * <pre>
       * Managed Service for MySQL cluster ID
       * </pre>
       *
       * <code>string mdb_cluster_id = 1;</code>
       * @return The mdbClusterId.
       */
      @java.lang.Override
      public java.lang.String getMdbClusterId() {
        java.lang.Object ref = "";
        if (connectionCase_ == 1) {
          ref = connection_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (connectionCase_ == 1) {
            connection_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Managed Service for MySQL cluster ID
       * </pre>
       *
       * <code>string mdb_cluster_id = 1;</code>
       * @return The bytes for mdbClusterId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMdbClusterIdBytes() {
        java.lang.Object ref = "";
        if (connectionCase_ == 1) {
          ref = connection_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (connectionCase_ == 1) {
            connection_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Managed Service for MySQL cluster ID
       * </pre>
       *
       * <code>string mdb_cluster_id = 1;</code>
       * @param value The mdbClusterId to set.
       * @return This builder for chaining.
       */
      public Builder setMdbClusterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  connectionCase_ = 1;
        connection_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Managed Service for MySQL cluster ID
       * </pre>
       *
       * <code>string mdb_cluster_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMdbClusterId() {
        if (connectionCase_ == 1) {
          connectionCase_ = 0;
          connection_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Managed Service for MySQL cluster ID
       * </pre>
       *
       * <code>string mdb_cluster_id = 1;</code>
       * @param value The bytes for mdbClusterId to set.
       * @return This builder for chaining.
       */
      public Builder setMdbClusterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        connectionCase_ = 1;
        connection_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder> onPremiseBuilder_;
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       * @return Whether the onPremise field is set.
       */
      @java.lang.Override
      public boolean hasOnPremise() {
        return connectionCase_ == 2;
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       * @return The onPremise.
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql getOnPremise() {
        if (onPremiseBuilder_ == null) {
          if (connectionCase_ == 2) {
            return (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_;
          }
          return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
        } else {
          if (connectionCase_ == 2) {
            return onPremiseBuilder_.getMessage();
          }
          return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      public Builder setOnPremise(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql value) {
        if (onPremiseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connection_ = value;
          onChanged();
        } else {
          onPremiseBuilder_.setMessage(value);
        }
        connectionCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      public Builder setOnPremise(
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder builderForValue) {
        if (onPremiseBuilder_ == null) {
          connection_ = builderForValue.build();
          onChanged();
        } else {
          onPremiseBuilder_.setMessage(builderForValue.build());
        }
        connectionCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      public Builder mergeOnPremise(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql value) {
        if (onPremiseBuilder_ == null) {
          if (connectionCase_ == 2 &&
              connection_ != yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance()) {
            connection_ = yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.newBuilder((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_)
                .mergeFrom(value).buildPartial();
          } else {
            connection_ = value;
          }
          onChanged();
        } else {
          if (connectionCase_ == 2) {
            onPremiseBuilder_.mergeFrom(value);
          }
          onPremiseBuilder_.setMessage(value);
        }
        connectionCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      public Builder clearOnPremise() {
        if (onPremiseBuilder_ == null) {
          if (connectionCase_ == 2) {
            connectionCase_ = 0;
            connection_ = null;
            onChanged();
          }
        } else {
          if (connectionCase_ == 2) {
            connectionCase_ = 0;
            connection_ = null;
          }
          onPremiseBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder getOnPremiseBuilder() {
        return getOnPremiseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder getOnPremiseOrBuilder() {
        if ((connectionCase_ == 2) && (onPremiseBuilder_ != null)) {
          return onPremiseBuilder_.getMessageOrBuilder();
        } else {
          if (connectionCase_ == 2) {
            return (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_;
          }
          return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Connection options for on-premise MySQL
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.OnPremiseMysql on_premise = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder> 
          getOnPremiseFieldBuilder() {
        if (onPremiseBuilder_ == null) {
          if (!(connectionCase_ == 2)) {
            connection_ = yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.getDefaultInstance();
          }
          onPremiseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysqlOrBuilder>(
                  (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.OnPremiseMysql) connection_,
                  getParentForChildren(),
                  isClean());
          connection_ = null;
        }
        connectionCase_ = 2;
        onChanged();;
        return onPremiseBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlConnection)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlConnection)
    private static final yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection();
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MysqlConnection>
        PARSER = new com.google.protobuf.AbstractParser<MysqlConnection>() {
      @java.lang.Override
      public MysqlConnection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MysqlConnection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MysqlConnection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MysqlConnection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MysqlObjectTransferSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Views
     * 
     * CREATE VIEW ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
     * @return The enum numeric value on the wire for view.
     */
    int getViewValue();
    /**
     * <pre>
     * Views
     * 
     * CREATE VIEW ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
     * @return The view.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getView();

    /**
     * <pre>
     * Routines
     * 
     * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
     * @return The enum numeric value on the wire for routine.
     */
    int getRoutineValue();
    /**
     * <pre>
     * Routines
     * 
     * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
     * @return The routine.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getRoutine();

    /**
     * <pre>
     * Triggers
     * 
     * CREATE TRIGGER ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
     * @return The enum numeric value on the wire for trigger.
     */
    int getTriggerValue();
    /**
     * <pre>
     * Triggers
     * 
     * CREATE TRIGGER ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
     * @return The trigger.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getTrigger();

    /**
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
     * @return The enum numeric value on the wire for tables.
     */
    int getTablesValue();
    /**
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
     * @return The tables.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getTables();
  }
  /**
   * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings}
   */
  public static final class MysqlObjectTransferSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings)
      MysqlObjectTransferSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MysqlObjectTransferSettings.newBuilder() to construct.
    private MysqlObjectTransferSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MysqlObjectTransferSettings() {
      view_ = 0;
      routine_ = 0;
      trigger_ = 0;
      tables_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MysqlObjectTransferSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MysqlObjectTransferSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              view_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              routine_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              trigger_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              tables_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder.class);
    }

    public static final int VIEW_FIELD_NUMBER = 1;
    private int view_;
    /**
     * <pre>
     * Views
     * 
     * CREATE VIEW ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
     * @return The enum numeric value on the wire for view.
     */
    @java.lang.Override public int getViewValue() {
      return view_;
    }
    /**
     * <pre>
     * Views
     * 
     * CREATE VIEW ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
     * @return The view.
     */
    @java.lang.Override public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getView() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(view_);
      return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
    }

    public static final int ROUTINE_FIELD_NUMBER = 2;
    private int routine_;
    /**
     * <pre>
     * Routines
     * 
     * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
     * @return The enum numeric value on the wire for routine.
     */
    @java.lang.Override public int getRoutineValue() {
      return routine_;
    }
    /**
     * <pre>
     * Routines
     * 
     * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
     * @return The routine.
     */
    @java.lang.Override public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getRoutine() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(routine_);
      return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
    }

    public static final int TRIGGER_FIELD_NUMBER = 3;
    private int trigger_;
    /**
     * <pre>
     * Triggers
     * 
     * CREATE TRIGGER ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
     * @return The enum numeric value on the wire for trigger.
     */
    @java.lang.Override public int getTriggerValue() {
      return trigger_;
    }
    /**
     * <pre>
     * Triggers
     * 
     * CREATE TRIGGER ...
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
     * @return The trigger.
     */
    @java.lang.Override public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getTrigger() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(trigger_);
      return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
    }

    public static final int TABLES_FIELD_NUMBER = 4;
    private int tables_;
    /**
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
     * @return The enum numeric value on the wire for tables.
     */
    @java.lang.Override public int getTablesValue() {
      return tables_;
    }
    /**
     * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
     * @return The tables.
     */
    @java.lang.Override public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getTables() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(tables_);
      return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (view_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, view_);
      }
      if (routine_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, routine_);
      }
      if (trigger_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        output.writeEnum(3, trigger_);
      }
      if (tables_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        output.writeEnum(4, tables_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (view_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, view_);
      }
      if (routine_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, routine_);
      }
      if (trigger_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, trigger_);
      }
      if (tables_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.OBJECT_TRANSFER_STAGE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, tables_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings)) {
        return super.equals(obj);
      }
      yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings other = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings) obj;

      if (view_ != other.view_) return false;
      if (routine_ != other.routine_) return false;
      if (trigger_ != other.trigger_) return false;
      if (tables_ != other.tables_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VIEW_FIELD_NUMBER;
      hash = (53 * hash) + view_;
      hash = (37 * hash) + ROUTINE_FIELD_NUMBER;
      hash = (53 * hash) + routine_;
      hash = (37 * hash) + TRIGGER_FIELD_NUMBER;
      hash = (53 * hash) + trigger_;
      hash = (37 * hash) + TABLES_FIELD_NUMBER;
      hash = (53 * hash) + tables_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings)
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder.class);
      }

      // Construct using yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        view_ = 0;

        routine_ = 0;

        trigger_ = 0;

        tables_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings getDefaultInstanceForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings build() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings buildPartial() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings result = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings(this);
        result.view_ = view_;
        result.routine_ = routine_;
        result.trigger_ = trigger_;
        result.tables_ = tables_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings) {
          return mergeFrom((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings other) {
        if (other == yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.getDefaultInstance()) return this;
        if (other.view_ != 0) {
          setViewValue(other.getViewValue());
        }
        if (other.routine_ != 0) {
          setRoutineValue(other.getRoutineValue());
        }
        if (other.trigger_ != 0) {
          setTriggerValue(other.getTriggerValue());
        }
        if (other.tables_ != 0) {
          setTablesValue(other.getTablesValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int view_ = 0;
      /**
       * <pre>
       * Views
       * 
       * CREATE VIEW ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
       * @return The enum numeric value on the wire for view.
       */
      @java.lang.Override public int getViewValue() {
        return view_;
      }
      /**
       * <pre>
       * Views
       * 
       * CREATE VIEW ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
       * @param value The enum numeric value on the wire for view to set.
       * @return This builder for chaining.
       */
      public Builder setViewValue(int value) {
        
        view_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Views
       * 
       * CREATE VIEW ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
       * @return The view.
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getView() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(view_);
        return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Views
       * 
       * CREATE VIEW ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
       * @param value The view to set.
       * @return This builder for chaining.
       */
      public Builder setView(yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        view_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Views
       * 
       * CREATE VIEW ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage view = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearView() {
        
        view_ = 0;
        onChanged();
        return this;
      }

      private int routine_ = 0;
      /**
       * <pre>
       * Routines
       * 
       * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
       * @return The enum numeric value on the wire for routine.
       */
      @java.lang.Override public int getRoutineValue() {
        return routine_;
      }
      /**
       * <pre>
       * Routines
       * 
       * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
       * @param value The enum numeric value on the wire for routine to set.
       * @return This builder for chaining.
       */
      public Builder setRoutineValue(int value) {
        
        routine_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Routines
       * 
       * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
       * @return The routine.
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getRoutine() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(routine_);
        return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Routines
       * 
       * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
       * @param value The routine to set.
       * @return This builder for chaining.
       */
      public Builder setRoutine(yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        routine_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Routines
       * 
       * CREATE PROCEDURE ... ; CREATE FUNCTION ... ;
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage routine = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoutine() {
        
        routine_ = 0;
        onChanged();
        return this;
      }

      private int trigger_ = 0;
      /**
       * <pre>
       * Triggers
       * 
       * CREATE TRIGGER ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
       * @return The enum numeric value on the wire for trigger.
       */
      @java.lang.Override public int getTriggerValue() {
        return trigger_;
      }
      /**
       * <pre>
       * Triggers
       * 
       * CREATE TRIGGER ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
       * @param value The enum numeric value on the wire for trigger to set.
       * @return This builder for chaining.
       */
      public Builder setTriggerValue(int value) {
        
        trigger_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Triggers
       * 
       * CREATE TRIGGER ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
       * @return The trigger.
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getTrigger() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(trigger_);
        return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Triggers
       * 
       * CREATE TRIGGER ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
       * @param value The trigger to set.
       * @return This builder for chaining.
       */
      public Builder setTrigger(yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        trigger_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Triggers
       * 
       * CREATE TRIGGER ...
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage trigger = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrigger() {
        
        trigger_ = 0;
        onChanged();
        return this;
      }

      private int tables_ = 0;
      /**
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
       * @return The enum numeric value on the wire for tables.
       */
      @java.lang.Override public int getTablesValue() {
        return tables_;
      }
      /**
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
       * @param value The enum numeric value on the wire for tables to set.
       * @return This builder for chaining.
       */
      public Builder setTablesValue(int value) {
        
        tables_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
       * @return The tables.
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage getTables() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage result = yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.valueOf(tables_);
        return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage.UNRECOGNIZED : result;
      }
      /**
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
       * @param value The tables to set.
       * @return This builder for chaining.
       */
      public Builder setTables(yandex.cloud.api.datatransfer.v1.endpoint.Common.ObjectTransferStage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        tables_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.yandex.cloud.datatransfer.v1.endpoint.ObjectTransferStage tables = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTables() {
        
        tables_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings)
    private static final yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings();
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MysqlObjectTransferSettings>
        PARSER = new com.google.protobuf.AbstractParser<MysqlObjectTransferSettings>() {
      @java.lang.Override
      public MysqlObjectTransferSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MysqlObjectTransferSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MysqlObjectTransferSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MysqlObjectTransferSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MysqlSourceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.datatransfer.v1.endpoint.MysqlSource)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return Whether the connection field is set.
     */
    boolean hasConnection();
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return The connection.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getConnection();
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder getConnectionOrBuilder();

    /**
     * <pre>
     * Database name
     * 
     * You can leave it empty, then it will be possible to transfer tables from several
     * databases at the same time from this source.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The database.
     */
    java.lang.String getDatabase();
    /**
     * <pre>
     * Database name
     * 
     * You can leave it empty, then it will be possible to transfer tables from several
     * databases at the same time from this source.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The bytes for database.
     */
    com.google.protobuf.ByteString
        getDatabaseBytes();

    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return Whether the password field is set.
     */
    boolean hasPassword();
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return The password.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret getPassword();
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder getPasswordOrBuilder();

    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The timezone.
     */
    java.lang.String getTimezone();
    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The bytes for timezone.
     */
    com.google.protobuf.ByteString
        getTimezoneBytes();

    /**
     * <pre>
     * Schema migration
     * 
     * Select database objects to be transferred during activation or deactivation.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
     * @return Whether the objectTransferSettings field is set.
     */
    boolean hasObjectTransferSettings();
    /**
     * <pre>
     * Schema migration
     * 
     * Select database objects to be transferred during activation or deactivation.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
     * @return The objectTransferSettings.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings getObjectTransferSettings();
    /**
     * <pre>
     * Schema migration
     * 
     * Select database objects to be transferred during activation or deactivation.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder getObjectTransferSettingsOrBuilder();

    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @return A list containing the includeTablesRegex.
     */
    java.util.List<java.lang.String>
        getIncludeTablesRegexList();
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @return The count of includeTablesRegex.
     */
    int getIncludeTablesRegexCount();
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @param index The index of the element to return.
     * @return The includeTablesRegex at the given index.
     */
    java.lang.String getIncludeTablesRegex(int index);
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the includeTablesRegex at the given index.
     */
    com.google.protobuf.ByteString
        getIncludeTablesRegexBytes(int index);

    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @return A list containing the excludeTablesRegex.
     */
    java.util.List<java.lang.String>
        getExcludeTablesRegexList();
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @return The count of excludeTablesRegex.
     */
    int getExcludeTablesRegexCount();
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @param index The index of the element to return.
     * @return The excludeTablesRegex at the given index.
     */
    java.lang.String getExcludeTablesRegex(int index);
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the excludeTablesRegex at the given index.
     */
    com.google.protobuf.ByteString
        getExcludeTablesRegexBytes(int index);

    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @return A list containing the securityGroups.
     */
    java.util.List<java.lang.String>
        getSecurityGroupsList();
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @return The count of securityGroups.
     */
    int getSecurityGroupsCount();
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @param index The index of the element to return.
     * @return The securityGroups at the given index.
     */
    java.lang.String getSecurityGroups(int index);
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @param index The index of the value to return.
     * @return The bytes of the securityGroups at the given index.
     */
    com.google.protobuf.ByteString
        getSecurityGroupsBytes(int index);

    /**
     * <pre>
     * Database for service tables
     * 
     * Default: data source database. Here created technical tables (__tm_keeper,
     * __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The serviceDatabase.
     */
    java.lang.String getServiceDatabase();
    /**
     * <pre>
     * Database for service tables
     * 
     * Default: data source database. Here created technical tables (__tm_keeper,
     * __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The bytes for serviceDatabase.
     */
    com.google.protobuf.ByteString
        getServiceDatabaseBytes();
  }
  /**
   * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlSource}
   */
  public static final class MysqlSource extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlSource)
      MysqlSourceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MysqlSource.newBuilder() to construct.
    private MysqlSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MysqlSource() {
      database_ = "";
      user_ = "";
      timezone_ = "";
      includeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      excludeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      serviceDatabase_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MysqlSource();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MysqlSource(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder subBuilder = null;
              if (connection_ != null) {
                subBuilder = connection_.toBuilder();
              }
              connection_ = input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connection_);
                connection_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              database_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 34: {
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder subBuilder = null;
              if (password_ != null) {
                subBuilder = password_.toBuilder();
              }
              password_ = input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(password_);
                password_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              timezone_ = s;
              break;
            }
            case 90: {
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder subBuilder = null;
              if (objectTransferSettings_ != null) {
                subBuilder = objectTransferSettings_.toBuilder();
              }
              objectTransferSettings_ = input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(objectTransferSettings_);
                objectTransferSettings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                includeTablesRegex_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              includeTablesRegex_.add(s);
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                excludeTablesRegex_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              excludeTablesRegex_.add(s);
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                securityGroups_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              securityGroups_.add(s);
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              serviceDatabase_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          includeTablesRegex_ = includeTablesRegex_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          excludeTablesRegex_ = excludeTablesRegex_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          securityGroups_ = securityGroups_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.Builder.class);
    }

    public static final int CONNECTION_FIELD_NUMBER = 1;
    private yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection connection_;
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return Whether the connection field is set.
     */
    @java.lang.Override
    public boolean hasConnection() {
      return connection_ != null;
    }
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return The connection.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getConnection() {
      return connection_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance() : connection_;
    }
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder getConnectionOrBuilder() {
      return getConnection();
    }

    public static final int DATABASE_FIELD_NUMBER = 2;
    private volatile java.lang.Object database_;
    /**
     * <pre>
     * Database name
     * 
     * You can leave it empty, then it will be possible to transfer tables from several
     * databases at the same time from this source.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The database.
     */
    @java.lang.Override
    public java.lang.String getDatabase() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        database_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Database name
     * 
     * You can leave it empty, then it will be possible to transfer tables from several
     * databases at the same time from this source.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The bytes for database.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseBytes() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        database_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_FIELD_NUMBER = 3;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 4;
    private yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret password_;
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return Whether the password field is set.
     */
    @java.lang.Override
    public boolean hasPassword() {
      return password_ != null;
    }
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return The password.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret getPassword() {
      return password_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.getDefaultInstance() : password_;
    }
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder getPasswordOrBuilder() {
      return getPassword();
    }

    public static final int TIMEZONE_FIELD_NUMBER = 8;
    private volatile java.lang.Object timezone_;
    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The timezone.
     */
    @java.lang.Override
    public java.lang.String getTimezone() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timezone_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 8;</code>
     * @return The bytes for timezone.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimezoneBytes() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timezone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECT_TRANSFER_SETTINGS_FIELD_NUMBER = 11;
    private yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings objectTransferSettings_;
    /**
     * <pre>
     * Schema migration
     * 
     * Select database objects to be transferred during activation or deactivation.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
     * @return Whether the objectTransferSettings field is set.
     */
    @java.lang.Override
    public boolean hasObjectTransferSettings() {
      return objectTransferSettings_ != null;
    }
    /**
     * <pre>
     * Schema migration
     * 
     * Select database objects to be transferred during activation or deactivation.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
     * @return The objectTransferSettings.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings getObjectTransferSettings() {
      return objectTransferSettings_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.getDefaultInstance() : objectTransferSettings_;
    }
    /**
     * <pre>
     * Schema migration
     * 
     * Select database objects to be transferred during activation or deactivation.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder getObjectTransferSettingsOrBuilder() {
      return getObjectTransferSettings();
    }

    public static final int INCLUDE_TABLES_REGEX_FIELD_NUMBER = 12;
    private com.google.protobuf.LazyStringList includeTablesRegex_;
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @return A list containing the includeTablesRegex.
     */
    public com.google.protobuf.ProtocolStringList
        getIncludeTablesRegexList() {
      return includeTablesRegex_;
    }
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @return The count of includeTablesRegex.
     */
    public int getIncludeTablesRegexCount() {
      return includeTablesRegex_.size();
    }
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @param index The index of the element to return.
     * @return The includeTablesRegex at the given index.
     */
    public java.lang.String getIncludeTablesRegex(int index) {
      return includeTablesRegex_.get(index);
    }
    /**
     * <code>repeated string include_tables_regex = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the includeTablesRegex at the given index.
     */
    public com.google.protobuf.ByteString
        getIncludeTablesRegexBytes(int index) {
      return includeTablesRegex_.getByteString(index);
    }

    public static final int EXCLUDE_TABLES_REGEX_FIELD_NUMBER = 13;
    private com.google.protobuf.LazyStringList excludeTablesRegex_;
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @return A list containing the excludeTablesRegex.
     */
    public com.google.protobuf.ProtocolStringList
        getExcludeTablesRegexList() {
      return excludeTablesRegex_;
    }
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @return The count of excludeTablesRegex.
     */
    public int getExcludeTablesRegexCount() {
      return excludeTablesRegex_.size();
    }
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @param index The index of the element to return.
     * @return The excludeTablesRegex at the given index.
     */
    public java.lang.String getExcludeTablesRegex(int index) {
      return excludeTablesRegex_.get(index);
    }
    /**
     * <code>repeated string exclude_tables_regex = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the excludeTablesRegex at the given index.
     */
    public com.google.protobuf.ByteString
        getExcludeTablesRegexBytes(int index) {
      return excludeTablesRegex_.getByteString(index);
    }

    public static final int SECURITY_GROUPS_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList securityGroups_;
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @return A list containing the securityGroups.
     */
    public com.google.protobuf.ProtocolStringList
        getSecurityGroupsList() {
      return securityGroups_;
    }
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @return The count of securityGroups.
     */
    public int getSecurityGroupsCount() {
      return securityGroups_.size();
    }
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @param index The index of the element to return.
     * @return The securityGroups at the given index.
     */
    public java.lang.String getSecurityGroups(int index) {
      return securityGroups_.get(index);
    }
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 14;</code>
     * @param index The index of the value to return.
     * @return The bytes of the securityGroups at the given index.
     */
    public com.google.protobuf.ByteString
        getSecurityGroupsBytes(int index) {
      return securityGroups_.getByteString(index);
    }

    public static final int SERVICE_DATABASE_FIELD_NUMBER = 15;
    private volatile java.lang.Object serviceDatabase_;
    /**
     * <pre>
     * Database for service tables
     * 
     * Default: data source database. Here created technical tables (__tm_keeper,
     * __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The serviceDatabase.
     */
    @java.lang.Override
    public java.lang.String getServiceDatabase() {
      java.lang.Object ref = serviceDatabase_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceDatabase_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Database for service tables
     * 
     * Default: data source database. Here created technical tables (__tm_keeper,
     * __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The bytes for serviceDatabase.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceDatabaseBytes() {
      java.lang.Object ref = serviceDatabase_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceDatabase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (connection_ != null) {
        output.writeMessage(1, getConnection());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(database_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, database_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, user_);
      }
      if (password_ != null) {
        output.writeMessage(4, getPassword());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, timezone_);
      }
      if (objectTransferSettings_ != null) {
        output.writeMessage(11, getObjectTransferSettings());
      }
      for (int i = 0; i < includeTablesRegex_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, includeTablesRegex_.getRaw(i));
      }
      for (int i = 0; i < excludeTablesRegex_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, excludeTablesRegex_.getRaw(i));
      }
      for (int i = 0; i < securityGroups_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, securityGroups_.getRaw(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceDatabase_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, serviceDatabase_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (connection_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConnection());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(database_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, database_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, user_);
      }
      if (password_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPassword());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, timezone_);
      }
      if (objectTransferSettings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getObjectTransferSettings());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < includeTablesRegex_.size(); i++) {
          dataSize += computeStringSizeNoTag(includeTablesRegex_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIncludeTablesRegexList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < excludeTablesRegex_.size(); i++) {
          dataSize += computeStringSizeNoTag(excludeTablesRegex_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExcludeTablesRegexList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < securityGroups_.size(); i++) {
          dataSize += computeStringSizeNoTag(securityGroups_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSecurityGroupsList().size();
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceDatabase_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, serviceDatabase_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource)) {
        return super.equals(obj);
      }
      yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource other = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource) obj;

      if (hasConnection() != other.hasConnection()) return false;
      if (hasConnection()) {
        if (!getConnection()
            .equals(other.getConnection())) return false;
      }
      if (!getDatabase()
          .equals(other.getDatabase())) return false;
      if (!getUser()
          .equals(other.getUser())) return false;
      if (hasPassword() != other.hasPassword()) return false;
      if (hasPassword()) {
        if (!getPassword()
            .equals(other.getPassword())) return false;
      }
      if (!getTimezone()
          .equals(other.getTimezone())) return false;
      if (hasObjectTransferSettings() != other.hasObjectTransferSettings()) return false;
      if (hasObjectTransferSettings()) {
        if (!getObjectTransferSettings()
            .equals(other.getObjectTransferSettings())) return false;
      }
      if (!getIncludeTablesRegexList()
          .equals(other.getIncludeTablesRegexList())) return false;
      if (!getExcludeTablesRegexList()
          .equals(other.getExcludeTablesRegexList())) return false;
      if (!getSecurityGroupsList()
          .equals(other.getSecurityGroupsList())) return false;
      if (!getServiceDatabase()
          .equals(other.getServiceDatabase())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConnection()) {
        hash = (37 * hash) + CONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + getConnection().hashCode();
      }
      hash = (37 * hash) + DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getDatabase().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
      hash = (53 * hash) + getTimezone().hashCode();
      if (hasObjectTransferSettings()) {
        hash = (37 * hash) + OBJECT_TRANSFER_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getObjectTransferSettings().hashCode();
      }
      if (getIncludeTablesRegexCount() > 0) {
        hash = (37 * hash) + INCLUDE_TABLES_REGEX_FIELD_NUMBER;
        hash = (53 * hash) + getIncludeTablesRegexList().hashCode();
      }
      if (getExcludeTablesRegexCount() > 0) {
        hash = (37 * hash) + EXCLUDE_TABLES_REGEX_FIELD_NUMBER;
        hash = (53 * hash) + getExcludeTablesRegexList().hashCode();
      }
      if (getSecurityGroupsCount() > 0) {
        hash = (37 * hash) + SECURITY_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getSecurityGroupsList().hashCode();
      }
      hash = (37 * hash) + SERVICE_DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getServiceDatabase().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlSource}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlSource)
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSourceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.Builder.class);
      }

      // Construct using yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (connectionBuilder_ == null) {
          connection_ = null;
        } else {
          connection_ = null;
          connectionBuilder_ = null;
        }
        database_ = "";

        user_ = "";

        if (passwordBuilder_ == null) {
          password_ = null;
        } else {
          password_ = null;
          passwordBuilder_ = null;
        }
        timezone_ = "";

        if (objectTransferSettingsBuilder_ == null) {
          objectTransferSettings_ = null;
        } else {
          objectTransferSettings_ = null;
          objectTransferSettingsBuilder_ = null;
        }
        includeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        excludeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        serviceDatabase_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource getDefaultInstanceForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource build() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource buildPartial() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource result = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource(this);
        int from_bitField0_ = bitField0_;
        if (connectionBuilder_ == null) {
          result.connection_ = connection_;
        } else {
          result.connection_ = connectionBuilder_.build();
        }
        result.database_ = database_;
        result.user_ = user_;
        if (passwordBuilder_ == null) {
          result.password_ = password_;
        } else {
          result.password_ = passwordBuilder_.build();
        }
        result.timezone_ = timezone_;
        if (objectTransferSettingsBuilder_ == null) {
          result.objectTransferSettings_ = objectTransferSettings_;
        } else {
          result.objectTransferSettings_ = objectTransferSettingsBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          includeTablesRegex_ = includeTablesRegex_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.includeTablesRegex_ = includeTablesRegex_;
        if (((bitField0_ & 0x00000002) != 0)) {
          excludeTablesRegex_ = excludeTablesRegex_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.excludeTablesRegex_ = excludeTablesRegex_;
        if (((bitField0_ & 0x00000004) != 0)) {
          securityGroups_ = securityGroups_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.securityGroups_ = securityGroups_;
        result.serviceDatabase_ = serviceDatabase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource) {
          return mergeFrom((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource other) {
        if (other == yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource.getDefaultInstance()) return this;
        if (other.hasConnection()) {
          mergeConnection(other.getConnection());
        }
        if (!other.getDatabase().isEmpty()) {
          database_ = other.database_;
          onChanged();
        }
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (other.hasPassword()) {
          mergePassword(other.getPassword());
        }
        if (!other.getTimezone().isEmpty()) {
          timezone_ = other.timezone_;
          onChanged();
        }
        if (other.hasObjectTransferSettings()) {
          mergeObjectTransferSettings(other.getObjectTransferSettings());
        }
        if (!other.includeTablesRegex_.isEmpty()) {
          if (includeTablesRegex_.isEmpty()) {
            includeTablesRegex_ = other.includeTablesRegex_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIncludeTablesRegexIsMutable();
            includeTablesRegex_.addAll(other.includeTablesRegex_);
          }
          onChanged();
        }
        if (!other.excludeTablesRegex_.isEmpty()) {
          if (excludeTablesRegex_.isEmpty()) {
            excludeTablesRegex_ = other.excludeTablesRegex_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExcludeTablesRegexIsMutable();
            excludeTablesRegex_.addAll(other.excludeTablesRegex_);
          }
          onChanged();
        }
        if (!other.securityGroups_.isEmpty()) {
          if (securityGroups_.isEmpty()) {
            securityGroups_ = other.securityGroups_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSecurityGroupsIsMutable();
            securityGroups_.addAll(other.securityGroups_);
          }
          onChanged();
        }
        if (!other.getServiceDatabase().isEmpty()) {
          serviceDatabase_ = other.serviceDatabase_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection connection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder> connectionBuilder_;
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       * @return Whether the connection field is set.
       */
      public boolean hasConnection() {
        return connectionBuilder_ != null || connection_ != null;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       * @return The connection.
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getConnection() {
        if (connectionBuilder_ == null) {
          return connection_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance() : connection_;
        } else {
          return connectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder setConnection(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection value) {
        if (connectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connection_ = value;
          onChanged();
        } else {
          connectionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder setConnection(
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder builderForValue) {
        if (connectionBuilder_ == null) {
          connection_ = builderForValue.build();
          onChanged();
        } else {
          connectionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder mergeConnection(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection value) {
        if (connectionBuilder_ == null) {
          if (connection_ != null) {
            connection_ =
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.newBuilder(connection_).mergeFrom(value).buildPartial();
          } else {
            connection_ = value;
          }
          onChanged();
        } else {
          connectionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder clearConnection() {
        if (connectionBuilder_ == null) {
          connection_ = null;
          onChanged();
        } else {
          connection_ = null;
          connectionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder getConnectionBuilder() {
        
        onChanged();
        return getConnectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder getConnectionOrBuilder() {
        if (connectionBuilder_ != null) {
          return connectionBuilder_.getMessageOrBuilder();
        } else {
          return connection_ == null ?
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance() : connection_;
        }
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder> 
          getConnectionFieldBuilder() {
        if (connectionBuilder_ == null) {
          connectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder>(
                  getConnection(),
                  getParentForChildren(),
                  isClean());
          connection_ = null;
        }
        return connectionBuilder_;
      }

      private java.lang.Object database_ = "";
      /**
       * <pre>
       * Database name
       * 
       * You can leave it empty, then it will be possible to transfer tables from several
       * databases at the same time from this source.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @return The database.
       */
      public java.lang.String getDatabase() {
        java.lang.Object ref = database_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          database_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Database name
       * 
       * You can leave it empty, then it will be possible to transfer tables from several
       * databases at the same time from this source.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @return The bytes for database.
       */
      public com.google.protobuf.ByteString
          getDatabaseBytes() {
        java.lang.Object ref = database_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          database_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Database name
       * 
       * You can leave it empty, then it will be possible to transfer tables from several
       * databases at the same time from this source.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @param value The database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        database_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database name
       * 
       * You can leave it empty, then it will be possible to transfer tables from several
       * databases at the same time from this source.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabase() {
        
        database_ = getDefaultInstance().getDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database name
       * 
       * You can leave it empty, then it will be possible to transfer tables from several
       * databases at the same time from this source.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @param value The bytes for database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        database_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret password_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret, yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder> passwordBuilder_;
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       * @return Whether the password field is set.
       */
      public boolean hasPassword() {
        return passwordBuilder_ != null || password_ != null;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       * @return The password.
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret getPassword() {
        if (passwordBuilder_ == null) {
          return password_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.getDefaultInstance() : password_;
        } else {
          return passwordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder setPassword(yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret value) {
        if (passwordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          password_ = value;
          onChanged();
        } else {
          passwordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder setPassword(
          yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder builderForValue) {
        if (passwordBuilder_ == null) {
          password_ = builderForValue.build();
          onChanged();
        } else {
          passwordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder mergePassword(yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret value) {
        if (passwordBuilder_ == null) {
          if (password_ != null) {
            password_ =
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.newBuilder(password_).mergeFrom(value).buildPartial();
          } else {
            password_ = value;
          }
          onChanged();
        } else {
          passwordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder clearPassword() {
        if (passwordBuilder_ == null) {
          password_ = null;
          onChanged();
        } else {
          password_ = null;
          passwordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder getPasswordBuilder() {
        
        onChanged();
        return getPasswordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder getPasswordOrBuilder() {
        if (passwordBuilder_ != null) {
          return passwordBuilder_.getMessageOrBuilder();
        } else {
          return password_ == null ?
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.getDefaultInstance() : password_;
        }
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret, yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder> 
          getPasswordFieldBuilder() {
        if (passwordBuilder_ == null) {
          passwordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret, yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder>(
                  getPassword(),
                  getParentForChildren(),
                  isClean());
          password_ = null;
        }
        return passwordBuilder_;
      }

      private java.lang.Object timezone_ = "";
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @return The timezone.
       */
      public java.lang.String getTimezone() {
        java.lang.Object ref = timezone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timezone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @return The bytes for timezone.
       */
      public com.google.protobuf.ByteString
          getTimezoneBytes() {
        java.lang.Object ref = timezone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timezone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @param value The timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timezone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimezone() {
        
        timezone_ = getDefaultInstance().getTimezone();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 8;</code>
       * @param value The bytes for timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timezone_ = value;
        onChanged();
        return this;
      }

      private yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings objectTransferSettings_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder> objectTransferSettingsBuilder_;
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       * @return Whether the objectTransferSettings field is set.
       */
      public boolean hasObjectTransferSettings() {
        return objectTransferSettingsBuilder_ != null || objectTransferSettings_ != null;
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       * @return The objectTransferSettings.
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings getObjectTransferSettings() {
        if (objectTransferSettingsBuilder_ == null) {
          return objectTransferSettings_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.getDefaultInstance() : objectTransferSettings_;
        } else {
          return objectTransferSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      public Builder setObjectTransferSettings(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings value) {
        if (objectTransferSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          objectTransferSettings_ = value;
          onChanged();
        } else {
          objectTransferSettingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      public Builder setObjectTransferSettings(
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder builderForValue) {
        if (objectTransferSettingsBuilder_ == null) {
          objectTransferSettings_ = builderForValue.build();
          onChanged();
        } else {
          objectTransferSettingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      public Builder mergeObjectTransferSettings(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings value) {
        if (objectTransferSettingsBuilder_ == null) {
          if (objectTransferSettings_ != null) {
            objectTransferSettings_ =
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.newBuilder(objectTransferSettings_).mergeFrom(value).buildPartial();
          } else {
            objectTransferSettings_ = value;
          }
          onChanged();
        } else {
          objectTransferSettingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      public Builder clearObjectTransferSettings() {
        if (objectTransferSettingsBuilder_ == null) {
          objectTransferSettings_ = null;
          onChanged();
        } else {
          objectTransferSettings_ = null;
          objectTransferSettingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder getObjectTransferSettingsBuilder() {
        
        onChanged();
        return getObjectTransferSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder getObjectTransferSettingsOrBuilder() {
        if (objectTransferSettingsBuilder_ != null) {
          return objectTransferSettingsBuilder_.getMessageOrBuilder();
        } else {
          return objectTransferSettings_ == null ?
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.getDefaultInstance() : objectTransferSettings_;
        }
      }
      /**
       * <pre>
       * Schema migration
       * 
       * Select database objects to be transferred during activation or deactivation.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlObjectTransferSettings object_transfer_settings = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder> 
          getObjectTransferSettingsFieldBuilder() {
        if (objectTransferSettingsBuilder_ == null) {
          objectTransferSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettings.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlObjectTransferSettingsOrBuilder>(
                  getObjectTransferSettings(),
                  getParentForChildren(),
                  isClean());
          objectTransferSettings_ = null;
        }
        return objectTransferSettingsBuilder_;
      }

      private com.google.protobuf.LazyStringList includeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureIncludeTablesRegexIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          includeTablesRegex_ = new com.google.protobuf.LazyStringArrayList(includeTablesRegex_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @return A list containing the includeTablesRegex.
       */
      public com.google.protobuf.ProtocolStringList
          getIncludeTablesRegexList() {
        return includeTablesRegex_.getUnmodifiableView();
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @return The count of includeTablesRegex.
       */
      public int getIncludeTablesRegexCount() {
        return includeTablesRegex_.size();
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @param index The index of the element to return.
       * @return The includeTablesRegex at the given index.
       */
      public java.lang.String getIncludeTablesRegex(int index) {
        return includeTablesRegex_.get(index);
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @param index The index of the value to return.
       * @return The bytes of the includeTablesRegex at the given index.
       */
      public com.google.protobuf.ByteString
          getIncludeTablesRegexBytes(int index) {
        return includeTablesRegex_.getByteString(index);
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @param index The index to set the value at.
       * @param value The includeTablesRegex to set.
       * @return This builder for chaining.
       */
      public Builder setIncludeTablesRegex(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIncludeTablesRegexIsMutable();
        includeTablesRegex_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @param value The includeTablesRegex to add.
       * @return This builder for chaining.
       */
      public Builder addIncludeTablesRegex(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIncludeTablesRegexIsMutable();
        includeTablesRegex_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @param values The includeTablesRegex to add.
       * @return This builder for chaining.
       */
      public Builder addAllIncludeTablesRegex(
          java.lang.Iterable<java.lang.String> values) {
        ensureIncludeTablesRegexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, includeTablesRegex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearIncludeTablesRegex() {
        includeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string include_tables_regex = 12;</code>
       * @param value The bytes of the includeTablesRegex to add.
       * @return This builder for chaining.
       */
      public Builder addIncludeTablesRegexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureIncludeTablesRegexIsMutable();
        includeTablesRegex_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList excludeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExcludeTablesRegexIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          excludeTablesRegex_ = new com.google.protobuf.LazyStringArrayList(excludeTablesRegex_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @return A list containing the excludeTablesRegex.
       */
      public com.google.protobuf.ProtocolStringList
          getExcludeTablesRegexList() {
        return excludeTablesRegex_.getUnmodifiableView();
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @return The count of excludeTablesRegex.
       */
      public int getExcludeTablesRegexCount() {
        return excludeTablesRegex_.size();
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @param index The index of the element to return.
       * @return The excludeTablesRegex at the given index.
       */
      public java.lang.String getExcludeTablesRegex(int index) {
        return excludeTablesRegex_.get(index);
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @param index The index of the value to return.
       * @return The bytes of the excludeTablesRegex at the given index.
       */
      public com.google.protobuf.ByteString
          getExcludeTablesRegexBytes(int index) {
        return excludeTablesRegex_.getByteString(index);
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @param index The index to set the value at.
       * @param value The excludeTablesRegex to set.
       * @return This builder for chaining.
       */
      public Builder setExcludeTablesRegex(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludeTablesRegexIsMutable();
        excludeTablesRegex_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @param value The excludeTablesRegex to add.
       * @return This builder for chaining.
       */
      public Builder addExcludeTablesRegex(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExcludeTablesRegexIsMutable();
        excludeTablesRegex_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @param values The excludeTablesRegex to add.
       * @return This builder for chaining.
       */
      public Builder addAllExcludeTablesRegex(
          java.lang.Iterable<java.lang.String> values) {
        ensureExcludeTablesRegexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, excludeTablesRegex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearExcludeTablesRegex() {
        excludeTablesRegex_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string exclude_tables_regex = 13;</code>
       * @param value The bytes of the excludeTablesRegex to add.
       * @return This builder for chaining.
       */
      public Builder addExcludeTablesRegexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureExcludeTablesRegexIsMutable();
        excludeTablesRegex_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSecurityGroupsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          securityGroups_ = new com.google.protobuf.LazyStringArrayList(securityGroups_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @return A list containing the securityGroups.
       */
      public com.google.protobuf.ProtocolStringList
          getSecurityGroupsList() {
        return securityGroups_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @return The count of securityGroups.
       */
      public int getSecurityGroupsCount() {
        return securityGroups_.size();
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @param index The index of the element to return.
       * @return The securityGroups at the given index.
       */
      public java.lang.String getSecurityGroups(int index) {
        return securityGroups_.get(index);
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @param index The index of the value to return.
       * @return The bytes of the securityGroups at the given index.
       */
      public com.google.protobuf.ByteString
          getSecurityGroupsBytes(int index) {
        return securityGroups_.getByteString(index);
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @param index The index to set the value at.
       * @param value The securityGroups to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityGroups(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSecurityGroupsIsMutable();
        securityGroups_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @param value The securityGroups to add.
       * @return This builder for chaining.
       */
      public Builder addSecurityGroups(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSecurityGroupsIsMutable();
        securityGroups_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @param values The securityGroups to add.
       * @return This builder for chaining.
       */
      public Builder addAllSecurityGroups(
          java.lang.Iterable<java.lang.String> values) {
        ensureSecurityGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, securityGroups_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityGroups() {
        securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 14;</code>
       * @param value The bytes of the securityGroups to add.
       * @return This builder for chaining.
       */
      public Builder addSecurityGroupsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSecurityGroupsIsMutable();
        securityGroups_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object serviceDatabase_ = "";
      /**
       * <pre>
       * Database for service tables
       * 
       * Default: data source database. Here created technical tables (__tm_keeper,
       * __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @return The serviceDatabase.
       */
      public java.lang.String getServiceDatabase() {
        java.lang.Object ref = serviceDatabase_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceDatabase_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Database for service tables
       * 
       * Default: data source database. Here created technical tables (__tm_keeper,
       * __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @return The bytes for serviceDatabase.
       */
      public com.google.protobuf.ByteString
          getServiceDatabaseBytes() {
        java.lang.Object ref = serviceDatabase_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceDatabase_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Database for service tables
       * 
       * Default: data source database. Here created technical tables (__tm_keeper,
       * __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @param value The serviceDatabase to set.
       * @return This builder for chaining.
       */
      public Builder setServiceDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceDatabase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database for service tables
       * 
       * Default: data source database. Here created technical tables (__tm_keeper,
       * __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceDatabase() {
        
        serviceDatabase_ = getDefaultInstance().getServiceDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database for service tables
       * 
       * Default: data source database. Here created technical tables (__tm_keeper,
       * __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @param value The bytes for serviceDatabase to set.
       * @return This builder for chaining.
       */
      public Builder setServiceDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceDatabase_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlSource)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlSource)
    private static final yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource();
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MysqlSource>
        PARSER = new com.google.protobuf.AbstractParser<MysqlSource>() {
      @java.lang.Override
      public MysqlSource parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MysqlSource(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MysqlSource> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MysqlSource> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlSource getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MysqlTargetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.datatransfer.v1.endpoint.MysqlTarget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return Whether the connection field is set.
     */
    boolean hasConnection();
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return The connection.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getConnection();
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder getConnectionOrBuilder();

    /**
     * <pre>
     * Database name
     * 
     * Allowed to leave it empty, then the tables will be created in databases with the
     * same names as on the source. If this field is empty, then you must fill below db
     * schema for service table.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The database.
     */
    java.lang.String getDatabase();
    /**
     * <pre>
     * Database name
     * 
     * Allowed to leave it empty, then the tables will be created in databases with the
     * same names as on the source. If this field is empty, then you must fill below db
     * schema for service table.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The bytes for database.
     */
    com.google.protobuf.ByteString
        getDatabaseBytes();

    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return Whether the password field is set.
     */
    boolean hasPassword();
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return The password.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret getPassword();
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder getPasswordOrBuilder();

    /**
     * <pre>
     * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
     * </pre>
     *
     * <code>string sql_mode = 5;</code>
     * @return The sqlMode.
     */
    java.lang.String getSqlMode();
    /**
     * <pre>
     * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
     * </pre>
     *
     * <code>string sql_mode = 5;</code>
     * @return The bytes for sqlMode.
     */
    com.google.protobuf.ByteString
        getSqlModeBytes();

    /**
     * <pre>
     * Disable constraints checks
     * 
     * Recommend to disable for increase replication speed, but if schema contain
     * cascading operations we don't recommend to disable. This option set
     * FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
     * </pre>
     *
     * <code>bool skip_constraint_checks = 6;</code>
     * @return The skipConstraintChecks.
     */
    boolean getSkipConstraintChecks();

    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 7;</code>
     * @return The timezone.
     */
    java.lang.String getTimezone();
    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 7;</code>
     * @return The bytes for timezone.
     */
    com.google.protobuf.ByteString
        getTimezoneBytes();

    /**
     * <pre>
     * Cleanup policy
     * 
     * Cleanup policy for activate, reactivate and reupload processes. Default is
     * DISABLED.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
     * @return The enum numeric value on the wire for cleanupPolicy.
     */
    int getCleanupPolicyValue();
    /**
     * <pre>
     * Cleanup policy
     * 
     * Cleanup policy for activate, reactivate and reupload processes. Default is
     * DISABLED.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
     * @return The cleanupPolicy.
     */
    yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy getCleanupPolicy();

    /**
     * <pre>
     * Database schema for service table
     * 
     * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The serviceDatabase.
     */
    java.lang.String getServiceDatabase();
    /**
     * <pre>
     * Database schema for service table
     * 
     * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The bytes for serviceDatabase.
     */
    com.google.protobuf.ByteString
        getServiceDatabaseBytes();

    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @return A list containing the securityGroups.
     */
    java.util.List<java.lang.String>
        getSecurityGroupsList();
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @return The count of securityGroups.
     */
    int getSecurityGroupsCount();
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @param index The index of the element to return.
     * @return The securityGroups at the given index.
     */
    java.lang.String getSecurityGroups(int index);
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @param index The index of the value to return.
     * @return The bytes of the securityGroups at the given index.
     */
    com.google.protobuf.ByteString
        getSecurityGroupsBytes(int index);
  }
  /**
   * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlTarget}
   */
  public static final class MysqlTarget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlTarget)
      MysqlTargetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MysqlTarget.newBuilder() to construct.
    private MysqlTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MysqlTarget() {
      database_ = "";
      user_ = "";
      sqlMode_ = "";
      timezone_ = "";
      cleanupPolicy_ = 0;
      serviceDatabase_ = "";
      securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MysqlTarget();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MysqlTarget(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder subBuilder = null;
              if (connection_ != null) {
                subBuilder = connection_.toBuilder();
              }
              connection_ = input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(connection_);
                connection_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              database_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              user_ = s;
              break;
            }
            case 34: {
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder subBuilder = null;
              if (password_ != null) {
                subBuilder = password_.toBuilder();
              }
              password_ = input.readMessage(yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(password_);
                password_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              sqlMode_ = s;
              break;
            }
            case 48: {

              skipConstraintChecks_ = input.readBool();
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              timezone_ = s;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              cleanupPolicy_ = rawValue;
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              serviceDatabase_ = s;
              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                securityGroups_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              securityGroups_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          securityGroups_ = securityGroups_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.Builder.class);
    }

    public static final int CONNECTION_FIELD_NUMBER = 1;
    private yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection connection_;
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return Whether the connection field is set.
     */
    @java.lang.Override
    public boolean hasConnection() {
      return connection_ != null;
    }
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     * @return The connection.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getConnection() {
      return connection_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance() : connection_;
    }
    /**
     * <pre>
     * Database connection settings
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder getConnectionOrBuilder() {
      return getConnection();
    }

    public static final int DATABASE_FIELD_NUMBER = 2;
    private volatile java.lang.Object database_;
    /**
     * <pre>
     * Database name
     * 
     * Allowed to leave it empty, then the tables will be created in databases with the
     * same names as on the source. If this field is empty, then you must fill below db
     * schema for service table.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The database.
     */
    @java.lang.Override
    public java.lang.String getDatabase() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        database_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Database name
     * 
     * Allowed to leave it empty, then the tables will be created in databases with the
     * same names as on the source. If this field is empty, then you must fill below db
     * schema for service table.
     * </pre>
     *
     * <code>string database = 2;</code>
     * @return The bytes for database.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDatabaseBytes() {
      java.lang.Object ref = database_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        database_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_FIELD_NUMBER = 3;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        user_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * User for database access.
     * </pre>
     *
     * <code>string user = 3;</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 4;
    private yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret password_;
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return Whether the password field is set.
     */
    @java.lang.Override
    public boolean hasPassword() {
      return password_ != null;
    }
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     * @return The password.
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret getPassword() {
      return password_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.getDefaultInstance() : password_;
    }
    /**
     * <pre>
     * Password for database access.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder getPasswordOrBuilder() {
      return getPassword();
    }

    public static final int SQL_MODE_FIELD_NUMBER = 5;
    private volatile java.lang.Object sqlMode_;
    /**
     * <pre>
     * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
     * </pre>
     *
     * <code>string sql_mode = 5;</code>
     * @return The sqlMode.
     */
    @java.lang.Override
    public java.lang.String getSqlMode() {
      java.lang.Object ref = sqlMode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sqlMode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
     * </pre>
     *
     * <code>string sql_mode = 5;</code>
     * @return The bytes for sqlMode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSqlModeBytes() {
      java.lang.Object ref = sqlMode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sqlMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SKIP_CONSTRAINT_CHECKS_FIELD_NUMBER = 6;
    private boolean skipConstraintChecks_;
    /**
     * <pre>
     * Disable constraints checks
     * 
     * Recommend to disable for increase replication speed, but if schema contain
     * cascading operations we don't recommend to disable. This option set
     * FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
     * </pre>
     *
     * <code>bool skip_constraint_checks = 6;</code>
     * @return The skipConstraintChecks.
     */
    @java.lang.Override
    public boolean getSkipConstraintChecks() {
      return skipConstraintChecks_;
    }

    public static final int TIMEZONE_FIELD_NUMBER = 7;
    private volatile java.lang.Object timezone_;
    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 7;</code>
     * @return The timezone.
     */
    @java.lang.Override
    public java.lang.String getTimezone() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timezone_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Database timezone
     * 
     * Is used for parsing timestamps for saving source timezones. Accepts values from
     * IANA timezone database. Default: local timezone.
     * </pre>
     *
     * <code>string timezone = 7;</code>
     * @return The bytes for timezone.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimezoneBytes() {
      java.lang.Object ref = timezone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timezone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLEANUP_POLICY_FIELD_NUMBER = 8;
    private int cleanupPolicy_;
    /**
     * <pre>
     * Cleanup policy
     * 
     * Cleanup policy for activate, reactivate and reupload processes. Default is
     * DISABLED.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
     * @return The enum numeric value on the wire for cleanupPolicy.
     */
    @java.lang.Override public int getCleanupPolicyValue() {
      return cleanupPolicy_;
    }
    /**
     * <pre>
     * Cleanup policy
     * 
     * Cleanup policy for activate, reactivate and reupload processes. Default is
     * DISABLED.
     * </pre>
     *
     * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
     * @return The cleanupPolicy.
     */
    @java.lang.Override public yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy getCleanupPolicy() {
      @SuppressWarnings("deprecation")
      yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy result = yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy.valueOf(cleanupPolicy_);
      return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy.UNRECOGNIZED : result;
    }

    public static final int SERVICE_DATABASE_FIELD_NUMBER = 15;
    private volatile java.lang.Object serviceDatabase_;
    /**
     * <pre>
     * Database schema for service table
     * 
     * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The serviceDatabase.
     */
    @java.lang.Override
    public java.lang.String getServiceDatabase() {
      java.lang.Object ref = serviceDatabase_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceDatabase_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Database schema for service table
     * 
     * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
     * </pre>
     *
     * <code>string service_database = 15;</code>
     * @return The bytes for serviceDatabase.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceDatabaseBytes() {
      java.lang.Object ref = serviceDatabase_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceDatabase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECURITY_GROUPS_FIELD_NUMBER = 16;
    private com.google.protobuf.LazyStringList securityGroups_;
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @return A list containing the securityGroups.
     */
    public com.google.protobuf.ProtocolStringList
        getSecurityGroupsList() {
      return securityGroups_;
    }
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @return The count of securityGroups.
     */
    public int getSecurityGroupsCount() {
      return securityGroups_.size();
    }
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @param index The index of the element to return.
     * @return The securityGroups at the given index.
     */
    public java.lang.String getSecurityGroups(int index) {
      return securityGroups_.get(index);
    }
    /**
     * <pre>
     * Security groups
     * </pre>
     *
     * <code>repeated string security_groups = 16;</code>
     * @param index The index of the value to return.
     * @return The bytes of the securityGroups at the given index.
     */
    public com.google.protobuf.ByteString
        getSecurityGroupsBytes(int index) {
      return securityGroups_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (connection_ != null) {
        output.writeMessage(1, getConnection());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(database_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, database_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, user_);
      }
      if (password_ != null) {
        output.writeMessage(4, getPassword());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sqlMode_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, sqlMode_);
      }
      if (skipConstraintChecks_ != false) {
        output.writeBool(6, skipConstraintChecks_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, timezone_);
      }
      if (cleanupPolicy_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy.CLEANUP_POLICY_UNSPECIFIED.getNumber()) {
        output.writeEnum(8, cleanupPolicy_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceDatabase_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, serviceDatabase_);
      }
      for (int i = 0; i < securityGroups_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, securityGroups_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (connection_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getConnection());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(database_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, database_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(user_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, user_);
      }
      if (password_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPassword());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sqlMode_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, sqlMode_);
      }
      if (skipConstraintChecks_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, skipConstraintChecks_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timezone_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, timezone_);
      }
      if (cleanupPolicy_ != yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy.CLEANUP_POLICY_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, cleanupPolicy_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceDatabase_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, serviceDatabase_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < securityGroups_.size(); i++) {
          dataSize += computeStringSizeNoTag(securityGroups_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getSecurityGroupsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget)) {
        return super.equals(obj);
      }
      yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget other = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget) obj;

      if (hasConnection() != other.hasConnection()) return false;
      if (hasConnection()) {
        if (!getConnection()
            .equals(other.getConnection())) return false;
      }
      if (!getDatabase()
          .equals(other.getDatabase())) return false;
      if (!getUser()
          .equals(other.getUser())) return false;
      if (hasPassword() != other.hasPassword()) return false;
      if (hasPassword()) {
        if (!getPassword()
            .equals(other.getPassword())) return false;
      }
      if (!getSqlMode()
          .equals(other.getSqlMode())) return false;
      if (getSkipConstraintChecks()
          != other.getSkipConstraintChecks()) return false;
      if (!getTimezone()
          .equals(other.getTimezone())) return false;
      if (cleanupPolicy_ != other.cleanupPolicy_) return false;
      if (!getServiceDatabase()
          .equals(other.getServiceDatabase())) return false;
      if (!getSecurityGroupsList()
          .equals(other.getSecurityGroupsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasConnection()) {
        hash = (37 * hash) + CONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + getConnection().hashCode();
      }
      hash = (37 * hash) + DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getDatabase().hashCode();
      hash = (37 * hash) + USER_FIELD_NUMBER;
      hash = (53 * hash) + getUser().hashCode();
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      hash = (37 * hash) + SQL_MODE_FIELD_NUMBER;
      hash = (53 * hash) + getSqlMode().hashCode();
      hash = (37 * hash) + SKIP_CONSTRAINT_CHECKS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSkipConstraintChecks());
      hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
      hash = (53 * hash) + getTimezone().hashCode();
      hash = (37 * hash) + CLEANUP_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + cleanupPolicy_;
      hash = (37 * hash) + SERVICE_DATABASE_FIELD_NUMBER;
      hash = (53 * hash) + getServiceDatabase().hashCode();
      if (getSecurityGroupsCount() > 0) {
        hash = (37 * hash) + SECURITY_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getSecurityGroupsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.datatransfer.v1.endpoint.MysqlTarget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.datatransfer.v1.endpoint.MysqlTarget)
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTargetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.class, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.Builder.class);
      }

      // Construct using yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (connectionBuilder_ == null) {
          connection_ = null;
        } else {
          connection_ = null;
          connectionBuilder_ = null;
        }
        database_ = "";

        user_ = "";

        if (passwordBuilder_ == null) {
          password_ = null;
        } else {
          password_ = null;
          passwordBuilder_ = null;
        }
        sqlMode_ = "";

        skipConstraintChecks_ = false;

        timezone_ = "";

        cleanupPolicy_ = 0;

        serviceDatabase_ = "";

        securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget getDefaultInstanceForType() {
        return yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget build() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget buildPartial() {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget result = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget(this);
        int from_bitField0_ = bitField0_;
        if (connectionBuilder_ == null) {
          result.connection_ = connection_;
        } else {
          result.connection_ = connectionBuilder_.build();
        }
        result.database_ = database_;
        result.user_ = user_;
        if (passwordBuilder_ == null) {
          result.password_ = password_;
        } else {
          result.password_ = passwordBuilder_.build();
        }
        result.sqlMode_ = sqlMode_;
        result.skipConstraintChecks_ = skipConstraintChecks_;
        result.timezone_ = timezone_;
        result.cleanupPolicy_ = cleanupPolicy_;
        result.serviceDatabase_ = serviceDatabase_;
        if (((bitField0_ & 0x00000001) != 0)) {
          securityGroups_ = securityGroups_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.securityGroups_ = securityGroups_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget) {
          return mergeFrom((yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget other) {
        if (other == yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget.getDefaultInstance()) return this;
        if (other.hasConnection()) {
          mergeConnection(other.getConnection());
        }
        if (!other.getDatabase().isEmpty()) {
          database_ = other.database_;
          onChanged();
        }
        if (!other.getUser().isEmpty()) {
          user_ = other.user_;
          onChanged();
        }
        if (other.hasPassword()) {
          mergePassword(other.getPassword());
        }
        if (!other.getSqlMode().isEmpty()) {
          sqlMode_ = other.sqlMode_;
          onChanged();
        }
        if (other.getSkipConstraintChecks() != false) {
          setSkipConstraintChecks(other.getSkipConstraintChecks());
        }
        if (!other.getTimezone().isEmpty()) {
          timezone_ = other.timezone_;
          onChanged();
        }
        if (other.cleanupPolicy_ != 0) {
          setCleanupPolicyValue(other.getCleanupPolicyValue());
        }
        if (!other.getServiceDatabase().isEmpty()) {
          serviceDatabase_ = other.serviceDatabase_;
          onChanged();
        }
        if (!other.securityGroups_.isEmpty()) {
          if (securityGroups_.isEmpty()) {
            securityGroups_ = other.securityGroups_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSecurityGroupsIsMutable();
            securityGroups_.addAll(other.securityGroups_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection connection_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder> connectionBuilder_;
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       * @return Whether the connection field is set.
       */
      public boolean hasConnection() {
        return connectionBuilder_ != null || connection_ != null;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       * @return The connection.
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection getConnection() {
        if (connectionBuilder_ == null) {
          return connection_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance() : connection_;
        } else {
          return connectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder setConnection(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection value) {
        if (connectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connection_ = value;
          onChanged();
        } else {
          connectionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder setConnection(
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder builderForValue) {
        if (connectionBuilder_ == null) {
          connection_ = builderForValue.build();
          onChanged();
        } else {
          connectionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder mergeConnection(yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection value) {
        if (connectionBuilder_ == null) {
          if (connection_ != null) {
            connection_ =
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.newBuilder(connection_).mergeFrom(value).buildPartial();
          } else {
            connection_ = value;
          }
          onChanged();
        } else {
          connectionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public Builder clearConnection() {
        if (connectionBuilder_ == null) {
          connection_ = null;
          onChanged();
        } else {
          connection_ = null;
          connectionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder getConnectionBuilder() {
        
        onChanged();
        return getConnectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder getConnectionOrBuilder() {
        if (connectionBuilder_ != null) {
          return connectionBuilder_.getMessageOrBuilder();
        } else {
          return connection_ == null ?
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.getDefaultInstance() : connection_;
        }
      }
      /**
       * <pre>
       * Database connection settings
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.MysqlConnection connection = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder> 
          getConnectionFieldBuilder() {
        if (connectionBuilder_ == null) {
          connectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnection.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlConnectionOrBuilder>(
                  getConnection(),
                  getParentForChildren(),
                  isClean());
          connection_ = null;
        }
        return connectionBuilder_;
      }

      private java.lang.Object database_ = "";
      /**
       * <pre>
       * Database name
       * 
       * Allowed to leave it empty, then the tables will be created in databases with the
       * same names as on the source. If this field is empty, then you must fill below db
       * schema for service table.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @return The database.
       */
      public java.lang.String getDatabase() {
        java.lang.Object ref = database_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          database_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Database name
       * 
       * Allowed to leave it empty, then the tables will be created in databases with the
       * same names as on the source. If this field is empty, then you must fill below db
       * schema for service table.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @return The bytes for database.
       */
      public com.google.protobuf.ByteString
          getDatabaseBytes() {
        java.lang.Object ref = database_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          database_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Database name
       * 
       * Allowed to leave it empty, then the tables will be created in databases with the
       * same names as on the source. If this field is empty, then you must fill below db
       * schema for service table.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @param value The database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        database_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database name
       * 
       * Allowed to leave it empty, then the tables will be created in databases with the
       * same names as on the source. If this field is empty, then you must fill below db
       * schema for service table.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabase() {
        
        database_ = getDefaultInstance().getDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database name
       * 
       * Allowed to leave it empty, then the tables will be created in databases with the
       * same names as on the source. If this field is empty, then you must fill below db
       * schema for service table.
       * </pre>
       *
       * <code>string database = 2;</code>
       * @param value The bytes for database to set.
       * @return This builder for chaining.
       */
      public Builder setDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        database_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @return The user.
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @return The bytes for user.
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User for database access.
       * </pre>
       *
       * <code>string user = 3;</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        user_ = value;
        onChanged();
        return this;
      }

      private yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret password_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret, yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder> passwordBuilder_;
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       * @return Whether the password field is set.
       */
      public boolean hasPassword() {
        return passwordBuilder_ != null || password_ != null;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       * @return The password.
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret getPassword() {
        if (passwordBuilder_ == null) {
          return password_ == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.getDefaultInstance() : password_;
        } else {
          return passwordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder setPassword(yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret value) {
        if (passwordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          password_ = value;
          onChanged();
        } else {
          passwordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder setPassword(
          yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder builderForValue) {
        if (passwordBuilder_ == null) {
          password_ = builderForValue.build();
          onChanged();
        } else {
          passwordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder mergePassword(yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret value) {
        if (passwordBuilder_ == null) {
          if (password_ != null) {
            password_ =
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.newBuilder(password_).mergeFrom(value).buildPartial();
          } else {
            password_ = value;
          }
          onChanged();
        } else {
          passwordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public Builder clearPassword() {
        if (passwordBuilder_ == null) {
          password_ = null;
          onChanged();
        } else {
          password_ = null;
          passwordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder getPasswordBuilder() {
        
        onChanged();
        return getPasswordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder getPasswordOrBuilder() {
        if (passwordBuilder_ != null) {
          return passwordBuilder_.getMessageOrBuilder();
        } else {
          return password_ == null ?
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.getDefaultInstance() : password_;
        }
      }
      /**
       * <pre>
       * Password for database access.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.Secret password = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret, yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder> 
          getPasswordFieldBuilder() {
        if (passwordBuilder_ == null) {
          passwordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret, yandex.cloud.api.datatransfer.v1.endpoint.Common.Secret.Builder, yandex.cloud.api.datatransfer.v1.endpoint.Common.SecretOrBuilder>(
                  getPassword(),
                  getParentForChildren(),
                  isClean());
          password_ = null;
        }
        return passwordBuilder_;
      }

      private java.lang.Object sqlMode_ = "";
      /**
       * <pre>
       * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
       * </pre>
       *
       * <code>string sql_mode = 5;</code>
       * @return The sqlMode.
       */
      public java.lang.String getSqlMode() {
        java.lang.Object ref = sqlMode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sqlMode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
       * </pre>
       *
       * <code>string sql_mode = 5;</code>
       * @return The bytes for sqlMode.
       */
      public com.google.protobuf.ByteString
          getSqlModeBytes() {
        java.lang.Object ref = sqlMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sqlMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
       * </pre>
       *
       * <code>string sql_mode = 5;</code>
       * @param value The sqlMode to set.
       * @return This builder for chaining.
       */
      public Builder setSqlMode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sqlMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
       * </pre>
       *
       * <code>string sql_mode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSqlMode() {
        
        sqlMode_ = getDefaultInstance().getSqlMode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION.
       * </pre>
       *
       * <code>string sql_mode = 5;</code>
       * @param value The bytes for sqlMode to set.
       * @return This builder for chaining.
       */
      public Builder setSqlModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sqlMode_ = value;
        onChanged();
        return this;
      }

      private boolean skipConstraintChecks_ ;
      /**
       * <pre>
       * Disable constraints checks
       * 
       * Recommend to disable for increase replication speed, but if schema contain
       * cascading operations we don't recommend to disable. This option set
       * FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
       * </pre>
       *
       * <code>bool skip_constraint_checks = 6;</code>
       * @return The skipConstraintChecks.
       */
      @java.lang.Override
      public boolean getSkipConstraintChecks() {
        return skipConstraintChecks_;
      }
      /**
       * <pre>
       * Disable constraints checks
       * 
       * Recommend to disable for increase replication speed, but if schema contain
       * cascading operations we don't recommend to disable. This option set
       * FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
       * </pre>
       *
       * <code>bool skip_constraint_checks = 6;</code>
       * @param value The skipConstraintChecks to set.
       * @return This builder for chaining.
       */
      public Builder setSkipConstraintChecks(boolean value) {
        
        skipConstraintChecks_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Disable constraints checks
       * 
       * Recommend to disable for increase replication speed, but if schema contain
       * cascading operations we don't recommend to disable. This option set
       * FOREIGN_KEY_CHECKS=0 and UNIQUE_CHECKS=0.
       * </pre>
       *
       * <code>bool skip_constraint_checks = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkipConstraintChecks() {
        
        skipConstraintChecks_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object timezone_ = "";
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 7;</code>
       * @return The timezone.
       */
      public java.lang.String getTimezone() {
        java.lang.Object ref = timezone_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timezone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 7;</code>
       * @return The bytes for timezone.
       */
      public com.google.protobuf.ByteString
          getTimezoneBytes() {
        java.lang.Object ref = timezone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timezone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 7;</code>
       * @param value The timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timezone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimezone() {
        
        timezone_ = getDefaultInstance().getTimezone();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database timezone
       * 
       * Is used for parsing timestamps for saving source timezones. Accepts values from
       * IANA timezone database. Default: local timezone.
       * </pre>
       *
       * <code>string timezone = 7;</code>
       * @param value The bytes for timezone to set.
       * @return This builder for chaining.
       */
      public Builder setTimezoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timezone_ = value;
        onChanged();
        return this;
      }

      private int cleanupPolicy_ = 0;
      /**
       * <pre>
       * Cleanup policy
       * 
       * Cleanup policy for activate, reactivate and reupload processes. Default is
       * DISABLED.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
       * @return The enum numeric value on the wire for cleanupPolicy.
       */
      @java.lang.Override public int getCleanupPolicyValue() {
        return cleanupPolicy_;
      }
      /**
       * <pre>
       * Cleanup policy
       * 
       * Cleanup policy for activate, reactivate and reupload processes. Default is
       * DISABLED.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
       * @param value The enum numeric value on the wire for cleanupPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setCleanupPolicyValue(int value) {
        
        cleanupPolicy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cleanup policy
       * 
       * Cleanup policy for activate, reactivate and reupload processes. Default is
       * DISABLED.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
       * @return The cleanupPolicy.
       */
      @java.lang.Override
      public yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy getCleanupPolicy() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy result = yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy.valueOf(cleanupPolicy_);
        return result == null ? yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Cleanup policy
       * 
       * Cleanup policy for activate, reactivate and reupload processes. Default is
       * DISABLED.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
       * @param value The cleanupPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setCleanupPolicy(yandex.cloud.api.datatransfer.v1.endpoint.Common.CleanupPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cleanupPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cleanup policy
       * 
       * Cleanup policy for activate, reactivate and reupload processes. Default is
       * DISABLED.
       * </pre>
       *
       * <code>.yandex.cloud.datatransfer.v1.endpoint.CleanupPolicy cleanup_policy = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCleanupPolicy() {
        
        cleanupPolicy_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serviceDatabase_ = "";
      /**
       * <pre>
       * Database schema for service table
       * 
       * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @return The serviceDatabase.
       */
      public java.lang.String getServiceDatabase() {
        java.lang.Object ref = serviceDatabase_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceDatabase_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Database schema for service table
       * 
       * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @return The bytes for serviceDatabase.
       */
      public com.google.protobuf.ByteString
          getServiceDatabaseBytes() {
        java.lang.Object ref = serviceDatabase_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceDatabase_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Database schema for service table
       * 
       * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @param value The serviceDatabase to set.
       * @return This builder for chaining.
       */
      public Builder setServiceDatabase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceDatabase_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database schema for service table
       * 
       * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceDatabase() {
        
        serviceDatabase_ = getDefaultInstance().getServiceDatabase();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Database schema for service table
       * 
       * Default: db name. Here created technical tables (__tm_keeper, __tm_gtid_keeper).
       * </pre>
       *
       * <code>string service_database = 15;</code>
       * @param value The bytes for serviceDatabase to set.
       * @return This builder for chaining.
       */
      public Builder setServiceDatabaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceDatabase_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSecurityGroupsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          securityGroups_ = new com.google.protobuf.LazyStringArrayList(securityGroups_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @return A list containing the securityGroups.
       */
      public com.google.protobuf.ProtocolStringList
          getSecurityGroupsList() {
        return securityGroups_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @return The count of securityGroups.
       */
      public int getSecurityGroupsCount() {
        return securityGroups_.size();
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @param index The index of the element to return.
       * @return The securityGroups at the given index.
       */
      public java.lang.String getSecurityGroups(int index) {
        return securityGroups_.get(index);
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @param index The index of the value to return.
       * @return The bytes of the securityGroups at the given index.
       */
      public com.google.protobuf.ByteString
          getSecurityGroupsBytes(int index) {
        return securityGroups_.getByteString(index);
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @param index The index to set the value at.
       * @param value The securityGroups to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityGroups(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSecurityGroupsIsMutable();
        securityGroups_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @param value The securityGroups to add.
       * @return This builder for chaining.
       */
      public Builder addSecurityGroups(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSecurityGroupsIsMutable();
        securityGroups_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @param values The securityGroups to add.
       * @return This builder for chaining.
       */
      public Builder addAllSecurityGroups(
          java.lang.Iterable<java.lang.String> values) {
        ensureSecurityGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, securityGroups_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityGroups() {
        securityGroups_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Security groups
       * </pre>
       *
       * <code>repeated string security_groups = 16;</code>
       * @param value The bytes of the securityGroups to add.
       * @return This builder for chaining.
       */
      public Builder addSecurityGroupsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSecurityGroupsIsMutable();
        securityGroups_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlTarget)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.datatransfer.v1.endpoint.MysqlTarget)
    private static final yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget();
    }

    public static yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MysqlTarget>
        PARSER = new com.google.protobuf.AbstractParser<MysqlTarget>() {
      @java.lang.Override
      public MysqlTarget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MysqlTarget(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MysqlTarget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MysqlTarget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.datatransfer.v1.endpoint.Mysql.MysqlTarget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1yandex/cloud/datatransfer/v1/endpoint/" +
      "mysql.proto\022%yandex.cloud.datatransfer.v" +
      "1.endpoint\0322yandex/cloud/datatransfer/v1" +
      "/endpoint/common.proto\"\216\001\n\016OnPremiseMysq" +
      "l\022\014\n\004port\030\002 \001(\003\022\021\n\tsubnet_id\030\004 \001(\t\022\r\n\005ho" +
      "sts\030\005 \003(\t\022@\n\010tls_mode\030\006 \001(\0132..yandex.clo" +
      "ud.datatransfer.v1.endpoint.TLSModeJ\004\010\001\020" +
      "\002J\004\010\003\020\004\"\206\001\n\017MysqlConnection\022\030\n\016mdb_clust" +
      "er_id\030\001 \001(\tH\000\022K\n\non_premise\030\002 \001(\01325.yand" +
      "ex.cloud.datatransfer.v1.endpoint.OnPrem" +
      "iseMysqlH\000B\014\n\nconnection\"\315\002\n\033MysqlObject" +
      "TransferSettings\022H\n\004view\030\001 \001(\0162:.yandex." +
      "cloud.datatransfer.v1.endpoint.ObjectTra" +
      "nsferStage\022K\n\007routine\030\002 \001(\0162:.yandex.clo" +
      "ud.datatransfer.v1.endpoint.ObjectTransf" +
      "erStage\022K\n\007trigger\030\003 \001(\0162:.yandex.cloud." +
      "datatransfer.v1.endpoint.ObjectTransferS" +
      "tage\022J\n\006tables\030\004 \001(\0162:.yandex.cloud.data" +
      "transfer.v1.endpoint.ObjectTransferStage" +
      "\"\255\003\n\013MysqlSource\022J\n\nconnection\030\001 \001(\01326.y" +
      "andex.cloud.datatransfer.v1.endpoint.Mys" +
      "qlConnection\022\020\n\010database\030\002 \001(\t\022\014\n\004user\030\003" +
      " \001(\t\022?\n\010password\030\004 \001(\0132-.yandex.cloud.da" +
      "tatransfer.v1.endpoint.Secret\022\020\n\010timezon" +
      "e\030\010 \001(\t\022d\n\030object_transfer_settings\030\013 \001(" +
      "\0132B.yandex.cloud.datatransfer.v1.endpoin" +
      "t.MysqlObjectTransferSettings\022\034\n\024include" +
      "_tables_regex\030\014 \003(\t\022\034\n\024exclude_tables_re" +
      "gex\030\r \003(\t\022\027\n\017security_groups\030\016 \003(\t\022\030\n\020se" +
      "rvice_database\030\017 \001(\tJ\004\010\005\020\010J\004\010\t\020\013\"\205\003\n\013Mys" +
      "qlTarget\022J\n\nconnection\030\001 \001(\01326.yandex.cl" +
      "oud.datatransfer.v1.endpoint.MysqlConnec" +
      "tion\022\020\n\010database\030\002 \001(\t\022\014\n\004user\030\003 \001(\t\022?\n\010" +
      "password\030\004 \001(\0132-.yandex.cloud.datatransf" +
      "er.v1.endpoint.Secret\022\020\n\010sql_mode\030\005 \001(\t\022" +
      "\036\n\026skip_constraint_checks\030\006 \001(\010\022\020\n\010timez" +
      "one\030\007 \001(\t\022L\n\016cleanup_policy\030\010 \001(\01624.yand" +
      "ex.cloud.datatransfer.v1.endpoint.Cleanu" +
      "pPolicy\022\030\n\020service_database\030\017 \001(\t\022\027\n\017sec" +
      "urity_groups\030\020 \003(\tJ\004\010\t\020\017B\247\001\n)yandex.clou" +
      "d.api.datatransfer.v1.endpointZRgithub.c" +
      "om/yandex-cloud/go-genproto/yandex/cloud" +
      "/datatransfer/v1/endpoint;endpoint\252\002%Yan" +
      "dex.Cloud.Datatransfer.V1.EndPointb\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          yandex.cloud.api.datatransfer.v1.endpoint.Common.getDescriptor(),
        });
    internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_datatransfer_v1_endpoint_OnPremiseMysql_descriptor,
        new java.lang.String[] { "Port", "SubnetId", "Hosts", "TlsMode", });
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlConnection_descriptor,
        new java.lang.String[] { "MdbClusterId", "OnPremise", "Connection", });
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlObjectTransferSettings_descriptor,
        new java.lang.String[] { "View", "Routine", "Trigger", "Tables", });
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlSource_descriptor,
        new java.lang.String[] { "Connection", "Database", "User", "Password", "Timezone", "ObjectTransferSettings", "IncludeTablesRegex", "ExcludeTablesRegex", "SecurityGroups", "ServiceDatabase", });
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_datatransfer_v1_endpoint_MysqlTarget_descriptor,
        new java.lang.String[] { "Connection", "Database", "User", "Password", "SqlMode", "SkipConstraintChecks", "Timezone", "CleanupPolicy", "ServiceDatabase", "SecurityGroups", });
    yandex.cloud.api.datatransfer.v1.endpoint.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
