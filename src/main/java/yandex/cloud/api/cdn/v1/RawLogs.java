// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/cdn/v1/raw_logs.proto

package yandex.cloud.api.cdn.v1;

public final class RawLogs {
  private RawLogs() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Provider side statuses of Raw logs processing.
   * </pre>
   *
   * Protobuf enum {@code yandex.cloud.cdn.v1.RawLogsStatus}
   */
  public enum RawLogsStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RAW_LOGS_STATUS_UNSPECIFIED = 0;</code>
     */
    RAW_LOGS_STATUS_UNSPECIFIED(0),
    /**
     * <pre>
     * Raw logs wasn't activated.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_NOT_ACTIVATED = 1;</code>
     */
    RAW_LOGS_STATUS_NOT_ACTIVATED(1),
    /**
     * <pre>
     * Raw logs was activated, and logs storing process works as expected.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_OK = 2;</code>
     */
    RAW_LOGS_STATUS_OK(2),
    /**
     * <pre>
     * Raw logs was activated, but CDN provider has been failed to store logs.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_FAILED = 3;</code>
     */
    RAW_LOGS_STATUS_FAILED(3),
    /**
     * <pre>
     * Raw logs was activated, but logs storing process is expected.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_PENDING = 4;</code>
     */
    RAW_LOGS_STATUS_PENDING(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RAW_LOGS_STATUS_UNSPECIFIED = 0;</code>
     */
    public static final int RAW_LOGS_STATUS_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Raw logs wasn't activated.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_NOT_ACTIVATED = 1;</code>
     */
    public static final int RAW_LOGS_STATUS_NOT_ACTIVATED_VALUE = 1;
    /**
     * <pre>
     * Raw logs was activated, and logs storing process works as expected.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_OK = 2;</code>
     */
    public static final int RAW_LOGS_STATUS_OK_VALUE = 2;
    /**
     * <pre>
     * Raw logs was activated, but CDN provider has been failed to store logs.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_FAILED = 3;</code>
     */
    public static final int RAW_LOGS_STATUS_FAILED_VALUE = 3;
    /**
     * <pre>
     * Raw logs was activated, but logs storing process is expected.
     * </pre>
     *
     * <code>RAW_LOGS_STATUS_PENDING = 4;</code>
     */
    public static final int RAW_LOGS_STATUS_PENDING_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RawLogsStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RawLogsStatus forNumber(int value) {
      switch (value) {
        case 0: return RAW_LOGS_STATUS_UNSPECIFIED;
        case 1: return RAW_LOGS_STATUS_NOT_ACTIVATED;
        case 2: return RAW_LOGS_STATUS_OK;
        case 3: return RAW_LOGS_STATUS_FAILED;
        case 4: return RAW_LOGS_STATUS_PENDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RawLogsStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RawLogsStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RawLogsStatus>() {
            public RawLogsStatus findValueByNumber(int number) {
              return RawLogsStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return yandex.cloud.api.cdn.v1.RawLogs.getDescriptor().getEnumTypes().get(0);
    }

    private static final RawLogsStatus[] VALUES = values();

    public static RawLogsStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RawLogsStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:yandex.cloud.cdn.v1.RawLogsStatus)
  }

  public interface RawLogsSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.cdn.v1.RawLogsSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Destination S3 bucket name, note that the suer should be owner of the bucket.
     * </pre>
     *
     * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
     * @return The bucketName.
     */
    java.lang.String getBucketName();
    /**
     * <pre>
     * Destination S3 bucket name, note that the suer should be owner of the bucket.
     * </pre>
     *
     * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
     * @return The bytes for bucketName.
     */
    com.google.protobuf.ByteString
        getBucketNameBytes();

    /**
     * <pre>
     * Bucket region, unused for now, could be blank.
     * </pre>
     *
     * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The bucketRegion.
     */
    java.lang.String getBucketRegion();
    /**
     * <pre>
     * Bucket region, unused for now, could be blank.
     * </pre>
     *
     * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The bytes for bucketRegion.
     */
    com.google.protobuf.ByteString
        getBucketRegionBytes();

    /**
     * <pre>
     * file_prefix: prefix each log object name with specified prefix.
     * The prefix makes it simpler for you to locate the log objects.
     * For example, if you specify the prefix value logs/, each log object that
     * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
     * could be setup.
     * </pre>
     *
     * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The filePrefix.
     */
    java.lang.String getFilePrefix();
    /**
     * <pre>
     * file_prefix: prefix each log object name with specified prefix.
     * The prefix makes it simpler for you to locate the log objects.
     * For example, if you specify the prefix value logs/, each log object that
     * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
     * could be setup.
     * </pre>
     *
     * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The bytes for filePrefix.
     */
    com.google.protobuf.ByteString
        getFilePrefixBytes();
  }
  /**
   * <pre>
   * User settings for Raw logs.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.cdn.v1.RawLogsSettings}
   */
  public static final class RawLogsSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.cdn.v1.RawLogsSettings)
      RawLogsSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawLogsSettings.newBuilder() to construct.
    private RawLogsSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawLogsSettings() {
      bucketName_ = "";
      bucketRegion_ = "";
      filePrefix_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawLogsSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RawLogsSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              bucketName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              bucketRegion_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              filePrefix_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.cdn.v1.RawLogs.internal_static_yandex_cloud_cdn_v1_RawLogsSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.cdn.v1.RawLogs.internal_static_yandex_cloud_cdn_v1_RawLogsSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.class, yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.Builder.class);
    }

    public static final int BUCKET_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object bucketName_;
    /**
     * <pre>
     * Destination S3 bucket name, note that the suer should be owner of the bucket.
     * </pre>
     *
     * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
     * @return The bucketName.
     */
    @java.lang.Override
    public java.lang.String getBucketName() {
      java.lang.Object ref = bucketName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bucketName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Destination S3 bucket name, note that the suer should be owner of the bucket.
     * </pre>
     *
     * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
     * @return The bytes for bucketName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBucketNameBytes() {
      java.lang.Object ref = bucketName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bucketName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BUCKET_REGION_FIELD_NUMBER = 2;
    private volatile java.lang.Object bucketRegion_;
    /**
     * <pre>
     * Bucket region, unused for now, could be blank.
     * </pre>
     *
     * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The bucketRegion.
     */
    @java.lang.Override
    public java.lang.String getBucketRegion() {
      java.lang.Object ref = bucketRegion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bucketRegion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Bucket region, unused for now, could be blank.
     * </pre>
     *
     * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The bytes for bucketRegion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBucketRegionBytes() {
      java.lang.Object ref = bucketRegion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bucketRegion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_PREFIX_FIELD_NUMBER = 3;
    private volatile java.lang.Object filePrefix_;
    /**
     * <pre>
     * file_prefix: prefix each log object name with specified prefix.
     * The prefix makes it simpler for you to locate the log objects.
     * For example, if you specify the prefix value logs/, each log object that
     * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
     * could be setup.
     * </pre>
     *
     * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The filePrefix.
     */
    @java.lang.Override
    public java.lang.String getFilePrefix() {
      java.lang.Object ref = filePrefix_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filePrefix_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * file_prefix: prefix each log object name with specified prefix.
     * The prefix makes it simpler for you to locate the log objects.
     * For example, if you specify the prefix value logs/, each log object that
     * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
     * could be setup.
     * </pre>
     *
     * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
     * @return The bytes for filePrefix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFilePrefixBytes() {
      java.lang.Object ref = filePrefix_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filePrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bucketName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, bucketName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bucketRegion_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, bucketRegion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filePrefix_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, filePrefix_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bucketName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, bucketName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(bucketRegion_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, bucketRegion_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(filePrefix_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, filePrefix_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings)) {
        return super.equals(obj);
      }
      yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings other = (yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings) obj;

      if (!getBucketName()
          .equals(other.getBucketName())) return false;
      if (!getBucketRegion()
          .equals(other.getBucketRegion())) return false;
      if (!getFilePrefix()
          .equals(other.getFilePrefix())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BUCKET_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getBucketName().hashCode();
      hash = (37 * hash) + BUCKET_REGION_FIELD_NUMBER;
      hash = (53 * hash) + getBucketRegion().hashCode();
      hash = (37 * hash) + FILE_PREFIX_FIELD_NUMBER;
      hash = (53 * hash) + getFilePrefix().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * User settings for Raw logs.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.cdn.v1.RawLogsSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.cdn.v1.RawLogsSettings)
        yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.cdn.v1.RawLogs.internal_static_yandex_cloud_cdn_v1_RawLogsSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.cdn.v1.RawLogs.internal_static_yandex_cloud_cdn_v1_RawLogsSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.class, yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.Builder.class);
      }

      // Construct using yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bucketName_ = "";

        bucketRegion_ = "";

        filePrefix_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.cdn.v1.RawLogs.internal_static_yandex_cloud_cdn_v1_RawLogsSettings_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings getDefaultInstanceForType() {
        return yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings build() {
        yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings buildPartial() {
        yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings result = new yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings(this);
        result.bucketName_ = bucketName_;
        result.bucketRegion_ = bucketRegion_;
        result.filePrefix_ = filePrefix_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings) {
          return mergeFrom((yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings other) {
        if (other == yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings.getDefaultInstance()) return this;
        if (!other.getBucketName().isEmpty()) {
          bucketName_ = other.bucketName_;
          onChanged();
        }
        if (!other.getBucketRegion().isEmpty()) {
          bucketRegion_ = other.bucketRegion_;
          onChanged();
        }
        if (!other.getFilePrefix().isEmpty()) {
          filePrefix_ = other.filePrefix_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object bucketName_ = "";
      /**
       * <pre>
       * Destination S3 bucket name, note that the suer should be owner of the bucket.
       * </pre>
       *
       * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
       * @return The bucketName.
       */
      public java.lang.String getBucketName() {
        java.lang.Object ref = bucketName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bucketName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Destination S3 bucket name, note that the suer should be owner of the bucket.
       * </pre>
       *
       * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
       * @return The bytes for bucketName.
       */
      public com.google.protobuf.ByteString
          getBucketNameBytes() {
        java.lang.Object ref = bucketName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bucketName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Destination S3 bucket name, note that the suer should be owner of the bucket.
       * </pre>
       *
       * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
       * @param value The bucketName to set.
       * @return This builder for chaining.
       */
      public Builder setBucketName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bucketName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Destination S3 bucket name, note that the suer should be owner of the bucket.
       * </pre>
       *
       * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBucketName() {
        
        bucketName_ = getDefaultInstance().getBucketName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Destination S3 bucket name, note that the suer should be owner of the bucket.
       * </pre>
       *
       * <code>string bucket_name = 1 [(.yandex.cloud.required) = true, (.yandex.cloud.length) = "&lt;=1024"];</code>
       * @param value The bytes for bucketName to set.
       * @return This builder for chaining.
       */
      public Builder setBucketNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bucketName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bucketRegion_ = "";
      /**
       * <pre>
       * Bucket region, unused for now, could be blank.
       * </pre>
       *
       * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @return The bucketRegion.
       */
      public java.lang.String getBucketRegion() {
        java.lang.Object ref = bucketRegion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bucketRegion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Bucket region, unused for now, could be blank.
       * </pre>
       *
       * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @return The bytes for bucketRegion.
       */
      public com.google.protobuf.ByteString
          getBucketRegionBytes() {
        java.lang.Object ref = bucketRegion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bucketRegion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Bucket region, unused for now, could be blank.
       * </pre>
       *
       * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @param value The bucketRegion to set.
       * @return This builder for chaining.
       */
      public Builder setBucketRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bucketRegion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bucket region, unused for now, could be blank.
       * </pre>
       *
       * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBucketRegion() {
        
        bucketRegion_ = getDefaultInstance().getBucketRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bucket region, unused for now, could be blank.
       * </pre>
       *
       * <code>string bucket_region = 2 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @param value The bytes for bucketRegion to set.
       * @return This builder for chaining.
       */
      public Builder setBucketRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bucketRegion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object filePrefix_ = "";
      /**
       * <pre>
       * file_prefix: prefix each log object name with specified prefix.
       * The prefix makes it simpler for you to locate the log objects.
       * For example, if you specify the prefix value logs/, each log object that
       * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
       * could be setup.
       * </pre>
       *
       * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @return The filePrefix.
       */
      public java.lang.String getFilePrefix() {
        java.lang.Object ref = filePrefix_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          filePrefix_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * file_prefix: prefix each log object name with specified prefix.
       * The prefix makes it simpler for you to locate the log objects.
       * For example, if you specify the prefix value logs/, each log object that
       * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
       * could be setup.
       * </pre>
       *
       * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @return The bytes for filePrefix.
       */
      public com.google.protobuf.ByteString
          getFilePrefixBytes() {
        java.lang.Object ref = filePrefix_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          filePrefix_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * file_prefix: prefix each log object name with specified prefix.
       * The prefix makes it simpler for you to locate the log objects.
       * For example, if you specify the prefix value logs/, each log object that
       * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
       * could be setup.
       * </pre>
       *
       * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @param value The filePrefix to set.
       * @return This builder for chaining.
       */
      public Builder setFilePrefix(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        filePrefix_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * file_prefix: prefix each log object name with specified prefix.
       * The prefix makes it simpler for you to locate the log objects.
       * For example, if you specify the prefix value logs/, each log object that
       * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
       * could be setup.
       * </pre>
       *
       * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFilePrefix() {
        
        filePrefix_ = getDefaultInstance().getFilePrefix();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * file_prefix: prefix each log object name with specified prefix.
       * The prefix makes it simpler for you to locate the log objects.
       * For example, if you specify the prefix value logs/, each log object that
       * S3 creates begins with the logs/ prefix in its key, so pseudo S3 folders
       * could be setup.
       * </pre>
       *
       * <code>string file_prefix = 3 [(.yandex.cloud.length) = "&lt;=50"];</code>
       * @param value The bytes for filePrefix to set.
       * @return This builder for chaining.
       */
      public Builder setFilePrefixBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        filePrefix_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.cdn.v1.RawLogsSettings)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.cdn.v1.RawLogsSettings)
    private static final yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings();
    }

    public static yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawLogsSettings>
        PARSER = new com.google.protobuf.AbstractParser<RawLogsSettings>() {
      @java.lang.Override
      public RawLogsSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RawLogsSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RawLogsSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawLogsSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.cdn.v1.RawLogs.RawLogsSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_cdn_v1_RawLogsSettings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_cdn_v1_RawLogsSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"yandex/cloud/cdn/v1/raw_logs.proto\022\023ya" +
      "ndex.cloud.cdn.v1\032\035yandex/cloud/validati" +
      "on.proto\"v\n\017RawLogsSettings\022#\n\013bucket_na" +
      "me\030\001 \001(\tB\016\350\3071\001\212\3101\006<=1024\022\037\n\rbucket_regio" +
      "n\030\002 \001(\tB\010\212\3101\004<=50\022\035\n\013file_prefix\030\003 \001(\tB\010" +
      "\212\3101\004<=50*\244\001\n\rRawLogsStatus\022\037\n\033RAW_LOGS_S" +
      "TATUS_UNSPECIFIED\020\000\022!\n\035RAW_LOGS_STATUS_N" +
      "OT_ACTIVATED\020\001\022\026\n\022RAW_LOGS_STATUS_OK\020\002\022\032" +
      "\n\026RAW_LOGS_STATUS_FAILED\020\003\022\033\n\027RAW_LOGS_S" +
      "TATUS_PENDING\020\004BV\n\027yandex.cloud.api.cdn." +
      "v1Z;github.com/yandex-cloud/go-genproto/" +
      "yandex/cloud/cdn/v1;cdnb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          yandex.cloud.api.Validation.getDescriptor(),
        });
    internal_static_yandex_cloud_cdn_v1_RawLogsSettings_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_cdn_v1_RawLogsSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_cdn_v1_RawLogsSettings_descriptor,
        new java.lang.String[] { "BucketName", "BucketRegion", "FilePrefix", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(yandex.cloud.api.Validation.length);
    registry.add(yandex.cloud.api.Validation.required);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    yandex.cloud.api.Validation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
