// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/ai/assistants/v1/searchindex/search_index.proto

package yandex.cloud.api.ai.assistants.v1.searchindex;

public final class SearchIndexOuterClass {
  private SearchIndexOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SearchIndexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.ai.assistants.v1.searchindex.SearchIndex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique identifier of the search index.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * Unique identifier of the search index.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * ID of the folder that the search index belongs to.
     * </pre>
     *
     * <code>string folder_id = 2;</code>
     * @return The folderId.
     */
    java.lang.String getFolderId();
    /**
     * <pre>
     * ID of the folder that the search index belongs to.
     * </pre>
     *
     * <code>string folder_id = 2;</code>
     * @return The bytes for folderId.
     */
    com.google.protobuf.ByteString
        getFolderIdBytes();

    /**
     * <pre>
     * Name of the search index.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the search index.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Description of the search index.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Description of the search index.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Identifier of the subject who created this search index.
     * </pre>
     *
     * <code>string created_by = 5;</code>
     * @return The createdBy.
     */
    java.lang.String getCreatedBy();
    /**
     * <pre>
     * Identifier of the subject who created this search index.
     * </pre>
     *
     * <code>string created_by = 5;</code>
     * @return The bytes for createdBy.
     */
    com.google.protobuf.ByteString
        getCreatedByBytes();

    /**
     * <pre>
     * Timestamp representing when the search index was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_at = 6;</code>
     * @return Whether the createdAt field is set.
     */
    boolean hasCreatedAt();
    /**
     * <pre>
     * Timestamp representing when the search index was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_at = 6;</code>
     * @return The createdAt.
     */
    com.google.protobuf.Timestamp getCreatedAt();
    /**
     * <pre>
     * Timestamp representing when the search index was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_at = 6;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreatedAtOrBuilder();

    /**
     * <pre>
     * Identifier of the subject who last updated this search index.
     * </pre>
     *
     * <code>string updated_by = 7;</code>
     * @return The updatedBy.
     */
    java.lang.String getUpdatedBy();
    /**
     * <pre>
     * Identifier of the subject who last updated this search index.
     * </pre>
     *
     * <code>string updated_by = 7;</code>
     * @return The bytes for updatedBy.
     */
    com.google.protobuf.ByteString
        getUpdatedByBytes();

    /**
     * <pre>
     * Timestamp representing the last time this search index was updated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated_at = 8;</code>
     * @return Whether the updatedAt field is set.
     */
    boolean hasUpdatedAt();
    /**
     * <pre>
     * Timestamp representing the last time this search index was updated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated_at = 8;</code>
     * @return The updatedAt.
     */
    com.google.protobuf.Timestamp getUpdatedAt();
    /**
     * <pre>
     * Timestamp representing the last time this search index was updated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated_at = 8;</code>
     */
    com.google.protobuf.TimestampOrBuilder getUpdatedAtOrBuilder();

    /**
     * <pre>
     * Configuration for the expiration of the search index, defining when and how the search index will expire.
     * </pre>
     *
     * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
     * @return Whether the expirationConfig field is set.
     */
    boolean hasExpirationConfig();
    /**
     * <pre>
     * Configuration for the expiration of the search index, defining when and how the search index will expire.
     * </pre>
     *
     * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
     * @return The expirationConfig.
     */
    yandex.cloud.api.ai.common.Common.ExpirationConfig getExpirationConfig();
    /**
     * <pre>
     * Configuration for the expiration of the search index, defining when and how the search index will expire.
     * </pre>
     *
     * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
     */
    yandex.cloud.api.ai.common.Common.ExpirationConfigOrBuilder getExpirationConfigOrBuilder();

    /**
     * <pre>
     * Timestamp representing when the search index will expire.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 10;</code>
     * @return Whether the expiresAt field is set.
     */
    boolean hasExpiresAt();
    /**
     * <pre>
     * Timestamp representing when the search index will expire.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 10;</code>
     * @return The expiresAt.
     */
    com.google.protobuf.Timestamp getExpiresAt();
    /**
     * <pre>
     * Timestamp representing when the search index will expire.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 10;</code>
     */
    com.google.protobuf.TimestampOrBuilder getExpiresAtOrBuilder();

    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */

    java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Keyword-based text search index configuration.
     * This type of index is used for traditional text search, where documents are indexed based on their keywords.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
     * @return Whether the textSearchIndex field is set.
     */
    boolean hasTextSearchIndex();
    /**
     * <pre>
     * Keyword-based text search index configuration.
     * This type of index is used for traditional text search, where documents are indexed based on their keywords.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
     * @return The textSearchIndex.
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex getTextSearchIndex();
    /**
     * <pre>
     * Keyword-based text search index configuration.
     * This type of index is used for traditional text search, where documents are indexed based on their keywords.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder getTextSearchIndexOrBuilder();

    /**
     * <pre>
     * Vector-based search index configuration.
     * This type is used for vector search, where documents are indexed using vector embeddings.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
     * @return Whether the vectorSearchIndex field is set.
     */
    boolean hasVectorSearchIndex();
    /**
     * <pre>
     * Vector-based search index configuration.
     * This type is used for vector search, where documents are indexed using vector embeddings.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
     * @return The vectorSearchIndex.
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex getVectorSearchIndex();
    /**
     * <pre>
     * Vector-based search index configuration.
     * This type is used for vector search, where documents are indexed using vector embeddings.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder getVectorSearchIndexOrBuilder();

    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.IndexTypeCase getIndexTypeCase();
  }
  /**
   * <pre>
   * Represents a search index used to store and query data, either using traditional keyword-based text search or vector-based search mechanisms.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.ai.assistants.v1.searchindex.SearchIndex}
   */
  public static final class SearchIndex extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.ai.assistants.v1.searchindex.SearchIndex)
      SearchIndexOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SearchIndex.newBuilder() to construct.
    private SearchIndex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SearchIndex() {
      id_ = "";
      folderId_ = "";
      name_ = "";
      description_ = "";
      createdBy_ = "";
      updatedBy_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SearchIndex();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SearchIndex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              folderId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              createdBy_ = s;
              break;
            }
            case 50: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (createdAt_ != null) {
                subBuilder = createdAt_.toBuilder();
              }
              createdAt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(createdAt_);
                createdAt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              updatedBy_ = s;
              break;
            }
            case 66: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (updatedAt_ != null) {
                subBuilder = updatedAt_.toBuilder();
              }
              updatedAt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updatedAt_);
                updatedAt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              yandex.cloud.api.ai.common.Common.ExpirationConfig.Builder subBuilder = null;
              if (expirationConfig_ != null) {
                subBuilder = expirationConfig_.toBuilder();
              }
              expirationConfig_ = input.readMessage(yandex.cloud.api.ai.common.Common.ExpirationConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expirationConfig_);
                expirationConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (expiresAt_ != null) {
                subBuilder = expiresAt_.toBuilder();
              }
              expiresAt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(expiresAt_);
                expiresAt_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            case 98: {
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder subBuilder = null;
              if (indexTypeCase_ == 12) {
                subBuilder = ((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_).toBuilder();
              }
              indexType_ =
                  input.readMessage(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_);
                indexType_ = subBuilder.buildPartial();
              }
              indexTypeCase_ = 12;
              break;
            }
            case 106: {
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder subBuilder = null;
              if (indexTypeCase_ == 13) {
                subBuilder = ((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_).toBuilder();
              }
              indexType_ =
                  input.readMessage(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_);
                indexType_ = subBuilder.buildPartial();
              }
              indexTypeCase_ = 13;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.class, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.Builder.class);
    }

    private int indexTypeCase_ = 0;
    private java.lang.Object indexType_;
    public enum IndexTypeCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      TEXT_SEARCH_INDEX(12),
      VECTOR_SEARCH_INDEX(13),
      INDEXTYPE_NOT_SET(0);
      private final int value;
      private IndexTypeCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static IndexTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static IndexTypeCase forNumber(int value) {
        switch (value) {
          case 12: return TEXT_SEARCH_INDEX;
          case 13: return VECTOR_SEARCH_INDEX;
          case 0: return INDEXTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public IndexTypeCase
    getIndexTypeCase() {
      return IndexTypeCase.forNumber(
          indexTypeCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * Unique identifier of the search index.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique identifier of the search index.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FOLDER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object folderId_;
    /**
     * <pre>
     * ID of the folder that the search index belongs to.
     * </pre>
     *
     * <code>string folder_id = 2;</code>
     * @return The folderId.
     */
    @java.lang.Override
    public java.lang.String getFolderId() {
      java.lang.Object ref = folderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        folderId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * ID of the folder that the search index belongs to.
     * </pre>
     *
     * <code>string folder_id = 2;</code>
     * @return The bytes for folderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFolderIdBytes() {
      java.lang.Object ref = folderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        folderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * Name of the search index.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the search index.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Description of the search index.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Description of the search index.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATED_BY_FIELD_NUMBER = 5;
    private volatile java.lang.Object createdBy_;
    /**
     * <pre>
     * Identifier of the subject who created this search index.
     * </pre>
     *
     * <code>string created_by = 5;</code>
     * @return The createdBy.
     */
    @java.lang.Override
    public java.lang.String getCreatedBy() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        createdBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifier of the subject who created this search index.
     * </pre>
     *
     * <code>string created_by = 5;</code>
     * @return The bytes for createdBy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCreatedByBytes() {
      java.lang.Object ref = createdBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createdBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATED_AT_FIELD_NUMBER = 6;
    private com.google.protobuf.Timestamp createdAt_;
    /**
     * <pre>
     * Timestamp representing when the search index was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_at = 6;</code>
     * @return Whether the createdAt field is set.
     */
    @java.lang.Override
    public boolean hasCreatedAt() {
      return createdAt_ != null;
    }
    /**
     * <pre>
     * Timestamp representing when the search index was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_at = 6;</code>
     * @return The createdAt.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreatedAt() {
      return createdAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdAt_;
    }
    /**
     * <pre>
     * Timestamp representing when the search index was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp created_at = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getCreatedAtOrBuilder() {
      return getCreatedAt();
    }

    public static final int UPDATED_BY_FIELD_NUMBER = 7;
    private volatile java.lang.Object updatedBy_;
    /**
     * <pre>
     * Identifier of the subject who last updated this search index.
     * </pre>
     *
     * <code>string updated_by = 7;</code>
     * @return The updatedBy.
     */
    @java.lang.Override
    public java.lang.String getUpdatedBy() {
      java.lang.Object ref = updatedBy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        updatedBy_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Identifier of the subject who last updated this search index.
     * </pre>
     *
     * <code>string updated_by = 7;</code>
     * @return The bytes for updatedBy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUpdatedByBytes() {
      java.lang.Object ref = updatedBy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updatedBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UPDATED_AT_FIELD_NUMBER = 8;
    private com.google.protobuf.Timestamp updatedAt_;
    /**
     * <pre>
     * Timestamp representing the last time this search index was updated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated_at = 8;</code>
     * @return Whether the updatedAt field is set.
     */
    @java.lang.Override
    public boolean hasUpdatedAt() {
      return updatedAt_ != null;
    }
    /**
     * <pre>
     * Timestamp representing the last time this search index was updated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated_at = 8;</code>
     * @return The updatedAt.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdatedAt() {
      return updatedAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updatedAt_;
    }
    /**
     * <pre>
     * Timestamp representing the last time this search index was updated.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp updated_at = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getUpdatedAtOrBuilder() {
      return getUpdatedAt();
    }

    public static final int EXPIRATION_CONFIG_FIELD_NUMBER = 9;
    private yandex.cloud.api.ai.common.Common.ExpirationConfig expirationConfig_;
    /**
     * <pre>
     * Configuration for the expiration of the search index, defining when and how the search index will expire.
     * </pre>
     *
     * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
     * @return Whether the expirationConfig field is set.
     */
    @java.lang.Override
    public boolean hasExpirationConfig() {
      return expirationConfig_ != null;
    }
    /**
     * <pre>
     * Configuration for the expiration of the search index, defining when and how the search index will expire.
     * </pre>
     *
     * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
     * @return The expirationConfig.
     */
    @java.lang.Override
    public yandex.cloud.api.ai.common.Common.ExpirationConfig getExpirationConfig() {
      return expirationConfig_ == null ? yandex.cloud.api.ai.common.Common.ExpirationConfig.getDefaultInstance() : expirationConfig_;
    }
    /**
     * <pre>
     * Configuration for the expiration of the search index, defining when and how the search index will expire.
     * </pre>
     *
     * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.ai.common.Common.ExpirationConfigOrBuilder getExpirationConfigOrBuilder() {
      return getExpirationConfig();
    }

    public static final int EXPIRES_AT_FIELD_NUMBER = 10;
    private com.google.protobuf.Timestamp expiresAt_;
    /**
     * <pre>
     * Timestamp representing when the search index will expire.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 10;</code>
     * @return Whether the expiresAt field is set.
     */
    @java.lang.Override
    public boolean hasExpiresAt() {
      return expiresAt_ != null;
    }
    /**
     * <pre>
     * Timestamp representing when the search index will expire.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 10;</code>
     * @return The expiresAt.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getExpiresAt() {
      return expiresAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiresAt_;
    }
    /**
     * <pre>
     * Timestamp representing when the search index will expire.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getExpiresAtOrBuilder() {
      return getExpiresAt();
    }

    public static final int LABELS_FIELD_NUMBER = 11;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */

    @java.lang.Override
    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Set of key-value pairs that can be used to organize and categorize the search index.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TEXT_SEARCH_INDEX_FIELD_NUMBER = 12;
    /**
     * <pre>
     * Keyword-based text search index configuration.
     * This type of index is used for traditional text search, where documents are indexed based on their keywords.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
     * @return Whether the textSearchIndex field is set.
     */
    @java.lang.Override
    public boolean hasTextSearchIndex() {
      return indexTypeCase_ == 12;
    }
    /**
     * <pre>
     * Keyword-based text search index configuration.
     * This type of index is used for traditional text search, where documents are indexed based on their keywords.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
     * @return The textSearchIndex.
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex getTextSearchIndex() {
      if (indexTypeCase_ == 12) {
         return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_;
      }
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
    }
    /**
     * <pre>
     * Keyword-based text search index configuration.
     * This type of index is used for traditional text search, where documents are indexed based on their keywords.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder getTextSearchIndexOrBuilder() {
      if (indexTypeCase_ == 12) {
         return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_;
      }
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
    }

    public static final int VECTOR_SEARCH_INDEX_FIELD_NUMBER = 13;
    /**
     * <pre>
     * Vector-based search index configuration.
     * This type is used for vector search, where documents are indexed using vector embeddings.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
     * @return Whether the vectorSearchIndex field is set.
     */
    @java.lang.Override
    public boolean hasVectorSearchIndex() {
      return indexTypeCase_ == 13;
    }
    /**
     * <pre>
     * Vector-based search index configuration.
     * This type is used for vector search, where documents are indexed using vector embeddings.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
     * @return The vectorSearchIndex.
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex getVectorSearchIndex() {
      if (indexTypeCase_ == 13) {
         return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_;
      }
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
    }
    /**
     * <pre>
     * Vector-based search index configuration.
     * This type is used for vector search, where documents are indexed using vector embeddings.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder getVectorSearchIndexOrBuilder() {
      if (indexTypeCase_ == 13) {
         return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_;
      }
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(folderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, folderId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(createdBy_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, createdBy_);
      }
      if (createdAt_ != null) {
        output.writeMessage(6, getCreatedAt());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(updatedBy_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, updatedBy_);
      }
      if (updatedAt_ != null) {
        output.writeMessage(8, getUpdatedAt());
      }
      if (expirationConfig_ != null) {
        output.writeMessage(9, getExpirationConfig());
      }
      if (expiresAt_ != null) {
        output.writeMessage(10, getExpiresAt());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          11);
      if (indexTypeCase_ == 12) {
        output.writeMessage(12, (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_);
      }
      if (indexTypeCase_ == 13) {
        output.writeMessage(13, (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(folderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, folderId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(createdBy_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, createdBy_);
      }
      if (createdAt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getCreatedAt());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(updatedBy_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, updatedBy_);
      }
      if (updatedAt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getUpdatedAt());
      }
      if (expirationConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getExpirationConfig());
      }
      if (expiresAt_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getExpiresAt());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, labels__);
      }
      if (indexTypeCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_);
      }
      if (indexTypeCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex)) {
        return super.equals(obj);
      }
      yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex other = (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getFolderId()
          .equals(other.getFolderId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (!getCreatedBy()
          .equals(other.getCreatedBy())) return false;
      if (hasCreatedAt() != other.hasCreatedAt()) return false;
      if (hasCreatedAt()) {
        if (!getCreatedAt()
            .equals(other.getCreatedAt())) return false;
      }
      if (!getUpdatedBy()
          .equals(other.getUpdatedBy())) return false;
      if (hasUpdatedAt() != other.hasUpdatedAt()) return false;
      if (hasUpdatedAt()) {
        if (!getUpdatedAt()
            .equals(other.getUpdatedAt())) return false;
      }
      if (hasExpirationConfig() != other.hasExpirationConfig()) return false;
      if (hasExpirationConfig()) {
        if (!getExpirationConfig()
            .equals(other.getExpirationConfig())) return false;
      }
      if (hasExpiresAt() != other.hasExpiresAt()) return false;
      if (hasExpiresAt()) {
        if (!getExpiresAt()
            .equals(other.getExpiresAt())) return false;
      }
      if (!internalGetLabels().equals(
          other.internalGetLabels())) return false;
      if (!getIndexTypeCase().equals(other.getIndexTypeCase())) return false;
      switch (indexTypeCase_) {
        case 12:
          if (!getTextSearchIndex()
              .equals(other.getTextSearchIndex())) return false;
          break;
        case 13:
          if (!getVectorSearchIndex()
              .equals(other.getVectorSearchIndex())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + FOLDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFolderId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + CREATED_BY_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedBy().hashCode();
      if (hasCreatedAt()) {
        hash = (37 * hash) + CREATED_AT_FIELD_NUMBER;
        hash = (53 * hash) + getCreatedAt().hashCode();
      }
      hash = (37 * hash) + UPDATED_BY_FIELD_NUMBER;
      hash = (53 * hash) + getUpdatedBy().hashCode();
      if (hasUpdatedAt()) {
        hash = (37 * hash) + UPDATED_AT_FIELD_NUMBER;
        hash = (53 * hash) + getUpdatedAt().hashCode();
      }
      if (hasExpirationConfig()) {
        hash = (37 * hash) + EXPIRATION_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getExpirationConfig().hashCode();
      }
      if (hasExpiresAt()) {
        hash = (37 * hash) + EXPIRES_AT_FIELD_NUMBER;
        hash = (53 * hash) + getExpiresAt().hashCode();
      }
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      switch (indexTypeCase_) {
        case 12:
          hash = (37 * hash) + TEXT_SEARCH_INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getTextSearchIndex().hashCode();
          break;
        case 13:
          hash = (37 * hash) + VECTOR_SEARCH_INDEX_FIELD_NUMBER;
          hash = (53 * hash) + getVectorSearchIndex().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Represents a search index used to store and query data, either using traditional keyword-based text search or vector-based search mechanisms.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.ai.assistants.v1.searchindex.SearchIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.ai.assistants.v1.searchindex.SearchIndex)
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 11:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.class, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.Builder.class);
      }

      // Construct using yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        folderId_ = "";

        name_ = "";

        description_ = "";

        createdBy_ = "";

        if (createdAtBuilder_ == null) {
          createdAt_ = null;
        } else {
          createdAt_ = null;
          createdAtBuilder_ = null;
        }
        updatedBy_ = "";

        if (updatedAtBuilder_ == null) {
          updatedAt_ = null;
        } else {
          updatedAt_ = null;
          updatedAtBuilder_ = null;
        }
        if (expirationConfigBuilder_ == null) {
          expirationConfig_ = null;
        } else {
          expirationConfig_ = null;
          expirationConfigBuilder_ = null;
        }
        if (expiresAtBuilder_ == null) {
          expiresAt_ = null;
        } else {
          expiresAt_ = null;
          expiresAtBuilder_ = null;
        }
        internalGetMutableLabels().clear();
        indexTypeCase_ = 0;
        indexType_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex getDefaultInstanceForType() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex build() {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex buildPartial() {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex result = new yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex(this);
        int from_bitField0_ = bitField0_;
        result.id_ = id_;
        result.folderId_ = folderId_;
        result.name_ = name_;
        result.description_ = description_;
        result.createdBy_ = createdBy_;
        if (createdAtBuilder_ == null) {
          result.createdAt_ = createdAt_;
        } else {
          result.createdAt_ = createdAtBuilder_.build();
        }
        result.updatedBy_ = updatedBy_;
        if (updatedAtBuilder_ == null) {
          result.updatedAt_ = updatedAt_;
        } else {
          result.updatedAt_ = updatedAtBuilder_.build();
        }
        if (expirationConfigBuilder_ == null) {
          result.expirationConfig_ = expirationConfig_;
        } else {
          result.expirationConfig_ = expirationConfigBuilder_.build();
        }
        if (expiresAtBuilder_ == null) {
          result.expiresAt_ = expiresAt_;
        } else {
          result.expiresAt_ = expiresAtBuilder_.build();
        }
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        if (indexTypeCase_ == 12) {
          if (textSearchIndexBuilder_ == null) {
            result.indexType_ = indexType_;
          } else {
            result.indexType_ = textSearchIndexBuilder_.build();
          }
        }
        if (indexTypeCase_ == 13) {
          if (vectorSearchIndexBuilder_ == null) {
            result.indexType_ = indexType_;
          } else {
            result.indexType_ = vectorSearchIndexBuilder_.build();
          }
        }
        result.indexTypeCase_ = indexTypeCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex) {
          return mergeFrom((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex other) {
        if (other == yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getFolderId().isEmpty()) {
          folderId_ = other.folderId_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (!other.getCreatedBy().isEmpty()) {
          createdBy_ = other.createdBy_;
          onChanged();
        }
        if (other.hasCreatedAt()) {
          mergeCreatedAt(other.getCreatedAt());
        }
        if (!other.getUpdatedBy().isEmpty()) {
          updatedBy_ = other.updatedBy_;
          onChanged();
        }
        if (other.hasUpdatedAt()) {
          mergeUpdatedAt(other.getUpdatedAt());
        }
        if (other.hasExpirationConfig()) {
          mergeExpirationConfig(other.getExpirationConfig());
        }
        if (other.hasExpiresAt()) {
          mergeExpiresAt(other.getExpiresAt());
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        switch (other.getIndexTypeCase()) {
          case TEXT_SEARCH_INDEX: {
            mergeTextSearchIndex(other.getTextSearchIndex());
            break;
          }
          case VECTOR_SEARCH_INDEX: {
            mergeVectorSearchIndex(other.getVectorSearchIndex());
            break;
          }
          case INDEXTYPE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int indexTypeCase_ = 0;
      private java.lang.Object indexType_;
      public IndexTypeCase
          getIndexTypeCase() {
        return IndexTypeCase.forNumber(
            indexTypeCase_);
      }

      public Builder clearIndexType() {
        indexTypeCase_ = 0;
        indexType_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * Unique identifier of the search index.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the search index.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique identifier of the search index.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the search index.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique identifier of the search index.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object folderId_ = "";
      /**
       * <pre>
       * ID of the folder that the search index belongs to.
       * </pre>
       *
       * <code>string folder_id = 2;</code>
       * @return The folderId.
       */
      public java.lang.String getFolderId() {
        java.lang.Object ref = folderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          folderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ID of the folder that the search index belongs to.
       * </pre>
       *
       * <code>string folder_id = 2;</code>
       * @return The bytes for folderId.
       */
      public com.google.protobuf.ByteString
          getFolderIdBytes() {
        java.lang.Object ref = folderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          folderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ID of the folder that the search index belongs to.
       * </pre>
       *
       * <code>string folder_id = 2;</code>
       * @param value The folderId to set.
       * @return This builder for chaining.
       */
      public Builder setFolderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        folderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the folder that the search index belongs to.
       * </pre>
       *
       * <code>string folder_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFolderId() {
        
        folderId_ = getDefaultInstance().getFolderId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ID of the folder that the search index belongs to.
       * </pre>
       *
       * <code>string folder_id = 2;</code>
       * @param value The bytes for folderId to set.
       * @return This builder for chaining.
       */
      public Builder setFolderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        folderId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the search index.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the search index.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the search index.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the search index.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the search index.
       * </pre>
       *
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Description of the search index.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Description of the search index.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Description of the search index.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the search index.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the search index.
       * </pre>
       *
       * <code>string description = 4;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object createdBy_ = "";
      /**
       * <pre>
       * Identifier of the subject who created this search index.
       * </pre>
       *
       * <code>string created_by = 5;</code>
       * @return The createdBy.
       */
      public java.lang.String getCreatedBy() {
        java.lang.Object ref = createdBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createdBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the subject who created this search index.
       * </pre>
       *
       * <code>string created_by = 5;</code>
       * @return The bytes for createdBy.
       */
      public com.google.protobuf.ByteString
          getCreatedByBytes() {
        java.lang.Object ref = createdBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the subject who created this search index.
       * </pre>
       *
       * <code>string created_by = 5;</code>
       * @param value The createdBy to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        createdBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the subject who created this search index.
       * </pre>
       *
       * <code>string created_by = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreatedBy() {
        
        createdBy_ = getDefaultInstance().getCreatedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the subject who created this search index.
       * </pre>
       *
       * <code>string created_by = 5;</code>
       * @param value The bytes for createdBy to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        createdBy_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp createdAt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createdAtBuilder_;
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       * @return Whether the createdAt field is set.
       */
      public boolean hasCreatedAt() {
        return createdAtBuilder_ != null || createdAt_ != null;
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       * @return The createdAt.
       */
      public com.google.protobuf.Timestamp getCreatedAt() {
        if (createdAtBuilder_ == null) {
          return createdAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createdAt_;
        } else {
          return createdAtBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      public Builder setCreatedAt(com.google.protobuf.Timestamp value) {
        if (createdAtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          createdAt_ = value;
          onChanged();
        } else {
          createdAtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      public Builder setCreatedAt(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (createdAtBuilder_ == null) {
          createdAt_ = builderForValue.build();
          onChanged();
        } else {
          createdAtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      public Builder mergeCreatedAt(com.google.protobuf.Timestamp value) {
        if (createdAtBuilder_ == null) {
          if (createdAt_ != null) {
            createdAt_ =
              com.google.protobuf.Timestamp.newBuilder(createdAt_).mergeFrom(value).buildPartial();
          } else {
            createdAt_ = value;
          }
          onChanged();
        } else {
          createdAtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      public Builder clearCreatedAt() {
        if (createdAtBuilder_ == null) {
          createdAt_ = null;
          onChanged();
        } else {
          createdAt_ = null;
          createdAtBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      public com.google.protobuf.Timestamp.Builder getCreatedAtBuilder() {
        
        onChanged();
        return getCreatedAtFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCreatedAtOrBuilder() {
        if (createdAtBuilder_ != null) {
          return createdAtBuilder_.getMessageOrBuilder();
        } else {
          return createdAt_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : createdAt_;
        }
      }
      /**
       * <pre>
       * Timestamp representing when the search index was created.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp created_at = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getCreatedAtFieldBuilder() {
        if (createdAtBuilder_ == null) {
          createdAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getCreatedAt(),
                  getParentForChildren(),
                  isClean());
          createdAt_ = null;
        }
        return createdAtBuilder_;
      }

      private java.lang.Object updatedBy_ = "";
      /**
       * <pre>
       * Identifier of the subject who last updated this search index.
       * </pre>
       *
       * <code>string updated_by = 7;</code>
       * @return The updatedBy.
       */
      public java.lang.String getUpdatedBy() {
        java.lang.Object ref = updatedBy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          updatedBy_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the subject who last updated this search index.
       * </pre>
       *
       * <code>string updated_by = 7;</code>
       * @return The bytes for updatedBy.
       */
      public com.google.protobuf.ByteString
          getUpdatedByBytes() {
        java.lang.Object ref = updatedBy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updatedBy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Identifier of the subject who last updated this search index.
       * </pre>
       *
       * <code>string updated_by = 7;</code>
       * @param value The updatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setUpdatedBy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        updatedBy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the subject who last updated this search index.
       * </pre>
       *
       * <code>string updated_by = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdatedBy() {
        
        updatedBy_ = getDefaultInstance().getUpdatedBy();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifier of the subject who last updated this search index.
       * </pre>
       *
       * <code>string updated_by = 7;</code>
       * @param value The bytes for updatedBy to set.
       * @return This builder for chaining.
       */
      public Builder setUpdatedByBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        updatedBy_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp updatedAt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> updatedAtBuilder_;
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       * @return Whether the updatedAt field is set.
       */
      public boolean hasUpdatedAt() {
        return updatedAtBuilder_ != null || updatedAt_ != null;
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       * @return The updatedAt.
       */
      public com.google.protobuf.Timestamp getUpdatedAt() {
        if (updatedAtBuilder_ == null) {
          return updatedAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updatedAt_;
        } else {
          return updatedAtBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      public Builder setUpdatedAt(com.google.protobuf.Timestamp value) {
        if (updatedAtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updatedAt_ = value;
          onChanged();
        } else {
          updatedAtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      public Builder setUpdatedAt(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (updatedAtBuilder_ == null) {
          updatedAt_ = builderForValue.build();
          onChanged();
        } else {
          updatedAtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      public Builder mergeUpdatedAt(com.google.protobuf.Timestamp value) {
        if (updatedAtBuilder_ == null) {
          if (updatedAt_ != null) {
            updatedAt_ =
              com.google.protobuf.Timestamp.newBuilder(updatedAt_).mergeFrom(value).buildPartial();
          } else {
            updatedAt_ = value;
          }
          onChanged();
        } else {
          updatedAtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      public Builder clearUpdatedAt() {
        if (updatedAtBuilder_ == null) {
          updatedAt_ = null;
          onChanged();
        } else {
          updatedAt_ = null;
          updatedAtBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      public com.google.protobuf.Timestamp.Builder getUpdatedAtBuilder() {
        
        onChanged();
        return getUpdatedAtFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getUpdatedAtOrBuilder() {
        if (updatedAtBuilder_ != null) {
          return updatedAtBuilder_.getMessageOrBuilder();
        } else {
          return updatedAt_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : updatedAt_;
        }
      }
      /**
       * <pre>
       * Timestamp representing the last time this search index was updated.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp updated_at = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getUpdatedAtFieldBuilder() {
        if (updatedAtBuilder_ == null) {
          updatedAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getUpdatedAt(),
                  getParentForChildren(),
                  isClean());
          updatedAt_ = null;
        }
        return updatedAtBuilder_;
      }

      private yandex.cloud.api.ai.common.Common.ExpirationConfig expirationConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.common.Common.ExpirationConfig, yandex.cloud.api.ai.common.Common.ExpirationConfig.Builder, yandex.cloud.api.ai.common.Common.ExpirationConfigOrBuilder> expirationConfigBuilder_;
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       * @return Whether the expirationConfig field is set.
       */
      public boolean hasExpirationConfig() {
        return expirationConfigBuilder_ != null || expirationConfig_ != null;
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       * @return The expirationConfig.
       */
      public yandex.cloud.api.ai.common.Common.ExpirationConfig getExpirationConfig() {
        if (expirationConfigBuilder_ == null) {
          return expirationConfig_ == null ? yandex.cloud.api.ai.common.Common.ExpirationConfig.getDefaultInstance() : expirationConfig_;
        } else {
          return expirationConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      public Builder setExpirationConfig(yandex.cloud.api.ai.common.Common.ExpirationConfig value) {
        if (expirationConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expirationConfig_ = value;
          onChanged();
        } else {
          expirationConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      public Builder setExpirationConfig(
          yandex.cloud.api.ai.common.Common.ExpirationConfig.Builder builderForValue) {
        if (expirationConfigBuilder_ == null) {
          expirationConfig_ = builderForValue.build();
          onChanged();
        } else {
          expirationConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      public Builder mergeExpirationConfig(yandex.cloud.api.ai.common.Common.ExpirationConfig value) {
        if (expirationConfigBuilder_ == null) {
          if (expirationConfig_ != null) {
            expirationConfig_ =
              yandex.cloud.api.ai.common.Common.ExpirationConfig.newBuilder(expirationConfig_).mergeFrom(value).buildPartial();
          } else {
            expirationConfig_ = value;
          }
          onChanged();
        } else {
          expirationConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      public Builder clearExpirationConfig() {
        if (expirationConfigBuilder_ == null) {
          expirationConfig_ = null;
          onChanged();
        } else {
          expirationConfig_ = null;
          expirationConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      public yandex.cloud.api.ai.common.Common.ExpirationConfig.Builder getExpirationConfigBuilder() {
        
        onChanged();
        return getExpirationConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      public yandex.cloud.api.ai.common.Common.ExpirationConfigOrBuilder getExpirationConfigOrBuilder() {
        if (expirationConfigBuilder_ != null) {
          return expirationConfigBuilder_.getMessageOrBuilder();
        } else {
          return expirationConfig_ == null ?
              yandex.cloud.api.ai.common.Common.ExpirationConfig.getDefaultInstance() : expirationConfig_;
        }
      }
      /**
       * <pre>
       * Configuration for the expiration of the search index, defining when and how the search index will expire.
       * </pre>
       *
       * <code>.yandex.cloud.ai.common.ExpirationConfig expiration_config = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.common.Common.ExpirationConfig, yandex.cloud.api.ai.common.Common.ExpirationConfig.Builder, yandex.cloud.api.ai.common.Common.ExpirationConfigOrBuilder> 
          getExpirationConfigFieldBuilder() {
        if (expirationConfigBuilder_ == null) {
          expirationConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.ai.common.Common.ExpirationConfig, yandex.cloud.api.ai.common.Common.ExpirationConfig.Builder, yandex.cloud.api.ai.common.Common.ExpirationConfigOrBuilder>(
                  getExpirationConfig(),
                  getParentForChildren(),
                  isClean());
          expirationConfig_ = null;
        }
        return expirationConfigBuilder_;
      }

      private com.google.protobuf.Timestamp expiresAt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expiresAtBuilder_;
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       * @return Whether the expiresAt field is set.
       */
      public boolean hasExpiresAt() {
        return expiresAtBuilder_ != null || expiresAt_ != null;
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       * @return The expiresAt.
       */
      public com.google.protobuf.Timestamp getExpiresAt() {
        if (expiresAtBuilder_ == null) {
          return expiresAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiresAt_;
        } else {
          return expiresAtBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      public Builder setExpiresAt(com.google.protobuf.Timestamp value) {
        if (expiresAtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expiresAt_ = value;
          onChanged();
        } else {
          expiresAtBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      public Builder setExpiresAt(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (expiresAtBuilder_ == null) {
          expiresAt_ = builderForValue.build();
          onChanged();
        } else {
          expiresAtBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      public Builder mergeExpiresAt(com.google.protobuf.Timestamp value) {
        if (expiresAtBuilder_ == null) {
          if (expiresAt_ != null) {
            expiresAt_ =
              com.google.protobuf.Timestamp.newBuilder(expiresAt_).mergeFrom(value).buildPartial();
          } else {
            expiresAt_ = value;
          }
          onChanged();
        } else {
          expiresAtBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      public Builder clearExpiresAt() {
        if (expiresAtBuilder_ == null) {
          expiresAt_ = null;
          onChanged();
        } else {
          expiresAt_ = null;
          expiresAtBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      public com.google.protobuf.Timestamp.Builder getExpiresAtBuilder() {
        
        onChanged();
        return getExpiresAtFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getExpiresAtOrBuilder() {
        if (expiresAtBuilder_ != null) {
          return expiresAtBuilder_.getMessageOrBuilder();
        } else {
          return expiresAt_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : expiresAt_;
        }
      }
      /**
       * <pre>
       * Timestamp representing when the search index will expire.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp expires_at = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getExpiresAtFieldBuilder() {
        if (expiresAtBuilder_ == null) {
          expiresAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getExpiresAt(),
                  getParentForChildren(),
                  isClean());
          expiresAt_ = null;
        }
        return expiresAtBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */

      @java.lang.Override
      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */
      @java.lang.Override

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Set of key-value pairs that can be used to organize and categorize the search index.
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 11;</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder> textSearchIndexBuilder_;
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       * @return Whether the textSearchIndex field is set.
       */
      @java.lang.Override
      public boolean hasTextSearchIndex() {
        return indexTypeCase_ == 12;
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       * @return The textSearchIndex.
       */
      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex getTextSearchIndex() {
        if (textSearchIndexBuilder_ == null) {
          if (indexTypeCase_ == 12) {
            return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_;
          }
          return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
        } else {
          if (indexTypeCase_ == 12) {
            return textSearchIndexBuilder_.getMessage();
          }
          return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      public Builder setTextSearchIndex(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex value) {
        if (textSearchIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          indexType_ = value;
          onChanged();
        } else {
          textSearchIndexBuilder_.setMessage(value);
        }
        indexTypeCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      public Builder setTextSearchIndex(
          yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder builderForValue) {
        if (textSearchIndexBuilder_ == null) {
          indexType_ = builderForValue.build();
          onChanged();
        } else {
          textSearchIndexBuilder_.setMessage(builderForValue.build());
        }
        indexTypeCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      public Builder mergeTextSearchIndex(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex value) {
        if (textSearchIndexBuilder_ == null) {
          if (indexTypeCase_ == 12 &&
              indexType_ != yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance()) {
            indexType_ = yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.newBuilder((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_)
                .mergeFrom(value).buildPartial();
          } else {
            indexType_ = value;
          }
          onChanged();
        } else {
          if (indexTypeCase_ == 12) {
            textSearchIndexBuilder_.mergeFrom(value);
          }
          textSearchIndexBuilder_.setMessage(value);
        }
        indexTypeCase_ = 12;
        return this;
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      public Builder clearTextSearchIndex() {
        if (textSearchIndexBuilder_ == null) {
          if (indexTypeCase_ == 12) {
            indexTypeCase_ = 0;
            indexType_ = null;
            onChanged();
          }
        } else {
          if (indexTypeCase_ == 12) {
            indexTypeCase_ = 0;
            indexType_ = null;
          }
          textSearchIndexBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder getTextSearchIndexBuilder() {
        return getTextSearchIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder getTextSearchIndexOrBuilder() {
        if ((indexTypeCase_ == 12) && (textSearchIndexBuilder_ != null)) {
          return textSearchIndexBuilder_.getMessageOrBuilder();
        } else {
          if (indexTypeCase_ == 12) {
            return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_;
          }
          return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Keyword-based text search index configuration.
       * This type of index is used for traditional text search, where documents are indexed based on their keywords.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex text_search_index = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder> 
          getTextSearchIndexFieldBuilder() {
        if (textSearchIndexBuilder_ == null) {
          if (!(indexTypeCase_ == 12)) {
            indexType_ = yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
          }
          textSearchIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder>(
                  (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) indexType_,
                  getParentForChildren(),
                  isClean());
          indexType_ = null;
        }
        indexTypeCase_ = 12;
        onChanged();;
        return textSearchIndexBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder> vectorSearchIndexBuilder_;
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       * @return Whether the vectorSearchIndex field is set.
       */
      @java.lang.Override
      public boolean hasVectorSearchIndex() {
        return indexTypeCase_ == 13;
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       * @return The vectorSearchIndex.
       */
      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex getVectorSearchIndex() {
        if (vectorSearchIndexBuilder_ == null) {
          if (indexTypeCase_ == 13) {
            return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_;
          }
          return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
        } else {
          if (indexTypeCase_ == 13) {
            return vectorSearchIndexBuilder_.getMessage();
          }
          return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      public Builder setVectorSearchIndex(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex value) {
        if (vectorSearchIndexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          indexType_ = value;
          onChanged();
        } else {
          vectorSearchIndexBuilder_.setMessage(value);
        }
        indexTypeCase_ = 13;
        return this;
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      public Builder setVectorSearchIndex(
          yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder builderForValue) {
        if (vectorSearchIndexBuilder_ == null) {
          indexType_ = builderForValue.build();
          onChanged();
        } else {
          vectorSearchIndexBuilder_.setMessage(builderForValue.build());
        }
        indexTypeCase_ = 13;
        return this;
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      public Builder mergeVectorSearchIndex(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex value) {
        if (vectorSearchIndexBuilder_ == null) {
          if (indexTypeCase_ == 13 &&
              indexType_ != yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance()) {
            indexType_ = yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.newBuilder((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_)
                .mergeFrom(value).buildPartial();
          } else {
            indexType_ = value;
          }
          onChanged();
        } else {
          if (indexTypeCase_ == 13) {
            vectorSearchIndexBuilder_.mergeFrom(value);
          }
          vectorSearchIndexBuilder_.setMessage(value);
        }
        indexTypeCase_ = 13;
        return this;
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      public Builder clearVectorSearchIndex() {
        if (vectorSearchIndexBuilder_ == null) {
          if (indexTypeCase_ == 13) {
            indexTypeCase_ = 0;
            indexType_ = null;
            onChanged();
          }
        } else {
          if (indexTypeCase_ == 13) {
            indexTypeCase_ = 0;
            indexType_ = null;
          }
          vectorSearchIndexBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder getVectorSearchIndexBuilder() {
        return getVectorSearchIndexFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder getVectorSearchIndexOrBuilder() {
        if ((indexTypeCase_ == 13) && (vectorSearchIndexBuilder_ != null)) {
          return vectorSearchIndexBuilder_.getMessageOrBuilder();
        } else {
          if (indexTypeCase_ == 13) {
            return (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_;
          }
          return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Vector-based search index configuration.
       * This type is used for vector search, where documents are indexed using vector embeddings.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex vector_search_index = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder> 
          getVectorSearchIndexFieldBuilder() {
        if (vectorSearchIndexBuilder_ == null) {
          if (!(indexTypeCase_ == 13)) {
            indexType_ = yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
          }
          vectorSearchIndexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder>(
                  (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) indexType_,
                  getParentForChildren(),
                  isClean());
          indexType_ = null;
        }
        indexTypeCase_ = 13;
        onChanged();;
        return vectorSearchIndexBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.ai.assistants.v1.searchindex.SearchIndex)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.ai.assistants.v1.searchindex.SearchIndex)
    private static final yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex();
    }

    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SearchIndex>
        PARSER = new com.google.protobuf.AbstractParser<SearchIndex>() {
      @java.lang.Override
      public SearchIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SearchIndex(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SearchIndex> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SearchIndex> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.SearchIndex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TextSearchIndexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
     * @return Whether the chunkingStrategy field is set.
     */
    boolean hasChunkingStrategy();
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
     * @return The chunkingStrategy.
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy getChunkingStrategy();
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder getChunkingStrategyOrBuilder();
  }
  /**
   * <pre>
   * Defines the configuration for a traditional keyword-based text search index.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex}
   */
  public static final class TextSearchIndex extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex)
      TextSearchIndexOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TextSearchIndex.newBuilder() to construct.
    private TextSearchIndex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextSearchIndex() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TextSearchIndex();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TextSearchIndex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder subBuilder = null;
              if (chunkingStrategy_ != null) {
                subBuilder = chunkingStrategy_.toBuilder();
              }
              chunkingStrategy_ = input.readMessage(yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkingStrategy_);
                chunkingStrategy_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.class, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder.class);
    }

    public static final int CHUNKING_STRATEGY_FIELD_NUMBER = 1;
    private yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy chunkingStrategy_;
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
     * @return Whether the chunkingStrategy field is set.
     */
    @java.lang.Override
    public boolean hasChunkingStrategy() {
      return chunkingStrategy_ != null;
    }
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
     * @return The chunkingStrategy.
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy getChunkingStrategy() {
      return chunkingStrategy_ == null ? yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.getDefaultInstance() : chunkingStrategy_;
    }
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder getChunkingStrategyOrBuilder() {
      return getChunkingStrategy();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (chunkingStrategy_ != null) {
        output.writeMessage(1, getChunkingStrategy());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (chunkingStrategy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getChunkingStrategy());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex)) {
        return super.equals(obj);
      }
      yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex other = (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) obj;

      if (hasChunkingStrategy() != other.hasChunkingStrategy()) return false;
      if (hasChunkingStrategy()) {
        if (!getChunkingStrategy()
            .equals(other.getChunkingStrategy())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChunkingStrategy()) {
        hash = (37 * hash) + CHUNKING_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getChunkingStrategy().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines the configuration for a traditional keyword-based text search index.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex)
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.class, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.Builder.class);
      }

      // Construct using yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategy_ = null;
        } else {
          chunkingStrategy_ = null;
          chunkingStrategyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex getDefaultInstanceForType() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex build() {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex buildPartial() {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex result = new yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex(this);
        if (chunkingStrategyBuilder_ == null) {
          result.chunkingStrategy_ = chunkingStrategy_;
        } else {
          result.chunkingStrategy_ = chunkingStrategyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) {
          return mergeFrom((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex other) {
        if (other == yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex.getDefaultInstance()) return this;
        if (other.hasChunkingStrategy()) {
          mergeChunkingStrategy(other.getChunkingStrategy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy chunkingStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder> chunkingStrategyBuilder_;
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       * @return Whether the chunkingStrategy field is set.
       */
      public boolean hasChunkingStrategy() {
        return chunkingStrategyBuilder_ != null || chunkingStrategy_ != null;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       * @return The chunkingStrategy.
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy getChunkingStrategy() {
        if (chunkingStrategyBuilder_ == null) {
          return chunkingStrategy_ == null ? yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.getDefaultInstance() : chunkingStrategy_;
        } else {
          return chunkingStrategyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      public Builder setChunkingStrategy(yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy value) {
        if (chunkingStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkingStrategy_ = value;
          onChanged();
        } else {
          chunkingStrategyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      public Builder setChunkingStrategy(
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder builderForValue) {
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategy_ = builderForValue.build();
          onChanged();
        } else {
          chunkingStrategyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      public Builder mergeChunkingStrategy(yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy value) {
        if (chunkingStrategyBuilder_ == null) {
          if (chunkingStrategy_ != null) {
            chunkingStrategy_ =
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.newBuilder(chunkingStrategy_).mergeFrom(value).buildPartial();
          } else {
            chunkingStrategy_ = value;
          }
          onChanged();
        } else {
          chunkingStrategyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      public Builder clearChunkingStrategy() {
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategy_ = null;
          onChanged();
        } else {
          chunkingStrategy_ = null;
          chunkingStrategyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder getChunkingStrategyBuilder() {
        
        onChanged();
        return getChunkingStrategyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder getChunkingStrategyOrBuilder() {
        if (chunkingStrategyBuilder_ != null) {
          return chunkingStrategyBuilder_.getMessageOrBuilder();
        } else {
          return chunkingStrategy_ == null ?
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.getDefaultInstance() : chunkingStrategy_;
        }
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder> 
          getChunkingStrategyFieldBuilder() {
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder>(
                  getChunkingStrategy(),
                  getParentForChildren(),
                  isClean());
          chunkingStrategy_ = null;
        }
        return chunkingStrategyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.ai.assistants.v1.searchindex.TextSearchIndex)
    private static final yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex();
    }

    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextSearchIndex>
        PARSER = new com.google.protobuf.AbstractParser<TextSearchIndex>() {
      @java.lang.Override
      public TextSearchIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TextSearchIndex(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextSearchIndex> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextSearchIndex> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.TextSearchIndex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VectorSearchIndexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
     * </pre>
     *
     * <code>string doc_embedder_uri = 1;</code>
     * @return The docEmbedderUri.
     */
    java.lang.String getDocEmbedderUri();
    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
     * </pre>
     *
     * <code>string doc_embedder_uri = 1;</code>
     * @return The bytes for docEmbedderUri.
     */
    com.google.protobuf.ByteString
        getDocEmbedderUriBytes();

    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
     * </pre>
     *
     * <code>string query_embedder_uri = 2;</code>
     * @return The queryEmbedderUri.
     */
    java.lang.String getQueryEmbedderUri();
    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
     * </pre>
     *
     * <code>string query_embedder_uri = 2;</code>
     * @return The bytes for queryEmbedderUri.
     */
    com.google.protobuf.ByteString
        getQueryEmbedderUriBytes();

    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
     * @return Whether the chunkingStrategy field is set.
     */
    boolean hasChunkingStrategy();
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
     * @return The chunkingStrategy.
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy getChunkingStrategy();
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
     */
    yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder getChunkingStrategyOrBuilder();
  }
  /**
   * <pre>
   * Defines the configuration for a vector-based search index. This type uses embeddings to represent documents and queries.
   * </pre>
   *
   * Protobuf type {@code yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex}
   */
  public static final class VectorSearchIndex extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex)
      VectorSearchIndexOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VectorSearchIndex.newBuilder() to construct.
    private VectorSearchIndex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VectorSearchIndex() {
      docEmbedderUri_ = "";
      queryEmbedderUri_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VectorSearchIndex();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VectorSearchIndex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docEmbedderUri_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              queryEmbedderUri_ = s;
              break;
            }
            case 26: {
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder subBuilder = null;
              if (chunkingStrategy_ != null) {
                subBuilder = chunkingStrategy_.toBuilder();
              }
              chunkingStrategy_ = input.readMessage(yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(chunkingStrategy_);
                chunkingStrategy_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.class, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder.class);
    }

    public static final int DOC_EMBEDDER_URI_FIELD_NUMBER = 1;
    private volatile java.lang.Object docEmbedderUri_;
    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
     * </pre>
     *
     * <code>string doc_embedder_uri = 1;</code>
     * @return The docEmbedderUri.
     */
    @java.lang.Override
    public java.lang.String getDocEmbedderUri() {
      java.lang.Object ref = docEmbedderUri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docEmbedderUri_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
     * </pre>
     *
     * <code>string doc_embedder_uri = 1;</code>
     * @return The bytes for docEmbedderUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDocEmbedderUriBytes() {
      java.lang.Object ref = docEmbedderUri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docEmbedderUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUERY_EMBEDDER_URI_FIELD_NUMBER = 2;
    private volatile java.lang.Object queryEmbedderUri_;
    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
     * </pre>
     *
     * <code>string query_embedder_uri = 2;</code>
     * @return The queryEmbedderUri.
     */
    @java.lang.Override
    public java.lang.String getQueryEmbedderUri() {
      java.lang.Object ref = queryEmbedderUri_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        queryEmbedderUri_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
     * </pre>
     *
     * <code>string query_embedder_uri = 2;</code>
     * @return The bytes for queryEmbedderUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getQueryEmbedderUriBytes() {
      java.lang.Object ref = queryEmbedderUri_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        queryEmbedderUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHUNKING_STRATEGY_FIELD_NUMBER = 3;
    private yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy chunkingStrategy_;
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
     * @return Whether the chunkingStrategy field is set.
     */
    @java.lang.Override
    public boolean hasChunkingStrategy() {
      return chunkingStrategy_ != null;
    }
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
     * @return The chunkingStrategy.
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy getChunkingStrategy() {
      return chunkingStrategy_ == null ? yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.getDefaultInstance() : chunkingStrategy_;
    }
    /**
     * <pre>
     * Chunking strategy used to split text into smaller chunks before indexing.
     * </pre>
     *
     * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder getChunkingStrategyOrBuilder() {
      return getChunkingStrategy();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(docEmbedderUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docEmbedderUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(queryEmbedderUri_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, queryEmbedderUri_);
      }
      if (chunkingStrategy_ != null) {
        output.writeMessage(3, getChunkingStrategy());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(docEmbedderUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docEmbedderUri_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(queryEmbedderUri_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, queryEmbedderUri_);
      }
      if (chunkingStrategy_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getChunkingStrategy());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex)) {
        return super.equals(obj);
      }
      yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex other = (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) obj;

      if (!getDocEmbedderUri()
          .equals(other.getDocEmbedderUri())) return false;
      if (!getQueryEmbedderUri()
          .equals(other.getQueryEmbedderUri())) return false;
      if (hasChunkingStrategy() != other.hasChunkingStrategy()) return false;
      if (hasChunkingStrategy()) {
        if (!getChunkingStrategy()
            .equals(other.getChunkingStrategy())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOC_EMBEDDER_URI_FIELD_NUMBER;
      hash = (53 * hash) + getDocEmbedderUri().hashCode();
      hash = (37 * hash) + QUERY_EMBEDDER_URI_FIELD_NUMBER;
      hash = (53 * hash) + getQueryEmbedderUri().hashCode();
      if (hasChunkingStrategy()) {
        hash = (37 * hash) + CHUNKING_STRATEGY_FIELD_NUMBER;
        hash = (53 * hash) + getChunkingStrategy().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Defines the configuration for a vector-based search index. This type uses embeddings to represent documents and queries.
     * </pre>
     *
     * Protobuf type {@code yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex)
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.class, yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.Builder.class);
      }

      // Construct using yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docEmbedderUri_ = "";

        queryEmbedderUri_ = "";

        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategy_ = null;
        } else {
          chunkingStrategy_ = null;
          chunkingStrategyBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex getDefaultInstanceForType() {
        return yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex build() {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex buildPartial() {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex result = new yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex(this);
        result.docEmbedderUri_ = docEmbedderUri_;
        result.queryEmbedderUri_ = queryEmbedderUri_;
        if (chunkingStrategyBuilder_ == null) {
          result.chunkingStrategy_ = chunkingStrategy_;
        } else {
          result.chunkingStrategy_ = chunkingStrategyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) {
          return mergeFrom((yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex other) {
        if (other == yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex.getDefaultInstance()) return this;
        if (!other.getDocEmbedderUri().isEmpty()) {
          docEmbedderUri_ = other.docEmbedderUri_;
          onChanged();
        }
        if (!other.getQueryEmbedderUri().isEmpty()) {
          queryEmbedderUri_ = other.queryEmbedderUri_;
          onChanged();
        }
        if (other.hasChunkingStrategy()) {
          mergeChunkingStrategy(other.getChunkingStrategy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docEmbedderUri_ = "";
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
       * </pre>
       *
       * <code>string doc_embedder_uri = 1;</code>
       * @return The docEmbedderUri.
       */
      public java.lang.String getDocEmbedderUri() {
        java.lang.Object ref = docEmbedderUri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docEmbedderUri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
       * </pre>
       *
       * <code>string doc_embedder_uri = 1;</code>
       * @return The bytes for docEmbedderUri.
       */
      public com.google.protobuf.ByteString
          getDocEmbedderUriBytes() {
        java.lang.Object ref = docEmbedderUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docEmbedderUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
       * </pre>
       *
       * <code>string doc_embedder_uri = 1;</code>
       * @param value The docEmbedderUri to set.
       * @return This builder for chaining.
       */
      public Builder setDocEmbedderUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docEmbedderUri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
       * </pre>
       *
       * <code>string doc_embedder_uri = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocEmbedderUri() {
        
        docEmbedderUri_ = getDefaultInstance().getDocEmbedderUri();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining document text embeddings.
       * </pre>
       *
       * <code>string doc_embedder_uri = 1;</code>
       * @param value The bytes for docEmbedderUri to set.
       * @return This builder for chaining.
       */
      public Builder setDocEmbedderUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docEmbedderUri_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object queryEmbedderUri_ = "";
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
       * </pre>
       *
       * <code>string query_embedder_uri = 2;</code>
       * @return The queryEmbedderUri.
       */
      public java.lang.String getQueryEmbedderUri() {
        java.lang.Object ref = queryEmbedderUri_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          queryEmbedderUri_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
       * </pre>
       *
       * <code>string query_embedder_uri = 2;</code>
       * @return The bytes for queryEmbedderUri.
       */
      public com.google.protobuf.ByteString
          getQueryEmbedderUriBytes() {
        java.lang.Object ref = queryEmbedderUri_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          queryEmbedderUri_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
       * </pre>
       *
       * <code>string query_embedder_uri = 2;</code>
       * @param value The queryEmbedderUri to set.
       * @return This builder for chaining.
       */
      public Builder setQueryEmbedderUri(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        queryEmbedderUri_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
       * </pre>
       *
       * <code>string query_embedder_uri = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearQueryEmbedderUri() {
        
        queryEmbedderUri_ = getDefaultInstance().getQueryEmbedderUri();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The [ID of the model](/docs/foundation-models/concepts/embeddings) to be used for obtaining query text embeddings.
       * </pre>
       *
       * <code>string query_embedder_uri = 2;</code>
       * @param value The bytes for queryEmbedderUri to set.
       * @return This builder for chaining.
       */
      public Builder setQueryEmbedderUriBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        queryEmbedderUri_ = value;
        onChanged();
        return this;
      }

      private yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy chunkingStrategy_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder> chunkingStrategyBuilder_;
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       * @return Whether the chunkingStrategy field is set.
       */
      public boolean hasChunkingStrategy() {
        return chunkingStrategyBuilder_ != null || chunkingStrategy_ != null;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       * @return The chunkingStrategy.
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy getChunkingStrategy() {
        if (chunkingStrategyBuilder_ == null) {
          return chunkingStrategy_ == null ? yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.getDefaultInstance() : chunkingStrategy_;
        } else {
          return chunkingStrategyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      public Builder setChunkingStrategy(yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy value) {
        if (chunkingStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          chunkingStrategy_ = value;
          onChanged();
        } else {
          chunkingStrategyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      public Builder setChunkingStrategy(
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder builderForValue) {
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategy_ = builderForValue.build();
          onChanged();
        } else {
          chunkingStrategyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      public Builder mergeChunkingStrategy(yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy value) {
        if (chunkingStrategyBuilder_ == null) {
          if (chunkingStrategy_ != null) {
            chunkingStrategy_ =
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.newBuilder(chunkingStrategy_).mergeFrom(value).buildPartial();
          } else {
            chunkingStrategy_ = value;
          }
          onChanged();
        } else {
          chunkingStrategyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      public Builder clearChunkingStrategy() {
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategy_ = null;
          onChanged();
        } else {
          chunkingStrategy_ = null;
          chunkingStrategyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder getChunkingStrategyBuilder() {
        
        onChanged();
        return getChunkingStrategyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      public yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder getChunkingStrategyOrBuilder() {
        if (chunkingStrategyBuilder_ != null) {
          return chunkingStrategyBuilder_.getMessageOrBuilder();
        } else {
          return chunkingStrategy_ == null ?
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.getDefaultInstance() : chunkingStrategy_;
        }
      }
      /**
       * <pre>
       * Chunking strategy used to split text into smaller chunks before indexing.
       * </pre>
       *
       * <code>.yandex.cloud.ai.assistants.v1.searchindex.ChunkingStrategy chunking_strategy = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder> 
          getChunkingStrategyFieldBuilder() {
        if (chunkingStrategyBuilder_ == null) {
          chunkingStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategy.Builder, yandex.cloud.api.ai.assistants.v1.searchindex.Common.ChunkingStrategyOrBuilder>(
                  getChunkingStrategy(),
                  getParentForChildren(),
                  isClean());
          chunkingStrategy_ = null;
        }
        return chunkingStrategyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.ai.assistants.v1.searchindex.VectorSearchIndex)
    private static final yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex();
    }

    public static yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VectorSearchIndex>
        PARSER = new com.google.protobuf.AbstractParser<VectorSearchIndex>() {
      @java.lang.Override
      public VectorSearchIndex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VectorSearchIndex(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VectorSearchIndex> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VectorSearchIndex> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.ai.assistants.v1.searchindex.SearchIndexOuterClass.VectorSearchIndex getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n<yandex/cloud/ai/assistants/v1/searchin" +
      "dex/search_index.proto\022)yandex.cloud.ai." +
      "assistants.v1.searchindex\032#yandex/cloud/" +
      "ai/common/common.proto\0326yandex/cloud/ai/" +
      "assistants/v1/searchindex/common.proto\032\037" +
      "google/protobuf/timestamp.proto\"\222\005\n\013Sear" +
      "chIndex\022\n\n\002id\030\001 \001(\t\022\021\n\tfolder_id\030\002 \001(\t\022\014" +
      "\n\004name\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\022\n\ncre" +
      "ated_by\030\005 \001(\t\022.\n\ncreated_at\030\006 \001(\0132\032.goog" +
      "le.protobuf.Timestamp\022\022\n\nupdated_by\030\007 \001(" +
      "\t\022.\n\nupdated_at\030\010 \001(\0132\032.google.protobuf." +
      "Timestamp\022C\n\021expiration_config\030\t \001(\0132(.y" +
      "andex.cloud.ai.common.ExpirationConfig\022." +
      "\n\nexpires_at\030\n \001(\0132\032.google.protobuf.Tim" +
      "estamp\022R\n\006labels\030\013 \003(\0132B.yandex.cloud.ai" +
      ".assistants.v1.searchindex.SearchIndex.L" +
      "abelsEntry\022W\n\021text_search_index\030\014 \001(\0132:." +
      "yandex.cloud.ai.assistants.v1.searchinde" +
      "x.TextSearchIndexH\000\022[\n\023vector_search_ind" +
      "ex\030\r \001(\0132<.yandex.cloud.ai.assistants.v1" +
      ".searchindex.VectorSearchIndexH\000\032-\n\013Labe" +
      "lsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B" +
      "\013\n\tIndexType\"i\n\017TextSearchIndex\022V\n\021chunk" +
      "ing_strategy\030\001 \001(\0132;.yandex.cloud.ai.ass" +
      "istants.v1.searchindex.ChunkingStrategy\"" +
      "\241\001\n\021VectorSearchIndex\022\030\n\020doc_embedder_ur" +
      "i\030\001 \001(\t\022\032\n\022query_embedder_uri\030\002 \001(\t\022V\n\021c" +
      "hunking_strategy\030\003 \001(\0132;.yandex.cloud.ai" +
      ".assistants.v1.searchindex.ChunkingStrat" +
      "egyB\212\001\n-yandex.cloud.api.ai.assistants.v" +
      "1.searchindexZYgithub.com/yandex-cloud/g" +
      "o-genproto/yandex/cloud/ai/assistants/v1" +
      "/searchindex;searchindexb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          yandex.cloud.api.ai.common.Common.getDescriptor(),
          yandex.cloud.api.ai.assistants.v1.searchindex.Common.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor,
        new java.lang.String[] { "Id", "FolderId", "Name", "Description", "CreatedBy", "CreatedAt", "UpdatedBy", "UpdatedAt", "ExpirationConfig", "ExpiresAt", "Labels", "TextSearchIndex", "VectorSearchIndex", "IndexType", });
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_LabelsEntry_descriptor =
      internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_ai_assistants_v1_searchindex_SearchIndex_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_ai_assistants_v1_searchindex_TextSearchIndex_descriptor,
        new java.lang.String[] { "ChunkingStrategy", });
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_ai_assistants_v1_searchindex_VectorSearchIndex_descriptor,
        new java.lang.String[] { "DocEmbedderUri", "QueryEmbedderUri", "ChunkingStrategy", });
    yandex.cloud.api.ai.common.Common.getDescriptor();
    yandex.cloud.api.ai.assistants.v1.searchindex.Common.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
