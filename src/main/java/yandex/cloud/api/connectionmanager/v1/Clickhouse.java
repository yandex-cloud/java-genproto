// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yandex/cloud/connectionmanager/v1/clickhouse.proto

package yandex.cloud.api.connectionmanager.v1;

public final class Clickhouse {
  private Clickhouse() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ClickHouseAuthOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.connectionmanager.v1.ClickHouseAuth)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
     * @return Whether the userPassword field is set.
     */
    boolean hasUserPassword();
    /**
     * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
     * @return The userPassword.
     */
    yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth getUserPassword();
    /**
     * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuthOrBuilder getUserPasswordOrBuilder();

    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.SecurityCase getSecurityCase();
  }
  /**
   * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseAuth}
   */
  public static final class ClickHouseAuth extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.connectionmanager.v1.ClickHouseAuth)
      ClickHouseAuthOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClickHouseAuth.newBuilder() to construct.
    private ClickHouseAuth(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClickHouseAuth() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClickHouseAuth();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClickHouseAuth(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.Builder subBuilder = null;
              if (securityCase_ == 1) {
                subBuilder = ((yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_).toBuilder();
              }
              security_ =
                  input.readMessage(yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_);
                security_ = subBuilder.buildPartial();
              }
              securityCase_ = 1;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder.class);
    }

    private int securityCase_ = 0;
    private java.lang.Object security_;
    public enum SecurityCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      USER_PASSWORD(1),
      SECURITY_NOT_SET(0);
      private final int value;
      private SecurityCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SecurityCase valueOf(int value) {
        return forNumber(value);
      }

      public static SecurityCase forNumber(int value) {
        switch (value) {
          case 1: return USER_PASSWORD;
          case 0: return SECURITY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SecurityCase
    getSecurityCase() {
      return SecurityCase.forNumber(
          securityCase_);
    }

    public static final int USER_PASSWORD_FIELD_NUMBER = 1;
    /**
     * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
     * @return Whether the userPassword field is set.
     */
    @java.lang.Override
    public boolean hasUserPassword() {
      return securityCase_ == 1;
    }
    /**
     * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
     * @return The userPassword.
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth getUserPassword() {
      if (securityCase_ == 1) {
         return (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_;
      }
      return yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance();
    }
    /**
     * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuthOrBuilder getUserPasswordOrBuilder() {
      if (securityCase_ == 1) {
         return (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_;
      }
      return yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (securityCase_ == 1) {
        output.writeMessage(1, (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (securityCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth)) {
        return super.equals(obj);
      }
      yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth other = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth) obj;

      if (!getSecurityCase().equals(other.getSecurityCase())) return false;
      switch (securityCase_) {
        case 1:
          if (!getUserPassword()
              .equals(other.getUserPassword())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (securityCase_) {
        case 1:
          hash = (37 * hash) + USER_PASSWORD_FIELD_NUMBER;
          hash = (53 * hash) + getUserPassword().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseAuth}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.connectionmanager.v1.ClickHouseAuth)
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder.class);
      }

      // Construct using yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        securityCase_ = 0;
        security_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth getDefaultInstanceForType() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth build() {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth buildPartial() {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth result = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth(this);
        if (securityCase_ == 1) {
          if (userPasswordBuilder_ == null) {
            result.security_ = security_;
          } else {
            result.security_ = userPasswordBuilder_.build();
          }
        }
        result.securityCase_ = securityCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth) {
          return mergeFrom((yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth other) {
        if (other == yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.getDefaultInstance()) return this;
        switch (other.getSecurityCase()) {
          case USER_PASSWORD: {
            mergeUserPassword(other.getUserPassword());
            break;
          }
          case SECURITY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int securityCase_ = 0;
      private java.lang.Object security_;
      public SecurityCase
          getSecurityCase() {
        return SecurityCase.forNumber(
            securityCase_);
      }

      public Builder clearSecurity() {
        securityCase_ = 0;
        security_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth, yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.Builder, yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuthOrBuilder> userPasswordBuilder_;
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       * @return Whether the userPassword field is set.
       */
      @java.lang.Override
      public boolean hasUserPassword() {
        return securityCase_ == 1;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       * @return The userPassword.
       */
      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth getUserPassword() {
        if (userPasswordBuilder_ == null) {
          if (securityCase_ == 1) {
            return (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_;
          }
          return yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance();
        } else {
          if (securityCase_ == 1) {
            return userPasswordBuilder_.getMessage();
          }
          return yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance();
        }
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      public Builder setUserPassword(yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth value) {
        if (userPasswordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          security_ = value;
          onChanged();
        } else {
          userPasswordBuilder_.setMessage(value);
        }
        securityCase_ = 1;
        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      public Builder setUserPassword(
          yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.Builder builderForValue) {
        if (userPasswordBuilder_ == null) {
          security_ = builderForValue.build();
          onChanged();
        } else {
          userPasswordBuilder_.setMessage(builderForValue.build());
        }
        securityCase_ = 1;
        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      public Builder mergeUserPassword(yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth value) {
        if (userPasswordBuilder_ == null) {
          if (securityCase_ == 1 &&
              security_ != yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance()) {
            security_ = yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.newBuilder((yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_)
                .mergeFrom(value).buildPartial();
          } else {
            security_ = value;
          }
          onChanged();
        } else {
          if (securityCase_ == 1) {
            userPasswordBuilder_.mergeFrom(value);
          }
          userPasswordBuilder_.setMessage(value);
        }
        securityCase_ = 1;
        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      public Builder clearUserPassword() {
        if (userPasswordBuilder_ == null) {
          if (securityCase_ == 1) {
            securityCase_ = 0;
            security_ = null;
            onChanged();
          }
        } else {
          if (securityCase_ == 1) {
            securityCase_ = 0;
            security_ = null;
          }
          userPasswordBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.Builder getUserPasswordBuilder() {
        return getUserPasswordFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuthOrBuilder getUserPasswordOrBuilder() {
        if ((securityCase_ == 1) && (userPasswordBuilder_ != null)) {
          return userPasswordBuilder_.getMessageOrBuilder();
        } else {
          if (securityCase_ == 1) {
            return (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_;
          }
          return yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance();
        }
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.UserPasswordAuth user_password = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth, yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.Builder, yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuthOrBuilder> 
          getUserPasswordFieldBuilder() {
        if (userPasswordBuilder_ == null) {
          if (!(securityCase_ == 1)) {
            security_ = yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.getDefaultInstance();
          }
          userPasswordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth, yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth.Builder, yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuthOrBuilder>(
                  (yandex.cloud.api.connectionmanager.v1.Common.UserPasswordAuth) security_,
                  getParentForChildren(),
                  isClean());
          security_ = null;
        }
        securityCase_ = 1;
        onChanged();;
        return userPasswordBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.connectionmanager.v1.ClickHouseAuth)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.connectionmanager.v1.ClickHouseAuth)
    private static final yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth();
    }

    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClickHouseAuth>
        PARSER = new com.google.protobuf.AbstractParser<ClickHouseAuth>() {
      @java.lang.Override
      public ClickHouseAuth parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClickHouseAuth(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClickHouseAuth> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClickHouseAuth> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClickHouseClusterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.connectionmanager.v1.ClickHouseCluster)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
     * @return Whether the tlsParams field is set.
     */
    boolean hasTlsParams();
    /**
     * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
     * @return The tlsParams.
     */
    yandex.cloud.api.connectionmanager.v1.Common.TLSParams getTlsParams();
    /**
     * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Common.TLSParamsOrBuilder getTlsParamsOrBuilder();

    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host> 
        getHostsList();
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host getHosts(int index);
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    int getHostsCount();
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    java.util.List<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder> 
        getHostsOrBuilderList();
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder getHostsOrBuilder(
        int index);

    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup> 
        getShardGroupsList();
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup getShardGroups(int index);
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    int getShardGroupsCount();
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    java.util.List<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder> 
        getShardGroupsOrBuilderList();
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder getShardGroupsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster}
   */
  public static final class ClickHouseCluster extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.connectionmanager.v1.ClickHouseCluster)
      ClickHouseClusterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClickHouseCluster.newBuilder() to construct.
    private ClickHouseCluster(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClickHouseCluster() {
      hosts_ = java.util.Collections.emptyList();
      shardGroups_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClickHouseCluster();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClickHouseCluster(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 34: {
              yandex.cloud.api.connectionmanager.v1.Common.TLSParams.Builder subBuilder = null;
              if (tlsParams_ != null) {
                subBuilder = tlsParams_.toBuilder();
              }
              tlsParams_ = input.readMessage(yandex.cloud.api.connectionmanager.v1.Common.TLSParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tlsParams_);
                tlsParams_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                hosts_ = new java.util.ArrayList<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host>();
                mutable_bitField0_ |= 0x00000001;
              }
              hosts_.add(
                  input.readMessage(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                shardGroups_ = new java.util.ArrayList<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup>();
                mutable_bitField0_ |= 0x00000002;
              }
              shardGroups_.add(
                  input.readMessage(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          hosts_ = java.util.Collections.unmodifiableList(hosts_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          shardGroups_ = java.util.Collections.unmodifiableList(shardGroups_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder.class);
    }

    public interface HostOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string host = 1;</code>
       * @return The host.
       */
      java.lang.String getHost();
      /**
       * <code>string host = 1;</code>
       * @return The bytes for host.
       */
      com.google.protobuf.ByteString
          getHostBytes();

      /**
       * <pre>
       * depends on tls params may vary as http or https
       * </pre>
       *
       * <code>int64 http_port = 2;</code>
       * @return The httpPort.
       */
      long getHttpPort();

      /**
       * <code>int64 tcp_port = 3;</code>
       * @return The tcpPort.
       */
      long getTcpPort();

      /**
       * <code>string shard_name = 4;</code>
       * @return The shardName.
       */
      java.lang.String getShardName();
      /**
       * <code>string shard_name = 4;</code>
       * @return The bytes for shardName.
       */
      com.google.protobuf.ByteString
          getShardNameBytes();

      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
       * @return The enum numeric value on the wire for health.
       */
      int getHealthValue();
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
       * @return The health.
       */
      yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health getHealth();
    }
    /**
     * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host}
     */
    public static final class Host extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host)
        HostOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Host.newBuilder() to construct.
      private Host(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Host() {
        host_ = "";
        shardName_ = "";
        health_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Host();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Host(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                host_ = s;
                break;
              }
              case 16: {

                httpPort_ = input.readInt64();
                break;
              }
              case 24: {

                tcpPort_ = input.readInt64();
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                shardName_ = s;
                break;
              }
              case 40: {
                int rawValue = input.readEnum();

                health_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder.class);
      }

      /**
       * Protobuf enum {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health}
       */
      public enum Health
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>HEALTH_UNKNOWN = 0;</code>
         */
        HEALTH_UNKNOWN(0),
        /**
         * <code>ALIVE = 1;</code>
         */
        ALIVE(1),
        /**
         * <code>DEAD = 2;</code>
         */
        DEAD(2),
        /**
         * <code>DEGRADED = 3;</code>
         */
        DEGRADED(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>HEALTH_UNKNOWN = 0;</code>
         */
        public static final int HEALTH_UNKNOWN_VALUE = 0;
        /**
         * <code>ALIVE = 1;</code>
         */
        public static final int ALIVE_VALUE = 1;
        /**
         * <code>DEAD = 2;</code>
         */
        public static final int DEAD_VALUE = 2;
        /**
         * <code>DEGRADED = 3;</code>
         */
        public static final int DEGRADED_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Health valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Health forNumber(int value) {
          switch (value) {
            case 0: return HEALTH_UNKNOWN;
            case 1: return ALIVE;
            case 2: return DEAD;
            case 3: return DEGRADED;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Health>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Health> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Health>() {
                public Health findValueByNumber(int number) {
                  return Health.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.getDescriptor().getEnumTypes().get(0);
        }

        private static final Health[] VALUES = values();

        public static Health valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Health(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health)
      }

      public static final int HOST_FIELD_NUMBER = 1;
      private volatile java.lang.Object host_;
      /**
       * <code>string host = 1;</code>
       * @return The host.
       */
      @java.lang.Override
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          host_ = s;
          return s;
        }
      }
      /**
       * <code>string host = 1;</code>
       * @return The bytes for host.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HTTP_PORT_FIELD_NUMBER = 2;
      private long httpPort_;
      /**
       * <pre>
       * depends on tls params may vary as http or https
       * </pre>
       *
       * <code>int64 http_port = 2;</code>
       * @return The httpPort.
       */
      @java.lang.Override
      public long getHttpPort() {
        return httpPort_;
      }

      public static final int TCP_PORT_FIELD_NUMBER = 3;
      private long tcpPort_;
      /**
       * <code>int64 tcp_port = 3;</code>
       * @return The tcpPort.
       */
      @java.lang.Override
      public long getTcpPort() {
        return tcpPort_;
      }

      public static final int SHARD_NAME_FIELD_NUMBER = 4;
      private volatile java.lang.Object shardName_;
      /**
       * <code>string shard_name = 4;</code>
       * @return The shardName.
       */
      @java.lang.Override
      public java.lang.String getShardName() {
        java.lang.Object ref = shardName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          shardName_ = s;
          return s;
        }
      }
      /**
       * <code>string shard_name = 4;</code>
       * @return The bytes for shardName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getShardNameBytes() {
        java.lang.Object ref = shardName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          shardName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HEALTH_FIELD_NUMBER = 5;
      private int health_;
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
       * @return The enum numeric value on the wire for health.
       */
      @java.lang.Override public int getHealthValue() {
        return health_;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
       * @return The health.
       */
      @java.lang.Override public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health getHealth() {
        @SuppressWarnings("deprecation")
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health result = yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health.valueOf(health_);
        return result == null ? yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, host_);
        }
        if (httpPort_ != 0L) {
          output.writeInt64(2, httpPort_);
        }
        if (tcpPort_ != 0L) {
          output.writeInt64(3, tcpPort_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shardName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, shardName_);
        }
        if (health_ != yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health.HEALTH_UNKNOWN.getNumber()) {
          output.writeEnum(5, health_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(host_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, host_);
        }
        if (httpPort_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, httpPort_);
        }
        if (tcpPort_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, tcpPort_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(shardName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, shardName_);
        }
        if (health_ != yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health.HEALTH_UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, health_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host)) {
          return super.equals(obj);
        }
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host other = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host) obj;

        if (!getHost()
            .equals(other.getHost())) return false;
        if (getHttpPort()
            != other.getHttpPort()) return false;
        if (getTcpPort()
            != other.getTcpPort()) return false;
        if (!getShardName()
            .equals(other.getShardName())) return false;
        if (health_ != other.health_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HOST_FIELD_NUMBER;
        hash = (53 * hash) + getHost().hashCode();
        hash = (37 * hash) + HTTP_PORT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getHttpPort());
        hash = (37 * hash) + TCP_PORT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTcpPort());
        hash = (37 * hash) + SHARD_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getShardName().hashCode();
        hash = (37 * hash) + HEALTH_FIELD_NUMBER;
        hash = (53 * hash) + health_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host)
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder.class);
        }

        // Construct using yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          host_ = "";

          httpPort_ = 0L;

          tcpPort_ = 0L;

          shardName_ = "";

          health_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host getDefaultInstanceForType() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host build() {
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host buildPartial() {
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host result = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host(this);
          result.host_ = host_;
          result.httpPort_ = httpPort_;
          result.tcpPort_ = tcpPort_;
          result.shardName_ = shardName_;
          result.health_ = health_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host) {
            return mergeFrom((yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host other) {
          if (other == yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.getDefaultInstance()) return this;
          if (!other.getHost().isEmpty()) {
            host_ = other.host_;
            onChanged();
          }
          if (other.getHttpPort() != 0L) {
            setHttpPort(other.getHttpPort());
          }
          if (other.getTcpPort() != 0L) {
            setTcpPort(other.getTcpPort());
          }
          if (!other.getShardName().isEmpty()) {
            shardName_ = other.shardName_;
            onChanged();
          }
          if (other.health_ != 0) {
            setHealthValue(other.getHealthValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object host_ = "";
        /**
         * <code>string host = 1;</code>
         * @return The host.
         */
        public java.lang.String getHost() {
          java.lang.Object ref = host_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            host_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string host = 1;</code>
         * @return The bytes for host.
         */
        public com.google.protobuf.ByteString
            getHostBytes() {
          java.lang.Object ref = host_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            host_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string host = 1;</code>
         * @param value The host to set.
         * @return This builder for chaining.
         */
        public Builder setHost(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          host_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string host = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearHost() {
          
          host_ = getDefaultInstance().getHost();
          onChanged();
          return this;
        }
        /**
         * <code>string host = 1;</code>
         * @param value The bytes for host to set.
         * @return This builder for chaining.
         */
        public Builder setHostBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          host_ = value;
          onChanged();
          return this;
        }

        private long httpPort_ ;
        /**
         * <pre>
         * depends on tls params may vary as http or https
         * </pre>
         *
         * <code>int64 http_port = 2;</code>
         * @return The httpPort.
         */
        @java.lang.Override
        public long getHttpPort() {
          return httpPort_;
        }
        /**
         * <pre>
         * depends on tls params may vary as http or https
         * </pre>
         *
         * <code>int64 http_port = 2;</code>
         * @param value The httpPort to set.
         * @return This builder for chaining.
         */
        public Builder setHttpPort(long value) {
          
          httpPort_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * depends on tls params may vary as http or https
         * </pre>
         *
         * <code>int64 http_port = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHttpPort() {
          
          httpPort_ = 0L;
          onChanged();
          return this;
        }

        private long tcpPort_ ;
        /**
         * <code>int64 tcp_port = 3;</code>
         * @return The tcpPort.
         */
        @java.lang.Override
        public long getTcpPort() {
          return tcpPort_;
        }
        /**
         * <code>int64 tcp_port = 3;</code>
         * @param value The tcpPort to set.
         * @return This builder for chaining.
         */
        public Builder setTcpPort(long value) {
          
          tcpPort_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 tcp_port = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTcpPort() {
          
          tcpPort_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object shardName_ = "";
        /**
         * <code>string shard_name = 4;</code>
         * @return The shardName.
         */
        public java.lang.String getShardName() {
          java.lang.Object ref = shardName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            shardName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string shard_name = 4;</code>
         * @return The bytes for shardName.
         */
        public com.google.protobuf.ByteString
            getShardNameBytes() {
          java.lang.Object ref = shardName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            shardName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string shard_name = 4;</code>
         * @param value The shardName to set.
         * @return This builder for chaining.
         */
        public Builder setShardName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          shardName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string shard_name = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearShardName() {
          
          shardName_ = getDefaultInstance().getShardName();
          onChanged();
          return this;
        }
        /**
         * <code>string shard_name = 4;</code>
         * @param value The bytes for shardName to set.
         * @return This builder for chaining.
         */
        public Builder setShardNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          shardName_ = value;
          onChanged();
          return this;
        }

        private int health_ = 0;
        /**
         * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
         * @return The enum numeric value on the wire for health.
         */
        @java.lang.Override public int getHealthValue() {
          return health_;
        }
        /**
         * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
         * @param value The enum numeric value on the wire for health to set.
         * @return This builder for chaining.
         */
        public Builder setHealthValue(int value) {
          
          health_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
         * @return The health.
         */
        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health getHealth() {
          @SuppressWarnings("deprecation")
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health result = yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health.valueOf(health_);
          return result == null ? yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health.UNRECOGNIZED : result;
        }
        /**
         * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
         * @param value The health to set.
         * @return This builder for chaining.
         */
        public Builder setHealth(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Health value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          health_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host.Health health = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearHealth() {
          
          health_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host)
      private static final yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host();
      }

      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Host>
          PARSER = new com.google.protobuf.AbstractParser<Host>() {
        @java.lang.Override
        public Host parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Host(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Host> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Host> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ShardGroupOrBuilder extends
        // @@protoc_insertion_point(interface_extends:yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>repeated string shard_names = 2;</code>
       * @return A list containing the shardNames.
       */
      java.util.List<java.lang.String>
          getShardNamesList();
      /**
       * <code>repeated string shard_names = 2;</code>
       * @return The count of shardNames.
       */
      int getShardNamesCount();
      /**
       * <code>repeated string shard_names = 2;</code>
       * @param index The index of the element to return.
       * @return The shardNames at the given index.
       */
      java.lang.String getShardNames(int index);
      /**
       * <code>repeated string shard_names = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the shardNames at the given index.
       */
      com.google.protobuf.ByteString
          getShardNamesBytes(int index);
    }
    /**
     * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup}
     */
    public static final class ShardGroup extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup)
        ShardGroupOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ShardGroup.newBuilder() to construct.
      private ShardGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ShardGroup() {
        name_ = "";
        shardNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ShardGroup();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ShardGroup(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  shardNames_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                shardNames_.add(s);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            shardNames_ = shardNames_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SHARD_NAMES_FIELD_NUMBER = 2;
      private com.google.protobuf.LazyStringList shardNames_;
      /**
       * <code>repeated string shard_names = 2;</code>
       * @return A list containing the shardNames.
       */
      public com.google.protobuf.ProtocolStringList
          getShardNamesList() {
        return shardNames_;
      }
      /**
       * <code>repeated string shard_names = 2;</code>
       * @return The count of shardNames.
       */
      public int getShardNamesCount() {
        return shardNames_.size();
      }
      /**
       * <code>repeated string shard_names = 2;</code>
       * @param index The index of the element to return.
       * @return The shardNames at the given index.
       */
      public java.lang.String getShardNames(int index) {
        return shardNames_.get(index);
      }
      /**
       * <code>repeated string shard_names = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the shardNames at the given index.
       */
      public com.google.protobuf.ByteString
          getShardNamesBytes(int index) {
        return shardNames_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        for (int i = 0; i < shardNames_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, shardNames_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < shardNames_.size(); i++) {
            dataSize += computeStringSizeNoTag(shardNames_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getShardNamesList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup)) {
          return super.equals(obj);
        }
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup other = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!getShardNamesList()
            .equals(other.getShardNamesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (getShardNamesCount() > 0) {
          hash = (37 * hash) + SHARD_NAMES_FIELD_NUMBER;
          hash = (53 * hash) + getShardNamesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup)
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder.class);
        }

        // Construct using yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          name_ = "";

          shardNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_descriptor;
        }

        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup getDefaultInstanceForType() {
          return yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.getDefaultInstance();
        }

        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup build() {
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup buildPartial() {
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup result = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup(this);
          int from_bitField0_ = bitField0_;
          result.name_ = name_;
          if (((bitField0_ & 0x00000001) != 0)) {
            shardNames_ = shardNames_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.shardNames_ = shardNames_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup) {
            return mergeFrom((yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup other) {
          if (other == yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (!other.shardNames_.isEmpty()) {
            if (shardNames_.isEmpty()) {
              shardNames_ = other.shardNames_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureShardNamesIsMutable();
              shardNames_.addAll(other.shardNames_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList shardNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureShardNamesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            shardNames_ = new com.google.protobuf.LazyStringArrayList(shardNames_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @return A list containing the shardNames.
         */
        public com.google.protobuf.ProtocolStringList
            getShardNamesList() {
          return shardNames_.getUnmodifiableView();
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @return The count of shardNames.
         */
        public int getShardNamesCount() {
          return shardNames_.size();
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @param index The index of the element to return.
         * @return The shardNames at the given index.
         */
        public java.lang.String getShardNames(int index) {
          return shardNames_.get(index);
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @param index The index of the value to return.
         * @return The bytes of the shardNames at the given index.
         */
        public com.google.protobuf.ByteString
            getShardNamesBytes(int index) {
          return shardNames_.getByteString(index);
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @param index The index to set the value at.
         * @param value The shardNames to set.
         * @return This builder for chaining.
         */
        public Builder setShardNames(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureShardNamesIsMutable();
          shardNames_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @param value The shardNames to add.
         * @return This builder for chaining.
         */
        public Builder addShardNames(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureShardNamesIsMutable();
          shardNames_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @param values The shardNames to add.
         * @return This builder for chaining.
         */
        public Builder addAllShardNames(
            java.lang.Iterable<java.lang.String> values) {
          ensureShardNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shardNames_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearShardNames() {
          shardNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string shard_names = 2;</code>
         * @param value The bytes of the shardNames to add.
         * @return This builder for chaining.
         */
        public Builder addShardNamesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureShardNamesIsMutable();
          shardNames_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup)
      }

      // @@protoc_insertion_point(class_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup)
      private static final yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup();
      }

      public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ShardGroup>
          PARSER = new com.google.protobuf.AbstractParser<ShardGroup>() {
        @java.lang.Override
        public ShardGroup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ShardGroup(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ShardGroup> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ShardGroup> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TLS_PARAMS_FIELD_NUMBER = 4;
    private yandex.cloud.api.connectionmanager.v1.Common.TLSParams tlsParams_;
    /**
     * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
     * @return Whether the tlsParams field is set.
     */
    @java.lang.Override
    public boolean hasTlsParams() {
      return tlsParams_ != null;
    }
    /**
     * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
     * @return The tlsParams.
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Common.TLSParams getTlsParams() {
      return tlsParams_ == null ? yandex.cloud.api.connectionmanager.v1.Common.TLSParams.getDefaultInstance() : tlsParams_;
    }
    /**
     * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Common.TLSParamsOrBuilder getTlsParamsOrBuilder() {
      return getTlsParams();
    }

    public static final int HOSTS_FIELD_NUMBER = 6;
    private java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host> hosts_;
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host> getHostsList() {
      return hosts_;
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder> 
        getHostsOrBuilderList() {
      return hosts_;
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    @java.lang.Override
    public int getHostsCount() {
      return hosts_.size();
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host getHosts(int index) {
      return hosts_.get(index);
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder getHostsOrBuilder(
        int index) {
      return hosts_.get(index);
    }

    public static final int SHARD_GROUPS_FIELD_NUMBER = 7;
    private java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup> shardGroups_;
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    @java.lang.Override
    public java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup> getShardGroupsList() {
      return shardGroups_;
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder> 
        getShardGroupsOrBuilderList() {
      return shardGroups_;
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    @java.lang.Override
    public int getShardGroupsCount() {
      return shardGroups_.size();
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup getShardGroups(int index) {
      return shardGroups_.get(index);
    }
    /**
     * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder getShardGroupsOrBuilder(
        int index) {
      return shardGroups_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tlsParams_ != null) {
        output.writeMessage(4, getTlsParams());
      }
      for (int i = 0; i < hosts_.size(); i++) {
        output.writeMessage(6, hosts_.get(i));
      }
      for (int i = 0; i < shardGroups_.size(); i++) {
        output.writeMessage(7, shardGroups_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tlsParams_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTlsParams());
      }
      for (int i = 0; i < hosts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, hosts_.get(i));
      }
      for (int i = 0; i < shardGroups_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, shardGroups_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster)) {
        return super.equals(obj);
      }
      yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster other = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster) obj;

      if (hasTlsParams() != other.hasTlsParams()) return false;
      if (hasTlsParams()) {
        if (!getTlsParams()
            .equals(other.getTlsParams())) return false;
      }
      if (!getHostsList()
          .equals(other.getHostsList())) return false;
      if (!getShardGroupsList()
          .equals(other.getShardGroupsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTlsParams()) {
        hash = (37 * hash) + TLS_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getTlsParams().hashCode();
      }
      if (getHostsCount() > 0) {
        hash = (37 * hash) + HOSTS_FIELD_NUMBER;
        hash = (53 * hash) + getHostsList().hashCode();
      }
      if (getShardGroupsCount() > 0) {
        hash = (37 * hash) + SHARD_GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getShardGroupsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseCluster}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.connectionmanager.v1.ClickHouseCluster)
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder.class);
      }

      // Construct using yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getHostsFieldBuilder();
          getShardGroupsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (tlsParamsBuilder_ == null) {
          tlsParams_ = null;
        } else {
          tlsParams_ = null;
          tlsParamsBuilder_ = null;
        }
        if (hostsBuilder_ == null) {
          hosts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          hostsBuilder_.clear();
        }
        if (shardGroupsBuilder_ == null) {
          shardGroups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          shardGroupsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster getDefaultInstanceForType() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster build() {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster buildPartial() {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster result = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster(this);
        int from_bitField0_ = bitField0_;
        if (tlsParamsBuilder_ == null) {
          result.tlsParams_ = tlsParams_;
        } else {
          result.tlsParams_ = tlsParamsBuilder_.build();
        }
        if (hostsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            hosts_ = java.util.Collections.unmodifiableList(hosts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.hosts_ = hosts_;
        } else {
          result.hosts_ = hostsBuilder_.build();
        }
        if (shardGroupsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            shardGroups_ = java.util.Collections.unmodifiableList(shardGroups_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.shardGroups_ = shardGroups_;
        } else {
          result.shardGroups_ = shardGroupsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster) {
          return mergeFrom((yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster other) {
        if (other == yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.getDefaultInstance()) return this;
        if (other.hasTlsParams()) {
          mergeTlsParams(other.getTlsParams());
        }
        if (hostsBuilder_ == null) {
          if (!other.hosts_.isEmpty()) {
            if (hosts_.isEmpty()) {
              hosts_ = other.hosts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureHostsIsMutable();
              hosts_.addAll(other.hosts_);
            }
            onChanged();
          }
        } else {
          if (!other.hosts_.isEmpty()) {
            if (hostsBuilder_.isEmpty()) {
              hostsBuilder_.dispose();
              hostsBuilder_ = null;
              hosts_ = other.hosts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              hostsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHostsFieldBuilder() : null;
            } else {
              hostsBuilder_.addAllMessages(other.hosts_);
            }
          }
        }
        if (shardGroupsBuilder_ == null) {
          if (!other.shardGroups_.isEmpty()) {
            if (shardGroups_.isEmpty()) {
              shardGroups_ = other.shardGroups_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureShardGroupsIsMutable();
              shardGroups_.addAll(other.shardGroups_);
            }
            onChanged();
          }
        } else {
          if (!other.shardGroups_.isEmpty()) {
            if (shardGroupsBuilder_.isEmpty()) {
              shardGroupsBuilder_.dispose();
              shardGroupsBuilder_ = null;
              shardGroups_ = other.shardGroups_;
              bitField0_ = (bitField0_ & ~0x00000002);
              shardGroupsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShardGroupsFieldBuilder() : null;
            } else {
              shardGroupsBuilder_.addAllMessages(other.shardGroups_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private yandex.cloud.api.connectionmanager.v1.Common.TLSParams tlsParams_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Common.TLSParams, yandex.cloud.api.connectionmanager.v1.Common.TLSParams.Builder, yandex.cloud.api.connectionmanager.v1.Common.TLSParamsOrBuilder> tlsParamsBuilder_;
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       * @return Whether the tlsParams field is set.
       */
      public boolean hasTlsParams() {
        return tlsParamsBuilder_ != null || tlsParams_ != null;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       * @return The tlsParams.
       */
      public yandex.cloud.api.connectionmanager.v1.Common.TLSParams getTlsParams() {
        if (tlsParamsBuilder_ == null) {
          return tlsParams_ == null ? yandex.cloud.api.connectionmanager.v1.Common.TLSParams.getDefaultInstance() : tlsParams_;
        } else {
          return tlsParamsBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      public Builder setTlsParams(yandex.cloud.api.connectionmanager.v1.Common.TLSParams value) {
        if (tlsParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tlsParams_ = value;
          onChanged();
        } else {
          tlsParamsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      public Builder setTlsParams(
          yandex.cloud.api.connectionmanager.v1.Common.TLSParams.Builder builderForValue) {
        if (tlsParamsBuilder_ == null) {
          tlsParams_ = builderForValue.build();
          onChanged();
        } else {
          tlsParamsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      public Builder mergeTlsParams(yandex.cloud.api.connectionmanager.v1.Common.TLSParams value) {
        if (tlsParamsBuilder_ == null) {
          if (tlsParams_ != null) {
            tlsParams_ =
              yandex.cloud.api.connectionmanager.v1.Common.TLSParams.newBuilder(tlsParams_).mergeFrom(value).buildPartial();
          } else {
            tlsParams_ = value;
          }
          onChanged();
        } else {
          tlsParamsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      public Builder clearTlsParams() {
        if (tlsParamsBuilder_ == null) {
          tlsParams_ = null;
          onChanged();
        } else {
          tlsParams_ = null;
          tlsParamsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Common.TLSParams.Builder getTlsParamsBuilder() {
        
        onChanged();
        return getTlsParamsFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Common.TLSParamsOrBuilder getTlsParamsOrBuilder() {
        if (tlsParamsBuilder_ != null) {
          return tlsParamsBuilder_.getMessageOrBuilder();
        } else {
          return tlsParams_ == null ?
              yandex.cloud.api.connectionmanager.v1.Common.TLSParams.getDefaultInstance() : tlsParams_;
        }
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.TLSParams tls_params = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Common.TLSParams, yandex.cloud.api.connectionmanager.v1.Common.TLSParams.Builder, yandex.cloud.api.connectionmanager.v1.Common.TLSParamsOrBuilder> 
          getTlsParamsFieldBuilder() {
        if (tlsParamsBuilder_ == null) {
          tlsParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.connectionmanager.v1.Common.TLSParams, yandex.cloud.api.connectionmanager.v1.Common.TLSParams.Builder, yandex.cloud.api.connectionmanager.v1.Common.TLSParamsOrBuilder>(
                  getTlsParams(),
                  getParentForChildren(),
                  isClean());
          tlsParams_ = null;
        }
        return tlsParamsBuilder_;
      }

      private java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host> hosts_ =
        java.util.Collections.emptyList();
      private void ensureHostsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          hosts_ = new java.util.ArrayList<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host>(hosts_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder> hostsBuilder_;

      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host> getHostsList() {
        if (hostsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hosts_);
        } else {
          return hostsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public int getHostsCount() {
        if (hostsBuilder_ == null) {
          return hosts_.size();
        } else {
          return hostsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host getHosts(int index) {
        if (hostsBuilder_ == null) {
          return hosts_.get(index);
        } else {
          return hostsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder setHosts(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host value) {
        if (hostsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostsIsMutable();
          hosts_.set(index, value);
          onChanged();
        } else {
          hostsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder setHosts(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder builderForValue) {
        if (hostsBuilder_ == null) {
          ensureHostsIsMutable();
          hosts_.set(index, builderForValue.build());
          onChanged();
        } else {
          hostsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder addHosts(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host value) {
        if (hostsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostsIsMutable();
          hosts_.add(value);
          onChanged();
        } else {
          hostsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder addHosts(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host value) {
        if (hostsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostsIsMutable();
          hosts_.add(index, value);
          onChanged();
        } else {
          hostsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder addHosts(
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder builderForValue) {
        if (hostsBuilder_ == null) {
          ensureHostsIsMutable();
          hosts_.add(builderForValue.build());
          onChanged();
        } else {
          hostsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder addHosts(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder builderForValue) {
        if (hostsBuilder_ == null) {
          ensureHostsIsMutable();
          hosts_.add(index, builderForValue.build());
          onChanged();
        } else {
          hostsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder addAllHosts(
          java.lang.Iterable<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host> values) {
        if (hostsBuilder_ == null) {
          ensureHostsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hosts_);
          onChanged();
        } else {
          hostsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder clearHosts() {
        if (hostsBuilder_ == null) {
          hosts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          hostsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public Builder removeHosts(int index) {
        if (hostsBuilder_ == null) {
          ensureHostsIsMutable();
          hosts_.remove(index);
          onChanged();
        } else {
          hostsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder getHostsBuilder(
          int index) {
        return getHostsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder getHostsOrBuilder(
          int index) {
        if (hostsBuilder_ == null) {
          return hosts_.get(index);  } else {
          return hostsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public java.util.List<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder> 
           getHostsOrBuilderList() {
        if (hostsBuilder_ != null) {
          return hostsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hosts_);
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder addHostsBuilder() {
        return getHostsFieldBuilder().addBuilder(
            yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.getDefaultInstance());
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder addHostsBuilder(
          int index) {
        return getHostsFieldBuilder().addBuilder(
            index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.getDefaultInstance());
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.Host hosts = 6;</code>
       */
      public java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder> 
           getHostsBuilderList() {
        return getHostsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder> 
          getHostsFieldBuilder() {
        if (hostsBuilder_ == null) {
          hostsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Host.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.HostOrBuilder>(
                  hosts_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          hosts_ = null;
        }
        return hostsBuilder_;
      }

      private java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup> shardGroups_ =
        java.util.Collections.emptyList();
      private void ensureShardGroupsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          shardGroups_ = new java.util.ArrayList<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup>(shardGroups_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder> shardGroupsBuilder_;

      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup> getShardGroupsList() {
        if (shardGroupsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shardGroups_);
        } else {
          return shardGroupsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public int getShardGroupsCount() {
        if (shardGroupsBuilder_ == null) {
          return shardGroups_.size();
        } else {
          return shardGroupsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup getShardGroups(int index) {
        if (shardGroupsBuilder_ == null) {
          return shardGroups_.get(index);
        } else {
          return shardGroupsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder setShardGroups(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup value) {
        if (shardGroupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGroupsIsMutable();
          shardGroups_.set(index, value);
          onChanged();
        } else {
          shardGroupsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder setShardGroups(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder builderForValue) {
        if (shardGroupsBuilder_ == null) {
          ensureShardGroupsIsMutable();
          shardGroups_.set(index, builderForValue.build());
          onChanged();
        } else {
          shardGroupsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder addShardGroups(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup value) {
        if (shardGroupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGroupsIsMutable();
          shardGroups_.add(value);
          onChanged();
        } else {
          shardGroupsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder addShardGroups(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup value) {
        if (shardGroupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShardGroupsIsMutable();
          shardGroups_.add(index, value);
          onChanged();
        } else {
          shardGroupsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder addShardGroups(
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder builderForValue) {
        if (shardGroupsBuilder_ == null) {
          ensureShardGroupsIsMutable();
          shardGroups_.add(builderForValue.build());
          onChanged();
        } else {
          shardGroupsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder addShardGroups(
          int index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder builderForValue) {
        if (shardGroupsBuilder_ == null) {
          ensureShardGroupsIsMutable();
          shardGroups_.add(index, builderForValue.build());
          onChanged();
        } else {
          shardGroupsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder addAllShardGroups(
          java.lang.Iterable<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup> values) {
        if (shardGroupsBuilder_ == null) {
          ensureShardGroupsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shardGroups_);
          onChanged();
        } else {
          shardGroupsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder clearShardGroups() {
        if (shardGroupsBuilder_ == null) {
          shardGroups_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          shardGroupsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public Builder removeShardGroups(int index) {
        if (shardGroupsBuilder_ == null) {
          ensureShardGroupsIsMutable();
          shardGroups_.remove(index);
          onChanged();
        } else {
          shardGroupsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder getShardGroupsBuilder(
          int index) {
        return getShardGroupsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder getShardGroupsOrBuilder(
          int index) {
        if (shardGroupsBuilder_ == null) {
          return shardGroups_.get(index);  } else {
          return shardGroupsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public java.util.List<? extends yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder> 
           getShardGroupsOrBuilderList() {
        if (shardGroupsBuilder_ != null) {
          return shardGroupsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shardGroups_);
        }
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder addShardGroupsBuilder() {
        return getShardGroupsFieldBuilder().addBuilder(
            yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.getDefaultInstance());
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder addShardGroupsBuilder(
          int index) {
        return getShardGroupsFieldBuilder().addBuilder(
            index, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.getDefaultInstance());
      }
      /**
       * <code>repeated .yandex.cloud.connectionmanager.v1.ClickHouseCluster.ShardGroup shard_groups = 7;</code>
       */
      public java.util.List<yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder> 
           getShardGroupsBuilderList() {
        return getShardGroupsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder> 
          getShardGroupsFieldBuilder() {
        if (shardGroupsBuilder_ == null) {
          shardGroupsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroup.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.ShardGroupOrBuilder>(
                  shardGroups_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          shardGroups_ = null;
        }
        return shardGroupsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.connectionmanager.v1.ClickHouseCluster)
    private static final yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster();
    }

    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClickHouseCluster>
        PARSER = new com.google.protobuf.AbstractParser<ClickHouseCluster>() {
      @java.lang.Override
      public ClickHouseCluster parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClickHouseCluster(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClickHouseCluster> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClickHouseCluster> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClickHouseConnectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:yandex.cloud.connectionmanager.v1.ClickHouseConnection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * When creating/updating Connection, the field "cluster" is mutually
     * exclusive with "managed_cluster_id".
     * </pre>
     *
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
     * @return Whether the cluster field is set.
     */
    boolean hasCluster();
    /**
     * <pre>
     * When creating/updating Connection, the field "cluster" is mutually
     * exclusive with "managed_cluster_id".
     * </pre>
     *
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
     * @return The cluster.
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster getCluster();
    /**
     * <pre>
     * When creating/updating Connection, the field "cluster" is mutually
     * exclusive with "managed_cluster_id".
     * </pre>
     *
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder getClusterOrBuilder();

    /**
     * <pre>
     * When creating/updating Connection, the field "managed_cluster_id" is
     * mutually exclusive with "cluster".
     * </pre>
     *
     * <code>string managed_cluster_id = 2;</code>
     * @return The managedClusterId.
     */
    java.lang.String getManagedClusterId();
    /**
     * <pre>
     * When creating/updating Connection, the field "managed_cluster_id" is
     * mutually exclusive with "cluster".
     * </pre>
     *
     * <code>string managed_cluster_id = 2;</code>
     * @return The bytes for managedClusterId.
     */
    com.google.protobuf.ByteString
        getManagedClusterIdBytes();

    /**
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
     * @return Whether the auth field is set.
     */
    boolean hasAuth();
    /**
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
     * @return The auth.
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth getAuth();
    /**
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
     */
    yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder getAuthOrBuilder();

    /**
     * <code>repeated string databases = 4;</code>
     * @return A list containing the databases.
     */
    java.util.List<java.lang.String>
        getDatabasesList();
    /**
     * <code>repeated string databases = 4;</code>
     * @return The count of databases.
     */
    int getDatabasesCount();
    /**
     * <code>repeated string databases = 4;</code>
     * @param index The index of the element to return.
     * @return The databases at the given index.
     */
    java.lang.String getDatabases(int index);
    /**
     * <code>repeated string databases = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the databases at the given index.
     */
    com.google.protobuf.ByteString
        getDatabasesBytes(int index);
  }
  /**
   * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseConnection}
   */
  public static final class ClickHouseConnection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:yandex.cloud.connectionmanager.v1.ClickHouseConnection)
      ClickHouseConnectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClickHouseConnection.newBuilder() to construct.
    private ClickHouseConnection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClickHouseConnection() {
      managedClusterId_ = "";
      databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClickHouseConnection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClickHouseConnection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder subBuilder = null;
              if (cluster_ != null) {
                subBuilder = cluster_.toBuilder();
              }
              cluster_ = input.readMessage(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cluster_);
                cluster_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              managedClusterId_ = s;
              break;
            }
            case 26: {
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder subBuilder = null;
              if (auth_ != null) {
                subBuilder = auth_.toBuilder();
              }
              auth_ = input.readMessage(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(auth_);
                auth_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                databases_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              databases_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          databases_ = databases_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.Builder.class);
    }

    public static final int CLUSTER_FIELD_NUMBER = 1;
    private yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster cluster_;
    /**
     * <pre>
     * When creating/updating Connection, the field "cluster" is mutually
     * exclusive with "managed_cluster_id".
     * </pre>
     *
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
     * @return Whether the cluster field is set.
     */
    @java.lang.Override
    public boolean hasCluster() {
      return cluster_ != null;
    }
    /**
     * <pre>
     * When creating/updating Connection, the field "cluster" is mutually
     * exclusive with "managed_cluster_id".
     * </pre>
     *
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
     * @return The cluster.
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster getCluster() {
      return cluster_ == null ? yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.getDefaultInstance() : cluster_;
    }
    /**
     * <pre>
     * When creating/updating Connection, the field "cluster" is mutually
     * exclusive with "managed_cluster_id".
     * </pre>
     *
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder getClusterOrBuilder() {
      return getCluster();
    }

    public static final int MANAGED_CLUSTER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object managedClusterId_;
    /**
     * <pre>
     * When creating/updating Connection, the field "managed_cluster_id" is
     * mutually exclusive with "cluster".
     * </pre>
     *
     * <code>string managed_cluster_id = 2;</code>
     * @return The managedClusterId.
     */
    @java.lang.Override
    public java.lang.String getManagedClusterId() {
      java.lang.Object ref = managedClusterId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        managedClusterId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * When creating/updating Connection, the field "managed_cluster_id" is
     * mutually exclusive with "cluster".
     * </pre>
     *
     * <code>string managed_cluster_id = 2;</code>
     * @return The bytes for managedClusterId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getManagedClusterIdBytes() {
      java.lang.Object ref = managedClusterId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        managedClusterId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTH_FIELD_NUMBER = 3;
    private yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth auth_;
    /**
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
     * @return Whether the auth field is set.
     */
    @java.lang.Override
    public boolean hasAuth() {
      return auth_ != null;
    }
    /**
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
     * @return The auth.
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth getAuth() {
      return auth_ == null ? yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.getDefaultInstance() : auth_;
    }
    /**
     * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
     */
    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder getAuthOrBuilder() {
      return getAuth();
    }

    public static final int DATABASES_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList databases_;
    /**
     * <code>repeated string databases = 4;</code>
     * @return A list containing the databases.
     */
    public com.google.protobuf.ProtocolStringList
        getDatabasesList() {
      return databases_;
    }
    /**
     * <code>repeated string databases = 4;</code>
     * @return The count of databases.
     */
    public int getDatabasesCount() {
      return databases_.size();
    }
    /**
     * <code>repeated string databases = 4;</code>
     * @param index The index of the element to return.
     * @return The databases at the given index.
     */
    public java.lang.String getDatabases(int index) {
      return databases_.get(index);
    }
    /**
     * <code>repeated string databases = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the databases at the given index.
     */
    public com.google.protobuf.ByteString
        getDatabasesBytes(int index) {
      return databases_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cluster_ != null) {
        output.writeMessage(1, getCluster());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(managedClusterId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, managedClusterId_);
      }
      if (auth_ != null) {
        output.writeMessage(3, getAuth());
      }
      for (int i = 0; i < databases_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, databases_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cluster_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCluster());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(managedClusterId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, managedClusterId_);
      }
      if (auth_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAuth());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < databases_.size(); i++) {
          dataSize += computeStringSizeNoTag(databases_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDatabasesList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection)) {
        return super.equals(obj);
      }
      yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection other = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection) obj;

      if (hasCluster() != other.hasCluster()) return false;
      if (hasCluster()) {
        if (!getCluster()
            .equals(other.getCluster())) return false;
      }
      if (!getManagedClusterId()
          .equals(other.getManagedClusterId())) return false;
      if (hasAuth() != other.hasAuth()) return false;
      if (hasAuth()) {
        if (!getAuth()
            .equals(other.getAuth())) return false;
      }
      if (!getDatabasesList()
          .equals(other.getDatabasesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCluster()) {
        hash = (37 * hash) + CLUSTER_FIELD_NUMBER;
        hash = (53 * hash) + getCluster().hashCode();
      }
      hash = (37 * hash) + MANAGED_CLUSTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getManagedClusterId().hashCode();
      if (hasAuth()) {
        hash = (37 * hash) + AUTH_FIELD_NUMBER;
        hash = (53 * hash) + getAuth().hashCode();
      }
      if (getDatabasesCount() > 0) {
        hash = (37 * hash) + DATABASES_FIELD_NUMBER;
        hash = (53 * hash) + getDatabasesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code yandex.cloud.connectionmanager.v1.ClickHouseConnection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:yandex.cloud.connectionmanager.v1.ClickHouseConnection)
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.class, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.Builder.class);
      }

      // Construct using yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (clusterBuilder_ == null) {
          cluster_ = null;
        } else {
          cluster_ = null;
          clusterBuilder_ = null;
        }
        managedClusterId_ = "";

        if (authBuilder_ == null) {
          auth_ = null;
        } else {
          auth_ = null;
          authBuilder_ = null;
        }
        databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_descriptor;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection getDefaultInstanceForType() {
        return yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.getDefaultInstance();
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection build() {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection buildPartial() {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection result = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection(this);
        int from_bitField0_ = bitField0_;
        if (clusterBuilder_ == null) {
          result.cluster_ = cluster_;
        } else {
          result.cluster_ = clusterBuilder_.build();
        }
        result.managedClusterId_ = managedClusterId_;
        if (authBuilder_ == null) {
          result.auth_ = auth_;
        } else {
          result.auth_ = authBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          databases_ = databases_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.databases_ = databases_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection) {
          return mergeFrom((yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection other) {
        if (other == yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection.getDefaultInstance()) return this;
        if (other.hasCluster()) {
          mergeCluster(other.getCluster());
        }
        if (!other.getManagedClusterId().isEmpty()) {
          managedClusterId_ = other.managedClusterId_;
          onChanged();
        }
        if (other.hasAuth()) {
          mergeAuth(other.getAuth());
        }
        if (!other.databases_.isEmpty()) {
          if (databases_.isEmpty()) {
            databases_ = other.databases_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDatabasesIsMutable();
            databases_.addAll(other.databases_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster cluster_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder> clusterBuilder_;
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       * @return Whether the cluster field is set.
       */
      public boolean hasCluster() {
        return clusterBuilder_ != null || cluster_ != null;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       * @return The cluster.
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster getCluster() {
        if (clusterBuilder_ == null) {
          return cluster_ == null ? yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.getDefaultInstance() : cluster_;
        } else {
          return clusterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      public Builder setCluster(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster value) {
        if (clusterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cluster_ = value;
          onChanged();
        } else {
          clusterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      public Builder setCluster(
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder builderForValue) {
        if (clusterBuilder_ == null) {
          cluster_ = builderForValue.build();
          onChanged();
        } else {
          clusterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      public Builder mergeCluster(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster value) {
        if (clusterBuilder_ == null) {
          if (cluster_ != null) {
            cluster_ =
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.newBuilder(cluster_).mergeFrom(value).buildPartial();
          } else {
            cluster_ = value;
          }
          onChanged();
        } else {
          clusterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      public Builder clearCluster() {
        if (clusterBuilder_ == null) {
          cluster_ = null;
          onChanged();
        } else {
          cluster_ = null;
          clusterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder getClusterBuilder() {
        
        onChanged();
        return getClusterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder getClusterOrBuilder() {
        if (clusterBuilder_ != null) {
          return clusterBuilder_.getMessageOrBuilder();
        } else {
          return cluster_ == null ?
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.getDefaultInstance() : cluster_;
        }
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "cluster" is mutually
       * exclusive with "managed_cluster_id".
       * </pre>
       *
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseCluster cluster = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder> 
          getClusterFieldBuilder() {
        if (clusterBuilder_ == null) {
          clusterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseCluster.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseClusterOrBuilder>(
                  getCluster(),
                  getParentForChildren(),
                  isClean());
          cluster_ = null;
        }
        return clusterBuilder_;
      }

      private java.lang.Object managedClusterId_ = "";
      /**
       * <pre>
       * When creating/updating Connection, the field "managed_cluster_id" is
       * mutually exclusive with "cluster".
       * </pre>
       *
       * <code>string managed_cluster_id = 2;</code>
       * @return The managedClusterId.
       */
      public java.lang.String getManagedClusterId() {
        java.lang.Object ref = managedClusterId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          managedClusterId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "managed_cluster_id" is
       * mutually exclusive with "cluster".
       * </pre>
       *
       * <code>string managed_cluster_id = 2;</code>
       * @return The bytes for managedClusterId.
       */
      public com.google.protobuf.ByteString
          getManagedClusterIdBytes() {
        java.lang.Object ref = managedClusterId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          managedClusterId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "managed_cluster_id" is
       * mutually exclusive with "cluster".
       * </pre>
       *
       * <code>string managed_cluster_id = 2;</code>
       * @param value The managedClusterId to set.
       * @return This builder for chaining.
       */
      public Builder setManagedClusterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        managedClusterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "managed_cluster_id" is
       * mutually exclusive with "cluster".
       * </pre>
       *
       * <code>string managed_cluster_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearManagedClusterId() {
        
        managedClusterId_ = getDefaultInstance().getManagedClusterId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When creating/updating Connection, the field "managed_cluster_id" is
       * mutually exclusive with "cluster".
       * </pre>
       *
       * <code>string managed_cluster_id = 2;</code>
       * @param value The bytes for managedClusterId to set.
       * @return This builder for chaining.
       */
      public Builder setManagedClusterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        managedClusterId_ = value;
        onChanged();
        return this;
      }

      private yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth auth_;
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder> authBuilder_;
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       * @return Whether the auth field is set.
       */
      public boolean hasAuth() {
        return authBuilder_ != null || auth_ != null;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       * @return The auth.
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth getAuth() {
        if (authBuilder_ == null) {
          return auth_ == null ? yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.getDefaultInstance() : auth_;
        } else {
          return authBuilder_.getMessage();
        }
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      public Builder setAuth(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth value) {
        if (authBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          auth_ = value;
          onChanged();
        } else {
          authBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      public Builder setAuth(
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder builderForValue) {
        if (authBuilder_ == null) {
          auth_ = builderForValue.build();
          onChanged();
        } else {
          authBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      public Builder mergeAuth(yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth value) {
        if (authBuilder_ == null) {
          if (auth_ != null) {
            auth_ =
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.newBuilder(auth_).mergeFrom(value).buildPartial();
          } else {
            auth_ = value;
          }
          onChanged();
        } else {
          authBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      public Builder clearAuth() {
        if (authBuilder_ == null) {
          auth_ = null;
          onChanged();
        } else {
          auth_ = null;
          authBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder getAuthBuilder() {
        
        onChanged();
        return getAuthFieldBuilder().getBuilder();
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder getAuthOrBuilder() {
        if (authBuilder_ != null) {
          return authBuilder_.getMessageOrBuilder();
        } else {
          return auth_ == null ?
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.getDefaultInstance() : auth_;
        }
      }
      /**
       * <code>.yandex.cloud.connectionmanager.v1.ClickHouseAuth auth = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder> 
          getAuthFieldBuilder() {
        if (authBuilder_ == null) {
          authBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuth.Builder, yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseAuthOrBuilder>(
                  getAuth(),
                  getParentForChildren(),
                  isClean());
          auth_ = null;
        }
        return authBuilder_;
      }

      private com.google.protobuf.LazyStringList databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDatabasesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          databases_ = new com.google.protobuf.LazyStringArrayList(databases_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @return A list containing the databases.
       */
      public com.google.protobuf.ProtocolStringList
          getDatabasesList() {
        return databases_.getUnmodifiableView();
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @return The count of databases.
       */
      public int getDatabasesCount() {
        return databases_.size();
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @param index The index of the element to return.
       * @return The databases at the given index.
       */
      public java.lang.String getDatabases(int index) {
        return databases_.get(index);
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the databases at the given index.
       */
      public com.google.protobuf.ByteString
          getDatabasesBytes(int index) {
        return databases_.getByteString(index);
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @param index The index to set the value at.
       * @param value The databases to set.
       * @return This builder for chaining.
       */
      public Builder setDatabases(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDatabasesIsMutable();
        databases_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @param value The databases to add.
       * @return This builder for chaining.
       */
      public Builder addDatabases(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDatabasesIsMutable();
        databases_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @param values The databases to add.
       * @return This builder for chaining.
       */
      public Builder addAllDatabases(
          java.lang.Iterable<java.lang.String> values) {
        ensureDatabasesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, databases_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDatabases() {
        databases_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string databases = 4;</code>
       * @param value The bytes of the databases to add.
       * @return This builder for chaining.
       */
      public Builder addDatabasesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureDatabasesIsMutable();
        databases_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:yandex.cloud.connectionmanager.v1.ClickHouseConnection)
    }

    // @@protoc_insertion_point(class_scope:yandex.cloud.connectionmanager.v1.ClickHouseConnection)
    private static final yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection();
    }

    public static yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClickHouseConnection>
        PARSER = new com.google.protobuf.AbstractParser<ClickHouseConnection>() {
      @java.lang.Override
      public ClickHouseConnection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClickHouseConnection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClickHouseConnection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClickHouseConnection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public yandex.cloud.api.connectionmanager.v1.Clickhouse.ClickHouseConnection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2yandex/cloud/connectionmanager/v1/clic" +
      "khouse.proto\022!yandex.cloud.connectionman" +
      "ager.v1\032.yandex/cloud/connectionmanager/" +
      "v1/common.proto\"j\n\016ClickHouseAuth\022L\n\ruse" +
      "r_password\030\001 \001(\01323.yandex.cloud.connecti" +
      "onmanager.v1.UserPasswordAuthH\000B\n\n\010secur" +
      "ity\"\226\004\n\021ClickHouseCluster\022@\n\ntls_params\030" +
      "\004 \001(\0132,.yandex.cloud.connectionmanager.v" +
      "1.TLSParams\022H\n\005hosts\030\006 \003(\01329.yandex.clou" +
      "d.connectionmanager.v1.ClickHouseCluster" +
      ".Host\022U\n\014shard_groups\030\007 \003(\0132?.yandex.clo" +
      "ud.connectionmanager.v1.ClickHouseCluste" +
      "r.ShardGroup\032\340\001\n\004Host\022\014\n\004host\030\001 \001(\t\022\021\n\th" +
      "ttp_port\030\002 \001(\003\022\020\n\010tcp_port\030\003 \001(\003\022\022\n\nshar" +
      "d_name\030\004 \001(\t\022P\n\006health\030\005 \001(\0162@.yandex.cl" +
      "oud.connectionmanager.v1.ClickHouseClust" +
      "er.Host.Health\"?\n\006Health\022\022\n\016HEALTH_UNKNO" +
      "WN\020\000\022\t\n\005ALIVE\020\001\022\010\n\004DEAD\020\002\022\014\n\010DEGRADED\020\003\032" +
      "/\n\nShardGroup\022\014\n\004name\030\001 \001(\t\022\023\n\013shard_nam" +
      "es\030\002 \003(\tJ\004\010\001\020\004J\004\010\005\020\006\"\315\001\n\024ClickHouseConne" +
      "ction\022E\n\007cluster\030\001 \001(\01324.yandex.cloud.co" +
      "nnectionmanager.v1.ClickHouseCluster\022\032\n\022" +
      "managed_cluster_id\030\002 \001(\t\022?\n\004auth\030\003 \001(\01321" +
      ".yandex.cloud.connectionmanager.v1.Click" +
      "HouseAuth\022\021\n\tdatabases\030\004 \003(\tB\200\001\n%yandex." +
      "cloud.api.connectionmanager.v1ZWgithub.c" +
      "om/yandex-cloud/go-genproto/yandex/cloud" +
      "/connectionmanager/v1;connectionmanagerb" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          yandex.cloud.api.connectionmanager.v1.Common.getDescriptor(),
        });
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_connectionmanager_v1_ClickHouseAuth_descriptor,
        new java.lang.String[] { "UserPassword", "Security", });
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor,
        new java.lang.String[] { "TlsParams", "Hosts", "ShardGroups", });
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_descriptor =
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor.getNestedTypes().get(0);
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_Host_descriptor,
        new java.lang.String[] { "Host", "HttpPort", "TcpPort", "ShardName", "Health", });
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_descriptor =
      internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_descriptor.getNestedTypes().get(1);
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_connectionmanager_v1_ClickHouseCluster_ShardGroup_descriptor,
        new java.lang.String[] { "Name", "ShardNames", });
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_yandex_cloud_connectionmanager_v1_ClickHouseConnection_descriptor,
        new java.lang.String[] { "Cluster", "ManagedClusterId", "Auth", "Databases", });
    yandex.cloud.api.connectionmanager.v1.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
